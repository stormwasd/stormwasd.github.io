<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-03-11T08:30:34.848Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于JS调试用xhr打断点没有停住的解决</title>
    <link href="http://example.com/2022/03/11/%E5%85%B3%E4%BA%8EJS%E8%B0%83%E8%AF%95%E7%94%A8xhr%E6%89%93%E6%96%AD%E7%82%B9%E6%B2%A1%E6%9C%89%E5%81%9C%E4%BD%8F%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    <id>http://example.com/2022/03/11/%E5%85%B3%E4%BA%8EJS%E8%B0%83%E8%AF%95%E7%94%A8xhr%E6%89%93%E6%96%AD%E7%82%B9%E6%B2%A1%E6%9C%89%E5%81%9C%E4%BD%8F%E7%9A%84%E8%A7%A3%E5%86%B3/</id>
    <published>2022-03-11T08:19:30.000Z</published>
    <updated>2022-03-11T08:30:34.848Z</updated>
    
    <content type="html"><![CDATA[<p>网站: <a class="link"   href="https://www.gm99.com/" >https://www.gm99.com/<i class="fas fa-external-link-alt"></i></a></p><p>加密参数如下:<br><a href="https://imgtu.com/i/bIhE8O"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/bIhE8O.png"                      alt="bIhE8O.png"                ></a></p><p>我们在xhr中有看到这个请求，然后我们就在source面板中添加一个xhr breakpoint，然后来看看效果:</p><p>那么添加什么参数呢，我们可以截取URL的一部分，比如这里我们就截取<code>/login/login3</code>，注意不要截取到了URL的参数部分</p><p>点击登入后并没有反应，说明这断点没有断到，那我们可以直接在network中找:</p><p><a href="https://imgtu.com/i/bI5L5t"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/bI5L5t.png"                      alt="bI5L5t.png"                ></a></p><p>点击上图中的函数地址，就能跳转到发包的位置，因为jQuery是一个js库，一个处理异步和发包的库</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;网站: &lt;a class=&quot;link&quot;   href=&quot;https://www.gm99.com/&quot; &gt;https://www.gm99.com/&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;加密参数如下:&lt;br&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JS逆向中烟新商盟</title>
    <link href="http://example.com/2022/03/11/JS%E9%80%86%E5%90%91%E4%B8%AD%E7%83%9F%E6%96%B0%E5%95%86%E7%9B%9F/"/>
    <id>http://example.com/2022/03/11/JS%E9%80%86%E5%90%91%E4%B8%AD%E7%83%9F%E6%96%B0%E5%95%86%E7%9B%9F/</id>
    <published>2022-03-10T16:00:00.000Z</published>
    <updated>2022-03-11T03:46:48.951Z</updated>
    
    <content type="html"><![CDATA[<p>网址: <a class="link"   href="https://www.xinshangmeng.com/xsm2/?Version=2022022600" >https://www.xinshangmeng.com/xsm2/?Version=2022022600<i class="fas fa-external-link-alt"></i></a></p><p>加密参数:</p><p><a href="https://imgtu.com/i/b5RNXn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5RNXn.png"                      alt="b5RNXn.png"                ></a></p><p>这里可以看到，貌似有两个加密参数，一个是密码加密，然后最后一个是时间戳</p><p>由于前面我们是点击登录按钮触发请求的，所以我们可以从<strong>DOM事件</strong>为入口找到相关登录的代码，看看是否能找到加密逻辑:</p><p><a href="https://imgtu.com/i/b5WCcj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5WCcj.png"                      alt="b5WCcj.png"                ></a></p><p>点击上图右侧的函数位置就能跳转到对应登录的代码，分析这段代码逻辑之后，我感觉在1126行对密码进行了加密，然后我们在该行打断点:</p><p><a href="https://imgtu.com/i/b5ffJO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5ffJO.png"                      alt="b5ffJO.png"                ></a></p><p>可以看到这里最里面是调用了两次F函数，我们鼠标放在上面然后跳转进这个函数:</p><p><a href="https://imgtu.com/i/b5fjfS"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5fjfS.png"                      alt="b5fjfS.png"                ></a></p><p><a href="https://imgtu.com/i/b5hPwq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5hPwq.png"                      alt="b5hPwq.png"                ></a></p><p>可以看到跳进了d(a)函数，我们在函数的结尾打个断点，看看函数里面的值是啥:</p><p>用鼠标选中return后面的所有东西，可以看到这就是我们要的加密后的密码:</p><p><a href="https://imgtu.com/i/b5h8fO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5h8fO.png"                      alt="b5h8fO.png"                ></a></p><p>参数a就是我们输入的密码</p><p>d(a)函数内部又嵌套调用了n、e、o、m四个函数，那么接下来就只需要把代码抠出来再模拟执行即可</p><p>这里就不赘述了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;网址: &lt;a class=&quot;link&quot;   href=&quot;https://www.xinshangmeng.com/xsm2/?Version=2022022600&quot; &gt;https://www.xinshangmeng.com/xsm2/?Version=2022022600</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JS逆向登录国道路货运车辆公共监管与服务平台</title>
    <link href="http://example.com/2022/03/09/JS%E9%80%86%E5%90%91%E7%99%BB%E5%BD%95%E5%9B%BD%E9%81%93%E8%B7%AF%E8%B4%A7%E8%BF%90%E8%BD%A6%E8%BE%86%E5%85%AC%E5%85%B1%E7%9B%91%E7%AE%A1%E4%B8%8E%E6%9C%8D%E5%8A%A1%E5%B9%B3%E5%8F%B0/"/>
    <id>http://example.com/2022/03/09/JS%E9%80%86%E5%90%91%E7%99%BB%E5%BD%95%E5%9B%BD%E9%81%93%E8%B7%AF%E8%B4%A7%E8%BF%90%E8%BD%A6%E8%BE%86%E5%85%AC%E5%85%B1%E7%9B%91%E7%AE%A1%E4%B8%8E%E6%9C%8D%E5%8A%A1%E5%B9%B3%E5%8F%B0/</id>
    <published>2022-03-09T06:28:30.000Z</published>
    <updated>2022-03-09T08:55:14.409Z</updated>
    
    <content type="html"><![CDATA[<p>网址: <a class="link"   href="https://www.gghypt.net/" >https://www.gghypt.net/<i class="fas fa-external-link-alt"></i></a></p><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>首先我们打开上面的网址，点击普通用户登录，再随便输入一个用户名和密码和验证码，然后按F12打开控制台，观察登录的加密参数:</p><p><a href="https://imgtu.com/i/bRymZ9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/bRymZ9.png"                      alt="bRymZ9.png"                ></a></p><p>从上图我们可以得知，这三个参数分别就对应着用户名、密码和验证码；其中密码是经过加密的，然后我们在控制台搜索<code>opPass</code>:</p><p><a href="https://imgtu.com/i/bRyhWV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/bRyhWV.png"                      alt="bRyhWV.png"                ></a></p><p>可以看到就一个结果，我们点进去:</p><p><a href="https://imgtu.com/i/bR6CeH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/bR6CeH.png"                      alt="bR6CeH.png"                ></a></p><p>可以看到这里就很清晰了，我们输入密码后会在js中对密码进行一个加密，然后通过Ajax在不刷新页面的情况下发送给服务器，服务器肯定也有一套同样的原始密码和加密后的密码的字符串，所以一对应就让我们登陆了，那么接下来我们就需要构造这个密码的加密逻辑或者是直接扣代码，然后结合用户名和一开始进入这个网址服务器所返回的验证码图片的识别结果进行登录</p><p>从上图中我们可以看出，这里的加密逻辑还是很清晰的，上图第一个框框就是一个总的加密函数，然后再进行小写字母化，点击去有如下加密函数:</p><p><a href="https://imgtu.com/i/bRg0Rx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/bRg0Rx.png"                      alt="bRg0Rx.png"                ></a></p><p>我们只需要一步步扣出代码，然后再汇总到一起就可以拿到加密后的密码，我扣的代码如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">str2rstr_utf8</span>(<span class="params">input</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> output = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> i = -<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">var</span> x, y;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span>(++i &lt; input.length)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* Decode utf-16 surrogate pairs */</span></span><br><span class="line">    x = input.charCodeAt(i);</span><br><span class="line">    y = i + <span class="number">1</span> &lt; input.length ? input.charCodeAt(i + <span class="number">1</span>) : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">0xD800</span> &lt;= x &amp;&amp; x &lt;= <span class="number">0xDBFF</span> &amp;&amp; <span class="number">0xDC00</span> &lt;= y &amp;&amp; y &lt;= <span class="number">0xDFFF</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      x = <span class="number">0x10000</span> + ((x &amp; <span class="number">0x03FF</span>) &lt;&lt; <span class="number">10</span>) + (y &amp; <span class="number">0x03FF</span>);</span><br><span class="line">      i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Encode output as utf-8 */</span></span><br><span class="line">    <span class="keyword">if</span>(x &lt;= <span class="number">0x7F</span>)</span><br><span class="line">      output += <span class="built_in">String</span>.fromCharCode(x);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x &lt;= <span class="number">0x7FF</span>)</span><br><span class="line">      output += <span class="built_in">String</span>.fromCharCode(<span class="number">0xC0</span> | ((x &gt;&gt;&gt; <span class="number">6</span> ) &amp; <span class="number">0x1F</span>),</span><br><span class="line">                                    <span class="number">0x80</span> | ( x         &amp; <span class="number">0x3F</span>));</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x &lt;= <span class="number">0xFFFF</span>)</span><br><span class="line">      output += <span class="built_in">String</span>.fromCharCode(<span class="number">0xE0</span> | ((x &gt;&gt;&gt; <span class="number">12</span>) &amp; <span class="number">0x0F</span>),</span><br><span class="line">                                    <span class="number">0x80</span> | ((x &gt;&gt;&gt; <span class="number">6</span> ) &amp; <span class="number">0x3F</span>),</span><br><span class="line">                                    <span class="number">0x80</span> | ( x         &amp; <span class="number">0x3F</span>));</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x &lt;= <span class="number">0x1FFFFF</span>)</span><br><span class="line">      output += <span class="built_in">String</span>.fromCharCode(<span class="number">0xF0</span> | ((x &gt;&gt;&gt; <span class="number">18</span>) &amp; <span class="number">0x07</span>),</span><br><span class="line">                                    <span class="number">0x80</span> | ((x &gt;&gt;&gt; <span class="number">12</span>) &amp; <span class="number">0x3F</span>),</span><br><span class="line">                                    <span class="number">0x80</span> | ((x &gt;&gt;&gt; <span class="number">6</span> ) &amp; <span class="number">0x3F</span>),</span><br><span class="line">                                    <span class="number">0x80</span> | ( x         &amp; <span class="number">0x3F</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rstr_sha1</span>(<span class="params">s</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> binb2rstr(binb_sha1(rstr2binb(s), s.length * <span class="number">8</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rstr2binb</span>(<span class="params">input</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> output = <span class="built_in">Array</span>(input.length &gt;&gt; <span class="number">2</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; output.length; i++)</span><br><span class="line">    output[i] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; input.length * <span class="number">8</span>; i += <span class="number">8</span>)</span><br><span class="line">    output[i&gt;&gt;<span class="number">5</span>] |= (input.charCodeAt(i / <span class="number">8</span>) &amp; <span class="number">0xFF</span>) &lt;&lt; (<span class="number">24</span> - i % <span class="number">32</span>);</span><br><span class="line">  <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">binb_sha1</span>(<span class="params">x, len</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* append padding */</span></span><br><span class="line">  x[len &gt;&gt; <span class="number">5</span>] |= <span class="number">0x80</span> &lt;&lt; (<span class="number">24</span> - len % <span class="number">32</span>);</span><br><span class="line">  x[((len + <span class="number">64</span> &gt;&gt; <span class="number">9</span>) &lt;&lt; <span class="number">4</span>) + <span class="number">15</span>] = len;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> w = <span class="built_in">Array</span>(<span class="number">80</span>);</span><br><span class="line">  <span class="keyword">var</span> a =  <span class="number">1732584193</span>;</span><br><span class="line">  <span class="keyword">var</span> b = -<span class="number">271733879</span>;</span><br><span class="line">  <span class="keyword">var</span> c = -<span class="number">1732584194</span>;</span><br><span class="line">  <span class="keyword">var</span> d =  <span class="number">271733878</span>;</span><br><span class="line">  <span class="keyword">var</span> e = -<span class="number">1009589776</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; x.length; i += <span class="number">16</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">var</span> olda = a;</span><br><span class="line">    <span class="keyword">var</span> oldb = b;</span><br><span class="line">    <span class="keyword">var</span> oldc = c;</span><br><span class="line">    <span class="keyword">var</span> oldd = d;</span><br><span class="line">    <span class="keyword">var</span> olde = e;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">80</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(j &lt; <span class="number">16</span>) w[j] = x[i + j];</span><br><span class="line">      <span class="keyword">else</span> w[j] = bit_rol(w[j-<span class="number">3</span>] ^ w[j-<span class="number">8</span>] ^ w[j-<span class="number">14</span>] ^ w[j-<span class="number">16</span>], <span class="number">1</span>);</span><br><span class="line">      <span class="keyword">var</span> t = safe_add(safe_add(bit_rol(a, <span class="number">5</span>), sha1_ft(j, b, c, d)),</span><br><span class="line">                       safe_add(safe_add(e, w[j]), sha1_kt(j)));</span><br><span class="line">      e = d;</span><br><span class="line">      d = c;</span><br><span class="line">      c = bit_rol(b, <span class="number">30</span>);</span><br><span class="line">      b = a;</span><br><span class="line">      a = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    a = safe_add(a, olda);</span><br><span class="line">    b = safe_add(b, oldb);</span><br><span class="line">    c = safe_add(c, oldc);</span><br><span class="line">    d = safe_add(d, oldd);</span><br><span class="line">    e = safe_add(e, olde);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Array</span>(a, b, c, d, e);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">binb2rstr</span>(<span class="params">input</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> output = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; input.length * <span class="number">32</span>; i += <span class="number">8</span>)</span><br><span class="line">    output += <span class="built_in">String</span>.fromCharCode((input[i&gt;&gt;<span class="number">5</span>] &gt;&gt;&gt; (<span class="number">24</span> - i % <span class="number">32</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">  <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sha1_ft</span>(<span class="params">t, b, c, d</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(t &lt; <span class="number">20</span>) <span class="keyword">return</span> (b &amp; c) | ((~b) &amp; d);</span><br><span class="line">  <span class="keyword">if</span>(t &lt; <span class="number">40</span>) <span class="keyword">return</span> b ^ c ^ d;</span><br><span class="line">  <span class="keyword">if</span>(t &lt; <span class="number">60</span>) <span class="keyword">return</span> (b &amp; c) | (b &amp; d) | (c &amp; d);</span><br><span class="line">  <span class="keyword">return</span> b ^ c ^ d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sha1_kt</span>(<span class="params">t</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (t &lt; <span class="number">20</span>) ?  <span class="number">1518500249</span> : (t &lt; <span class="number">40</span>) ?  <span class="number">1859775393</span> :</span><br><span class="line">         (t &lt; <span class="number">60</span>) ? -<span class="number">1894007588</span> : -<span class="number">899497514</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bit_rol</span>(<span class="params">num, cnt</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (num &lt;&lt; cnt) | (num &gt;&gt;&gt; (<span class="number">32</span> - cnt));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_add</span>(<span class="params">x, y</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> lsw = (x &amp; <span class="number">0xFFFF</span>) + (y &amp; <span class="number">0xFFFF</span>);</span><br><span class="line">  <span class="keyword">var</span> msw = (x &gt;&gt; <span class="number">16</span>) + (y &gt;&gt; <span class="number">16</span>) + (lsw &gt;&gt; <span class="number">16</span>);</span><br><span class="line">  <span class="keyword">return</span> (msw &lt;&lt; <span class="number">16</span>) | (lsw &amp; <span class="number">0xFFFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rstr2hex</span>(<span class="params">input</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123; hexcase; &#125; <span class="keyword">catch</span>(e) &#123; hexcase=<span class="number">0</span>; &#125;</span><br><span class="line">  <span class="keyword">var</span> hex_tab = hexcase ? <span class="string">&quot;0123456789ABCDEF&quot;</span> : <span class="string">&quot;0123456789abcdef&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> output = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> x;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; input.length; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    x = input.charCodeAt(i);</span><br><span class="line">    output += hex_tab.charAt((x &gt;&gt;&gt; <span class="number">4</span>) &amp; <span class="number">0x0F</span>)</span><br><span class="line">           +  hex_tab.charAt( x        &amp; <span class="number">0x0F</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_encrypted_pwd</span>(<span class="params">s</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> rstr2hex(rstr_sha1(str2rstr_utf8(s))).toLowerCase();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="模拟登录"><a href="#模拟登录" class="headerlink" title="模拟登录"></a>模拟登录</h4><p>然后我们就用Python模拟js的执行来完成模拟登录:</p><p>get_encrypted_password.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@Description : </span></span><br><span class="line"><span class="string">@File        : get_encrypted_password</span></span><br><span class="line"><span class="string">@Project     : test</span></span><br><span class="line"><span class="string">@Time        : 2022/3/9 15:00</span></span><br><span class="line"><span class="string">@Author      : LiHouJian</span></span><br><span class="line"><span class="string">@Software    : PyCharm</span></span><br><span class="line"><span class="string">@issue       : </span></span><br><span class="line"><span class="string">@change      : </span></span><br><span class="line"><span class="string">@reason      : </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> scrapy.utils <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> scrapy.utils.project <span class="keyword">import</span> get_project_settings</span><br><span class="line"><span class="keyword">from</span> pybase.util <span class="keyword">import</span> send_file</span><br><span class="line"><span class="keyword">import</span> execjs</span><br><span class="line"></span><br><span class="line">jscode = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">function str2rstr_utf8(input)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  var output = &quot;&quot;;</span></span><br><span class="line"><span class="string">  var i = -1;</span></span><br><span class="line"><span class="string">  var x, y;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  while(++i &lt; input.length)</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    /* Decode utf-16 surrogate pairs */</span></span><br><span class="line"><span class="string">    x = input.charCodeAt(i);</span></span><br><span class="line"><span class="string">    y = i + 1 &lt; input.length ? input.charCodeAt(i + 1) : 0;</span></span><br><span class="line"><span class="string">    if(0xD800 &lt;= x &amp;&amp; x &lt;= 0xDBFF &amp;&amp; 0xDC00 &lt;= y &amp;&amp; y &lt;= 0xDFFF)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      x = 0x10000 + ((x &amp; 0x03FF) &lt;&lt; 10) + (y &amp; 0x03FF);</span></span><br><span class="line"><span class="string">      i++;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    /* Encode output as utf-8 */</span></span><br><span class="line"><span class="string">    if(x &lt;= 0x7F)</span></span><br><span class="line"><span class="string">      output += String.fromCharCode(x);</span></span><br><span class="line"><span class="string">    else if(x &lt;= 0x7FF)</span></span><br><span class="line"><span class="string">      output += String.fromCharCode(0xC0 | ((x &gt;&gt;&gt; 6 ) &amp; 0x1F),</span></span><br><span class="line"><span class="string">                                    0x80 | ( x         &amp; 0x3F));</span></span><br><span class="line"><span class="string">    else if(x &lt;= 0xFFFF)</span></span><br><span class="line"><span class="string">      output += String.fromCharCode(0xE0 | ((x &gt;&gt;&gt; 12) &amp; 0x0F),</span></span><br><span class="line"><span class="string">                                    0x80 | ((x &gt;&gt;&gt; 6 ) &amp; 0x3F),</span></span><br><span class="line"><span class="string">                                    0x80 | ( x         &amp; 0x3F));</span></span><br><span class="line"><span class="string">    else if(x &lt;= 0x1FFFFF)</span></span><br><span class="line"><span class="string">      output += String.fromCharCode(0xF0 | ((x &gt;&gt;&gt; 18) &amp; 0x07),</span></span><br><span class="line"><span class="string">                                    0x80 | ((x &gt;&gt;&gt; 12) &amp; 0x3F),</span></span><br><span class="line"><span class="string">                                    0x80 | ((x &gt;&gt;&gt; 6 ) &amp; 0x3F),</span></span><br><span class="line"><span class="string">                                    0x80 | ( x         &amp; 0x3F));</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return output;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function rstr_sha1(s)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  return binb2rstr(binb_sha1(rstr2binb(s), s.length * 8));</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function rstr2binb(input)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  var output = Array(input.length &gt;&gt; 2);</span></span><br><span class="line"><span class="string">  for(var i = 0; i &lt; output.length; i++)</span></span><br><span class="line"><span class="string">    output[i] = 0;</span></span><br><span class="line"><span class="string">  for(var i = 0; i &lt; input.length * 8; i += 8)</span></span><br><span class="line"><span class="string">    output[i&gt;&gt;5] |= (input.charCodeAt(i / 8) &amp; 0xFF) &lt;&lt; (24 - i % 32);</span></span><br><span class="line"><span class="string">  return output;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function binb_sha1(x, len)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  /* append padding */</span></span><br><span class="line"><span class="string">  x[len &gt;&gt; 5] |= 0x80 &lt;&lt; (24 - len % 32);</span></span><br><span class="line"><span class="string">  x[((len + 64 &gt;&gt; 9) &lt;&lt; 4) + 15] = len;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  var w = Array(80);</span></span><br><span class="line"><span class="string">  var a =  1732584193;</span></span><br><span class="line"><span class="string">  var b = -271733879;</span></span><br><span class="line"><span class="string">  var c = -1732584194;</span></span><br><span class="line"><span class="string">  var d =  271733878;</span></span><br><span class="line"><span class="string">  var e = -1009589776;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  for(var i = 0; i &lt; x.length; i += 16)</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    var olda = a;</span></span><br><span class="line"><span class="string">    var oldb = b;</span></span><br><span class="line"><span class="string">    var oldc = c;</span></span><br><span class="line"><span class="string">    var oldd = d;</span></span><br><span class="line"><span class="string">    var olde = e;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for(var j = 0; j &lt; 80; j++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      if(j &lt; 16) w[j] = x[i + j];</span></span><br><span class="line"><span class="string">      else w[j] = bit_rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);</span></span><br><span class="line"><span class="string">      var t = safe_add(safe_add(bit_rol(a, 5), sha1_ft(j, b, c, d)),</span></span><br><span class="line"><span class="string">                       safe_add(safe_add(e, w[j]), sha1_kt(j)));</span></span><br><span class="line"><span class="string">      e = d;</span></span><br><span class="line"><span class="string">      d = c;</span></span><br><span class="line"><span class="string">      c = bit_rol(b, 30);</span></span><br><span class="line"><span class="string">      b = a;</span></span><br><span class="line"><span class="string">      a = t;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    a = safe_add(a, olda);</span></span><br><span class="line"><span class="string">    b = safe_add(b, oldb);</span></span><br><span class="line"><span class="string">    c = safe_add(c, oldc);</span></span><br><span class="line"><span class="string">    d = safe_add(d, oldd);</span></span><br><span class="line"><span class="string">    e = safe_add(e, olde);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return Array(a, b, c, d, e);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function binb2rstr(input)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  var output = &quot;&quot;;</span></span><br><span class="line"><span class="string">  for(var i = 0; i &lt; input.length * 32; i += 8)</span></span><br><span class="line"><span class="string">    output += String.fromCharCode((input[i&gt;&gt;5] &gt;&gt;&gt; (24 - i % 32)) &amp; 0xFF);</span></span><br><span class="line"><span class="string">  return output;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function sha1_ft(t, b, c, d)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  if(t &lt; 20) return (b &amp; c) | ((~b) &amp; d);</span></span><br><span class="line"><span class="string">  if(t &lt; 40) return b ^ c ^ d;</span></span><br><span class="line"><span class="string">  if(t &lt; 60) return (b &amp; c) | (b &amp; d) | (c &amp; d);</span></span><br><span class="line"><span class="string">  return b ^ c ^ d;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function sha1_kt(t)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  return (t &lt; 20) ?  1518500249 : (t &lt; 40) ?  1859775393 :</span></span><br><span class="line"><span class="string">         (t &lt; 60) ? -1894007588 : -899497514;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function bit_rol(num, cnt)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  return (num &lt;&lt; cnt) | (num &gt;&gt;&gt; (32 - cnt));</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function safe_add(x, y)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  var lsw = (x &amp; 0xFFFF) + (y &amp; 0xFFFF);</span></span><br><span class="line"><span class="string">  var msw = (x &gt;&gt; 16) + (y &gt;&gt; 16) + (lsw &gt;&gt; 16);</span></span><br><span class="line"><span class="string">  return (msw &lt;&lt; 16) | (lsw &amp; 0xFFFF);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function rstr2hex(input)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  try &#123; hexcase; &#125; catch(e) &#123; hexcase=0; &#125;</span></span><br><span class="line"><span class="string">  var hex_tab = hexcase ? &quot;0123456789ABCDEF&quot; : &quot;0123456789abcdef&quot;;</span></span><br><span class="line"><span class="string">  var output = &quot;&quot;;</span></span><br><span class="line"><span class="string">  var x;</span></span><br><span class="line"><span class="string">  for(var i = 0; i &lt; input.length; i++)</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    x = input.charCodeAt(i);</span></span><br><span class="line"><span class="string">    output += hex_tab.charAt((x &gt;&gt;&gt; 4) &amp; 0x0F)</span></span><br><span class="line"><span class="string">           +  hex_tab.charAt( x        &amp; 0x0F);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return output;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function get_encrypted_pwd(s)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">return rstr2hex(rstr_sha1(str2rstr_utf8(s))).toLowerCase();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">password = <span class="string">&#x27;999999&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_encryption</span>():</span></span><br><span class="line">    encrypted_password = execjs.<span class="built_in">compile</span>(jscode).call(<span class="string">&quot;get_encrypted_pwd&quot;</span>, password)</span><br><span class="line">    <span class="keyword">return</span> encrypted_password</span><br><span class="line"><span class="built_in">print</span>(get_encryption())</span><br></pre></td></tr></table></figure><p>gghypt.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@Description : </span></span><br><span class="line"><span class="string">@File        : gghypt</span></span><br><span class="line"><span class="string">@Project     : test</span></span><br><span class="line"><span class="string">@Time        : 2022/3/9 14:57</span></span><br><span class="line"><span class="string">@Author      : LiHouJian</span></span><br><span class="line"><span class="string">@Software    : PyCharm</span></span><br><span class="line"><span class="string">@issue       : https://www.gghypt.net/</span></span><br><span class="line"><span class="string">@change      : </span></span><br><span class="line"><span class="string">@reason      : </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> scrapy.utils <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> scrapy.utils.project <span class="keyword">import</span> get_project_settings</span><br><span class="line"><span class="keyword">from</span> pybase.util <span class="keyword">import</span> send_file</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> get_encrypted_password</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://www.gghypt.net/sysbasic/loginPub.action?userName=18979685342d1646807655185&quot;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">f&quot;requestParam.equal.opLoginname=18979685341&amp;requestParam.equal.opPass=<span class="subst">&#123;get_encrypted_password.get_encryption()&#125;</span>&quot;</span></span><br><span class="line">headers = &#123;</span><br><span class="line">  <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Pragma&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;sec-ch-ua&#x27;</span>: <span class="string">&#x27;&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;99&quot;&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/json, text/javascript, */*; q=0.01&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded; charset=UTF-8&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Safari/537.36&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="string">&#x27;&quot;Windows&quot;&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;https://www.gghypt.net&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://www.gghypt.net/&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;zg_did=%7B%22did%22%3A%20%2217f68abc597507-0b1b26eaafcf36-35385a00-240000-17f68abc5989dc%22%7D; JSESSIONID=5444A259A73840485B8D71CC3105402B; RandomCheckCode_PSS=ca7b5edf-a540-4ddd-beeb-1f0674a922bd; zg_8eef6a6900324a39bb3b203913a53cf5=%7B%22sid%22%3A%201646807645857%2C%22updated%22%3A%201646807655184%2C%22info%22%3A%201646728562076%2C%22superProperty%22%3A%20%22%7B%7D%22%2C%22platform%22%3A%20%22%7B%7D%22%2C%22utm%22%3A%20%22%7B%7D%22%2C%22referrerDomain%22%3A%20%22www.jianshu.com%22%2C%22zs%22%3A%200%2C%22sc%22%3A%200%2C%22firstScreen%22%3A%201646807645857%7D&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.request(<span class="string">&quot;POST&quot;</span>, url, headers=headers, data=payload)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;网址: &lt;a class=&quot;link&quot;   href=&quot;https://www.gghypt.net/&quot; &gt;https://www.gghypt.net/&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;分析&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Tabby的基本使用</title>
    <link href="http://example.com/2022/03/09/Tabby%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2022/03/09/Tabby%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</id>
    <published>2022-03-09T01:33:30.000Z</published>
    <updated>2022-03-09T01:52:15.286Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><p>官网: <a class="link"   href="https://tabby.sh/" >https://tabby.sh/<i class="fas fa-external-link-alt"></i></a></p><p>github: <a class="link"   href="https://github.com/Eugeny/tabby" >https://github.com/Eugeny/tabby<i class="fas fa-external-link-alt"></i></a></p><h3 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h3><h4 id="添加SSH连接"><a href="#添加SSH连接" class="headerlink" title="添加SSH连接"></a>添加SSH连接</h4><p>打开终端，点击设置，然后在Profiles&amp;connections页面点击+New profile:</p><p><a href="https://imgtu.com/i/b2RUWq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2RUWq.png"                      alt="b2RUWq.png"                ></a></p><p>选择SSH连接:</p><p><a href="https://imgtu.com/i/b2RBOU"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2RBOU.png"                      alt="b2RBOU.png"                ></a></p><p>填写SSH连接信息，完成后点击Save进行保存:</p><p><a href="https://imgtu.com/i/b2RbtA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2RbtA.png"                      alt="b2RbtA.png"                ></a></p><p>可以看到SSH连接已经添加成功，点击按钮进行连接:</p><p><a href="https://imgtu.com/i/b2WEcV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2WEcV.png"                      alt="b2WEcV.png"                ></a></p><p>连接显示的效果如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://upload-images.jianshu.io/upload_images/3821938-9bfb53789dcaaef4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/815/format/webp"                      alt="img"                ></p><h4 id="SFTP传输文件"><a href="#SFTP传输文件" class="headerlink" title="SFTP传输文件"></a>SFTP传输文件</h4><p>对于经常使用终端的小伙伴而言，文件传输啃食是个刚需，Tabby集成了SFTP，所以传输大文件时，我们不用再安装其他软件了，点击终端上方的SFTP按钮，可以将文件直接拖拽到目录下，还是挺方便的:</p><p><a href="https://imgtu.com/i/b2WWNj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2WWNj.png"                      alt="b2WWNj.png"                ></a></p><h4 id="修改配色方案"><a href="#修改配色方案" class="headerlink" title="修改配色方案"></a>修改配色方案</h4><p>如果你不满意终端显示的配色，可以选择其它的配色方案，Tabby内部集成了非常多的配色方案，总有一款适合你，配色方案可以到Color scheme界面中挑选，这里我选择了Adventure Time:</p><p><a href="https://imgtu.com/i/b2fZ8I"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2fZ8I.png"                      alt="b2fZ8I.png"                ></a></p><p>使用该方案后的显示效果如下:</p><p><a href="https://imgtu.com/i/b2f35j"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2f35j.png"                      alt="b2f35j.png"                ></a></p><h4 id="安装主题插件"><a href="#安装主题插件" class="headerlink" title="安装主题插件"></a>安装主题插件</h4><p>我觉得Tabby自带的主题已经很美观了，如果你想更换其他主题，可以到Windows界面修改:</p><p><a href="https://imgtu.com/i/b2fUMV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2fUMV.png"                      alt="b2fUMV.png"                ></a></p><p>如果还是不喜欢自带的主题，可以试试安装主题插件，这里我安装了theme-gruvbox这个主题插件:</p><p><a href="https://imgtu.com/i/b2f2M6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2f2M6.png"                      alt="b2f2M6.png"                ></a></p><p>安装完后重启Tabby，再回到Window界面，可以应用刚添加的主题:</p><p><a href="https://imgtu.com/i/b2f7RI"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2f7RI.png"                      alt="b2f7RI.png"                ></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;下载安装&quot;&gt;&lt;a href=&quot;#下载安装&quot; class=&quot;headerlink&quot; title=&quot;下载安装&quot;&gt;&lt;/a&gt;下载安装&lt;/h3&gt;&lt;p&gt;官网: &lt;a class=&quot;link&quot;   href=&quot;https://tabby.sh/&quot; &gt;https://tabby.</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JS逆向登录房天下</title>
    <link href="http://example.com/2022/03/08/JS%E9%80%86%E5%90%91%E7%99%BB%E5%BD%95%E6%88%BF%E5%A4%A9%E4%B8%8B/"/>
    <id>http://example.com/2022/03/08/JS%E9%80%86%E5%90%91%E7%99%BB%E5%BD%95%E6%88%BF%E5%A4%A9%E4%B8%8B/</id>
    <published>2022-03-08T09:18:30.000Z</published>
    <updated>2022-03-08T10:49:03.668Z</updated>
    
    <content type="html"><![CDATA[<p>目标网站: <a class="link"   href="https://www1.fang.com/" >https://www1.fang.com/<i class="fas fa-external-link-alt"></i></a></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>我们打开目标网站，然后点击右上角的登录，选择账号密码登录并且取消自动登录，在登录之前我们先打开控制台，观察参数的加密:</p><p><a href="https://imgtu.com/i/bgU6r6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgU6r6.png"                      alt="bgU6r6.png"                ></a></p><p>这里我随便输入了一对账号密码，然后我们会看到如下加密参数:</p><p><a href="https://imgtu.com/i/bgUTMt"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgUTMt.png"                      alt="bgUTMt.png"                ></a></p><p>我们在控制台中搜索pwd，然后惊喜地发现有直接线索:</p><p><a href="https://imgtu.com/i/bgaCLV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgaCLV.png"                      alt="bgaCLV.png"                ></a></p><p>上图红框中有些字眼直接就和加密扯上了关系，我们点进去看看，然后在对应行打下断点，再点击登录，如下图所示:</p><p><a href="https://imgtu.com/i/bgazkD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgazkD.png"                      alt="bgazkD.png"                ></a></p><p>上图红框中的函数有两个参数，我们分别复制到console中看看是什么值，如下图所示:</p><p><a href="https://imgtu.com/i/bgdQcn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgdQcn.png"                      alt="bgdQcn.png"                ></a></p><p>可以看到，第一个参数是一个RSAKeyPair，类似于字典叭，然后第二个参数就是我们输入的密码，我们展开这个字典来看看是否还有其他线索:</p><p><a href="https://imgtu.com/i/bgwRaT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgwRaT.png"                      alt="bgwRaT.png"                ></a></p><p>从prototype一步步展开下来，我们可以看到这个参数实际上是来自RSA.min.js执行的结果，RSA.min.js显然是开发者引入的别的包，既然它可以引入，我们也就可以扣下来，然后我们再次全局搜索key_to_encode这个参数，看看会有什么发现，如下图所示:</p><p><a href="https://imgtu.com/i/bg0Tfg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bg0Tfg.png"                      alt="bg0Tfg.png"                ></a></p><p>我们发现，上面搜索定义的函数和刚刚点击RSA.min.js跳转的函数是同一个，然后我们就可以断定，这搜索到的函数就是得到第一个参数的函数，我们跳转到这个函数，然后复制这个函数，再复制全部的RSA.min.js，我们在鬼鬼调试助手中简单构造下，看是否能成功拿到加密参数pwd:</p><p>以下代码是我构造好的，直接粘贴到鬼鬼调试助手中验证即可:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setMaxDigits</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    maxDigits = n;</span><br><span class="line">    ZERO_ARRAY = <span class="keyword">new</span> <span class="built_in">Array</span>(maxDigits);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; ZERO_ARRAY.length; t++)</span><br><span class="line">        ZERO_ARRAY[t] = <span class="number">0</span>;</span><br><span class="line">    bigZero = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    bigOne = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    bigOne.digits[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BigInt</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.digits = <span class="keyword">typeof</span> n == <span class="string">&quot;boolean&quot;</span> &amp;&amp; n == !<span class="number">0</span> ? <span class="literal">null</span> : ZERO_ARRAY.slice(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">this</span>.isNeg = !<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biFromDecimal</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> u = n.charAt(<span class="number">0</span>) == <span class="string">&quot;-&quot;</span>, t = u ? <span class="number">1</span> : <span class="number">0</span>, i, f, r; t &lt; n.length &amp;&amp; n.charAt(t) == <span class="string">&quot;0&quot;</span>; )</span><br><span class="line">        ++t;</span><br><span class="line">    <span class="keyword">if</span> (t == n.length)</span><br><span class="line">        i = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (f = n.length - t,</span><br><span class="line">        r = f % dpl10,</span><br><span class="line">        r == <span class="number">0</span> &amp;&amp; (r = dpl10),</span><br><span class="line">        i = biFromNumber(<span class="built_in">Number</span>(n.substr(t, r))),</span><br><span class="line">        t += r; t &lt; n.length; )</span><br><span class="line">            i = biAdd(biMultiply(i, lr10), biFromNumber(<span class="built_in">Number</span>(n.substr(t, dpl10)))),</span><br><span class="line">            t += dpl10;</span><br><span class="line">        i.isNeg = u</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biCopy</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="keyword">new</span> <span class="built_in">BigInt</span>(!<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> t.digits = n.digits.slice(<span class="number">0</span>),</span><br><span class="line">    t.isNeg = n.isNeg,</span><br><span class="line">    t</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biFromNumber</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="keyword">new</span> <span class="built_in">BigInt</span>, i;</span><br><span class="line">    <span class="keyword">for</span> (t.isNeg = n &lt; <span class="number">0</span>,</span><br><span class="line">    n = <span class="built_in">Math</span>.abs(n),</span><br><span class="line">    i = <span class="number">0</span>; n &gt; <span class="number">0</span>; )</span><br><span class="line">        t.digits[i++] = n &amp; maxDigitVal,</span><br><span class="line">        n = <span class="built_in">Math</span>.floor(n / biRadix);</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reverseStr</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="string">&quot;&quot;</span>, t = n.length - <span class="number">1</span>; t &gt; -<span class="number">1</span>; --t)</span><br><span class="line">        i += n.charAt(t);</span><br><span class="line">    <span class="keyword">return</span> i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biToString</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r = <span class="keyword">new</span> <span class="built_in">BigInt</span>, i, u;</span><br><span class="line">    <span class="keyword">for</span> (r.digits[<span class="number">0</span>] = t,</span><br><span class="line">    i = biDivideModulo(n, r),</span><br><span class="line">    u = hexatrigesimalToChar[i[<span class="number">1</span>].digits[<span class="number">0</span>]]; biCompare(i[<span class="number">0</span>], bigZero) == <span class="number">1</span>; )</span><br><span class="line">        i = biDivideModulo(i[<span class="number">0</span>], r),</span><br><span class="line">        digit = i[<span class="number">1</span>].digits[<span class="number">0</span>],</span><br><span class="line">        u += hexatrigesimalToChar[i[<span class="number">1</span>].digits[<span class="number">0</span>]];</span><br><span class="line">    <span class="keyword">return</span> (n.isNeg ? <span class="string">&quot;-&quot;</span> : <span class="string">&quot;&quot;</span>) + reverseStr(u)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biToDecimal</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="keyword">new</span> <span class="built_in">BigInt</span>, t, r;</span><br><span class="line">    <span class="keyword">for</span> (i.digits[<span class="number">0</span>] = <span class="number">10</span>,</span><br><span class="line">    t = biDivideModulo(n, i),</span><br><span class="line">    r = <span class="built_in">String</span>(t[<span class="number">1</span>].digits[<span class="number">0</span>]); biCompare(t[<span class="number">0</span>], bigZero) == <span class="number">1</span>; )</span><br><span class="line">        t = biDivideModulo(t[<span class="number">0</span>], i),</span><br><span class="line">        r += <span class="built_in">String</span>(t[<span class="number">1</span>].digits[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">return</span> (n.isNeg ? <span class="string">&quot;-&quot;</span> : <span class="string">&quot;&quot;</span>) + reverseStr(r)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">digitToHex</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">        t += hexToChar[n &amp; <span class="number">15</span>],</span><br><span class="line">        n &gt;&gt;&gt;= <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">return</span> reverseStr(t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biToHex</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="string">&quot;&quot;</span>, r = biHighIndex(n), t = biHighIndex(n); t &gt; -<span class="number">1</span>; --t)</span><br><span class="line">        i += digitToHex(n.digits[t]);</span><br><span class="line">    <span class="keyword">return</span> i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">charToHex</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="number">48</span></span><br><span class="line">      , u = t + <span class="number">9</span></span><br><span class="line">      , i = <span class="number">97</span></span><br><span class="line">      , f = i + <span class="number">25</span></span><br><span class="line">      , r = <span class="number">65</span>;</span><br><span class="line">    <span class="keyword">return</span> n &gt;= t &amp;&amp; n &lt;= u ? n - t : n &gt;= r &amp;&amp; n &lt;= <span class="number">90</span> ? <span class="number">10</span> + n - r : n &gt;= i &amp;&amp; n &lt;= f ? <span class="number">10</span> + n - i : <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hexToDigit</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>, r = <span class="built_in">Math</span>.min(n.length, <span class="number">4</span>), i = <span class="number">0</span>; i &lt; r; ++i)</span><br><span class="line">        t &lt;&lt;= <span class="number">4</span>,</span><br><span class="line">        t |= charToHex(n.charCodeAt(i));</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biFromHex</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="keyword">new</span> <span class="built_in">BigInt</span>, u = n.length, t = u, r = <span class="number">0</span>; t &gt; <span class="number">0</span>; t -= <span class="number">4</span>,</span><br><span class="line">    ++r)</span><br><span class="line">        i.digits[r] = hexToDigit(n.substr(<span class="built_in">Math</span>.max(t - <span class="number">4</span>, <span class="number">0</span>), <span class="built_in">Math</span>.min(t, <span class="number">4</span>)));</span><br><span class="line">    <span class="keyword">return</span> i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biFromString</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> f = n.charAt(<span class="number">0</span>) == <span class="string">&quot;-&quot;</span>, e = f ? <span class="number">1</span> : <span class="number">0</span>, i = <span class="keyword">new</span> <span class="built_in">BigInt</span>, r = <span class="keyword">new</span> <span class="built_in">BigInt</span>, u;</span><br><span class="line">    <span class="keyword">for</span> (r.digits[<span class="number">0</span>] = <span class="number">1</span>,</span><br><span class="line">    u = n.length - <span class="number">1</span>; u &gt;= e; u--) &#123;</span><br><span class="line">        <span class="keyword">var</span> o = n.charCodeAt(u)</span><br><span class="line">          , s = charToHex(o)</span><br><span class="line">          , h = biMultiplyDigit(r, s);</span><br><span class="line">        i = biAdd(i, h);</span><br><span class="line">        r = biMultiplyDigit(r, t)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i.isNeg = f,</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biDump</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (n.isNeg ? <span class="string">&quot;-&quot;</span> : <span class="string">&quot;&quot;</span>) + n.digits.join(<span class="string">&quot; &quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biAdd</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r, u, f, i;</span><br><span class="line">    <span class="keyword">if</span> (n.isNeg != t.isNeg)</span><br><span class="line">        t.isNeg = !t.isNeg,</span><br><span class="line">        r = biSubtract(n, t),</span><br><span class="line">        t.isNeg = !t.isNeg;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (r = <span class="keyword">new</span> <span class="built_in">BigInt</span>,</span><br><span class="line">        u = <span class="number">0</span>,</span><br><span class="line">        i = <span class="number">0</span>; i &lt; n.digits.length; ++i)</span><br><span class="line">            f = n.digits[i] + t.digits[i] + u,</span><br><span class="line">            r.digits[i] = f % biRadix,</span><br><span class="line">            u = <span class="built_in">Number</span>(f &gt;= biRadix);</span><br><span class="line">        r.isNeg = n.isNeg</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biSubtract</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r, f, u, i;</span><br><span class="line">    <span class="keyword">if</span> (n.isNeg != t.isNeg)</span><br><span class="line">        t.isNeg = !t.isNeg,</span><br><span class="line">        r = biAdd(n, t),</span><br><span class="line">        t.isNeg = !t.isNeg;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (r = <span class="keyword">new</span> <span class="built_in">BigInt</span>,</span><br><span class="line">        u = <span class="number">0</span>,</span><br><span class="line">        i = <span class="number">0</span>; i &lt; n.digits.length; ++i)</span><br><span class="line">            f = n.digits[i] - t.digits[i] + u,</span><br><span class="line">            r.digits[i] = f % biRadix,</span><br><span class="line">            r.digits[i] &lt; <span class="number">0</span> &amp;&amp; (r.digits[i] += biRadix),</span><br><span class="line">            u = <span class="number">0</span> - <span class="built_in">Number</span>(f &lt; <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (u == -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (u = <span class="number">0</span>,</span><br><span class="line">            i = <span class="number">0</span>; i &lt; n.digits.length; ++i)</span><br><span class="line">                f = <span class="number">0</span> - r.digits[i] + u,</span><br><span class="line">                r.digits[i] = f % biRadix,</span><br><span class="line">                r.digits[i] &lt; <span class="number">0</span> &amp;&amp; (r.digits[i] += biRadix),</span><br><span class="line">                u = <span class="number">0</span> - <span class="built_in">Number</span>(f &lt; <span class="number">0</span>);</span><br><span class="line">            r.isNeg = !n.isNeg</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            r.isNeg = n.isNeg</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biHighIndex</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> t = n.digits.length - <span class="number">1</span>; t &gt; <span class="number">0</span> &amp;&amp; n.digits[t] == <span class="number">0</span>; )</span><br><span class="line">        --t;</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biNumBits</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = biHighIndex(n), r = n.digits[i], u = (i + <span class="number">1</span>) * bitsPerDigit, t = u; t &gt; u - bitsPerDigit; --t) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((r &amp; <span class="number">32768</span>) != <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        r &lt;&lt;= <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biMultiply</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="keyword">new</span> <span class="built_in">BigInt</span>, u, o = biHighIndex(n), s = biHighIndex(t), e, f, r = <span class="number">0</span>; r &lt;= s; ++r) &#123;</span><br><span class="line">        <span class="keyword">for</span> (u = <span class="number">0</span>,</span><br><span class="line">        f = r,</span><br><span class="line">        j = <span class="number">0</span>; j &lt;= o; ++j,</span><br><span class="line">        ++f)</span><br><span class="line">            e = i.digits[f] + n.digits[j] * t.digits[r] + u,</span><br><span class="line">            i.digits[f] = e &amp; maxDigitVal,</span><br><span class="line">            u = e &gt;&gt;&gt; biRadixBits;</span><br><span class="line">        i.digits[r + o + <span class="number">1</span>] = u</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i.isNeg = n.isNeg != t.isNeg,</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biMultiplyDigit</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> u, r, f, i;</span><br><span class="line">    <span class="keyword">for</span> (result = <span class="keyword">new</span> <span class="built_in">BigInt</span>,</span><br><span class="line">    u = biHighIndex(n),</span><br><span class="line">    r = <span class="number">0</span>,</span><br><span class="line">    i = <span class="number">0</span>; i &lt;= u; ++i)</span><br><span class="line">        f = result.digits[i] + n.digits[i] * t + r,</span><br><span class="line">        result.digits[i] = f &amp; maxDigitVal,</span><br><span class="line">        r = f &gt;&gt;&gt; biRadixBits;</span><br><span class="line">    <span class="keyword">return</span> result.digits[<span class="number">1</span> + u] = r,</span><br><span class="line">    result</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arrayCopy</span>(<span class="params">n, t, i, r, u</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> o = <span class="built_in">Math</span>.min(t + u, n.length), f = t, e = r; f &lt; o; ++f,</span><br><span class="line">    ++e)</span><br><span class="line">        i[e] = n[f]</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biShiftLeft</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e = <span class="built_in">Math</span>.floor(t / bitsPerDigit), i = <span class="keyword">new</span> <span class="built_in">BigInt</span>, u, o, r, f;</span><br><span class="line">    <span class="keyword">for</span> (arrayCopy(n.digits, <span class="number">0</span>, i.digits, e, i.digits.length - e),</span><br><span class="line">    u = t % bitsPerDigit,</span><br><span class="line">    o = bitsPerDigit - u,</span><br><span class="line">    r = i.digits.length - <span class="number">1</span>,</span><br><span class="line">    f = r - <span class="number">1</span>; r &gt; <span class="number">0</span>; --r,</span><br><span class="line">    --f)</span><br><span class="line">        i.digits[r] = i.digits[r] &lt;&lt; u &amp; maxDigitVal | (i.digits[f] &amp; highBitMasks[u]) &gt;&gt;&gt; o;</span><br><span class="line">    <span class="keyword">return</span> i.digits[<span class="number">0</span>] = i.digits[r] &lt;&lt; u &amp; maxDigitVal,</span><br><span class="line">    i.isNeg = n.isNeg,</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biShiftRight</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e = <span class="built_in">Math</span>.floor(t / bitsPerDigit), i = <span class="keyword">new</span> <span class="built_in">BigInt</span>, u, o, r, f;</span><br><span class="line">    <span class="keyword">for</span> (arrayCopy(n.digits, e, i.digits, <span class="number">0</span>, n.digits.length - e),</span><br><span class="line">    u = t % bitsPerDigit,</span><br><span class="line">    o = bitsPerDigit - u,</span><br><span class="line">    r = <span class="number">0</span>,</span><br><span class="line">    f = r + <span class="number">1</span>; r &lt; i.digits.length - <span class="number">1</span>; ++r,</span><br><span class="line">    ++f)</span><br><span class="line">        i.digits[r] = i.digits[r] &gt;&gt;&gt; u | (i.digits[f] &amp; lowBitMasks[u]) &lt;&lt; o;</span><br><span class="line">    <span class="keyword">return</span> i.digits[i.digits.length - <span class="number">1</span>] &gt;&gt;&gt;= u,</span><br><span class="line">    i.isNeg = n.isNeg,</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biMultiplyByRadixPower</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    <span class="keyword">return</span> arrayCopy(n.digits, <span class="number">0</span>, i.digits, t, i.digits.length - t),</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biDivideByRadixPower</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    <span class="keyword">return</span> arrayCopy(n.digits, t, i.digits, <span class="number">0</span>, i.digits.length - t),</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biModuloByRadixPower</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    <span class="keyword">return</span> arrayCopy(n.digits, <span class="number">0</span>, i.digits, <span class="number">0</span>, t),</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biCompare</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n.isNeg != t.isNeg)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> - <span class="number">2</span> * <span class="built_in">Number</span>(n.isNeg);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = n.digits.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">        <span class="keyword">if</span> (n.digits[i] != t.digits[i])</span><br><span class="line">            <span class="keyword">return</span> n.isNeg ? <span class="number">1</span> - <span class="number">2</span> * <span class="built_in">Number</span>(n.digits[i] &gt; t.digits[i]) : <span class="number">1</span> - <span class="number">2</span> * <span class="built_in">Number</span>(n.digits[i] &lt; t.digits[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biDivideModulo</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = biNumBits(n), s = biNumBits(t), v = t.isNeg, r, i, u, e, h, o, f, y, p;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; s)</span><br><span class="line">        <span class="keyword">return</span> n.isNeg ? (r = biCopy(bigOne),</span><br><span class="line">        r.isNeg = !t.isNeg,</span><br><span class="line">        n.isNeg = !<span class="number">1</span>,</span><br><span class="line">        t.isNeg = !<span class="number">1</span>,</span><br><span class="line">        i = biSubtract(t, n),</span><br><span class="line">        n.isNeg = !<span class="number">0</span>,</span><br><span class="line">        t.isNeg = v) : (r = <span class="keyword">new</span> <span class="built_in">BigInt</span>,</span><br><span class="line">        i = biCopy(n)),</span><br><span class="line">        [r, i];</span><br><span class="line">    <span class="keyword">for</span> (r = <span class="keyword">new</span> <span class="built_in">BigInt</span>,</span><br><span class="line">    i = n,</span><br><span class="line">    u = <span class="built_in">Math</span>.ceil(s / bitsPerDigit) - <span class="number">1</span>,</span><br><span class="line">    e = <span class="number">0</span>; t.digits[u] &lt; biHalfRadix; )</span><br><span class="line">        t = biShiftLeft(t, <span class="number">1</span>),</span><br><span class="line">        ++e,</span><br><span class="line">        ++s,</span><br><span class="line">        u = <span class="built_in">Math</span>.ceil(s / bitsPerDigit) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = biShiftLeft(i, e),</span><br><span class="line">    a += e,</span><br><span class="line">    h = <span class="built_in">Math</span>.ceil(a / bitsPerDigit) - <span class="number">1</span>,</span><br><span class="line">    o = biMultiplyByRadixPower(t, h - u); biCompare(i, o) != -<span class="number">1</span>; )</span><br><span class="line">        ++r.digits[h - u],</span><br><span class="line">        i = biSubtract(i, o);</span><br><span class="line">    <span class="keyword">for</span> (f = h; f &gt; u; --f) &#123;</span><br><span class="line">        <span class="keyword">var</span> c = f &gt;= i.digits.length ? <span class="number">0</span> : i.digits[f]</span><br><span class="line">          , w = f - <span class="number">1</span> &gt;= i.digits.length ? <span class="number">0</span> : i.digits[f - <span class="number">1</span>]</span><br><span class="line">          , b = f - <span class="number">2</span> &gt;= i.digits.length ? <span class="number">0</span> : i.digits[f - <span class="number">2</span>]</span><br><span class="line">          , l = u &gt;= t.digits.length ? <span class="number">0</span> : t.digits[u]</span><br><span class="line">          , k = u - <span class="number">1</span> &gt;= t.digits.length ? <span class="number">0</span> : t.digits[u - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (r.digits[f - u - <span class="number">1</span>] = c == l ? maxDigitVal : <span class="built_in">Math</span>.floor((c * biRadix + w) / l),</span><br><span class="line">        y = r.digits[f - u - <span class="number">1</span>] * (l * biRadix + k),</span><br><span class="line">        p = c * biRadixSquared + (w * biRadix + b); y &gt; p; )</span><br><span class="line">            --r.digits[f - u - <span class="number">1</span>],</span><br><span class="line">            y = r.digits[f - u - <span class="number">1</span>] * (l * biRadix | k),</span><br><span class="line">            p = c * biRadix * biRadix + (w * biRadix + b);</span><br><span class="line">        o = biMultiplyByRadixPower(t, f - u - <span class="number">1</span>);</span><br><span class="line">        i = biSubtract(i, biMultiplyDigit(o, r.digits[f - u - <span class="number">1</span>]));</span><br><span class="line">        i.isNeg &amp;&amp; (i = biAdd(i, o),</span><br><span class="line">        --r.digits[f - u - <span class="number">1</span>])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i = biShiftRight(i, e),</span><br><span class="line">    r.isNeg = n.isNeg != v,</span><br><span class="line">    n.isNeg &amp;&amp; (r = v ? biAdd(r, bigOne) : biSubtract(r, bigOne),</span><br><span class="line">    t = biShiftRight(t, e),</span><br><span class="line">    i = biSubtract(t, i)),</span><br><span class="line">    i.digits[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; biHighIndex(i) == <span class="number">0</span> &amp;&amp; (i.isNeg = !<span class="number">1</span>),</span><br><span class="line">    [r, i]</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biDivide</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> biDivideModulo(n, t)[<span class="number">0</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biModulo</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> biDivideModulo(n, t)[<span class="number">1</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biMultiplyMod</span>(<span class="params">n, t, i</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> biModulo(biMultiply(n, t), i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biPow</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> r = bigOne, i = n; ; ) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((t &amp; <span class="number">1</span>) != <span class="number">0</span> &amp;&amp; (r = biMultiply(r, i)),</span><br><span class="line">        t &gt;&gt;= <span class="number">1</span>,</span><br><span class="line">        t == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        i = biMultiply(i, i)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biPowMod</span>(<span class="params">n, t, i</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> f = bigOne, u = n, r = t; ; ) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((r.digits[<span class="number">0</span>] &amp; <span class="number">1</span>) != <span class="number">0</span> &amp;&amp; (f = biMultiplyMod(f, u, i)),</span><br><span class="line">        r = biShiftRight(r, <span class="number">1</span>),</span><br><span class="line">        r.digits[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; biHighIndex(r) == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        u = biMultiplyMod(u, u, i)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BarrettMu</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.modulus = biCopy(n);</span><br><span class="line">    <span class="built_in">this</span>.k = biHighIndex(<span class="built_in">this</span>.modulus) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    t.digits[<span class="number">2</span> * <span class="built_in">this</span>.k] = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">this</span>.mu = biDivide(t, <span class="built_in">this</span>.modulus);</span><br><span class="line">    <span class="built_in">this</span>.bkplus1 = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    <span class="built_in">this</span>.bkplus1.digits[<span class="built_in">this</span>.k + <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">this</span>.modulo = BarrettMu_modulo;</span><br><span class="line">    <span class="built_in">this</span>.multiplyMod = BarrettMu_multiplyMod;</span><br><span class="line">    <span class="built_in">this</span>.powMod = BarrettMu_powMod</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BarrettMu_modulo</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r = biDivideByRadixPower(n, <span class="built_in">this</span>.k - <span class="number">1</span>), u = biMultiply(r, <span class="built_in">this</span>.mu), f = biDivideByRadixPower(u, <span class="built_in">this</span>.k + <span class="number">1</span>), e = biModuloByRadixPower(n, <span class="built_in">this</span>.k + <span class="number">1</span>), o = biMultiply(f, <span class="built_in">this</span>.modulus), s = biModuloByRadixPower(o, <span class="built_in">this</span>.k + <span class="number">1</span>), t = biSubtract(e, s), i;</span><br><span class="line">    <span class="keyword">for</span> (t.isNeg &amp;&amp; (t = biAdd(t, <span class="built_in">this</span>.bkplus1)),</span><br><span class="line">    i = biCompare(t, <span class="built_in">this</span>.modulus) &gt;= <span class="number">0</span>; i; )</span><br><span class="line">        t = biSubtract(t, <span class="built_in">this</span>.modulus),</span><br><span class="line">        i = biCompare(t, <span class="built_in">this</span>.modulus) &gt;= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BarrettMu_multiplyMod</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = biMultiply(n, t);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.modulo(i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BarrettMu_powMod</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> u = <span class="keyword">new</span> <span class="built_in">BigInt</span>, r, i;</span><br><span class="line">    <span class="keyword">for</span> (u.digits[<span class="number">0</span>] = <span class="number">1</span>,</span><br><span class="line">    r = n,</span><br><span class="line">    i = t; ; ) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((i.digits[<span class="number">0</span>] &amp; <span class="number">1</span>) != <span class="number">0</span> &amp;&amp; (u = <span class="built_in">this</span>.multiplyMod(u, r)),</span><br><span class="line">        i = biShiftRight(i, <span class="number">1</span>),</span><br><span class="line">        i.digits[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; biHighIndex(i) == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        r = <span class="built_in">this</span>.multiplyMod(r, r)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> u</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">RSAKeyPair</span>(<span class="params">n, t, i</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.e = biFromHex(n);</span><br><span class="line">    <span class="built_in">this</span>.d = biFromHex(t);</span><br><span class="line">    <span class="built_in">this</span>.m = biFromHex(i);</span><br><span class="line">    <span class="built_in">this</span>.digitSize = <span class="number">2</span> * biHighIndex(<span class="built_in">this</span>.m) + <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">this</span>.chunkSize = <span class="built_in">this</span>.digitSize - <span class="number">11</span>;</span><br><span class="line">    <span class="built_in">this</span>.radix = <span class="number">16</span>;</span><br><span class="line">    <span class="built_in">this</span>.barrett = <span class="keyword">new</span> BarrettMu(<span class="built_in">this</span>.m)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">twoDigit</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (n &lt; <span class="number">10</span> ? <span class="string">&quot;0&quot;</span> : <span class="string">&quot;&quot;</span>) + <span class="built_in">String</span>(n)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encryptedString</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e, o, s, h, c, i, f, u, v, l, y;</span><br><span class="line">    <span class="keyword">if</span> (n.chunkSize &gt; n.digitSize - <span class="number">11</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Error&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> a = [], p = t.length, r = <span class="number">0</span>; r &lt; p; )</span><br><span class="line">        a[r] = t.charCodeAt(r),</span><br><span class="line">        r++;</span><br><span class="line">    <span class="keyword">for</span> (e = a.length,</span><br><span class="line">    o = <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r = <span class="number">0</span>; r &lt; e; r += n.chunkSize) &#123;</span><br><span class="line">        <span class="keyword">for</span> (c = <span class="keyword">new</span> <span class="built_in">BigInt</span>,</span><br><span class="line">        s = <span class="number">0</span>,</span><br><span class="line">        f = r + n.chunkSize &gt; e ? e % n.chunkSize : n.chunkSize,</span><br><span class="line">        u = [],</span><br><span class="line">        i = <span class="number">0</span>; i &lt; f; i++)</span><br><span class="line">            u[i] = a[r + f - <span class="number">1</span> - i];</span><br><span class="line">        <span class="keyword">for</span> (u[f] = <span class="number">0</span>,</span><br><span class="line">        v = <span class="built_in">Math</span>.max(<span class="number">8</span>, n.digitSize - <span class="number">3</span> - f),</span><br><span class="line">        i = <span class="number">0</span>; i &lt; v; i++)</span><br><span class="line">            u[f + <span class="number">1</span> + i] = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">254</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (u[n.digitSize - <span class="number">2</span>] = <span class="number">2</span>,</span><br><span class="line">        u[n.digitSize - <span class="number">1</span>] = <span class="number">0</span>,</span><br><span class="line">        h = <span class="number">0</span>; h &lt; n.digitSize; ++s)</span><br><span class="line">            c.digits[s] = u[h++],</span><br><span class="line">            c.digits[s] += u[h++] &lt;&lt; <span class="number">8</span>;</span><br><span class="line">        l = n.barrett.powMod(c, n.e);</span><br><span class="line">        y = n.radix == <span class="number">16</span> ? biToHex(l) : biToString(l, n.radix);</span><br><span class="line">        o += y + <span class="string">&quot; &quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> o.substring(<span class="number">0</span>, o.length - <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decryptedString</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e = t.split(<span class="string">&quot; &quot;</span>), i = <span class="string">&quot;&quot;</span>, r, u, o, f = <span class="number">0</span>; f &lt; e.length; ++f)</span><br><span class="line">        <span class="keyword">for</span> (o = n.radix == <span class="number">16</span> ? biFromHex(e[f]) : biFromString(e[f], n.radix),</span><br><span class="line">        u = n.barrett.powMod(o, n.d),</span><br><span class="line">        r = <span class="number">0</span>; r &lt;= biHighIndex(u); ++r)</span><br><span class="line">            i += <span class="built_in">String</span>.fromCharCode(u.digits[r] &amp; <span class="number">255</span>, u.digits[r] &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">return</span> i.charCodeAt(i.length - <span class="number">1</span>) == <span class="number">0</span> &amp;&amp; (i = i.substring(<span class="number">0</span>, i.length - <span class="number">1</span>)),</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> biRadixBase = <span class="number">2</span>, biRadixBits = <span class="number">16</span>, bitsPerDigit = biRadixBits, biRadix = <span class="number">65536</span>, biHalfRadix = biRadix &gt;&gt;&gt; <span class="number">1</span>, biRadixSquared = biRadix * biRadix, maxDigitVal = biRadix - <span class="number">1</span>, maxInteger = <span class="number">9999999999999998</span>, maxDigits, ZERO_ARRAY, bigZero, bigOne, dpl10, lr10, hexatrigesimalToChar, hexToChar, highBitMasks, lowBitMasks;</span><br><span class="line">setMaxDigits(<span class="number">20</span>);</span><br><span class="line">dpl10 = <span class="number">15</span>;</span><br><span class="line">lr10 = biFromNumber(<span class="number">1e15</span>);</span><br><span class="line">hexatrigesimalToChar = [<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="string">&quot;e&quot;</span>, <span class="string">&quot;f&quot;</span>, <span class="string">&quot;g&quot;</span>, <span class="string">&quot;h&quot;</span>, <span class="string">&quot;i&quot;</span>, <span class="string">&quot;j&quot;</span>, <span class="string">&quot;k&quot;</span>, <span class="string">&quot;l&quot;</span>, <span class="string">&quot;m&quot;</span>, <span class="string">&quot;n&quot;</span>, <span class="string">&quot;o&quot;</span>, <span class="string">&quot;p&quot;</span>, <span class="string">&quot;q&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="string">&quot;s&quot;</span>, <span class="string">&quot;t&quot;</span>, <span class="string">&quot;u&quot;</span>, <span class="string">&quot;v&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>, <span class="string">&quot;z&quot;</span>];</span><br><span class="line">hexToChar = [<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="string">&quot;e&quot;</span>, <span class="string">&quot;f&quot;</span>];</span><br><span class="line">highBitMasks = [<span class="number">0</span>, <span class="number">32768</span>, <span class="number">49152</span>, <span class="number">57344</span>, <span class="number">61440</span>, <span class="number">63488</span>, <span class="number">64512</span>, <span class="number">65024</span>, <span class="number">65280</span>, <span class="number">65408</span>, <span class="number">65472</span>, <span class="number">65504</span>, <span class="number">65520</span>, <span class="number">65528</span>, <span class="number">65532</span>, <span class="number">65534</span>, <span class="number">65535</span>];</span><br><span class="line">lowBitMasks = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">31</span>, <span class="number">63</span>, <span class="number">127</span>, <span class="number">255</span>, <span class="number">511</span>, <span class="number">1023</span>, <span class="number">2047</span>, <span class="number">4095</span>, <span class="number">8191</span>, <span class="number">16383</span>, <span class="number">32767</span>, <span class="number">65535</span>];</span><br><span class="line">setMaxDigits(<span class="number">129</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getpwd</span>(<span class="params">pwd</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> key_to_encode = <span class="keyword">new</span> RSAKeyPair(<span class="string">&quot;010001&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;978C0A92D2173439707498F0944AA476B1B62595877DD6FA87F6E2AC6DCB3D0BF0B82857439C99B5091192BC134889DFF60C562EC54EFBA4FF2F9D55ADBCCEA4A2FBA80CB398ED501280A007C83AF30C3D1A142D6133C63012B90AB26AC60C898FB66EDC3192C3EC4FF66925A64003B72496099F4F09A9FB72A2CF9E4D770C41&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> encryptedString(key_to_encode, pwd)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在鬼鬼调试助手上我们可以看到如下运行效果:</p><p><a href="https://imgtu.com/i/bgDcqI"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgDcqI.png"                      alt="bgDcqI.png"                ></a></p><h3 id="Python模拟执行"><a href="#Python模拟执行" class="headerlink" title="Python模拟执行"></a>Python模拟执行</h3><p>我在房天下注册了个账号: 18979685***，然后我们来测试下</p><ul><li><p>get_encrypted_pwd.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@Description : </span></span><br><span class="line"><span class="string">@File        : get_encrypted_pwd</span></span><br><span class="line"><span class="string">@Project     : test</span></span><br><span class="line"><span class="string">@Time        : 2022/3/8 18:16</span></span><br><span class="line"><span class="string">@Author      : LiHouJian</span></span><br><span class="line"><span class="string">@Software    : PyCharm</span></span><br><span class="line"><span class="string">@issue       : </span></span><br><span class="line"><span class="string">@change      : </span></span><br><span class="line"><span class="string">@reason      : </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> scrapy.utils <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> scrapy.utils.project <span class="keyword">import</span> get_project_settings</span><br><span class="line"><span class="keyword">from</span> pybase.util <span class="keyword">import</span> send_file</span><br><span class="line"><span class="keyword">import</span> execjs</span><br><span class="line"></span><br><span class="line">jscode = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">function setMaxDigits(n) &#123;</span></span><br><span class="line"><span class="string">    maxDigits = n;</span></span><br><span class="line"><span class="string">    ZERO_ARRAY = new Array(maxDigits);</span></span><br><span class="line"><span class="string">    for (var t = 0; t &lt; ZERO_ARRAY.length; t++)</span></span><br><span class="line"><span class="string">        ZERO_ARRAY[t] = 0;</span></span><br><span class="line"><span class="string">    bigZero = new BigInt;</span></span><br><span class="line"><span class="string">    bigOne = new BigInt;</span></span><br><span class="line"><span class="string">    bigOne.digits[0] = 1</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function BigInt(n) &#123;</span></span><br><span class="line"><span class="string">    this.digits = typeof n == &quot;boolean&quot; &amp;&amp; n == !0 ? null : ZERO_ARRAY.slice(0);</span></span><br><span class="line"><span class="string">    this.isNeg = !1</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biFromDecimal(n) &#123;</span></span><br><span class="line"><span class="string">    for (var u = n.charAt(0) == &quot;-&quot;, t = u ? 1 : 0, i, f, r; t &lt; n.length &amp;&amp; n.charAt(t) == &quot;0&quot;; )</span></span><br><span class="line"><span class="string">        ++t;</span></span><br><span class="line"><span class="string">    if (t == n.length)</span></span><br><span class="line"><span class="string">        i = new BigInt;</span></span><br><span class="line"><span class="string">    else &#123;</span></span><br><span class="line"><span class="string">        for (f = n.length - t,</span></span><br><span class="line"><span class="string">        r = f % dpl10,</span></span><br><span class="line"><span class="string">        r == 0 &amp;&amp; (r = dpl10),</span></span><br><span class="line"><span class="string">        i = biFromNumber(Number(n.substr(t, r))),</span></span><br><span class="line"><span class="string">        t += r; t &lt; n.length; )</span></span><br><span class="line"><span class="string">            i = biAdd(biMultiply(i, lr10), biFromNumber(Number(n.substr(t, dpl10)))),</span></span><br><span class="line"><span class="string">            t += dpl10;</span></span><br><span class="line"><span class="string">        i.isNeg = u</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biCopy(n) &#123;</span></span><br><span class="line"><span class="string">    var t = new BigInt(!0);</span></span><br><span class="line"><span class="string">    return t.digits = n.digits.slice(0),</span></span><br><span class="line"><span class="string">    t.isNeg = n.isNeg,</span></span><br><span class="line"><span class="string">    t</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biFromNumber(n) &#123;</span></span><br><span class="line"><span class="string">    var t = new BigInt, i;</span></span><br><span class="line"><span class="string">    for (t.isNeg = n &lt; 0,</span></span><br><span class="line"><span class="string">    n = Math.abs(n),</span></span><br><span class="line"><span class="string">    i = 0; n &gt; 0; )</span></span><br><span class="line"><span class="string">        t.digits[i++] = n &amp; maxDigitVal,</span></span><br><span class="line"><span class="string">        n = Math.floor(n / biRadix);</span></span><br><span class="line"><span class="string">    return t</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function reverseStr(n) &#123;</span></span><br><span class="line"><span class="string">    for (var i = &quot;&quot;, t = n.length - 1; t &gt; -1; --t)</span></span><br><span class="line"><span class="string">        i += n.charAt(t);</span></span><br><span class="line"><span class="string">    return i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biToString(n, t) &#123;</span></span><br><span class="line"><span class="string">    var r = new BigInt, i, u;</span></span><br><span class="line"><span class="string">    for (r.digits[0] = t,</span></span><br><span class="line"><span class="string">    i = biDivideModulo(n, r),</span></span><br><span class="line"><span class="string">    u = hexatrigesimalToChar[i[1].digits[0]]; biCompare(i[0], bigZero) == 1; )</span></span><br><span class="line"><span class="string">        i = biDivideModulo(i[0], r),</span></span><br><span class="line"><span class="string">        digit = i[1].digits[0],</span></span><br><span class="line"><span class="string">        u += hexatrigesimalToChar[i[1].digits[0]];</span></span><br><span class="line"><span class="string">    return (n.isNeg ? &quot;-&quot; : &quot;&quot;) + reverseStr(u)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biToDecimal(n) &#123;</span></span><br><span class="line"><span class="string">    var i = new BigInt, t, r;</span></span><br><span class="line"><span class="string">    for (i.digits[0] = 10,</span></span><br><span class="line"><span class="string">    t = biDivideModulo(n, i),</span></span><br><span class="line"><span class="string">    r = String(t[1].digits[0]); biCompare(t[0], bigZero) == 1; )</span></span><br><span class="line"><span class="string">        t = biDivideModulo(t[0], i),</span></span><br><span class="line"><span class="string">        r += String(t[1].digits[0]);</span></span><br><span class="line"><span class="string">    return (n.isNeg ? &quot;-&quot; : &quot;&quot;) + reverseStr(r)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function digitToHex(n) &#123;</span></span><br><span class="line"><span class="string">    var t = &quot;&quot;;</span></span><br><span class="line"><span class="string">    for (i = 0; i &lt; 4; ++i)</span></span><br><span class="line"><span class="string">        t += hexToChar[n &amp; 15],</span></span><br><span class="line"><span class="string">        n &gt;&gt;&gt;= 4;</span></span><br><span class="line"><span class="string">    return reverseStr(t)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biToHex(n) &#123;</span></span><br><span class="line"><span class="string">    for (var i = &quot;&quot;, r = biHighIndex(n), t = biHighIndex(n); t &gt; -1; --t)</span></span><br><span class="line"><span class="string">        i += digitToHex(n.digits[t]);</span></span><br><span class="line"><span class="string">    return i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function charToHex(n) &#123;</span></span><br><span class="line"><span class="string">    var t = 48</span></span><br><span class="line"><span class="string">      , u = t + 9</span></span><br><span class="line"><span class="string">      , i = 97</span></span><br><span class="line"><span class="string">      , f = i + 25</span></span><br><span class="line"><span class="string">      , r = 65;</span></span><br><span class="line"><span class="string">    return n &gt;= t &amp;&amp; n &lt;= u ? n - t : n &gt;= r &amp;&amp; n &lt;= 90 ? 10 + n - r : n &gt;= i &amp;&amp; n &lt;= f ? 10 + n - i : 0</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function hexToDigit(n) &#123;</span></span><br><span class="line"><span class="string">    for (var t = 0, r = Math.min(n.length, 4), i = 0; i &lt; r; ++i)</span></span><br><span class="line"><span class="string">        t &lt;&lt;= 4,</span></span><br><span class="line"><span class="string">        t |= charToHex(n.charCodeAt(i));</span></span><br><span class="line"><span class="string">    return t</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biFromHex(n) &#123;</span></span><br><span class="line"><span class="string">    for (var i = new BigInt, u = n.length, t = u, r = 0; t &gt; 0; t -= 4,</span></span><br><span class="line"><span class="string">    ++r)</span></span><br><span class="line"><span class="string">        i.digits[r] = hexToDigit(n.substr(Math.max(t - 4, 0), Math.min(t, 4)));</span></span><br><span class="line"><span class="string">    return i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biFromString(n, t) &#123;</span></span><br><span class="line"><span class="string">    var f = n.charAt(0) == &quot;-&quot;, e = f ? 1 : 0, i = new BigInt, r = new BigInt, u;</span></span><br><span class="line"><span class="string">    for (r.digits[0] = 1,</span></span><br><span class="line"><span class="string">    u = n.length - 1; u &gt;= e; u--) &#123;</span></span><br><span class="line"><span class="string">        var o = n.charCodeAt(u)</span></span><br><span class="line"><span class="string">          , s = charToHex(o)</span></span><br><span class="line"><span class="string">          , h = biMultiplyDigit(r, s);</span></span><br><span class="line"><span class="string">        i = biAdd(i, h);</span></span><br><span class="line"><span class="string">        r = biMultiplyDigit(r, t)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return i.isNeg = f,</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biDump(n) &#123;</span></span><br><span class="line"><span class="string">    return (n.isNeg ? &quot;-&quot; : &quot;&quot;) + n.digits.join(&quot; &quot;)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biAdd(n, t) &#123;</span></span><br><span class="line"><span class="string">    var r, u, f, i;</span></span><br><span class="line"><span class="string">    if (n.isNeg != t.isNeg)</span></span><br><span class="line"><span class="string">        t.isNeg = !t.isNeg,</span></span><br><span class="line"><span class="string">        r = biSubtract(n, t),</span></span><br><span class="line"><span class="string">        t.isNeg = !t.isNeg;</span></span><br><span class="line"><span class="string">    else &#123;</span></span><br><span class="line"><span class="string">        for (r = new BigInt,</span></span><br><span class="line"><span class="string">        u = 0,</span></span><br><span class="line"><span class="string">        i = 0; i &lt; n.digits.length; ++i)</span></span><br><span class="line"><span class="string">            f = n.digits[i] + t.digits[i] + u,</span></span><br><span class="line"><span class="string">            r.digits[i] = f % biRadix,</span></span><br><span class="line"><span class="string">            u = Number(f &gt;= biRadix);</span></span><br><span class="line"><span class="string">        r.isNeg = n.isNeg</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return r</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biSubtract(n, t) &#123;</span></span><br><span class="line"><span class="string">    var r, f, u, i;</span></span><br><span class="line"><span class="string">    if (n.isNeg != t.isNeg)</span></span><br><span class="line"><span class="string">        t.isNeg = !t.isNeg,</span></span><br><span class="line"><span class="string">        r = biAdd(n, t),</span></span><br><span class="line"><span class="string">        t.isNeg = !t.isNeg;</span></span><br><span class="line"><span class="string">    else &#123;</span></span><br><span class="line"><span class="string">        for (r = new BigInt,</span></span><br><span class="line"><span class="string">        u = 0,</span></span><br><span class="line"><span class="string">        i = 0; i &lt; n.digits.length; ++i)</span></span><br><span class="line"><span class="string">            f = n.digits[i] - t.digits[i] + u,</span></span><br><span class="line"><span class="string">            r.digits[i] = f % biRadix,</span></span><br><span class="line"><span class="string">            r.digits[i] &lt; 0 &amp;&amp; (r.digits[i] += biRadix),</span></span><br><span class="line"><span class="string">            u = 0 - Number(f &lt; 0);</span></span><br><span class="line"><span class="string">        if (u == -1) &#123;</span></span><br><span class="line"><span class="string">            for (u = 0,</span></span><br><span class="line"><span class="string">            i = 0; i &lt; n.digits.length; ++i)</span></span><br><span class="line"><span class="string">                f = 0 - r.digits[i] + u,</span></span><br><span class="line"><span class="string">                r.digits[i] = f % biRadix,</span></span><br><span class="line"><span class="string">                r.digits[i] &lt; 0 &amp;&amp; (r.digits[i] += biRadix),</span></span><br><span class="line"><span class="string">                u = 0 - Number(f &lt; 0);</span></span><br><span class="line"><span class="string">            r.isNeg = !n.isNeg</span></span><br><span class="line"><span class="string">        &#125; else</span></span><br><span class="line"><span class="string">            r.isNeg = n.isNeg</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return r</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biHighIndex(n) &#123;</span></span><br><span class="line"><span class="string">    for (var t = n.digits.length - 1; t &gt; 0 &amp;&amp; n.digits[t] == 0; )</span></span><br><span class="line"><span class="string">        --t;</span></span><br><span class="line"><span class="string">    return t</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biNumBits(n) &#123;</span></span><br><span class="line"><span class="string">    for (var i = biHighIndex(n), r = n.digits[i], u = (i + 1) * bitsPerDigit, t = u; t &gt; u - bitsPerDigit; --t) &#123;</span></span><br><span class="line"><span class="string">        if ((r &amp; 32768) != 0)</span></span><br><span class="line"><span class="string">            break;</span></span><br><span class="line"><span class="string">        r &lt;&lt;= 1</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return t</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biMultiply(n, t) &#123;</span></span><br><span class="line"><span class="string">    for (var i = new BigInt, u, o = biHighIndex(n), s = biHighIndex(t), e, f, r = 0; r &lt;= s; ++r) &#123;</span></span><br><span class="line"><span class="string">        for (u = 0,</span></span><br><span class="line"><span class="string">        f = r,</span></span><br><span class="line"><span class="string">        j = 0; j &lt;= o; ++j,</span></span><br><span class="line"><span class="string">        ++f)</span></span><br><span class="line"><span class="string">            e = i.digits[f] + n.digits[j] * t.digits[r] + u,</span></span><br><span class="line"><span class="string">            i.digits[f] = e &amp; maxDigitVal,</span></span><br><span class="line"><span class="string">            u = e &gt;&gt;&gt; biRadixBits;</span></span><br><span class="line"><span class="string">        i.digits[r + o + 1] = u</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return i.isNeg = n.isNeg != t.isNeg,</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biMultiplyDigit(n, t) &#123;</span></span><br><span class="line"><span class="string">    var u, r, f, i;</span></span><br><span class="line"><span class="string">    for (result = new BigInt,</span></span><br><span class="line"><span class="string">    u = biHighIndex(n),</span></span><br><span class="line"><span class="string">    r = 0,</span></span><br><span class="line"><span class="string">    i = 0; i &lt;= u; ++i)</span></span><br><span class="line"><span class="string">        f = result.digits[i] + n.digits[i] * t + r,</span></span><br><span class="line"><span class="string">        result.digits[i] = f &amp; maxDigitVal,</span></span><br><span class="line"><span class="string">        r = f &gt;&gt;&gt; biRadixBits;</span></span><br><span class="line"><span class="string">    return result.digits[1 + u] = r,</span></span><br><span class="line"><span class="string">    result</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function arrayCopy(n, t, i, r, u) &#123;</span></span><br><span class="line"><span class="string">    for (var o = Math.min(t + u, n.length), f = t, e = r; f &lt; o; ++f,</span></span><br><span class="line"><span class="string">    ++e)</span></span><br><span class="line"><span class="string">        i[e] = n[f]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biShiftLeft(n, t) &#123;</span></span><br><span class="line"><span class="string">    var e = Math.floor(t / bitsPerDigit), i = new BigInt, u, o, r, f;</span></span><br><span class="line"><span class="string">    for (arrayCopy(n.digits, 0, i.digits, e, i.digits.length - e),</span></span><br><span class="line"><span class="string">    u = t % bitsPerDigit,</span></span><br><span class="line"><span class="string">    o = bitsPerDigit - u,</span></span><br><span class="line"><span class="string">    r = i.digits.length - 1,</span></span><br><span class="line"><span class="string">    f = r - 1; r &gt; 0; --r,</span></span><br><span class="line"><span class="string">    --f)</span></span><br><span class="line"><span class="string">        i.digits[r] = i.digits[r] &lt;&lt; u &amp; maxDigitVal | (i.digits[f] &amp; highBitMasks[u]) &gt;&gt;&gt; o;</span></span><br><span class="line"><span class="string">    return i.digits[0] = i.digits[r] &lt;&lt; u &amp; maxDigitVal,</span></span><br><span class="line"><span class="string">    i.isNeg = n.isNeg,</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biShiftRight(n, t) &#123;</span></span><br><span class="line"><span class="string">    var e = Math.floor(t / bitsPerDigit), i = new BigInt, u, o, r, f;</span></span><br><span class="line"><span class="string">    for (arrayCopy(n.digits, e, i.digits, 0, n.digits.length - e),</span></span><br><span class="line"><span class="string">    u = t % bitsPerDigit,</span></span><br><span class="line"><span class="string">    o = bitsPerDigit - u,</span></span><br><span class="line"><span class="string">    r = 0,</span></span><br><span class="line"><span class="string">    f = r + 1; r &lt; i.digits.length - 1; ++r,</span></span><br><span class="line"><span class="string">    ++f)</span></span><br><span class="line"><span class="string">        i.digits[r] = i.digits[r] &gt;&gt;&gt; u | (i.digits[f] &amp; lowBitMasks[u]) &lt;&lt; o;</span></span><br><span class="line"><span class="string">    return i.digits[i.digits.length - 1] &gt;&gt;&gt;= u,</span></span><br><span class="line"><span class="string">    i.isNeg = n.isNeg,</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biMultiplyByRadixPower(n, t) &#123;</span></span><br><span class="line"><span class="string">    var i = new BigInt;</span></span><br><span class="line"><span class="string">    return arrayCopy(n.digits, 0, i.digits, t, i.digits.length - t),</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biDivideByRadixPower(n, t) &#123;</span></span><br><span class="line"><span class="string">    var i = new BigInt;</span></span><br><span class="line"><span class="string">    return arrayCopy(n.digits, t, i.digits, 0, i.digits.length - t),</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biModuloByRadixPower(n, t) &#123;</span></span><br><span class="line"><span class="string">    var i = new BigInt;</span></span><br><span class="line"><span class="string">    return arrayCopy(n.digits, 0, i.digits, 0, t),</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biCompare(n, t) &#123;</span></span><br><span class="line"><span class="string">    if (n.isNeg != t.isNeg)</span></span><br><span class="line"><span class="string">        return 1 - 2 * Number(n.isNeg);</span></span><br><span class="line"><span class="string">    for (var i = n.digits.length - 1; i &gt;= 0; --i)</span></span><br><span class="line"><span class="string">        if (n.digits[i] != t.digits[i])</span></span><br><span class="line"><span class="string">            return n.isNeg ? 1 - 2 * Number(n.digits[i] &gt; t.digits[i]) : 1 - 2 * Number(n.digits[i] &lt; t.digits[i]);</span></span><br><span class="line"><span class="string">    return 0</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biDivideModulo(n, t) &#123;</span></span><br><span class="line"><span class="string">    var a = biNumBits(n), s = biNumBits(t), v = t.isNeg, r, i, u, e, h, o, f, y, p;</span></span><br><span class="line"><span class="string">    if (a &lt; s)</span></span><br><span class="line"><span class="string">        return n.isNeg ? (r = biCopy(bigOne),</span></span><br><span class="line"><span class="string">        r.isNeg = !t.isNeg,</span></span><br><span class="line"><span class="string">        n.isNeg = !1,</span></span><br><span class="line"><span class="string">        t.isNeg = !1,</span></span><br><span class="line"><span class="string">        i = biSubtract(t, n),</span></span><br><span class="line"><span class="string">        n.isNeg = !0,</span></span><br><span class="line"><span class="string">        t.isNeg = v) : (r = new BigInt,</span></span><br><span class="line"><span class="string">        i = biCopy(n)),</span></span><br><span class="line"><span class="string">        [r, i];</span></span><br><span class="line"><span class="string">    for (r = new BigInt,</span></span><br><span class="line"><span class="string">    i = n,</span></span><br><span class="line"><span class="string">    u = Math.ceil(s / bitsPerDigit) - 1,</span></span><br><span class="line"><span class="string">    e = 0; t.digits[u] &lt; biHalfRadix; )</span></span><br><span class="line"><span class="string">        t = biShiftLeft(t, 1),</span></span><br><span class="line"><span class="string">        ++e,</span></span><br><span class="line"><span class="string">        ++s,</span></span><br><span class="line"><span class="string">        u = Math.ceil(s / bitsPerDigit) - 1;</span></span><br><span class="line"><span class="string">    for (i = biShiftLeft(i, e),</span></span><br><span class="line"><span class="string">    a += e,</span></span><br><span class="line"><span class="string">    h = Math.ceil(a / bitsPerDigit) - 1,</span></span><br><span class="line"><span class="string">    o = biMultiplyByRadixPower(t, h - u); biCompare(i, o) != -1; )</span></span><br><span class="line"><span class="string">        ++r.digits[h - u],</span></span><br><span class="line"><span class="string">        i = biSubtract(i, o);</span></span><br><span class="line"><span class="string">    for (f = h; f &gt; u; --f) &#123;</span></span><br><span class="line"><span class="string">        var c = f &gt;= i.digits.length ? 0 : i.digits[f]</span></span><br><span class="line"><span class="string">          , w = f - 1 &gt;= i.digits.length ? 0 : i.digits[f - 1]</span></span><br><span class="line"><span class="string">          , b = f - 2 &gt;= i.digits.length ? 0 : i.digits[f - 2]</span></span><br><span class="line"><span class="string">          , l = u &gt;= t.digits.length ? 0 : t.digits[u]</span></span><br><span class="line"><span class="string">          , k = u - 1 &gt;= t.digits.length ? 0 : t.digits[u - 1];</span></span><br><span class="line"><span class="string">        for (r.digits[f - u - 1] = c == l ? maxDigitVal : Math.floor((c * biRadix + w) / l),</span></span><br><span class="line"><span class="string">        y = r.digits[f - u - 1] * (l * biRadix + k),</span></span><br><span class="line"><span class="string">        p = c * biRadixSquared + (w * biRadix + b); y &gt; p; )</span></span><br><span class="line"><span class="string">            --r.digits[f - u - 1],</span></span><br><span class="line"><span class="string">            y = r.digits[f - u - 1] * (l * biRadix | k),</span></span><br><span class="line"><span class="string">            p = c * biRadix * biRadix + (w * biRadix + b);</span></span><br><span class="line"><span class="string">        o = biMultiplyByRadixPower(t, f - u - 1);</span></span><br><span class="line"><span class="string">        i = biSubtract(i, biMultiplyDigit(o, r.digits[f - u - 1]));</span></span><br><span class="line"><span class="string">        i.isNeg &amp;&amp; (i = biAdd(i, o),</span></span><br><span class="line"><span class="string">        --r.digits[f - u - 1])</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return i = biShiftRight(i, e),</span></span><br><span class="line"><span class="string">    r.isNeg = n.isNeg != v,</span></span><br><span class="line"><span class="string">    n.isNeg &amp;&amp; (r = v ? biAdd(r, bigOne) : biSubtract(r, bigOne),</span></span><br><span class="line"><span class="string">    t = biShiftRight(t, e),</span></span><br><span class="line"><span class="string">    i = biSubtract(t, i)),</span></span><br><span class="line"><span class="string">    i.digits[0] == 0 &amp;&amp; biHighIndex(i) == 0 &amp;&amp; (i.isNeg = !1),</span></span><br><span class="line"><span class="string">    [r, i]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biDivide(n, t) &#123;</span></span><br><span class="line"><span class="string">    return biDivideModulo(n, t)[0]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biModulo(n, t) &#123;</span></span><br><span class="line"><span class="string">    return biDivideModulo(n, t)[1]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biMultiplyMod(n, t, i) &#123;</span></span><br><span class="line"><span class="string">    return biModulo(biMultiply(n, t), i)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biPow(n, t) &#123;</span></span><br><span class="line"><span class="string">    for (var r = bigOne, i = n; ; ) &#123;</span></span><br><span class="line"><span class="string">        if ((t &amp; 1) != 0 &amp;&amp; (r = biMultiply(r, i)),</span></span><br><span class="line"><span class="string">        t &gt;&gt;= 1,</span></span><br><span class="line"><span class="string">        t == 0)</span></span><br><span class="line"><span class="string">            break;</span></span><br><span class="line"><span class="string">        i = biMultiply(i, i)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return r</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biPowMod(n, t, i) &#123;</span></span><br><span class="line"><span class="string">    for (var f = bigOne, u = n, r = t; ; ) &#123;</span></span><br><span class="line"><span class="string">        if ((r.digits[0] &amp; 1) != 0 &amp;&amp; (f = biMultiplyMod(f, u, i)),</span></span><br><span class="line"><span class="string">        r = biShiftRight(r, 1),</span></span><br><span class="line"><span class="string">        r.digits[0] == 0 &amp;&amp; biHighIndex(r) == 0)</span></span><br><span class="line"><span class="string">            break;</span></span><br><span class="line"><span class="string">        u = biMultiplyMod(u, u, i)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return f</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function BarrettMu(n) &#123;</span></span><br><span class="line"><span class="string">    this.modulus = biCopy(n);</span></span><br><span class="line"><span class="string">    this.k = biHighIndex(this.modulus) + 1;</span></span><br><span class="line"><span class="string">    var t = new BigInt;</span></span><br><span class="line"><span class="string">    t.digits[2 * this.k] = 1;</span></span><br><span class="line"><span class="string">    this.mu = biDivide(t, this.modulus);</span></span><br><span class="line"><span class="string">    this.bkplus1 = new BigInt;</span></span><br><span class="line"><span class="string">    this.bkplus1.digits[this.k + 1] = 1;</span></span><br><span class="line"><span class="string">    this.modulo = BarrettMu_modulo;</span></span><br><span class="line"><span class="string">    this.multiplyMod = BarrettMu_multiplyMod;</span></span><br><span class="line"><span class="string">    this.powMod = BarrettMu_powMod</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function BarrettMu_modulo(n) &#123;</span></span><br><span class="line"><span class="string">    var r = biDivideByRadixPower(n, this.k - 1), u = biMultiply(r, this.mu), f = biDivideByRadixPower(u, this.k + 1), e = biModuloByRadixPower(n, this.k + 1), o = biMultiply(f, this.modulus), s = biModuloByRadixPower(o, this.k + 1), t = biSubtract(e, s), i;</span></span><br><span class="line"><span class="string">    for (t.isNeg &amp;&amp; (t = biAdd(t, this.bkplus1)),</span></span><br><span class="line"><span class="string">    i = biCompare(t, this.modulus) &gt;= 0; i; )</span></span><br><span class="line"><span class="string">        t = biSubtract(t, this.modulus),</span></span><br><span class="line"><span class="string">        i = biCompare(t, this.modulus) &gt;= 0;</span></span><br><span class="line"><span class="string">    return t</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function BarrettMu_multiplyMod(n, t) &#123;</span></span><br><span class="line"><span class="string">    var i = biMultiply(n, t);</span></span><br><span class="line"><span class="string">    return this.modulo(i)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function BarrettMu_powMod(n, t) &#123;</span></span><br><span class="line"><span class="string">    var u = new BigInt, r, i;</span></span><br><span class="line"><span class="string">    for (u.digits[0] = 1,</span></span><br><span class="line"><span class="string">    r = n,</span></span><br><span class="line"><span class="string">    i = t; ; ) &#123;</span></span><br><span class="line"><span class="string">        if ((i.digits[0] &amp; 1) != 0 &amp;&amp; (u = this.multiplyMod(u, r)),</span></span><br><span class="line"><span class="string">        i = biShiftRight(i, 1),</span></span><br><span class="line"><span class="string">        i.digits[0] == 0 &amp;&amp; biHighIndex(i) == 0)</span></span><br><span class="line"><span class="string">            break;</span></span><br><span class="line"><span class="string">        r = this.multiplyMod(r, r)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return u</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function RSAKeyPair(n, t, i) &#123;</span></span><br><span class="line"><span class="string">    this.e = biFromHex(n);</span></span><br><span class="line"><span class="string">    this.d = biFromHex(t);</span></span><br><span class="line"><span class="string">    this.m = biFromHex(i);</span></span><br><span class="line"><span class="string">    this.digitSize = 2 * biHighIndex(this.m) + 2;</span></span><br><span class="line"><span class="string">    this.chunkSize = this.digitSize - 11;</span></span><br><span class="line"><span class="string">    this.radix = 16;</span></span><br><span class="line"><span class="string">    this.barrett = new BarrettMu(this.m)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function twoDigit(n) &#123;</span></span><br><span class="line"><span class="string">    return (n &lt; 10 ? &quot;0&quot; : &quot;&quot;) + String(n)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function encryptedString(n, t) &#123;</span></span><br><span class="line"><span class="string">    var e, o, s, h, c, i, f, u, v, l, y;</span></span><br><span class="line"><span class="string">    if (n.chunkSize &gt; n.digitSize - 11)</span></span><br><span class="line"><span class="string">        return &quot;Error&quot;;</span></span><br><span class="line"><span class="string">    for (var a = [], p = t.length, r = 0; r &lt; p; )</span></span><br><span class="line"><span class="string">        a[r] = t.charCodeAt(r),</span></span><br><span class="line"><span class="string">        r++;</span></span><br><span class="line"><span class="string">    for (e = a.length,</span></span><br><span class="line"><span class="string">    o = &quot;&quot;,</span></span><br><span class="line"><span class="string">    r = 0; r &lt; e; r += n.chunkSize) &#123;</span></span><br><span class="line"><span class="string">        for (c = new BigInt,</span></span><br><span class="line"><span class="string">        s = 0,</span></span><br><span class="line"><span class="string">        f = r + n.chunkSize &gt; e ? e % n.chunkSize : n.chunkSize,</span></span><br><span class="line"><span class="string">        u = [],</span></span><br><span class="line"><span class="string">        i = 0; i &lt; f; i++)</span></span><br><span class="line"><span class="string">            u[i] = a[r + f - 1 - i];</span></span><br><span class="line"><span class="string">        for (u[f] = 0,</span></span><br><span class="line"><span class="string">        v = Math.max(8, n.digitSize - 3 - f),</span></span><br><span class="line"><span class="string">        i = 0; i &lt; v; i++)</span></span><br><span class="line"><span class="string">            u[f + 1 + i] = Math.floor(Math.random() * 254) + 1;</span></span><br><span class="line"><span class="string">        for (u[n.digitSize - 2] = 2,</span></span><br><span class="line"><span class="string">        u[n.digitSize - 1] = 0,</span></span><br><span class="line"><span class="string">        h = 0; h &lt; n.digitSize; ++s)</span></span><br><span class="line"><span class="string">            c.digits[s] = u[h++],</span></span><br><span class="line"><span class="string">            c.digits[s] += u[h++] &lt;&lt; 8;</span></span><br><span class="line"><span class="string">        l = n.barrett.powMod(c, n.e);</span></span><br><span class="line"><span class="string">        y = n.radix == 16 ? biToHex(l) : biToString(l, n.radix);</span></span><br><span class="line"><span class="string">        o += y + &quot; &quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return o.substring(0, o.length - 1)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function decryptedString(n, t) &#123;</span></span><br><span class="line"><span class="string">    for (var e = t.split(&quot; &quot;), i = &quot;&quot;, r, u, o, f = 0; f &lt; e.length; ++f)</span></span><br><span class="line"><span class="string">        for (o = n.radix == 16 ? biFromHex(e[f]) : biFromString(e[f], n.radix),</span></span><br><span class="line"><span class="string">        u = n.barrett.powMod(o, n.d),</span></span><br><span class="line"><span class="string">        r = 0; r &lt;= biHighIndex(u); ++r)</span></span><br><span class="line"><span class="string">            i += String.fromCharCode(u.digits[r] &amp; 255, u.digits[r] &gt;&gt; 8);</span></span><br><span class="line"><span class="string">    return i.charCodeAt(i.length - 1) == 0 &amp;&amp; (i = i.substring(0, i.length - 1)),</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">var biRadixBase = 2, biRadixBits = 16, bitsPerDigit = biRadixBits, biRadix = 65536, biHalfRadix = biRadix &gt;&gt;&gt; 1, biRadixSquared = biRadix * biRadix, maxDigitVal = biRadix - 1, maxInteger = 9999999999999998, maxDigits, ZERO_ARRAY, bigZero, bigOne, dpl10, lr10, hexatrigesimalToChar, hexToChar, highBitMasks, lowBitMasks;</span></span><br><span class="line"><span class="string">setMaxDigits(20);</span></span><br><span class="line"><span class="string">dpl10 = 15;</span></span><br><span class="line"><span class="string">lr10 = biFromNumber(1e15);</span></span><br><span class="line"><span class="string">hexatrigesimalToChar = [&quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;, &quot;o&quot;, &quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;u&quot;, &quot;v&quot;, &quot;w&quot;, &quot;x&quot;, &quot;y&quot;, &quot;z&quot;];</span></span><br><span class="line"><span class="string">hexToChar = [&quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;];</span></span><br><span class="line"><span class="string">highBitMasks = [0, 32768, 49152, 57344, 61440, 63488, 64512, 65024, 65280, 65408, 65472, 65504, 65520, 65528, 65532, 65534, 65535];</span></span><br><span class="line"><span class="string">lowBitMasks = [0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535];</span></span><br><span class="line"><span class="string">setMaxDigits(129);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function getpwd(pwd)&#123;</span></span><br><span class="line"><span class="string">    var key_to_encode = new RSAKeyPair(&quot;010001&quot;,&quot;&quot;,&quot;978C0A92D2173439707498F0944AA476B1B62595877DD6FA87F6E2AC6DCB3D0BF0B82857439C99B5091192BC134889DFF60C562EC54EFBA4FF2F9D55ADBCCEA4A2FBA80CB398ED501280A007C83AF30C3D1A142D6133C63012B90AB26AC60C898FB66EDC3192C3EC4FF66925A64003B72496099F4F09A9FB72A2CF9E4D770C41&quot;);</span></span><br><span class="line"><span class="string">    return encryptedString(key_to_encode, pwd)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">password = <span class="string">&quot;zx******&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_encryption</span>():</span></span><br><span class="line">    encrypted_password = execjs.<span class="built_in">compile</span>(jscode).call(<span class="string">&quot;getpwd&quot;</span>, password)</span><br><span class="line">    <span class="keyword">return</span> encrypted_password</span><br><span class="line"></span><br><span class="line">get_encryption()</span><br></pre></td></tr></table></figure></li><li><p>Fang.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@Description : </span></span><br><span class="line"><span class="string">@File        : Fang</span></span><br><span class="line"><span class="string">@Project     : test</span></span><br><span class="line"><span class="string">@Time        : 2022/3/8 17:57</span></span><br><span class="line"><span class="string">@Author      : LiHouJian</span></span><br><span class="line"><span class="string">@Software    : PyCharm</span></span><br><span class="line"><span class="string">@issue       : https://www1.fang.com/</span></span><br><span class="line"><span class="string">@change      : </span></span><br><span class="line"><span class="string">@reason      : </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> scrapy.utils <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> scrapy.utils.project <span class="keyword">import</span> get_project_settings</span><br><span class="line"><span class="keyword">from</span> pybase.util <span class="keyword">import</span> send_file</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> get_encrypted_pwd</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://passport.fang.com/login.api&quot;</span></span><br><span class="line">headers = &#123;</span><br><span class="line">  <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Pragma&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;sec-ch-ua&#x27;</span>: <span class="string">&#x27;&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;98&quot;, &quot;Google Chrome&quot;;v=&quot;98&quot;&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;*/*&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded; charset=UTF-8&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="string">&#x27;&quot;Windows&quot;&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;https://passport.fang.com&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://passport.fang.com/?backurl=http%3A%2F%2Fmy.fang.com%2FAccount%2FSecuritySet.html%3Fcity%3Dbj&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">  <span class="comment"># &#x27;Cookie&#x27;: &#x27;global_cookie=oe8q9avuq3j9tlztoytsdel5m19l0hvqfxu; __jsluid_s=799d58c84f2792a88df18cb929fdff1c; g_sourcepage=txz_dl%5Egg_pc; __utmc=147393320; __utma=147393320.1290564514.1646728721.1646730819.1646735182.3; __utmz=147393320.1646735182.3.3.utmcsr=www1.fang.com|utmccn=(referral)|utmcmd=referral|utmcct=/; __utmt_t0=1; __utmt_t1=1; city=bj; token=57848a3bb7c4466499b350c5229495b4; unique_cookie=U_oe8q9avuq3j9tlztoytsdel5m19l0hvqfxu*14; __utmb=147393320.4.10.1646735182&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">pay_load = &#123;</span><br><span class="line"><span class="string">&#x27;uid&#x27;</span>: <span class="string">&#x27;18979****&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;pwd&#x27;</span>: get_encrypted_pwd.get_encryption(),</span><br><span class="line"><span class="string">&#x27;Service&#x27;</span>: <span class="string">&#x27;soufun-passport-web&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;AutoLogin&#x27;</span>: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">req = requests.post(url=url, headers=headers, data=pay_load)</span><br><span class="line"><span class="built_in">print</span>(req)</span><br></pre></td></tr></table></figure></li></ul><p>运行效果:</p><p><a href="https://imgtu.com/i/bgRC90"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgRC90.png"                      alt="bgRC90.png"                ></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目标网站: &lt;a class=&quot;link&quot;   href=&quot;https://www1.fang.com/&quot; &gt;https://www1.fang.com/&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;分析&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>字节抖音后端日常实习一面面经(部分)</title>
    <link href="http://example.com/2022/03/08/%E5%AD%97%E8%8A%82%E6%8A%96%E9%9F%B3%E5%90%8E%E7%AB%AF%E6%97%A5%E5%B8%B8%E5%AE%9E%E4%B9%A0%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F(%E9%83%A8%E5%88%86)/"/>
    <id>http://example.com/2022/03/08/%E5%AD%97%E8%8A%82%E6%8A%96%E9%9F%B3%E5%90%8E%E7%AB%AF%E6%97%A5%E5%B8%B8%E5%AE%9E%E4%B9%A0%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F(%E9%83%A8%E5%88%86)/</id>
    <published>2022-03-08T01:20:30.000Z</published>
    <updated>2022-03-08T02:33:11.210Z</updated>
    
    <content type="html"><![CDATA[<h4 id="MySQL的四个特性是什么"><a href="#MySQL的四个特性是什么" class="headerlink" title="MySQL的四个特性是什么?"></a>MySQL的四个特性是什么?</h4><ul><li>原子性</li><li>一致性</li><li>隔离性</li><li>持久性</li></ul><h4 id="MySQL的隔离级别有哪些"><a href="#MySQL的隔离级别有哪些" class="headerlink" title="MySQL的隔离级别有哪些?"></a>MySQL的隔离级别有哪些?</h4><p><a class="link"   href="http://lib.csdn.net/base/mysql" >数据库<i class="fas fa-external-link-alt"></i></a>事务的隔离级别有4个，由低到高依次为Read uncommitted、Read committed、Repeatable read、Serializable，这四个级别可以逐个解决<strong>脏读、不可重复读、幻读</strong>这几类问题</p><p><a href="https://imgtu.com/i/bcV7OP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bcV7OP.png"                      alt="bcV7OP.png"                ></a></p><ul><li><p>Read Uncommitted(读未提交)</p><p>案例讲解:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">公司发工资了，领导把5000元打到singo的账号上，但是该事务并未提交，而singo正好去查看账户，发现工资已经到账，是5000元整，非常高兴。可是不幸的是，领导发现发给singo的工资金额不对，是2000元，于是迅速回滚了事务，修改金额后，将事务提交，最后singo实际的工资只有2000元，singo空欢喜一场。</span><br><span class="line"></span><br><span class="line">出现上述情况，即我们所说的脏读，两个并发的事务，“事务A：领导给singo发工资”、“事务B：singo查询工资账户”，事务B读取了事务A尚未提交的数据。</span><br><span class="line"></span><br><span class="line">当隔离级别设置为Read uncommitted时，就可能出现脏读，甚至不可重复读、幻读，如何避免脏读，请看下一个隔离级别</span><br></pre></td></tr></table></figure></li><li><p>Read Committed(读已提交)</p><p>案例讲解:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">singo拿着工资卡去消费，系统读取到卡里确实有2000元，而此时她的老婆也正好在网上转账，把singo工资卡的2000元转到另一账户，并在singo之前提交了事务，当singo扣款时，系统检查到singo的工资卡已经没有钱，扣款失败，singo十分纳闷，明明卡里有钱，为何......</span><br><span class="line"></span><br><span class="line">出现上述情况，即我们所说的不可重复读，两个并发的事务，“事务A：singo消费”、“事务B：singo的老婆网上转账”，事务A事先读取了数据，事务B紧接了更新了数据，并提交了事务，而事务A再次读取该数据时，数据已经发生了改变。</span><br><span class="line"></span><br><span class="line">当隔离级别设置为Read committed时，避免了脏读，但是可能会造成不可重复读。</span><br><span class="line"></span><br><span class="line">大多数数据库的默认级别就是Read committed，比如SqlServer , Oracle，如何解决不可重复读这一问题，请看下一个隔离级别</span><br></pre></td></tr></table></figure></li><li><p>Repeatable Read(可重复读)</p><p>案例讲解:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">当隔离级别设置为Repeatable read时，可以避免不可重复读。当singo拿着工资卡去消费时，一旦系统开始读取工资卡信息（即事务开始），singo的老婆就不可能对该记录进行修改，也就是singo的老婆不能在此时转账。</span><br><span class="line"></span><br><span class="line">虽然Repeatable read避免了不可重复读，但还有可能出现幻读。</span><br><span class="line"></span><br><span class="line">singo的老婆工作在银行部门，她时常通过银行内部系统查看singo的信用卡消费记录。有一天，她正在查询到singo当月信用卡的总消费金额（select sum(amount) from transaction where month = 本月）为80元，而singo此时正好在外面胡吃海塞后在收银台买单，消费1000元，即新增了一条1000元的消费记录（insert transaction ... ），并提交了事务，随后singo的老婆将singo当月信用卡消费的明细打印到A4纸上，却发现消费总额为1080元，singo的老婆很诧异，以为出现了幻觉，幻读就这样产生了</span><br></pre></td></tr></table></figure></li><li><p>Serializable(串行化)</p><p>案例讲解:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Serializable是最高的事务隔离级别，同时代价也花费最高，性能很低，一般很少使用，在该级别下，事务顺序执行，不仅可以避免脏读、不可重复读，还避免了幻像读</span><br></pre></td></tr></table></figure></li></ul><p>详见: <a class="link"   href="https://juejin.cn/post/6844903805822173198" >https://juejin.cn/post/6844903805822173198<i class="fas fa-external-link-alt"></i></a></p><p>详见: <a class="link"   href="https://www.cnblogs.com/sunpengblog/p/11791475.html" >https://www.cnblogs.com/sunpengblog/p/11791475.html<i class="fas fa-external-link-alt"></i></a></p><h4 id="MySQL的默认隔离级别"><a href="#MySQL的默认隔离级别" class="headerlink" title="MySQL的默认隔离级别?"></a>MySQL的默认隔离级别?</h4><ul><li>REPEATABLE READ(<strong>可重复读</strong>): 事务A在读到一条数据之后，此时事务B对该数据进行了修改并提交，那么事务A再读该数据，读到的还是原来的内容</li></ul><h4 id="为什么MySQL选可重复读作为默认的隔离级别"><a href="#为什么MySQL选可重复读作为默认的隔离级别" class="headerlink" title="为什么MySQL选可重复读作为默认的隔离级别?"></a>为什么MySQL选可重复读作为默认的隔离级别?</h4><p>首先，我们知道有四种隔离级别，但是可串行化和读未提交两种很少使用，而大部分的关系型数据库的默认隔离级别都是RC(读已提交)，但是MySQL的默认隔离级别是RR(可重复读)；</p><p>为什么MySQL要独树一帜的选用RR的隔离级别呢?</p><p>这是一个上古遗留问题:</p><p>在MySQL的早期版本(大概是5.1)中，binlog的默认格式是语句格式。这时候如果启用了RC的隔离级别，binlog记录的顺序可能与实际不一致。所以系统做了一个判断，如果隔离级别为RC，则binlog格式必须要是Mix或者row，<strong>由于当时的默认参数binlog的默认格式是语句格式，所以隔离级别的默认值就设置到了RR</strong></p><h4 id="MySQL的可重复读是如何实现的"><a href="#MySQL的可重复读是如何实现的" class="headerlink" title="MySQL的可重复读是如何实现的?"></a>MySQL的可重复读是如何实现的?</h4><p>InnoDB在每行记录后面保存两个隐藏的列来，分别保存了这个行的创建时间和行的删除时间。这里存储的并不是实际的时间值,而是系统版本号，当数据被修改时，版本号加1，在读取事务开始时，系统会给当前读事务一个版本号，事务会读取版本号&lt;=当前版本号的数据，此时如果其他写事务修改了这条数据，那么这条数据的版本号就会加1，从而比当前读事务的版本号高，读事务自然而然的就读不到更新后的数据了</p><h4 id="读已提交和读未提交的区别"><a href="#读已提交和读未提交的区别" class="headerlink" title="读已提交和读未提交的区别?"></a>读已提交和读未提交的区别?</h4><p>详见上面<code>MySQL的隔离级别有哪些?</code>这个章节</p><h4 id="TCP和UDP的区别"><a href="#TCP和UDP的区别" class="headerlink" title="TCP和UDP的区别?"></a>TCP和UDP的区别?</h4><ul><li><strong>TCP是面向连接的</strong>(如打电话要先拨号，TCP通过三次握手)；<strong>UDP是无连接的</strong>，即发送数据之前不需要先建立连接(不需要握手)</li><li><strong>TCP提供可靠服务</strong>，也就是说，通过TCP传送的数据，无差错，不丢失，不重复，且按序到达；<strong>UDP尽最大努力交付，即不保证可靠交付</strong></li><li><strong>TCP面向字节流</strong>，实际上是TCP把数据看成一连串无结构的字节流；<strong>UDP是面向报文的</strong></li><li><strong>UDP没有拥塞控制</strong>，因此网络出现拥塞不会使源主机的发送速率降低(<strong>对实时应用很有用，如IP电话，实时视频会议等</strong>)</li><li>每一条<strong>TCP连接只能是点到点的</strong>；<strong>UDP支持一对一，一对多，多对一和多对多的交互通信</strong></li><li>TCP首部开销20字节；UDP的首部开销小，只有8个字节</li><li>TCP的逻辑通信信道是全双工的可靠信道，UDP则是不可靠信道</li></ul><h4 id="TCP的拥塞算法的了解"><a href="#TCP的拥塞算法的了解" class="headerlink" title="TCP的拥塞算法的了解?"></a>TCP的拥塞算法的了解?</h4><p>TCP协议有两个比较重要的控制算法，一个是流量控制，另一个就是阻塞控制</p><p>详情见: <a class="link"   href="https://segmentfault.com/a/1190000018360050" >https://segmentfault.com/a/1190000018360050<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;MySQL的四个特性是什么&quot;&gt;&lt;a href=&quot;#MySQL的四个特性是什么&quot; class=&quot;headerlink&quot; title=&quot;MySQL的四个特性是什么?&quot;&gt;&lt;/a&gt;MySQL的四个特性是什么?&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;原子性&lt;/li&gt;
&lt;li&gt;一致性&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于JavaScript的面试准备-3.7</title>
    <link href="http://example.com/2022/03/07/%E5%85%B3%E4%BA%8EJavaScript%E7%9A%84%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-3.7/"/>
    <id>http://example.com/2022/03/07/%E5%85%B3%E4%BA%8EJavaScript%E7%9A%84%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-3.7/</id>
    <published>2022-03-07T09:45:30.000Z</published>
    <updated>2022-03-07T10:43:42.509Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Js中let和const有什么用"><a href="#Js中let和const有什么用" class="headerlink" title="Js中let和const有什么用?"></a>Js中let和const有什么用?</h3><p>在现代js中，let＆const是创建变量的不同方式。 在早期的js中，咱们使用var关键字来创建变量。 let＆const关键字是在ES6版本中引入的，其目的是在js中创建两种不同类型的变量，一种是不可变的，另一种是可变的。</p><p><strong>const</strong>:它用于创建一个不可变变量。不可变变量是指其值在程序的整个生命周期中永不改变的变量。</p><p><strong>let</strong>: let用于创建一个可变变量，可变变量是像var这样的普通变量，可以任意次数地更改</p><h3 id="Js-中的主要有哪几类错误"><a href="#Js-中的主要有哪几类错误" class="headerlink" title="Js 中的主要有哪几类错误?"></a>Js 中的主要有哪几类错误?</h3><p><strong>加载时错误</strong>: 加载web页面时出现的错误(如语法错误)称为加载时错误，它会动态生成错误</p><p><strong>运行时错误</strong>: 由于滥用html语言中的命令而导致的错误</p><p><strong>逻辑错误</strong>: 这些错误是由于对具有不同操作的函数执行了错误的逻辑而导致的</p><h3 id="Js如何通过类别名获取dom元素"><a href="#Js如何通过类别名获取dom元素" class="headerlink" title="Js如何通过类别名获取dom元素"></a>Js如何通过类别名获取dom元素</h3><p>在 JS 中使用document.getElementsByClassName() 方法来获取具有类名的元素</p><h3 id="用纯JS编写一个程序来反转字符串"><a href="#用纯JS编写一个程序来反转字符串" class="headerlink" title="用纯JS编写一个程序来反转字符串"></a>用纯JS编写一个程序来反转字符串</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">str=<span class="string">&quot;jQuery&quot;</span>;</span><br><span class="line">str = str.split(<span class="string">&quot;&quot;</span>)</span><br><span class="line">str = str.reverse()</span><br><span class="line">str = str.join(<span class="string">&quot;&quot;</span>)</span><br><span class="line">alert(str);</span><br></pre></td></tr></table></figure><h3 id="JS中如何将页面重定向到另一个页面"><a href="#JS中如何将页面重定向到另一个页面" class="headerlink" title="JS中如何将页面重定向到另一个页面?"></a>JS中如何将页面重定向到另一个页面?</h3><ul><li><p>第一种</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.href：<span class="built_in">window</span>.location.href =“https:<span class="comment">//www.onlineinterviewquestions.com/”</span></span><br></pre></td></tr></table></figure></li><li><p>第二种</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.replace： <span class="built_in">window</span>.location.replace(<span class="string">&quot; https://www.onlineinterviewquestions.com/;&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul><h3 id="解释下什么是promise"><a href="#解释下什么是promise" class="headerlink" title="解释下什么是promise?"></a>解释下什么是promise?</h3><p>promise是js中的一个对象，用于生成可能在将来产生结果的值。 值可以是已解析的值，也可以是说明为什么未解析该值的原因</p><p>promise可以有三种状态:</p><ul><li>pending: 初始状态，既不是成功也不是失败</li><li>fulfulled: 意味着操作完全成功</li><li>rejected: 意味着操作失败</li></ul><p>一个等待状态的promise对象能够成功后返回一个值，也能失败后带回一个错误当这两种情况发生的时候，处理函数会排队执行通过then方法会被调用</p><h3 id="数组去重的方法有哪些"><a href="#数组去重的方法有哪些" class="headerlink" title="数组去重的方法有哪些?"></a>数组去重的方法有哪些?</h3><ul><li><p>使用set</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uniquearray</span>(<span class="params">array</span>) </span>&#123; </span><br><span class="line"> <span class="keyword">let</span> unique_array= <span class="built_in">Array</span>.from(set(array)) </span><br><span class="line"> <span class="keyword">return</span> unique_array;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用filter</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unque_array</span> (<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> unique_array = arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem, index, self</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> index == self.indexOf(elem);</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> unique_array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(unique_array(array_with_duplicates));</span><br></pre></td></tr></table></figure></li><li><p>for循环</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span> dups_names = [<span class="string">&#x27;Ron&#x27;</span>, <span class="string">&#x27;Pal&#x27;</span>, <span class="string">&#x27;Fred&#x27;</span>, <span class="string">&#x27;Rongo&#x27;</span>, <span class="string">&#x27;Ron&#x27;</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dups_array</span>(<span class="params">dups_names</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">let</span> unique = &#123;&#125;;</span><br><span class="line"> names.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123;</span><br><span class="line">    If (!unique[i]) &#123;</span><br><span class="line">      unique[i] = <span class="literal">true</span>;    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Object</span>.keys(unique);&#125;   <span class="comment">// Ron, Pal, Fred, Rongo</span></span><br><span class="line">Dups_array(names);</span><br></pre></td></tr></table></figure></li></ul><h3 id="undefined，null-和-undeclared-有什么区别"><a href="#undefined，null-和-undeclared-有什么区别" class="headerlink" title="undefined，null 和 undeclared 有什么区别?"></a>undefined，null 和 undeclared 有什么区别?</h3><ul><li>null表示”没有对象”，即该处不应该有值，转为数值时为0，典型的用法是:<ul><li>作为函数的参数，表示该函数的参数不是对象</li><li>作为对象原型链的终点</li></ul></li><li>undefined表示”缺少值”，就是此处应该有一个值，但是还没有定义，转为数值时为NaN。典型用法是:<ul><li>变量被声明了，但没有赋值时，就等于undefined</li><li>调用函数时，应该提供的参数没有提供，该参数等于undefined</li><li>对象没有赋值的属性，该属性的值为undefined</li><li>函数没有返回值时，默认返回undefined</li></ul></li><li>undeclared：js语法错误，没有申明直接使用，js无法找到对应的上下文</li></ul><h3 id="Js的基本数据类型"><a href="#Js的基本数据类型" class="headerlink" title="Js的基本数据类型"></a>Js的基本数据类型</h3><p>Undefined、Null、Boolean、Number、Symbol 和 String</p><h3 id="如何给对象添加新属性"><a href="#如何给对象添加新属性" class="headerlink" title="如何给对象添加新属性"></a>如何给对象添加新属性</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">person.country= “India”;</span><br></pre></td></tr></table></figure><h3 id="JS中的深拷贝与浅拷贝的区别"><a href="#JS中的深拷贝与浅拷贝的区别" class="headerlink" title="JS中的深拷贝与浅拷贝的区别?"></a>JS中的深拷贝与浅拷贝的区别?</h3><p>深拷贝递归地复制新对象中的所有值或属性，而拷贝只复制引用</p><p>在深拷贝中，<strong>新对象中的更改不会影响原始对象</strong>，而在浅拷贝中，<strong>新对象中的更改，原始对象中也会跟着改</strong></p><p>在深拷贝中，原始对象不与新对象共享相同的属性，而在浅拷贝中，它们具有相同的属性</p><h3 id="如何在JavaScript中每x秒调用一个函数"><a href="#如何在JavaScript中每x秒调用一个函数" class="headerlink" title="如何在JavaScript中每x秒调用一个函数?"></a>如何在JavaScript中每x秒调用一个函数?</h3><p>在JS中，咱们使用函数 setInterval() 在每x秒内调用函数:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123; alert(<span class="string">&quot;Hello&quot;</span>); &#125;, <span class="number">3000</span>);</span><br></pre></td></tr></table></figure><h3 id="解释一下JS的展开操作符"><a href="#解释一下JS的展开操作符" class="headerlink" title="解释一下JS的展开操作符?"></a>解释一下JS的展开操作符?</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mid = [<span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newarray = [<span class="number">1</span>, <span class="number">2</span>, ...mid, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(newarray);</span><br><span class="line"></span><br><span class="line"><span class="comment">// [1, 2, 3, 4, 5, 6]</span></span><br></pre></td></tr></table></figure><h3 id="JS中的宿主对象与原生对象有何不同"><a href="#JS中的宿主对象与原生对象有何不同" class="headerlink" title="JS中的宿主对象与原生对象有何不同?"></a>JS中的宿主对象与原生对象有何不同?</h3><p><strong>宿主对象</strong>:这些是运行环境提供的对象。这意味着它们在不同的环境下是不同的。例如，浏览器包含像windows这样的对象，但是<strong>Node.js</strong>环境提供像Node List这样的对象</p><p><strong>原生对象</strong>:这些是JS中的内置对象。它们也被称为全局对象，因为如果使用JS，内置对象不受是运行环境影响</p><h3 id="JS中-和-区别是什么"><a href="#JS中-和-区别是什么" class="headerlink" title="JS中==和===区别是什么?"></a>JS中==和===区别是什么?</h3><h3 id="Js中的匿名函数是什么"><a href="#Js中的匿名函数是什么" class="headerlink" title="Js中的匿名函数是什么?"></a>Js中的匿名函数是什么?</h3><p>匿名函数：就是没有函数名的函数，如:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>)</span>&#123;</span><br><span class="line">    alert(x + y);  </span><br><span class="line">&#125;)(<span class="number">2</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><p>这里创建了一个匿名函数(在第一个括号内)，<strong>第二个括号用于调用该匿名函数，并传入参数</strong></p><h3 id="解释下什么是箭头函数"><a href="#解释下什么是箭头函数" class="headerlink" title="解释下什么是箭头函数?"></a>解释下什么是箭头函数?</h3><p>箭头函数是在es6或更高版本中编写函数表达式的简明方法。箭头函数不能用作构造函数，也不支持this，arguments，super或new.target关键字，它最适合非方法函数。</p><p>详见: <a class="link"   href="https://www.cnblogs.com/liyuanhong/articles/10139214.html" >https://www.cnblogs.com/liyuanhong/articles/10139214.html<i class="fas fa-external-link-alt"></i></a></p><h3 id="JS中有哪些不同类型的弹出框可用"><a href="#JS中有哪些不同类型的弹出框可用" class="headerlink" title="JS中有哪些不同类型的弹出框可用?"></a>JS中有哪些不同类型的弹出框可用?</h3><ul><li>Alert</li><li>Confirm</li><li>Prompt</li></ul><h3 id="如何将-JS-日期转换为ISO标准"><a href="#如何将-JS-日期转换为ISO标准" class="headerlink" title="如何将 JS 日期转换为ISO标准?"></a>如何将 JS 日期转换为ISO标准?</h3><p><strong>toISOString()</strong> 方法用于将js日期转换为ISO标准。 它使用ISO标准将js Date对象转换为字符串，如:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> n = date.toISOString();</span><br><span class="line"><span class="built_in">console</span>.log(n);</span><br><span class="line"><span class="comment">// YYYY-MM-DDTHH:mm:ss.sssZ</span></span><br></pre></td></tr></table></figure><h3 id="如何在JS中克隆对象"><a href="#如何在JS中克隆对象" class="headerlink" title="如何在JS中克隆对象?"></a>如何在JS中克隆对象?</h3><p>Object.assign() 方法用于在JS中克隆对象。如:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = &#123;<span class="attr">myProp</span>: <span class="string">&quot;value&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> y = <span class="built_in">Object</span>.assign(&#123;&#125;, x); </span><br></pre></td></tr></table></figure><h3 id="var和let的区别"><a href="#var和let的区别" class="headerlink" title="var和let的区别"></a>var和let的区别</h3><p>var是函数作用域，而let是块作用域。在函数内声明了var，整个函数内都是有效的，在for循环内定义了一个var变量，实际上其在for循环以外也是可以访问的，而let由于是块作用域，所以如果在块作用域内（for循环内）定义的变量，在其外面是不可被访问的</p><h3 id="解释一下-“use-strict”"><a href="#解释一下-“use-strict”" class="headerlink" title="解释一下 “use strict”?"></a>解释一下 “use strict”?</h3><p>使用“use strict”指令的目的是强制执行严格模式下的代码。 在严格模式下，咱们不能在不声明变量的情况下使用变量</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Js中let和const有什么用&quot;&gt;&lt;a href=&quot;#Js中let和const有什么用&quot; class=&quot;headerlink&quot; title=&quot;Js中let和const有什么用?&quot;&gt;&lt;/a&gt;Js中let和const有什么用?&lt;/h3&gt;&lt;p&gt;在现代js中，let＆c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>菜鸟教程上的JavaScript测验</title>
    <link href="http://example.com/2022/03/07/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B%E4%B8%8A%E7%9A%84JavaScript%E6%B5%8B%E9%AA%8C/"/>
    <id>http://example.com/2022/03/07/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B%E4%B8%8A%E7%9A%84JavaScript%E6%B5%8B%E9%AA%8C/</id>
    <published>2022-03-07T09:17:30.000Z</published>
    <updated>2022-03-07T09:38:41.003Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://imgtu.com/i/by0Y4J"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/by0Y4J.png"                      alt="by0Y4J.png"                ></a></p><p><a href="https://imgtu.com/i/by0U3R"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/by0U3R.png"                      alt="by0U3R.png"                ></a></p><p><a href="https://imgtu.com/i/by00u6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/by00u6.png"                      alt="by00u6.png"                ></a></p><p><a href="https://imgtu.com/i/by0gCd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/by0gCd.png"                      alt="by0gCd.png"                ></a></p><p><a href="https://imgtu.com/i/byBF2R"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byBF2R.png"                      alt="byBF2R.png"                ></a></p><p>关于上题的解释: <a class="link"   href="https://www.cnblogs.com/wymbk/p/5775549.html" >https://www.cnblogs.com/wymbk/p/5775549.html<i class="fas fa-external-link-alt"></i></a></p><p><a href="https://imgtu.com/i/byBtZ8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byBtZ8.png"                      alt="byBtZ8.png"                ></a></p><p><a href="https://imgtu.com/i/byB0Rs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byB0Rs.png"                      alt="byB0Rs.png"                ></a></p><p><a href="https://imgtu.com/i/byB2oF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byB2oF.png"                      alt="byB2oF.png"                ></a></p><p><a href="https://imgtu.com/i/byBIQ1"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byBIQ1.png"                      alt="byBIQ1.png"                ></a></p><p><a href="https://imgtu.com/i/byBbdO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byBbdO.png"                      alt="byBbdO.png"                ></a></p><p><a href="https://imgtu.com/i/byDPw8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byDPw8.png"                      alt="byDPw8.png"                ></a></p><p><a href="https://imgtu.com/i/byDAYQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byDAYQ.png"                      alt="byDAYQ.png"                ></a></p><p><a href="https://imgtu.com/i/byDnO0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byDnO0.png"                      alt="byDnO0.png"                ></a></p><p><a href="https://imgtu.com/i/byDQTU"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byDQTU.png"                      alt="byDQTU.png"                ></a></p><p><a href="https://imgtu.com/i/byDOBV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byDOBV.png"                      alt="byDOBV.png"                ></a></p><p><a href="https://imgtu.com/i/byrZND"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byrZND.png"                      alt="byrZND.png"                ></a></p><p><a href="https://imgtu.com/i/bysEMn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/bysEMn.png"                      alt="bysEMn.png"                ></a></p><p><a href="https://imgtu.com/i/byyCex"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byyCex.png"                      alt="byyCex.png"                ></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://imgtu.com/i/by0Y4J&quot;&gt;&lt;img  
                     lazyload
                     src=&quot;/images/loading.svg&quot;
                </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于MySQL的面试准备-3.7</title>
    <link href="http://example.com/2022/03/07/%E5%85%B3%E4%BA%8EMySQL%E7%9A%84%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-3.7/"/>
    <id>http://example.com/2022/03/07/%E5%85%B3%E4%BA%8EMySQL%E7%9A%84%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-3.7/</id>
    <published>2022-03-07T02:08:30.000Z</published>
    <updated>2022-03-08T01:16:30.438Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于MySQL"><a href="#关于MySQL" class="headerlink" title="关于MySQL"></a>关于MySQL</h2><h3 id="连接MySQL的指令"><a href="#连接MySQL的指令" class="headerlink" title="连接MySQL的指令"></a>连接MySQL的指令</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>h <span class="operator">-</span>u <span class="operator">-</span>p</span><br></pre></td></tr></table></figure><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><ul><li><p>新建用户:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>设置与更改用户密码:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span> <span class="operator">=</span> PASSWORD(<span class="string">&#x27;newpassword&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>权限管理:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> name;  <span class="operator">/</span><span class="operator">/</span>查看name用户权限</span><br><span class="line"></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> testdb <span class="keyword">to</span> dba@<span class="string">&#x27;localhost&#x27;</span>　<span class="operator">/</span><span class="operator">/</span>给dba用户testdb数据库的所有权限</span><br></pre></td></tr></table></figure></li></ul><h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><ul><li><p>查看数据库:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> DATABASES;</span><br></pre></td></tr></table></figure></li><li><p>创建数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE db_name;　　<span class="operator">/</span><span class="operator">/</span>db_name为数据库名</span><br></pre></td></tr></table></figure></li><li><p>使用数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE db_name;</span><br></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE db_name;</span><br></pre></td></tr></table></figure></li></ul><h3 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h3><ul><li><p>创建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name(</span><br><span class="line">    id TINYINT UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,  <span class="operator">/</span><span class="operator">/</span>id值，无符号、非空、递增</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">60</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    score TINYINT UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(id)  <span class="operator">/</span><span class="operator">/</span> 把id字段作为主键</span><br><span class="line">    )ENGINE<span class="operator">=</span>InnoDB  <span class="operator">/</span><span class="operator">/</span> 设置表的存储引擎，一般常用InnoDB和MyISAM；InnoDB可靠，支持事务；MyISAM高效不支持全文检索</span><br><span class="line">    <span class="keyword">DEFAULT</span> charset<span class="operator">=</span>utf8;  <span class="operator">/</span><span class="operator">/</span> 设置默认的编码，防止数据库中文乱码</span><br></pre></td></tr></table></figure><p>如果有条件的创建数据表还可以使用:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> tb_name(...</span><br></pre></td></tr></table></figure></li><li><p>复制表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_name2 <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_name;</span><br></pre></td></tr></table></figure></li><li><p>或者部分复制</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_name2 <span class="keyword">SELECT</span> id,name <span class="keyword">FROM</span> tb_name;</span><br></pre></td></tr></table></figure></li><li><p>创建临时表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> TEMPORARY <span class="keyword">TABLE</span> tb_name  <span class="operator">/</span><span class="operator">/</span> 这里和创建普通表一样</span><br></pre></td></tr></table></figure></li><li><p>查看数据库中可用的表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> TABLES;</span><br></pre></td></tr></table></figure></li><li><p>查看表的结构</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DESCRIBE</span> tb_name;</span><br></pre></td></tr></table></figure><p>也可以使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> COLUMNS <span class="keyword">in</span> tb_name;  <span class="operator">/</span><span class="operator">/</span> <span class="keyword">from</span>也可以</span><br></pre></td></tr></table></figure></li><li><p>删除表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tb_name;</span><br></pre></td></tr></table></figure></li><li><p>表重命名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RENAME <span class="keyword">TABLE</span> name_old <span class="keyword">TO</span> name_new;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> name_old RENAME name_new;</span><br></pre></td></tr></table></figure></li></ul><h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><ul><li><p>更改表结构</p><p>示例如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_name <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> address <span class="type">varchar</span>(<span class="number">80</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_name <span class="keyword">DROP</span> address;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_name CHANGE score score <span class="type">SMALLINT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><ul><li><p>插入数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_name(id,name,score)<span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">140</span>),(<span class="keyword">NULL</span>,<span class="string">&#x27;张四&#x27;</span>,<span class="number">178</span>),(<span class="keyword">NULL</span>,<span class="string">&#x27;张五&#x27;</span>,<span class="number">134</span>);</span><br></pre></td></tr></table></figure><p>这里的插入多条数据直接在后边加上逗号，直接写入插入的数据即可；主键id是自增的列，可以不用写</p></li><li><p>插入检索出来的数据:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_name(name,score) <span class="keyword">SELECT</span> name,score <span class="keyword">FROM</span> tb_name2;</span><br></pre></td></tr></table></figure></li></ul><h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><ul><li><p>指定更新数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE tb_name <span class="keyword">SET</span> score<span class="operator">=</span><span class="number">189</span> <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><ul><li><p>删除数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> tb_name <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">3</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="条件控制"><a href="#条件控制" class="headerlink" title="条件控制"></a>条件控制</h3><ul><li><p>WHERE 语句:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_name <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">3</span>;</span><br></pre></td></tr></table></figure></li><li><p>HAVING 语句:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_name <span class="keyword">GROUP</span> <span class="keyword">BY</span> score <span class="keyword">HAVING</span> <span class="built_in">count</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">2</span></span><br></pre></td></tr></table></figure><p>关于having语句的使用: <a class="link"   href="https://www.cnblogs.com/sanzashu/p/11011227.html%EF%BC%8Chttps://www.runoob.com/sql/sql-having.html" >https://www.cnblogs.com/sanzashu/p/11011227.html，https://www.runoob.com/sql/sql-having.html<i class="fas fa-external-link-alt"></i></a></p></li><li><p>相关条件控制符:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">=</span>、<span class="operator">&gt;</span>、<span class="operator">&lt;</span>、<span class="operator">&lt;&gt;</span>、<span class="keyword">IN</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3.</span>.....)、<span class="keyword">BETWEEN</span> a <span class="keyword">AND</span> b、<span class="keyword">NOT</span>、<span class="keyword">AND</span> 、<span class="keyword">OR</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="MySQL正则表达式操作"><a href="#MySQL正则表达式操作" class="headerlink" title="MySQL正则表达式操作"></a>MySQL正则表达式操作</h3><ul><li><p>Mysql支持REGEXP的正则表达式:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_name <span class="keyword">WHERE</span> name REGEXP <span class="string">&#x27;^[A-D]&#x27;</span>   <span class="operator">/</span><span class="operator">/</span> 找出以A<span class="operator">-</span>D 为开头的name</span><br></pre></td></tr></table></figure></li><li><p>要注意特殊字符需要转义</p></li></ul><h3 id="MySQL的一些函数"><a href="#MySQL的一些函数" class="headerlink" title="MySQL的一些函数"></a>MySQL的一些函数</h3><ul><li><p>字符串连接–CONTAT()</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CONCAT(name,<span class="string">&#x27;=&gt;&#x27;</span>,score) <span class="keyword">FROM</span> tb_name</span><br></pre></td></tr></table></figure></li><li><p>数学函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AVG、SUM、MAX、MIN、COUNT</span><br></pre></td></tr></table></figure></li><li><p>文本处理函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRIM、LOCATE、UPPER、LOWER、SUBSTRING</span><br></pre></td></tr></table></figure></li><li><p>运算符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span>、<span class="operator">-</span>、<span class="operator">*</span>、\</span><br></pre></td></tr></table></figure></li><li><p>时间函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">DATE</span>()、CURTIME()、<span class="keyword">DAY</span>()、<span class="keyword">YEAR</span>()、NOW().....</span><br></pre></td></tr></table></figure></li></ul><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><ul><li><p>分组查询可以按照指定的列进行分组:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> tb_name <span class="keyword">GROUP</span> <span class="keyword">BY</span> score <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>关于GROUP BY: <a class="link"   href="https://www.w3school.com.cn/sql/sql_groupby.asp" >https://www.w3school.com.cn/sql/sql_groupby.asp<i class="fas fa-external-link-alt"></i></a></p></li><li><p>条件使用having</p></li><li><p>ORDER BY排序:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">DESC</span><span class="operator">|</span><span class="keyword">ASC</span>　　　　<span class="operator">=</span><span class="operator">&gt;</span>按数据的降序和升序排列</span><br></pre></td></tr></table></figure></li></ul><h3 id="union规则"><a href="#union规则" class="headerlink" title="union规则"></a>union规则</h3><ul><li><p>可以执行两个语句(可以去除重复行)</p><p>详细参见: <a class="link"   href="https://www.cnblogs.com/ghostwu/p/8544333.html" >https://www.cnblogs.com/ghostwu/p/8544333.html<i class="fas fa-external-link-alt"></i></a></p></li></ul><h2 id="一些面试题"><a href="#一些面试题" class="headerlink" title="一些面试题"></a>一些面试题</h2><p>为什么互联网公司一般选择MySQL而不是Oracle?</p><p><strong>免费、流行、够用</strong></p><p>MySQL有哪些数据类型?</p><p><strong>MySQL支持多种类型，大致可以分为三类: 数值、日期/时间和字符串(字符)类型</strong></p><p>MySQL中varchar与char的区别?</p><p><strong>char是一种固定长度的类型，varchar则是一种可变长度的类型</strong></p><p>varchar(50)中的50代表的含义?</p><p><strong>varchar(50)中50的含义是最多存放50个字符，varchar(50)和varchar(200)存储<code>hello</code>所占空间一样，但后者在排序时会消耗更多内存，因为order by col采用fixe_length计算col长度，所以实际场景下，选择合适的varchar长度还是有必要的</strong></p><p>int(11)中的11代表什么含义?</p><p><strong>int(11)中的11，不影响字段存储的范围，只影响展示效果，比如，int(3)和int(6)，都可以显示6位以上的整数，但是，当数字不足3位或6位时，前面会用0补齐</strong></p><p>金钱相关的数据，应选择什么数据类型?</p><ul><li>方式一: 使用int或者bigint类型，如果需要存储到分的维度，需要 *100 进行放大</li><li>使用decimal类型，避免精度丢失</li></ul><p>一张表，里面有ID自增主键，当insert了17条记录之后，删除了第15、16、17条记录，然后把MySQL重启，再insert一条记录，这条记录的ID是18还是15?</p><p>一般情况下，我们创建的表是InnoDB存储引擎类型，如果新增一条记录(在不重启MySQL的情况下)，这条记录的ID是18；但是如果像以上情况，先删除然后重启再插入一条记录的话，那这条记录的ID是15；因为<strong>InnoDB存储引擎只会把自增主键的最大ID记录到内存中，所以重启数据库或对表进行optimize操作，都会使最大ID丢失</strong></p><p>表中有大字段X(例如: text类型，文本类型)，且字段X不会经常更新，主要以读为主，请问你是选择拆成子表，还是继续放在一起?，答出你这样选择的理由</p><ul><li><p>拆带来的问题: 连接消耗 + 存储拆分空间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果能容忍拆分带来的空间问题，拆的话最好和经常要查询的表的主键在物理结构上放置在一起减少连接消耗,使用一个文本列再加上一个全文索引来尽量抵消连接消耗</span><br></pre></td></tr></table></figure></li><li><p>不拆可能带来的问题: 查询性能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果能容忍不拆分带来的查询性能损失的话，上面的方案在某个极致条件下肯定会出现问题，那么不拆就是最好的选择</span><br></pre></td></tr></table></figure></li></ul><p>MySQL有哪些存储引擎?</p><ul><li><p><strong>InnoDB</strong></p></li><li><p><strong>MyISAM</strong></p></li><li><p><strong>MRG_MYISAM</strong></p></li><li><p><strong>MEMORY</strong></p></li><li><p><strong>BLACKHOLE</strong></p><p>目前<strong>MySQL默认的存储引擎是InnoDB</strong>，并且<strong>也是最主流的选择</strong>，主要原因是:</p></li><li><p>支持事物</p></li><li><p>支持行级锁和表级锁，能支持更多的并发量</p></li><li><p>查询不加锁，完全不影响查询</p></li><li><p>支持奔溃后恢复</p></li></ul><p><strong>在MySQL5.1以及之前的版本，默认的存储引擎是MyISAM</strong>，但是目前已经不再更新，且它有几个关键的缺点:</p><ul><li>不支持事物</li><li>使用表级锁，如果数据量大，一个插入操作锁定表后，其他请求都将阻塞</li></ul><p>请说说InnoDB的4大特性</p><ul><li>插入缓冲(insert buffer)</li><li>二次写(dobule writer)</li><li>自适应哈希索引(ah)</li><li>预读(read ahead)</li></ul><p>为什么select count(*) from table在innoDB比MyISAM慢?</p><p>对于select count(*) from table语句，在没有where条件的情况下，InnoDB比MyISAM可能会慢很多，尤其在大表的情况下，<strong>因为InnoDB是去实时统计结果，会全表扫描</strong>；而<strong>MyISAM内部维持了一个计数器，预存了结果</strong>，所以直接返回即可</p><p><strong>重点</strong>–什么是索引?</p><p>索引，<strong>类似于书籍的目录</strong>，想找到一本书的某个特定主题，需要先找到书的目录，定位对应的页码；MySQL中存储引擎使用类似的方式进行查询，先去索引中查找对应的值，然后根据匹配的索引找到对应的数据行</p><ul><li><p>什么是索引?</p><p>见这里: <a class="link"   href="https://blog.csdn.net/bjweimengshu/article/details/105108585" >https://blog.csdn.net/bjweimengshu/article/details/105108585<i class="fas fa-external-link-alt"></i></a></p></li><li><p>索引有什么好处?</p><ul><li><strong>提高数据的检索速度</strong>，降低数据库IO成本</li><li>降低数据排序成本，降低CPU消耗</li></ul></li><li><p>索引有什么坏处?</p><ul><li>占用存储空间: 索引实际上也是一张表，记录了主键与索引字段，一般以索文件的形式存储在磁盘上</li><li>降低更新表的速度: 表的数据发生了变化，对应索引也需要一起变更，从而降低了更新速度；否则索引指向的物理数据可能不对，这也是索引失效的原因之一</li></ul></li><li><p>索引的使用场景?</p><ul><li>对非常小的表，大部分情况全表扫描效率更高</li><li>对中大型表，索引非常有效</li><li>对特大型表，建立和使用索引的代价随着增长，可以使用分区技术来解决</li></ul></li><li><p>索引的类型?</p><ul><li>普通索引: 最基本的索引，没有任何约束</li><li>唯一索引: 与普通索引类似，但具有唯一性约束</li><li>主键索引: 特殊的唯一索引，不允许有空值</li><li>复合索引: 将多个列组合在一起创建索引，可以覆盖多个列</li><li>外键索引: 只有InnoDB类型的表才可以使用外建索引，保证数据的一致性、完整性和实现级联操作</li><li>全文索引: MySQL 自带的全文索引只能用于 InnoDB、MyISAM ，并且只能对英文进行全文检索，一般使用全文索引引擎</li></ul></li><li><p>索引的使用注意事项</p><ul><li>应尽量避免在 <code>WHERE</code> 子句中使用 <code>!=</code> 或 <code>&lt;&gt;</code> 操作符，否则将引擎放弃使用索引而进行全表扫描。优化器将无法通过索引来确定将要命中的行数,因此需要搜索该表的所有行</li><li>应尽量避免在 <code>WHERE</code> 子句中使用 <code>OR</code> 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：<code>SELECT id FROM t WHERE num = 10 OR num = 20</code></li><li>应尽量避免在 <code>WHERE</code> 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描</li><li>应尽量避免在 <code>WHERE</code> 子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描</li><li>不要在 <code>WHERE</code> 子句中的 <code>=</code> 左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引</li><li><code>LIKE</code> 查询，<code>%</code> 不能在前，因为无法使用索引。如果需要模糊匹配，可以使用全文索引</li></ul></li></ul><h3 id="内连接、左连接、右连接以及全连接查询"><a href="#内连接、左连接、右连接以及全连接查询" class="headerlink" title="内连接、左连接、右连接以及全连接查询"></a>内连接、左连接、右连接以及全连接查询</h3><h4 id="内连接查询"><a href="#内连接查询" class="headerlink" title="内连接查询"></a>内连接查询</h4><p>关键字: <strong>inner join…on</strong></p><p>语句: </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> a_table a <span class="keyword">inner</span> <span class="keyword">join</span> b_table b <span class="keyword">on</span> a.a_id <span class="operator">=</span> b.b_id;</span><br></pre></td></tr></table></figure><p>说明: 组合两个表中的记录，返回关联字段相符的记录，<strong>也就是返回两个表的交集(阴影)部分</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173658980.3n71eo8cs860.webp"                      alt="20181005173658980"                ></p><p>案例: 在boy表和girl表中查出两表hid字段一致的姓名(gname，bname),boy表和girl 表如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173111241.1gg9di3elj1c.webp"                      alt="20181005173111241"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173203764.2a1cfu2vx6zo.webp"                      alt="20181005173203764"                ></p><p>采用内连接查询方式，SQL语句如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> boy.hid,boy.bname,girl.gname <span class="keyword">FROM</span> boy <span class="keyword">INNER</span> <span class="keyword">JOIN</span> girl <span class="keyword">ON</span> girl.hid <span class="operator">=</span> boy.hid;</span><br></pre></td></tr></table></figure><p>查询结果如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173326725.3uo8mmub3b40.webp"                      alt="20181005173326725"                ></p><h4 id="左连接查询"><a href="#左连接查询" class="headerlink" title="左连接查询"></a>左连接查询</h4><p>关键字: <strong>left join on / left outer join on</strong></p><p>语句:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  <span class="operator">*</span> <span class="keyword">FROM</span> a_table a <span class="keyword">left</span> <span class="keyword">join</span> b_table b <span class="keyword">ON</span> a.a_id <span class="operator">=</span> b.b_id;</span><br></pre></td></tr></table></figure><p>说明: <strong>left join 是left outer join的简写，它的全称是左外连接，是外连接中的一种。 左(外)连接，左表(a_table)的记录将会全部表示出来，而右表(b_table)只会显示符合搜索条件的记录。右表记录不足的地方均为NULL</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005211357263.5d61bb9exo00.webp"                      alt="20181005211357263"                ></p><p>案例: 在boy表和girl 表中左连接查询，boy表和girl 表如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/1.3if7wcwes3y0.webp"                      alt="1"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/2.eyt7d9l08rc.webp"                      alt="2"                ></p><p>采用左连接查询方式，SQL语句如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> boy.hid,boy.bname,girl.gname <span class="keyword">FROM</span> boy <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> girl <span class="keyword">ON</span> girl.hid <span class="operator">=</span> boy.hid;</span><br></pre></td></tr></table></figure><p>查询结果如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005213127795.4005998ijic0.webp"                      alt="20181005213127795"                ></p><h4 id="右连接查询"><a href="#右连接查询" class="headerlink" title="右连接查询"></a>右连接查询</h4><p>关键字: <strong>right join on / right outer join on</strong></p><p>语句: <strong>SELECT * FROM a_table a right outer join b_table b on a.a_id = b.b_id;</strong></p><p>说明: <strong>right join是right outer join的简写，它的全称是右外连接，是外连接中的一种。与左(外)连接相反，右(外)连接，左表(a_table)只会显示符合搜索条件的记录，而右表(b_table)的记录将会全部表示出来。左表记录不足的地方均为NULL</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005213457811.4lswjrs1o5m0.webp"                      alt="20181005213457811"                ></p><p>案例解释: 在boy表和girl表中右连接查询，boy表和girl 表如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173111241-(2).4vok0qpf0ik0.webp"                      alt="20181005173111241-(2)"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173203764-(2).1zk4of1jk48w.webp"                      alt="20181005173203764-(2)"                ></p><p>采用内连接查询方式:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> boy.hid,boy.bname,girl.gname <span class="keyword">FROM</span> boy <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> girl <span class="keyword">ON</span> girl.hid <span class="operator">=</span> boy.hid;</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005213611391.53bdafp885g0.webp"                      alt="20181005213611391"                ></p><h4 id="全连接查询"><a href="#全连接查询" class="headerlink" title="全连接查询"></a>全连接查询</h4><p>关键字: <strong>union /union all</strong></p><p>语句: (select colum1,colum2…columN from tableA ) union (select colum1,colum2…columN from tableB );</p><p>或 (select colum1,colum2…columN from tableA ) union all (select colum1,colum2…columN from tableB );</p><p>使用union语句注意事项:</p><ol><li><p><strong>通过union连接的SQL它们分别单独取出的列数必须相同</strong></p></li><li><p><strong>用union 时，完全相等的行，将会被合并，union all则不会，由于合并比较耗时，一般不直接使用 union 进行合并，而是通常采用union all 进行合并</strong></p></li><li><p><strong>被union 连接的sql 子句，单个子句中不用写order by ，因为不会有排序的效果。但可以对最终的结果集进行排序</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> id,name <span class="keyword">from</span> A <span class="keyword">order</span> <span class="keyword">by</span> id) <span class="keyword">union</span> <span class="keyword">all</span> (<span class="keyword">select</span> id,name <span class="keyword">from</span> B <span class="keyword">order</span> <span class="keyword">by</span> id); <span class="operator">/</span><span class="operator">/</span>没有排序效果</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">select</span> id,name <span class="keyword">from</span> A ) <span class="keyword">union</span> <span class="keyword">all</span> (<span class="keyword">select</span> id,name <span class="keyword">from</span> B ) <span class="keyword">order</span> <span class="keyword">by</span> id; <span class="operator">/</span><span class="operator">/</span>有排序效果</span><br></pre></td></tr></table></figure></li></ol><p>案例解释: 将a表和b表合并，表结构如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006095856974.z0992l6jn0g.webp"                      alt="20181006095856974"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006095918725.41oi5sczcww0.webp"                      alt="20181006095918725"                ></p><h5 id="union全连接查询"><a href="#union全连接查询" class="headerlink" title="union全连接查询"></a>union全连接查询</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">select</span> id,num <span class="keyword">from</span> a) <span class="keyword">union</span> (<span class="keyword">select</span> id,num <span class="keyword">from</span> b);</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006100043809.6tcq9p7hvew0.webp"                      alt="20181006100043809"                ></p><p>nuion会自动将完全重复的数据去除掉，a、b表中”c”的值都为15，所以只会显示一行</p><h5 id="union-all全连接查询"><a href="#union-all全连接查询" class="headerlink" title="union all全连接查询"></a>union all全连接查询</h5><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006100254174.6atmwcvn4g40.webp"                      alt="20181006100254174"                ></p><p>union all会保留那些重复的数据</p><h3 id="幻读、脏读、不可重复读"><a href="#幻读、脏读、不可重复读" class="headerlink" title="幻读、脏读、不可重复读"></a>幻读、脏读、不可重复读</h3><h4 id="事物隔离级别"><a href="#事物隔离级别" class="headerlink" title="事物隔离级别"></a>事物隔离级别</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20200919145047911.6w3l5hj97r80.webp"                      alt="20200919145047911"                ></p><h4 id="什么是幻读"><a href="#什么是幻读" class="headerlink" title="什么是幻读"></a>什么是幻读</h4><p>幻读: 当用户读取某一范围的数据行时，另一个事务又在该范围内插入了新行，当用户再读取该范围的数据行时，会发现有新的“幻影” 行</p><h4 id="什么是脏读"><a href="#什么是脏读" class="headerlink" title="什么是脏读"></a>什么是脏读</h4><p>脏读: 读取到了未提交的数据(如果事务这时候回滚了，那么第二个事务就读到了脏数据)</p><h4 id="什么是不可重复读"><a href="#什么是不可重复读" class="headerlink" title="什么是不可重复读"></a>什么是不可重复读</h4><p>同一个事务中，对于同一数据，执行完全相同的select语句时可能看到不一样的结果</p><h4 id="幻读与不可重复读的区别"><a href="#幻读与不可重复读的区别" class="headerlink" title="幻读与不可重复读的区别"></a>幻读与不可重复读的区别</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/Snipaste_2022-03-03_18-46-28.63myylheyc80.webp"                      alt="Snipaste_2022-03-03_18-46-28"                ></p><p>参考自: <a class="link"   href="https://blog.csdn.net/weixin_39762838/article/details/110864382" >https://blog.csdn.net/weixin_39762838/article/details/110864382<i class="fas fa-external-link-alt"></i></a></p><h3 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h3><p>详情见: <a class="link"   href="https://blog.csdn.net/gy99csdn/article/details/114490027" >https://blog.csdn.net/gy99csdn/article/details/114490027<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;关于MySQL&quot;&gt;&lt;a href=&quot;#关于MySQL&quot; class=&quot;headerlink&quot; title=&quot;关于MySQL&quot;&gt;&lt;/a&gt;关于MySQL&lt;/h2&gt;&lt;h3 id=&quot;连接MySQL的指令&quot;&gt;&lt;a href=&quot;#连接MySQL的指令&quot; class=&quot;head</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Go入门指南第二章-安装与运行环境以及与C/C++语言交互</title>
    <link href="http://example.com/2022/03/05/Go%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%AE%89%E8%A3%85%E4%B8%8E%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E4%BB%A5%E5%8F%8A%E4%B8%8ECC++%E8%AF%AD%E8%A8%80%E4%BA%A4%E4%BA%92/"/>
    <id>http://example.com/2022/03/05/Go%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%AE%89%E8%A3%85%E4%B8%8E%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E4%BB%A5%E5%8F%8A%E4%B8%8ECC++%E8%AF%AD%E8%A8%80%E4%BA%A4%E4%BA%92/</id>
    <published>2022-03-05T08:54:30.000Z</published>
    <updated>2022-03-05T10:50:04.921Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h4><p>国情原因 <a class="link"   href="https://golang.org/" >https://golang.org/<i class="fas fa-external-link-alt"></i></a> 偶尔会访问不了，新手要下载 Go 官方的提供的安装包经常会受阻。解决方法是使用可信任的其他镜像进行下载，推荐这两个:</p><ul><li><a class="link"   href="https://golang.google.cn/dl/" >https://golang.google.cn/dl/<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://gomirrors.org/" >https://gomirrors.org/<i class="fas fa-external-link-alt"></i></a></li></ul><p>打开给定的链接我们会看到如下图片:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2022-03-05_17-03-55.4yha93wkms40.webp"                      alt="Snipaste_2022-03-05_17-03-55"                ></p><p>然后我们可以点击Download下载go的安装包</p><p>在win下:</p><p>下载后直接双击msi文件安装，默认安装在C:\Program Files\Go，安装完成后默认会在环境变量Path后添加Go安装目录下的bin目录C:\Program Files\Go\bin\，并添加环境变量GOROOT，值为Go安装根目录C:\Program Files\Go\</p><p>验证是否安装成功，在运行中输入 cmd 打开命令行工具，在提示符下输入 go env，出现以下画面就是安装成功:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2022-03-05_17-27-52.yre88dgn9q8.webp"                      alt="Snipaste_2022-03-05_17-27-52"                ></p><h4 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h4><p>添加国内代理，否则很多包无法下载:</p><p>将Go默认的代理替换为以下代理:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go env -w GOPROXY=https://goproxy.cn,direct</span><br></pre></td></tr></table></figure><h4 id="IDE的选择"><a href="#IDE的选择" class="headerlink" title="IDE的选择"></a>IDE的选择</h4><p>目前可选的IDE有很多，如VsCode，goland，subline等，我推荐使用goland，然后去安装一些插件</p><h4 id="安装目录清单"><a href="#安装目录清单" class="headerlink" title="安装目录清单"></a>安装目录清单</h4><p>你的 Go 安装目录（ $GOROOT ）的文件夹结构应该如下所示:</p><p>README.md, AUTHORS, CONTRIBUTORS, LICENSE，然后就是以下的一些文件:</p><ul><li>/bin: 包含可执行文件，如: 编译器，Go 工具</li><li>/doc: 包含示例程序，代码工具，本地文档等</li><li>/lib: 包含文档模版</li><li>/misc: 包含与支持Go编辑器有关的配置文件以及 cgo 的示例</li><li>/os_arch: 包含标准库的包的对象文件（ .a ）</li><li>/src: 包含源代码构建脚本和标准库的包的完整源代码（Go 是一门开源语言）</li><li>/src/cmd: 包含 Go 和 C 的编译器和命令行脚本</li></ul><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><h4 id="Go运行时-runtime"><a href="#Go运行时-runtime" class="headerlink" title="Go运行时(runtime)"></a>Go运行时(runtime)</h4><p>尽管 Go 编译器产生的是本地可执行代码，这些代码仍旧运行在Go的 runtime（这部分的代码可以在<br>runtime包中找到）当中。这个 runtime类似Java和.NET语言所用到的虚拟机，它负责管理包括内存<br>分配、垃圾回收、栈处理、goroutine、channel、切片（slice）、map 和反射<br>（reflection）等等。<br>runtime 主要由 C 语言编写（Go 1.5 开始自举），并且是每个 Go 包的最顶级包。你可以在目录<br>$GOROOT/src/runtime 中找到相关内容。<br>垃圾回收器 Go 拥有简单却高效的标记-清除回收器。它的主要思想来源于 IBM 的可复用垃圾回收器，旨<br>在打造一个高效、低延迟的并发回收器。目前 gccgo 还没有回收器，同时适用 gc 和 gccgo 的新回收器<br>正在研发中。使用一门具有垃圾回收功能的编程语言不代表你可以避免内存分配所带来的问题，分配和回收内容都是消耗 CPU 资源的一种行为</p><p>Go 的可执行文件都比相对应的源代码文件要大很多，这恰恰说明了 Go 的 runtime 嵌入到了每一个可执<br>行文件当中。当然，在部署到数量巨大的集群时，较大的文件体积也是比较头疼的问题。但总得来说，Go<br>的部署工作还是要比 Java 和 Python 轻松得多。因为 Go 不需要依赖任何其它文件，它只需要一个单独的<br>静态文件，这样你也不会像使用其它语言一样在各种不同版本的依赖文件之间混淆。</p><h4 id="Go解释器"><a href="#Go解释器" class="headerlink" title="Go解释器"></a>Go解释器</h4><p>因为 Go 具有像动态语言那样快速编译的能力，自然而然地就有人会问 Go 语言能否在 REPL（read-eval-print loop）编程环境下实现。Sebastien Binet 已经使用这种环境实现了一个 Go 解释器，你可以在这个页面找到：<a class="link"   href="https://github.com/sbinet/igo%E3%80%82" >https://github.com/sbinet/igo。<i class="fas fa-external-link-alt"></i></a></p><p>什么是REPL编程环境: <a class="link"   href="https://blog.csdn.net/qq_39839745/article/details/86499612" >https://blog.csdn.net/qq_39839745/article/details/86499612<i class="fas fa-external-link-alt"></i></a></p><h4 id="格式化代码"><a href="#格式化代码" class="headerlink" title="格式化代码"></a>格式化代码</h4><p>Go 开发团队不想要 Go 语言像许多其它语言那样总是在为代码风格而引发无休止的争论，浪费大量宝贵<br>的开发时间，因此他们制作了一个工具： go fmt （ gofmt ）。这个工具可以将你的源代码格式化成符合<br>官方统一标准的风格，属于语法风格层面上的小型重构。遵循统一的代码风格是 Go 开发中无可撼动的铁<br>律，因此你必须在编译或提交版本管理系统之前使用 gofmt 来格式化你的代码。<br>尽管这种做法也存在一些争论，但使用 gofmt 后你不再需要自成一套代码风格而是和所有人使用相同的<br>规则。这不仅增强了代码的可读性，而且在接手外部 Go 项目时，可以更快地了解其代码的含义。此外，<br>大多数开发工具也都内置了这一功能。<br>Go 对于代码的缩进层级方面使用 tab 还是空格并没有强制规定，一个 tab 可以代表 4 个或 8 个空格。在<br>实际开发中，1 个 tab 应该代表 4 个空格，而在本身的例子当中，每个 tab 代表 8 个空格。至于开发工<br>具方面，一般都是直接使用 tab 而不替换成空格。<br>在命令行输入 gofmt –w program.go 会格式化该源文件的代码然后将格式化后的代码覆盖原始内容<br>（如果不加参数 -w 则只会打印格式化后的结果而不重写文件）； gofmt -w *.go 会格式化并重写所有<br>Go 源文件； gofmt map1 会格式化并重写 map1 目录及其子目录下的所有 Go 源文件。<br>gofmt 也可以通过在参数 -r 后面加入用双引号括起来的替换规则实现代码的简单重构，规则的格式：<br>&lt;原始内容&gt; -&gt; &lt;替换内容&gt; </p><p>实例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gofmt -r “(a) -&gt; a” –w *.go</span><br></pre></td></tr></table></figure><p>上面的代码会将源文件中没有意义的括号去掉</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gofmt -r “a[n:<span class="built_in">len</span>(a)] -&gt; a[n:]” –w *.go</span><br></pre></td></tr></table></figure><p>上面的代码会将源文件中多余的 len(a) 去掉</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gofmt –r ‘A.Func1(a,b) -&gt; A.Func2(b,a)’ –w *.go</span><br></pre></td></tr></table></figure><p>上面的代码会将源文件中符合条件的函数的参数调换位置</p><p>如果想要了解有关 gofmt 的更多信息，请访问该页面：<a class="link"   href="http://golang.org/cmd/gofmt/" >http://golang.org/cmd/gofmt/<i class="fas fa-external-link-alt"></i></a></p><h4 id="生成代码文档"><a href="#生成代码文档" class="headerlink" title="生成代码文档"></a>生成代码文档</h4><p>go doc 工具会从 Go 程序和包文件中提取顶级声明的首行注释以及每个对象的相关注释，并生成相关文<br>档</p><p>它也可以作为一个提供在线文档浏览的 web 服务器，<a class="link"   href="http://golang.org/" >http://golang.org<i class="fas fa-external-link-alt"></i></a> 就是通过这种形式实现的</p><p>一般用法:</p><ul><li>go doc package: </li><li>例如： go doc fmt 会显示使用 godoc 生成的 fmt 包的文档注释</li><li>go doc package/subpackage: 获取子包的文档注释，例如： go doc container/list</li><li>go doc package function: 获取某个函数在某个包中的文档注释，例如： go doc fmt Printf 会显<br>示有关 fmt.Printf() 的使用说明</li></ul><p>这个工具只能获取在 Go 安装目录下 …/go/src 中的注释内容。此外，它还可以作为一个本地文档浏览<br>web 服务器。在命令行输入 godoc -http=:6060 ，然后使用浏览器打开 <a class="link"   href="http://localhost:6060/" >http://localhost:6060<i class="fas fa-external-link-alt"></i></a> 后，你<br>就可以看到本地文档浏览服务器提供的页面。<br>godoc 也可以用于生成非标准库的 Go 源码文件的文档注释，在后面我们会介绍</p><p>如果想要获取更多有关 godoc 的信息，请访问该页面：<a class="link"   href="http://golang.org/cmd/godoc/" >http://golang.org/cmd/godoc/<i class="fas fa-external-link-alt"></i></a></p><h4 id="其他工具"><a href="#其他工具" class="headerlink" title="其他工具"></a>其他工具</h4><ul><li>go install: 是安装 Go 包的工具，类似 Ruby 中的 rubygems。主要用于安装非标准库的包文件，将<br>源代码编译成对象文件</li><li>go fix: 用于将你的 Go 代码从旧的发行版迁移到最新的发行版，它主要负责简单的、重复的、枯燥无<br>味的修改工作，如果像 API 等复杂的函数修改，工具则会给出文件名和代码行数的提示以便让开发人员快速定位并升级代码。Go 开发团队一般也使用这个工具升级 Go 内置工具以及 谷歌内部项目的代码。 go fix 之所以能够正常工作是因为 Go 在标准库就提供生成抽象语法树和通过抽象语法树对代码进行还原的功能。该工具会尝试更新当前目录下的所有 Go 源文件，并在完成代码更新后在控制台输出相关的文件名称</li><li>go test 是一个轻量级的单元测试框架（第 13 章）</li></ul><h4 id="Go性能说明"><a href="#Go性能说明" class="headerlink" title="Go性能说明"></a>Go性能说明</h4><p>根据 Go 开发团队和基本的算法测试，Go 语言与 C 语言的性能差距大概在 10%~20% 之间（ 译者注：<br>由于出版时间限制，该数据应为 2013 年 3 月 28 日之前产生 ）。虽然没有官方的性能标准，但是与其它<br>各个语言相比已经拥有非常出色的表现。<br>如果说 Go 语言的执行效率大约比 C++ 慢 20% 也许更有实际意义。保守估计在相同的环境和执行目标的<br>情况下，Go 程序比 Java 或 Scala 应用程序要快上 2 倍，并比这两门语言使用少占用 70% 的内存。在很<br>多情况下这种比较是没有意义的，因为像谷歌这样拥有成千上万台服务器的公司都抛弃 C++ 而开始将 Go用于生产环境已经足够说明它本身所具有的优势。<br>时下流行的语言大都是运行在虚拟机上，如：Java 和 Scala 使用的 JVM，C# 和 VB.NET 使用的 .NET<br>CLR。尽管虚拟机的性能已经有了很大的提升，但任何使用 JIT 编译器和脚本语言解释器的编程语言<br>（Ruby、Python、Perl 和 JavaScript）在 C 和 C++ 的绝对优势下甚至都无法在性能上望其项背。<br>如果说 Go 比 C++ 要慢 20%，那么 Go 就要比任何非静态和编译型语言快 2 到 10 倍，并且能够更加高<br>效地使用内存。其实比较多门语言之间的性能是一种非常猥琐的行为，因为任何一种语言都有其所擅长和薄弱的方面。例如在处理文本方面，那些只处理纯字节的语言显然要比处理 Unicode 这种更为复杂编码的语言要出色的多。有些人可能认为使用两种不同的语言实现同一个目标能够得出正确的结论，但是很多时候测试者可能对一门语言非常了解而对另一门语言只是大概明白，测试者对程序编写的手法在一定程度也会影响结果的公平性，因此测试程序应该分别由各自语言的擅长者来编写，这样才能得到具有可比性的结果。另外，像在统计学方面，人们很难避免人为因素对结果的影响，所以这在严格意义上并不是科学。还要注意的是，测试结果的可比性还要根据测试目标来区别，例如很多发展十多年的语言已经针对各类问题拥有非常成熟的类库，而作为一门新生语言的 Go 语言，并没有足够的时间来推导各类问题的最佳解决方案。</p><ul><li><p>比较 Go 和 Python 在简单的 web 服务器方面的性能，单位为传输量每秒:</p><p>原生的 Go http 包要比 web.py 快 7 至 8 倍，如果使用 web.go 框架则稍微差点，比 web.py 快 6<br>至 7 倍。在 Python 中被广泛使用的 tornado 异步服务器和框架在 web 环境下要比 web.py 快很<br>多，Go 大概只比它快 1.2 至 1.5 倍</p></li><li><p>Go 和 Python 在一般开发的平均水平测试中，Go 要比 Python 3 快 25 倍左右，少占用三分之二的<br>内存，但比 Python 大概多写一倍的代码</p></li></ul><h4 id="与其他语言进行交互"><a href="#与其他语言进行交互" class="headerlink" title="与其他语言进行交互"></a>与其他语言进行交互</h4><h4 id="与C进行交互"><a href="#与C进行交互" class="headerlink" title="与C进行交互"></a>与C进行交互</h4><p>工具 cgo 提供了对 FFI（外部函数接口）的支持，能够使用 Go 代码安全地调用 C 语言库，你可以访问<br>cgo 文档主页：<a class="link"   href="http://golang.org/cmd/cgo%E3%80%82cgo" >http://golang.org/cmd/cgo。cgo<i class="fas fa-external-link-alt"></i></a> 会替代 Go 编译器来产生可以组合在同一个包中的<br>Go 和 C 代码。在实际开发中一般使用 cgo 创建单独的 C 代码包</p><p>如果你想要在你的 Go 程序中使用 cgo，则必须在单独的一行使用 import “C” 来导入，一般来说你可能<br>还需要 import “unsafe”</p><p>然后，你可以在 import “C” 之前使用注释（单行或多行注释均可）的形式导入 C 语言库（甚至有效的<br>C 语言代码），它们之间没有空行，例如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// <span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line">// <span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;C&quot;</span></span><br></pre></td></tr></table></figure><p>名称 “C” 并不属于标准库的一部分，这只是 cgo 集成的一个特殊名称用于引用 C 的命名空间。在这个命<br>名空间里所包含的 C 类型都可以被使用，例如 C.uint 、 C.long 等等，还有 libc 中的函数，C.random() 等也可以被调用</p><p>当你想要使用某个类型作为 C 中函数的参数时，必须将其转换为 C 中的类型，反之亦然，例如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var i <span class="built_in">int</span></span><br><span class="line">C.uint(i) // 从 Go 中的 <span class="built_in">int</span> 转换为 C 中的无符号 <span class="built_in">int</span></span><br><span class="line"><span class="built_in">int</span>(C.random()) // 从 C 中 random() 函数返回的 long 转换为 Go 中的 <span class="built_in">int</span></span><br></pre></td></tr></table></figure><p>下面的 2 个 Go 函数 Random() 和 Seed() 分别调用了 C 中的 C.random() 和 C.srandom():</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package rand</span><br><span class="line">// <span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">func Random() <span class="built_in">int</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">int</span>(C.random())</span><br><span class="line">&#125;</span><br><span class="line">func Seed(i <span class="built_in">int</span>) &#123;</span><br><span class="line">C.srandom(C.uint(i))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C 当中并没有明确的字符串类型，如果你想要将一个 string 类型的变量从 Go 转换到 C 时，可以使用<br>C.CString(s) ；同样，可以使用 C.GoString(cs) 从 C 转换到 Go 中的 string 类型</p><p>Go 的内存管理机制无法管理通过 C 代码分配的内存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defer C.free(unsafe.Pointer(Cvariable))</span><br></pre></td></tr></table></figure><p>这一行最好紧跟在使用 C 代码创建某个变量之后，这样就不会忘记释放内存了。下面的代码展示了如何使用 cgo 创建变量、使用并释放其内存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">package <span class="built_in">print</span></span><br><span class="line">// <span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line">// <span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;unsafe&quot;</span></span><br><span class="line">func Print(s string) &#123;</span><br><span class="line">cs := C.CString(s)</span><br><span class="line">defer C.free(unsafe.Pointer(cs))</span><br><span class="line">C.fputs(cs, (*C.FILE)(C.stdout))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="与C-进行交互"><a href="#与C-进行交互" class="headerlink" title="与C++进行交互"></a>与C++进行交互</h4><p>SWIG（简化封装器和接口生成器）支持在 Linux 系统下使用 Go 代码调用 C 或者 C++ 代码。这里有一<br>些使用 SWIG 的注意事项:</p><ul><li>编写需要封装的库的 SWIG 接口</li><li>SWIG 会产生 C 的存根函数</li><li>这些库可以使用 cgo 来调用</li><li>相关的 Go 文件也可以被自动生成这类接口支持方法重载、多重继承以及使用 Go 代码实现 C++ 的抽象类，目前使用 SWIG 存在的一个问题是它无法支持所有的 C++ 库，比如说它就无法解析TObject.h</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;h4 id=&quot;下载安装包&quot;&gt;&lt;a href=&quot;#下载安装包&quot; class=&quot;headerlink&quot; title=&quot;下载安装包&quot;&gt;&lt;/a&gt;下载安装</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Go入门指南第一章-Go语言的起源</title>
    <link href="http://example.com/2022/03/05/Go%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%E7%AC%AC%E4%B8%80%E7%AB%A0-Go%E8%AF%AD%E8%A8%80%E7%9A%84%E8%B5%B7%E6%BA%90/"/>
    <id>http://example.com/2022/03/05/Go%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%E7%AC%AC%E4%B8%80%E7%AB%A0-Go%E8%AF%AD%E8%A8%80%E7%9A%84%E8%B5%B7%E6%BA%90/</id>
    <published>2022-03-05T08:48:30.000Z</published>
    <updated>2022-03-05T08:51:31.016Z</updated>
    
    <content type="html"><![CDATA[<h3 id="起源与发展"><a href="#起源与发展" class="headerlink" title="起源与发展"></a>起源与发展</h3><p>2007 年 9 月 21 日：雏形设计</p><p>2009 年 11 月 10日：首次公开发布</p><p>2010 年 1 月 8 日：当选 2009 年年度语言</p><p>2010 年 5 月：谷歌投入使用</p><p>2011 年 5 月 5 日：Google App Engine 支持 Go 语言</p><h3 id="语言的主要特性"><a href="#语言的主要特性" class="headerlink" title="语言的主要特性"></a>语言的主要特性</h3><p>因为 Go 语言没有类和继承的概念，所以它和 Java 或 C++ 看起来并不相同。但是它通过接口<br>（interface）的概念来实现多态性。Go 语言有一个清晰易懂的轻量级类型系统，在类型之间也没有层级<br>之说。因此可以说这是一门混合型的语言。<br>在传统的面向对象语言中，使用面向对象编程技术显得非常的臃肿，它们总是通过复杂的模式来构建庞大<br>的类型层级，这违背了编程语言应该提升生产力的宗旨。<br>函数是 Go 语言中的基本构件，它们的使用方法非常灵活。在第六章，我们会看到 Go 语言在函数式编程<br>方面的基本概念。<br>Go 语言使用静态类型，所以它是类型安全的一门语言，加上通过构建到本地代码，程序的执行速度也非<br>常快。<br>作为强类型语言，隐式的类型转换是不被允许的，记住一条原则：让所有的东西都是显式的。<br>Go 语言其实也有一些动态语言的特性（通过关键字 var ），所以它对那些逃离 Java 和 .Net 世界而使用<br>Python、Ruby、PHP 和 JavaScript 的开发者们也具有很大的吸引力。<br>Go 语言支持交叉编译，比如说你可以在运行 Linux 系统的计算机上开发运行下 Windows 下运行的应用<br>程序。这是第一门完全支持 UTF-8 的编程语言，这不仅体现在它可以处理使用 UTF-8 编码的字符串，就<br>连它的源码文件格式都是使用的 UTF-8 编码。Go 语言做到了真正的国际化！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;起源与发展&quot;&gt;&lt;a href=&quot;#起源与发展&quot; class=&quot;headerlink&quot; title=&quot;起源与发展&quot;&gt;&lt;/a&gt;起源与发展&lt;/h3&gt;&lt;p&gt;2007 年 9 月 21 日：雏形设计&lt;/p&gt;
&lt;p&gt;2009 年 11 月 10日：首次公开发布&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>三小时带你入门Django--笔记</title>
    <link href="http://example.com/2022/03/05/%E4%B8%89%E5%B0%8F%E6%97%B6%E5%B8%A6%E4%BD%A0%E5%85%A5%E9%97%A8Django/"/>
    <id>http://example.com/2022/03/05/%E4%B8%89%E5%B0%8F%E6%97%B6%E5%B8%A6%E4%BD%A0%E5%85%A5%E9%97%A8Django/</id>
    <published>2022-03-05T07:36:30.000Z</published>
    <updated>2022-03-05T08:25:32.762Z</updated>
    
    <content type="html"><![CDATA[<h1 id="课程内容所需要的基础"><a href="#课程内容所需要的基础" class="headerlink" title="课程内容所需要的基础"></a>课程内容所需要的基础</h1><p><a href="https://imgtu.com/i/bd9v8A"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bd9v8A.png"                      alt="bd9v8A.png"                ></a></p><ol start="2"><li><p>Django简介</p><p>首先介绍Python web三大框架：</p><p><a href="https://imgtu.com/i/bdC9Df"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdC9Df.png"                      alt="bdC9Df.png"                ></a></p><p>从下图可以看出Django是主角：</p><p><a href="https://imgtu.com/i/bdCV8s"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCV8s.png"                      alt="bdCV8s.png"                ></a></p><p>下面开始介绍主流框架Django：<br><a href="https://imgtu.com/i/bdCnK0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCnK0.png"                      alt="bdCnK0.png"                ></a></p><p><a href="https://imgtu.com/i/bdCurV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCurV.png"                      alt="bdCurV.png"                ></a></p></li><li><p>课程安排</p><p><a href="https://imgtu.com/i/bdCKbT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCKbT.png"                      alt="bdCKbT.png"                ></a></p></li></ol><h1 id="课程准备工作"><a href="#课程准备工作" class="headerlink" title="课程准备工作"></a>课程准备工作</h1><p><a href="https://imgtu.com/i/bdCQVU"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCQVU.png"                      alt="bdCQVU.png"                ></a></p><ol><li>在cmd中键入python提示python版本则安装成功</li><li>在cmd中键入conda提示conda版本则安装成功</li><li>在cmd中键入django-admin出现一长串提示命令则安装成功</li></ol><h1 id="章节导学"><a href="#章节导学" class="headerlink" title="章节导学"></a>章节导学</h1><p>在接下来一章我们将接触：</p><p><a href="https://imgtu.com/i/bdC8PJ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdC8PJ.png"                      alt="bdC8PJ.png"                ></a></p><h1 id="初识Django项目"><a href="#初识Django项目" class="headerlink" title="初识Django项目"></a>初识Django项目</h1><p>本节内容我们将了解：<br><a href="https://imgtu.com/i/bdCBIe"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCBIe.png"                      alt="bdCBIe.png"                ></a></p><ol><li><p>Django的基本命令<br>在终端键入django-admin将显示所有的django命令，如下图所示</p><p><a href="https://imgtu.com/i/bdCgMt"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCgMt.png"                      alt="bdCgMt.png"                ></a></p><p>以上命令中几个常用命令的用途是怎样的呢？我们来解读一下：</p><p><a href="https://imgtu.com/i/bdCTRs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCTRs.png"                      alt="bdCTRs.png"                ></a></p><p><a href="https://imgtu.com/i/bdC7zn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdC7zn.png"                      alt="bdC7zn.png"                ></a></p><p><a href="https://imgtu.com/i/bdCXZT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCXZT.png"                      alt="bdCXZT.png"                ></a></p></li><li><p>创建一个项目</p><p>由以上内容可知，在cmd终端中创建一个djnago项目的命令是：</p><p><a href="https://imgtu.com/i/bdCvoF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCvoF.png"                      alt="bdCvoF.png"                ></a></p><p>其中django_introduction为项目名</p><p>接下来我们用pycharm打开刚刚创建的项目来了解一下项目目录</p></li><li><p>项目目录介绍</p><p><a href="https://imgtu.com/i/bdCzi4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCzi4.png"                      alt="bdCzi4.png"                ></a></p></li></ol><h1 id="初识Django应用"><a href="#初识Django应用" class="headerlink" title="初识Django应用"></a>初识Django应用</h1><p>本节内容我们将了解：</p><p><a href="https://imgtu.com/i/bdPpW9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdPpW9.png"                      alt="bdPpW9.png"                ></a></p><ol><li><p>Django应用 VS Django项目</p><p><a href="https://imgtu.com/i/bdP9zR"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdP9zR.png"                      alt="bdP9zR.png"                ></a></p><p><a href="https://imgtu.com/i/bdPisx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdPisx.png"                      alt="bdPisx.png"                ></a></p><p><a href="https://imgtu.com/i/bdPFL6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdPFL6.png"                      alt="bdPFL6.png"                ></a></p></li><li><p>Django应用目录介绍</p><p><a href="https://imgtu.com/i/bdPEdO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdPEdO.png"                      alt="bdPEdO.png"                ></a></p></li></ol><h1 id="Django-HelloWorld"><a href="#Django-HelloWorld" class="headerlink" title="Django HelloWorld"></a>Django HelloWorld</h1><p>本节内容我们将了解：</p><p><a href="https://imgtu.com/i/bd0cL9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bd0cL9.png"                      alt="bd0cL9.png"                ></a></p><ol><li><p>Django视图(What、Why&amp;How)</p><p><a href="https://imgtu.com/i/bd02ZR"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bd02ZR.png"                      alt="bd02ZR.png"                ></a></p><p>我们在刚刚blog这个项目的views.py中编写显示hello world的视图函数：</p><p>其中request参数是http请求的对象</p><p>直接返回是行不通的，必须先导入HttpRsponses模块，把hello world封装成HttpRsponses对象再返回</p><p><a href="https://imgtu.com/i/bd0WIx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bd0WIx.png"                      alt="bd0WIx.png"                ></a></p></li><li><p>Django路由(What、Why&amp;How)</p><p><a href="https://imgtu.com/i/bd0HLd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bd0HLd.png"                      alt="bd0HLd.png"                ></a></p><p>配置路由分为两个层次：项目层次和应用层次</p></li></ol><ul><li><p>应用层次配置</p><p>先在blog应用下创建一个urls.py</p><p>然后编写配置代码：</p><p><a href="https://imgtu.com/i/bd0jFP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bd0jFP.png"                      alt="bd0jFP.png"                ></a></p></li><li><p>再来到项目下的urls.py，完成项目层次等的路由配置：</p><p><a href="https://imgtu.com/i/bdBCLj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdBCLj.png"                      alt="bdBCLj.png"                ></a></p></li></ul><p>最后把blog这个应用添加到配置文件里再启动服务器输入url就可以显示hello world了，如下图所示：</p><p><a href="https://imgtu.com/i/bdBVYV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdBVYV.png"                      alt="bdBVYV.png"                ></a></p><p><a href="https://imgtu.com/i/bdBQm9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdBQm9.png"                      alt="bdBQm9.png"                ></a></p><p>输入url后pycharm控制台也会有相应的log</p><p><a href="https://imgtu.com/i/bdBGY6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdBGY6.png"                      alt="bdBGY6.png"                ></a></p><p>简单回顾一下显示helloworld的原理：</p><p><a href="https://imgtu.com/i/bdDVHA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDVHA.png"                      alt="bdDVHA.png"                ></a></p><h1 id="章节导读"><a href="#章节导读" class="headerlink" title="章节导读"></a>章节导读</h1><p>在接下来一章我们将接触：</p><p><a href="https://imgtu.com/i/bdDC9K"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDC9K.png"                      alt="bdDC9K.png"                ></a></p><p><a href="https://imgtu.com/i/bdDM38"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDM38.png"                      alt="bdDM38.png"                ></a></p><h1 id="模型层简介"><a href="#模型层简介" class="headerlink" title="模型层简介"></a>模型层简介</h1><p>本节内容我们将了解：</p><p><a href="https://imgtu.com/i/bdD8Bj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdD8Bj.png"                      alt="bdD8Bj.png"                ></a></p><ol><li><p>模型层是什么</p><p><a href="https://imgtu.com/i/bdDGHs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDGHs.png"                      alt="bdDGHs.png"                ></a></p></li><li><p>为什么需要模型层</p><p><a href="https://imgtu.com/i/bdDd3T"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDd3T.png"                      alt="bdDd3T.png"                ></a></p><p>上图中的便捷工具指的是：数据库迁移功能，数据库备份功能等等</p></li><li><p>模型层的相关配置</p><p>我们来到项目下的文件settings.py的DATABASE属性</p><p><a href="https://imgtu.com/i/bdD0vF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdD0vF.png"                      alt="bdD0vF.png"                ></a></p><p>其中描述了项目关联的数据库类型和该数据库在项目中的位置以及名称</p></li></ol><h1 id="创建博客文章模型"><a href="#创建博客文章模型" class="headerlink" title="创建博客文章模型"></a>创建博客文章模型</h1><p>本节内容我们将了解：</p><p><a href="https://imgtu.com/i/bdDsb9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDsb9.png"                      alt="bdDsb9.png"                ></a></p><ol><li><p>设计博客模型</p><p><a href="https://imgtu.com/i/bdDg4x"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDg4x.png"                      alt="bdDg4x.png"                ></a></p><p>那么在数据库中对应要赋予什么类型呢？如下所示：<br><a href="https://imgtu.com/i/bdDRC6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDRC6.png"                      alt="bdDRC6.png"                ></a></p><p><a href="https://imgtu.com/i/bdDobd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDobd.png"                      alt="bdDobd.png"                ></a>ng)</p></li><li><p>模型层定义字段</p><p><a href="https://imgtu.com/i/bdDb5t"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDb5t.png"                      alt="bdDb5t.png"                ></a></p><p><a href="https://imgtu.com/i/bdDX28"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDX28.png"                      alt="bdDX28.png"                ></a></p><p>我们要在应用下的models.py下定义模型类</p><p>这里是定义文章模型</p><p>定义模型的话要继承自moel.Model,具体操作见下图:</p><p>下图中文章的发布日期DataTimeField的参数auto_now=True表示如果没有指示日期的话就以当前日期为准</p><p><a href="https://imgtu.com/i/bdrP5q"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdrP5q.png"                      alt="bdrP5q.png"                ></a></p><p>接下来我们就可以在终端中键入python manage.py makemigrations生成牵引文件，这时就生成了0001.initial.py,如下图所示：</p><p><a href="https://imgtu.com/i/bdrkGV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdrkGV.png"                      alt="bdrkGV.png"                ></a></p><p>然后我们接着在终端中键入python manage.py migrate运行上面生成的牵引文件，把牵引文件的内容同步到数据库里面去</p></li></ol><h1 id="初识Django-Shell"><a href="#初识Django-Shell" class="headerlink" title="初识Django Shell"></a>初识Django Shell</h1><p>本节内容我们将了解：</p><p><a href="https://imgtu.com/i/bdrer4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdrer4.png"                      alt="bdrer4.png"                ></a></p><ol><li><p>Django Shell 是什么</p><p><a href="https://imgtu.com/i/bdruZ9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdruZ9.png"                      alt="bdruZ9.png"                ></a></p></li><li><p>为什么需要Django Shell</p><p><a href="https://imgtu.com/i/bdrlPx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdrlPx.png"                      alt="bdrlPx.png"                ></a></p></li><li><p>Django Shell 的使用</p><p>在pycharm的终端中键入python manage.py shell就进入了Django Shell环境，如下图所示：<br><a href="https://imgtu.com/i/bdr3RK"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdr3RK.png"                      alt="bdr3RK.png"                ></a></p><p>我们以新建一篇文章的案例来说明Django Shell 的具体使用，首先我们导入文章的模型，如下图所示：<br><a href="https://imgtu.com/i/bwtc0x"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwtc0x.png"                      alt="bwtc0x.png"                ></a></p><p>我们通过Article新建一篇文章对象，命名为a：</p><p><a href="https://imgtu.com/i/bwt51H"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwt51H.png"                      alt="bwt51H.png"                ></a></p><p>接下来我们设置文章的标题、摘要和具体内容</p><p><a href="https://imgtu.com/i/bwNCBq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwNCBq.png"                      alt="bwNCBq.png"                ></a></p><p>这个时候我们可以打印一下a</p><p><a href="https://imgtu.com/i/bwN62Q"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwN62Q.png"                      alt="bwN62Q.png"                ></a></p><p>可以看到a是Article object，因为a是Article模型类创建出来的</p><p>最后我们可以通过a.save()方法把刚刚创建的Article保存到数据库里去，这样子就完成了新建和保存Article</p><p>那么我们怎么才能确定Article被保存到了数据库中呢？</p><p>我们同样可以在终端中键入article = Article.objects.all()把所有文章从数据库中查询出来，在这里我们选择第一篇文章(实际上也只有一篇文章)，然后把第一篇文章的title打印出来，如下图所示：</p><p><a href="https://imgtu.com/i/bwN724"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwN724.png"                      alt="bwN724.png"                ></a></p><p>title成功打印出来说明文章确实被保存到了数据库里面，除此之外还可以打印Article的摘要等等</p><p>总结：<br><a href="https://imgtu.com/i/bwNjVx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwNjVx.png"                      alt="bwNjVx.png"                ></a></p></li></ol><h1 id="初识Django-Admin模块"><a href="#初识Django-Admin模块" class="headerlink" title="初识Django Admin模块"></a>初识Django Admin模块</h1><p>本节内容我们将了解：</p><p><a href="https://imgtu.com/i/bwUCxH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwUCxH.png"                      alt="bwUCxH.png"                ></a></p><ol><li><p>Django Admin模块是什么</p><p><a href="https://imgtu.com/i/bwUEZt"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwUEZt.png"                      alt="bwUEZt.png"                ></a></p></li><li><p>为什么需要Django Admin模块</p><p><a href="https://imgtu.com/i/bwUZIf"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwUZIf.png"                      alt="bwUZIf.png"                ></a></p></li><li><p>Django Admin模块的使用</p><p><a href="https://imgtu.com/i/bwUfQH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwUfQH.png"                      alt="bwUfQH.png"                ></a></p><ul><li><p>创建管理员用户</p><p>来到pycharm终端键入python manage.py createsuperuser，回车并填写用户名，邮箱(邮箱可以不填写)和密码后一个超级管理员就创建成功了，如下图所示：<br><a href="https://imgtu.com/i/bwUHFf"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwUHFf.png"                      alt="bwUHFf.png"                ></a></p><p>接下来启动服务器，来到浏览器，在浏览器地址栏键入127.0.0.1:8000/admin点击回车就进入了admin的登录界面如下图所示：<br><a href="https://imgtu.com/i/bwUOSg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwUOSg.png"                      alt="bwUOSg.png"                ></a></p><p>输入刚刚注册的用户名和密码就进入了admin的管理后台，如下图所示：</p><p>可以看到这里有groups和users两个默认的模型可以管理</p><p><a href="https://imgtu.com/i/bwapT0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwapT0.png"                      alt="bwapT0.png"                ></a></p><p>我们来看一下users，如下图所示：</p><p>这里我们可以看到刚刚创建的超级用户</p><p><a href="https://imgtu.com/i/bwaRA0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwaRA0.png"                      alt="bwaRA0.png"                ></a></p><p>除了这个users之外，还有一个groups模型，因为没有创建groups，所以里面内容是空的；那我们刚刚创建的博客文章模型在哪里呢？这是因为我们没有把博客文章模型注册到admin里面，所以接下来我们进入pycharm进入应用下的admin.py把刚刚所定义的博客文章模型注册到damin里面，如下图所示：<br><a href="https://imgtu.com/i/bwa49U"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwa49U.png"                      alt="bwa49U.png"                ></a></p><p>接下来回到浏览器点击刷新，这时候可以看到多了一个叫blog的应用，并且在blog下面有一个Article模型，如下图所示：</p><p><a href="https://imgtu.com/i/bwaLAx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwaLAx.png"                      alt="bwaLAx.png"                ></a></p><p>单击Article模型我们可以看到有一个Article object，如下图所示：</p><p><a href="https://imgtu.com/i/bwav9O"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwav9O.png"                      alt="bwav9O.png"                ></a></p><p>单击Article object，我们可以看到Title、Brief Content和Content等等一些信息，这里面对应的具体内容就是之前利用Django Shell所新增的一些内容，如下图所示：<br><a href="https://imgtu.com/i/bwdPHI"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwdPHI.png"                      alt="bwdPHI.png"                ></a></p><p>回到前一个页面我们还可以点击右上方的Add Article来新增一篇文章，如下图所示：<br><a href="https://imgtu.com/i/bwduuj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwduuj.png"                      alt="bwduuj.png"                ></a></p><p>输入一些内容，点击保存</p><p><a href="https://imgtu.com/i/bwdGCT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwdGCT.png"                      alt="bwdGCT.png"                ></a></p><p>这样子我们就创建了一篇文章<br><a href="https://imgtu.com/i/bwd0V1"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwd0V1.png"                      alt="bwd0V1.png"                ></a></p><p>但是这里有一个问题，文章列表里面如果文章太多的话，怎样知道哪一个是哪一篇文章呢？我们能不能在列表里面显示每一篇文章的title呢？其实是可以的，需要一定的开发，回到pycharm打开应用下的model.py,编写一个函数，如下图所示：<br><a href="https://imgtu.com/i/bwdD56"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwdD56.png"                      alt="bwdD56.png"                ></a></p><p>重启服务器，回到浏览器点击刷新，可以看到原来的Article object 变成了 Article title，如下图所示：<br><a href="https://imgtu.com/i/bwd4at"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwd4at.png"                      alt="bwd4at.png"                ></a></p></li></ul></li></ol><h1 id="实现博客数据返回页面"><a href="#实现博客数据返回页面" class="headerlink" title="实现博客数据返回页面"></a>实现博客数据返回页面</h1><p>打开pycharm应用下的views.py，在这里面我们要实现一个视图函数article_content()，这个视图函数返回博客的文章内容，如下图所示：</p><ol><li><p>这个视图函数接收一个request对象</p></li><li><p>引入Article模型类(from blog.models import Article)</p></li><li><p>通过Article.object.all()[0] 返回第一篇文章，用article接收</p></li><li><p>依次把title、brief content、content、article_id和publish_date取出来</p></li><li><p>接着把以上5个内容拼成一个字符串</p></li><li><p>最后返回一个HttpResponse，跟前面非常类似，把字符串放到HttpResponse里面，这样子就完成了article_content视图函数的开发，如下图所示：</p><p><a href="https://imgtu.com/i/bwdTG8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwdTG8.png"                      alt="bwdTG8.png"                ></a></p></li><li><p>完成了视图函数后，我们还要配置一下路由，同样的首先配置应用级别的路由，打开blog应用下面的urls.py编写代码，如下图所示：<br><a href="https://imgtu.com/i/bwdqMQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwdqMQ.png"                      alt="bwdqMQ.png"                ></a></p></li><li><p>接下列进行项目级别的路由配置，打开django_introduction项目下面的urls.py编写代码，如下图所示：<br><a href="https://imgtu.com/i/bwwSiV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwwSiV.png"                      alt="bwwSiV.png"                ></a></p></li><li><p>启动服务器，然后在浏览器地址栏输入127.0.0.1/blog/content,点击回车后会发现文章内容成功显示出来了，包括title、brief content、content、article_id、publish_date如下图所示：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-17-56.4hkofpwexpq0.webp"                      alt="Snipaste_2020-12-01_14-17-56"                ></p></li></ol><h1 id="章节导学-1"><a href="#章节导学-1" class="headerlink" title="章节导学"></a>章节导学</h1><p>在接下来一章我们将接触：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-19-59.6upgwbvzwmo0.webp"                      alt="Snipaste_2020-12-01_14-19-59"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-20-36.76pbyxq9n2s0.webp"                      alt="Snipaste_2020-12-01_14-20-36"                ></p><h1 id="使用Bootstrap实现静态博客页面"><a href="#使用Bootstrap实现静态博客页面" class="headerlink" title="使用Bootstrap实现静态博客页面"></a>使用Bootstrap实现静态博客页面</h1><p>本节内容我们将了解：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-22-02.4ddfrrbaghk0.webp"                      alt="Snipaste_2020-12-01_14-22-02"                ></p><ol><li><p>页面布局设计</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-22-46.4iuntaa76ya0.webp"                      alt="Snipaste_2020-12-01_14-22-46"                ></p><ul><li>博客首页主要分成三大块：页面顶部博客的title(用于展示博客的名字、博客的作者)，页面左下方博客的主要内容，页面右下方博客最近的文章以及最热的文章等等</li><li>文章详情页主要分成两大块：页面顶部文章的title(用于展示文章的名字、文章发布的时间等等信息)，下方绝大部分的面积用于摆放文章的具体内容</li></ul></li><li><p>Bootstrap以及Bootstrap的栅格系统</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-53-11.4ww6boonowm0.webp"                      alt="Snipaste_2020-12-01_14-53-11"                ></p><p>Bootstrap来自美国的Twitter，是一个非常受欢迎的前端框架，Bootstrap是基于html、css以及js开发的，非常简单灵活，使得web开发非常敏捷，Bootstrap提供了很多控件，并且每个控件都是附带源码的，我们可以参照源码来进行页面的开发，我们可以登陆Bootstrap官网<a href="http://www.bootstrap.com进入Bootstrap的中文官网，如下图所示：">www.bootstrap.com进入Bootstrap的中文官网，如下图所示：</a><br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-41-13.1g5q3aydrkjk.webp"                      alt="Snipaste_2020-12-01_14-41-13"                ></p><p>点击组件可以查看Bootstrap所提供的组件，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-42-52.45k83gfvuow0.webp"                      alt="Snipaste_2020-12-01_14-42-52"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-43-55.2hsal4hhnvm0.webp"                      alt="Snipaste_2020-12-01_14-43-55"                ></p><p>点击下拉菜单可以看到既显示了菜单的样子还提供了相关的源码，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-45-10.6oqbpwgnjfs0.webp"                      alt="Snipaste_2020-12-01_14-45-10"                ></p><p>以上还有好多类似下拉菜单的组件，这些组件在web开发的时候都是非常受欢迎的</p><p>除了组件Bootstrap还提供了一些全局的css样式，点击全局css样式，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-49-56.4a9hfxf79yg0.webp"                      alt="Snipaste_2020-12-01_14-49-56"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-50-18.6dtnftdphqc0.webp"                      alt="Snipaste_2020-12-01_14-50-18"                ></p><p>里面有排版、代码、表格、表单等等的一些内容，我们可以基于里面提供的代码进行一系列的开发</p></li><li><p>栅格系统把页面均分为12等份</p><p>图示如下：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-55-20.g4yc6734peo.webp"                      alt="Snipaste_2020-12-01_14-55-20"                ></p><ul><li><p>博客首页细化规划图</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-56-44.30kxsknvxzs0.webp"                      alt="Snipaste_2020-12-01_14-56-44"                ></p></li><li><p>根据以上规划，完成博客首页的布局</p><p>打开pycharm，在blog目录下面新建一个目录命名为templates，在templates目录下面新建一个index.html,点击确定后系统会自动生成一个html骨架，把title修改为三小时  入门Django web框架，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_15-08-53.218s7s1t3m2o.webp"                      alt="Snipaste_2020-12-01_15-08-53"                ></p><p>然后我们需要引进Bootstrap的一些资源，来到Bootstrap中文官网，点击起步，把下图中的链接(Bootstrap使用的一些静态文件)拷贝到刚刚创建的index.html中，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_15-12-17.1bdwkzmfmu3k.webp"                      alt="Snipaste_2020-12-01_15-12-17"                ></p><p>可以把可选的这一段删掉，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_15-13-06.3j7domu4c2i0.webp"                      alt="Snipaste_2020-12-01_15-13-06"                ></p><p>然后再加入头部，主体，以及右侧的部分，添加完后整体的代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>三小时入门Django web框架<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container page-header&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>三小时入门Django web框架</span><br><span class="line">        <span class="tag">&lt;<span class="name">small</span>&gt;</span> —— by lihoujian<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">page-header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container page-body&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-9&quot;</span> <span class="attr">role</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;body-main&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我的梦想<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　我小时候的梦想是要许许多多的玩具和许许多多的零食可吃；渐渐的长大了一点，我的梦想是要一辆大车还有一栋漂漂亮亮的小房子，可以安居乐业；慢慢的我长大了读上了中学，我又有了新的梦想，就是想考取一所重点学校，这样可以有所未来。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　然而这些梦想渐渐的离我而去，给我展翅高飞，飞向蓝天的梦想的翅膀断了，使我掉落深山<span class="symbol">&amp;amp;</span>而那些给我力量，给我前进，给我目标的梦想也离我而去，是我孤掌难鸣，不得不放弃。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　而那些时候，因为有一点挫折都受不起的我，在困难面前不得不低头。那是因为我小时候爸妈都很惯我，虽然家里不是很富裕，但也是可以吃的饱穿的暖；虽然家具不是很全，但也有收音机、黑白电视、小摩托、立式风扇等等。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　餐桌上虽然没有满汉全席，但也有母亲做出那些十全十美的美味佳肴。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　我就是在这样一个美好的环境，一个温馨的家庭中产生，生活的。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　自从那次挫折之后，我的自信，我的力量，已经魂飞魄散<span class="symbol">&amp;amp;</span>了。而我却沉沉闷闷一天一个样。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　后来，再一次巧遇之后，我认识了一位陌生人<span class="symbol">&amp;amp;</span>他也有过我这样的经历，从而他也在困难中指点了我，是我重新振作，有了信心，有了力量。我始终记得他曾经说过：不要在意其他因素，做好自己就好，不到要做好还要做最棒的。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　听了他的劝言，我试着做了自己一回，自己大胆创新，自己闯关，慢慢的找回了我的自信。从那时梦想的翅膀接上了。我又有了一个梦想就是做最好的自己。在面对事物的时候，我能坚持，因为我知道能坚持就是成功的第一步。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　然后慢慢的，我找回了自信，面对挫折时能压制自己，能冷静对待。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　这双梦想的翅膀有点摇摇晃晃，不稳定，渐渐的这双翅膀又掉落了。因为挫折面前可以抵挡的翅膀然而在别人的非言非语中而丧失。让我有丢失了信心，丢失了面对生活的希望，丧失了面对自己的希望。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　然而在我最无助的时候，是我的朋友，不！是我的兄弟帮助了我，帮我舒散心情，帮我排忧解难，帮我引领前方。他们也带动我去参加各项活动，来提高我的自信。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　从中我认识了一位学长，是他开导了我，是他让我明白什么才是最棒的自己。他曾说过：在别人的讽刺中锻炼自己，在别人的嘲笑中磨炼自己。记得这句话，他又跟我讲了一个故事，这个故事让我更加有信心找回自我了，更有信心做回自己。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　那双折断了的梦想的翅膀又重新长了出来，有了新的生命，从此再也不会被折断了，因为这双新生的翅膀更有力量更有魄力，能飞得更高，飞得更远。因为他想那些材狼匍匐在他的脚下，自己展翅高飞。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我的爸爸<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　你，带着我的爱与崇敬，伴我成长。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　<span class="symbol">&amp;mdash;</span><span class="symbol">&amp;mdash;</span>题记<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　你，也许是世界上最失职<span class="symbol">&amp;amp;</span>的父亲，但却是世界上最称职的医生；你，也许从来没有认同<span class="symbol">&amp;amp;</span>过你的女儿，但却曾为她骄傲；你，也许从来没有关心<span class="symbol">&amp;amp;</span>过你的女儿，但却百度过她<span class="symbol">&amp;hellip;</span><span class="symbol">&amp;hellip;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　狂风暴雨，阻挡不了你前行的脚步；儿女呼唤，挽回不了你救人的决心。多少年来，一切从未变过。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　爸爸，爸爸，你要去哪里呀？夜已静，方圆百里，唯有那户人家映出了微弱的灯光，那是出诊的信号。被人们尊称为王医生的你，因为出夜诊患了那个动不动就咳出血丝的怪病，因为出夜诊摔过很多次，因为出夜诊一夜未合眼过。可是，爸爸，你为何要那么执着，又为何那般地不听劝告？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　爸爸，爸爸，你要快点醒来。血泊中的你，没有了往日的精神，没有了往日的笑容，爸爸，你是那么的虚弱，你是那么的刺眼<span class="symbol">&amp;amp;</span>。爸爸，你为何要去西北工作，为什么那么出色，出色到连饭都来不及吃？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　爸爸，你没有教过我1+1=2<span class="symbol">&amp;amp;</span>，是你忙忘了吗？那你为什么还要教我多看书呢？爸爸，你没有教过我化学方程式<span class="symbol">&amp;amp;</span>，是你忙忘了吗？那你为什么要告诉我化学很重要呢？爸爸，你没有教过我太多太多，那你为什么使我从容、乖巧、阳光而又善良呢？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　我的爸爸，你是我的神话，虽然你没有三头六臂，你不可以刀枪不入，但是你为我撑起了一片天，为我承担了许多许多。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　爸爸，我们都不是不明理的小孩，你没有必要在我们面前一切美好，更不该为了不让我们害怕，不允许我们去看受伤的你，那几道疤痕永远都抹不去你的英俊，你的气质。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　我和弟弟都是坚强的孩子，然而那一天，听到你受伤后，我和他抱头痛哭了。毕竟，这么多年来，你匀给我们的时间真的太少太少了，少得我们从来没有机会去报答你，少得我们只有享受你带来荣耀的资格。如果可以自私一回，我不稀罕别人的敬佩，我不稀罕身边所有的赞赏，我只希望你是一个普普通通的人，我只希望你可以多匀一点时间给我们，我只希望一家可以多吃几顿团圆饭。而现在，我只求一家平平安安、快快乐乐就好。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　爸爸，我爱你！！！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3&quot;</span> <span class="attr">role</span>=<span class="string">&quot;complementary&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3&quot;</span> <span class="attr">role</span>=<span class="string">&quot;complementary&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>最新文章<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章6<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章7<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章8<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章9<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>页面效果如下：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-10-58.53q4zu9fjr80.webp"                      alt="Snipaste_2020-12-01_22-10-58"                ></p></li><li><p>文章详情页细化规划图</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-13-21.53r7zjkbgb40.webp"                      alt="Snipaste_2020-12-01_22-13-21"                ></p><p>我们再templates中再新建一个detail.html,直接把index.html</p><p>中的代码复制过去修改一下：修改之后的代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>三小时入门Django web框架<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container page-header&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>文章标题1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">page-header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container body-main&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　我小时候的梦想是要许许多多的玩具和许许多多的零食可吃；渐渐的长大了一点，我的梦想是要一辆大车还有一栋漂漂亮亮的小房子，可以安居乐业；慢慢的我长大了读上了中学，我又有了新的梦想，就是想考取一所重点学校，这样可以有所未来。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　然而这些梦想渐渐的离我而去，给我展翅高飞，飞向蓝天的梦想的翅膀断了，使我掉落深山<span class="symbol">&amp;amp;</span>而那些给我力量，给我前进，给我目标的梦想也离我而去，是我孤掌难鸣，不得不放弃。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　而那些时候，因为有一点挫折都受不起的我，在困难面前不得不低头。那是因为我小时候爸妈都很惯我，虽然家里不是很富裕，但也是可以吃的饱穿的暖；虽然家具不是很全，但也有收音机、黑白电视、小摩托、立式风扇等等。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　餐桌上虽然没有满汉全席，但也有母亲做出那些十全十美的美味佳肴。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　我就是在这样一个美好的环境，一个温馨的家庭中产生，生活的。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　自从那次挫折之后，我的自信，我的力量，已经魂飞魄散<span class="symbol">&amp;amp;</span>了。而我却沉沉闷闷一天一个样。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　后来，再一次巧遇之后，我认识了一位陌生人<span class="symbol">&amp;amp;</span>他也有过我这样的经历，从而他也在困难中指点了我，是我重新振作，有了信心，有了力量。我始终记得他曾经说过：不要在意其他因素，做好自己就好，不到要做好还要做最棒的。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　听了他的劝言，我试着做了自己一回，自己大胆创新，自己闯关，慢慢的找回了我的自信。从那时梦想的翅膀接上了。我又有了一个梦想就是做最好的自己。在面对事物的时候，我能坚持，因为我知道能坚持就是成功的第一步。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　然后慢慢的，我找回了自信，面对挫折时能压制自己，能冷静对待。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　这双梦想的翅膀有点摇摇晃晃，不稳定，渐渐的这双翅膀又掉落了。因为挫折面前可以抵挡的翅膀然而在别人的非言非语中而丧失。让我有丢失了信心，丢失了面对生活的希望，丧失了面对自己的希望。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　然而在我最无助的时候，是我的朋友，不！是我的兄弟帮助了我，帮我舒散心情，帮我排忧解难，帮我引领前方。他们也带动我去参加各项活动，来提高我的自信。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　从中我认识了一位学长，是他开导了我，是他让我明白什么才是最棒的自己。他曾说过：在别人的讽刺中锻炼自己，在别人的嘲笑中磨炼自己。记得这句话，他又跟我讲了一个故事，这个故事让我更加有信心找回自我了，更有信心做回自己。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　那双折断了的梦想的翅膀又重新长了出来，有了新的生命，从此再也不会被折断了，因为这双新生的翅膀更有力量更有魄力，能飞得更高，飞得更远。因为他想那些材狼匍匐在他的脚下，自己展翅高飞。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-23-02.5ru3k97q1wo0.webp"                      alt="Snipaste_2020-12-01_22-23-02"                ></p></li></ul></li></ol><h1 id="初识Django的模板系统"><a href="#初识Django的模板系统" class="headerlink" title="初识Django的模板系统"></a>初识Django的模板系统</h1><p>本节内容我们将了解：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-25-18.4pgcq96raly0.webp"                      alt="Snipaste_2020-12-01_22-25-18"                ></p><ol><li><p>模板系统出现的原因(模板系统简介)</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-27-03.5qvmwzete9k0.webp"                      alt="Snipaste_2020-12-01_22-27-03"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-28-54.62c3ojqtnu80.webp"                      alt="Snipaste_2020-12-01_22-28-54"                ></p></li><li><p>基本语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-29-45.37ocr85hcaa0.webp"                      alt="Snipaste_2020-12-01_22-29-45"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-30-39.4wstsyuar2u0.webp"                      alt="Snipaste_2020-12-01_22-30-39"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-31-30.5hludaelkf00.webp"                      alt="Snipaste_2020-12-01_22-31-30"                ></p></li></ol><h1 id="使用模板系统渲染博客页面"><a href="#使用模板系统渲染博客页面" class="headerlink" title="使用模板系统渲染博客页面"></a>使用模板系统渲染博客页面</h1><p>本节内容我们将从以下方面入手：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-34-32.1fy55du73vsw.webp"                      alt="Snipaste_2020-12-01_22-34-32"                ></p><ol><li><p>渲染博客首页</p><p>来到pycharm，我们首先改造博客的首页，在这里我们将会通过静态系统把原来的静态内容都替换掉，比如原来的文章内容，以及文章标题等等，还有下方的最新文章；</p><ul><li><p>替换文章标题</p>,图下图所示：<p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-02_14-58-10.3pzh07m9t4a0.webp"                      alt="Snipaste_2020-12-02_14-58-10"                ></p></li><li><p>替换文章内容</p><p>去掉title下面的p标签里面的内容，然后替换为，如下如所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-02_15-09-19.6jcfcsuownc.webp"                      alt="Snipaste_2020-12-02_15-09-19"                ></p><p>再用for循环优化一下：</p><p>直接使用一个标签就好了，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-02_15-25-14.2g12vx79o7wg.webp"                      alt="Snipaste_2020-12-02_15-25-14"                ></p></li><li><p>最新文章内容的替换</p><p>只使用一个h4标签,用模板语法的for循环遍历，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-02_15-29-54.6ksfstum0y00.webp"                      alt="Snipaste_2020-12-02_15-29-54"                ></p></li></ul><p>但是article_list的内容哪里来呢？接下来我们就来实现返回article_liest的视图函数，打开views.py文件，定义一个函数</p><p>get_index_page(), Article.objects.all()取出所有函数赋值给all_article然后返回，render()函数把这个模板系统和数据进行渲染然后返回，render()需要接收一个request参数和首页的模板，页面需要的数据要用一个字典进行包裹，完整定义如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-02_15-34-07.9zpdyp9sbf4.webp"                      alt="Snipaste_2020-12-02_15-34-07"                ></p><p>同时templates目录下面要建立blog目录，把刚才实现的index.html和detail.html放在里面，因为我们调用render的时候指定了路径，会自动搜索templates下面的blog目录然后是indexl.html， 然后进行路由的配置，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_18-52-26.3mg98xk2dfa0.webp"                      alt="Snipaste_2020-12-03_18-52-26"                ></p><p>启动浏览器后就可以看到页面：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_18-53-34.w65e6fg2qa8.webp"                      alt="Snipaste_2020-12-03_18-53-34"                ></p></li><li><p>完成文章详情页</p><p>我们先来设计刚刚的detail.html,如图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_20-44-02.lx0aq6v764g.webp"                      alt="Snipaste_2020-12-03_20-44-02"                ></p><p>然后回到views.py定义一个函数get_detail_page(request),如图所示:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_20-45-50.2c8lxd3ocm1w.webp"                      alt="Snipaste_2020-12-03_20-45-50"                ></p><p>配置路由：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_20-54-13.2bw3qz5msdgk.webp"                      alt="Snipaste_2020-12-03_20-54-13"                ></p><p>然后在路由器中输入127.0.0.1:8000/blog/detail，如图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_20-59-02.1946h89fq3a8.webp"                      alt="Snipaste_2020-12-03_20-59-02"                ></p></li></ol><h1 id="实现文章详情页面的跳转"><a href="#实现文章详情页面的跳转" class="headerlink" title="实现文章详情页面的跳转"></a>实现文章详情页面的跳转</h1><p>上一章节的不足之处：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_21-31-49.72gbi0a7xy00.webp"                      alt="Snipaste_2020-12-03_21-31-49"                ></p><p>本节内容我们将从以下方面入手：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_21-32-59.m52yoznhsg0.webp"                      alt="Snipaste_2020-12-03_21-32-59"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_21-33-55.43t3xv3dukm0.webp"                      alt="Snipaste_2020-12-03_21-33-55"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_21-35-08.526ab1qq9sc.webp"                      alt="Snipaste_2020-12-03_21-35-08"                ></p><ol><li><p>设计文章详情页URL</p><p>首先设计应用路由，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_21-37-46.21uci85tk38g.webp"                      alt="Snipaste_2020-12-03_21-37-46"                ></p><p>接下来改造函数视图：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-08-23.4ax7ps4zlta0.webp"                      alt="Snipaste_2020-12-03_22-08-23"                ></p><p>然后在浏览器中就能看到点击标题返回详情页了：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-09-42.4lspgjzawdu0.webp"                      alt="Snipaste_2020-12-03_22-09-42"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-09-47.71ao393zha00.webp"                      alt="Snipaste_2020-12-03_22-09-47"                ></p></li></ol><h1 id="实现上下篇文章跳转"><a href="#实现上下篇文章跳转" class="headerlink" title="实现上下篇文章跳转"></a>实现上下篇文章跳转</h1><p>添加两个按钮，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-12-12.63zh4zi44cc0.webp"                      alt="Snipaste_2020-12-03_22-12-12"                ></p><ol><li><p>首先修改文章详情页的html代码</p><p>去Bootstrap中文网挑选Button</p><p>首先点击组件</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-14-35.3aha2t5al140.webp"                      alt="Snipaste_2020-12-03_22-14-35"                ></p><p>在右侧的分页找到翻页</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-15-42.1oggq2jf2x28.webp"                      alt="Snipaste_2020-12-03_22-15-42"                ></p><p>里面的默认实例中的prebious和next就是我们需要的上一页和下一页需要的按钮</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-16-00.40dxikfkoh40.webp"                      alt="Snipaste_2020-12-03_22-16-00"                ></p><p>直接拷贝里面的代码，来到pycharm中的detail.html,把刚才拷贝的代码放在一个div里面，并改名，如图所示：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-23-18.4lf0qusnq1i0.webp"                      alt="Snipaste_2020-12-03_22-23-18"                ></p><p>然后修改views.py,如下代码所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_detail_page</span>(<span class="params">request, article_id</span>):</span></span><br><span class="line">    all_article = Article.objects.<span class="built_in">all</span>()</span><br><span class="line">    curr_article = <span class="literal">None</span></span><br><span class="line">    previous_index = <span class="number">0</span></span><br><span class="line">    next_index = <span class="number">0</span></span><br><span class="line">    previous_article = <span class="literal">None</span></span><br><span class="line">    next_article = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> index, article <span class="keyword">in</span> <span class="built_in">enumerate</span>(all_article):</span><br><span class="line">        <span class="keyword">if</span> index == <span class="number">2</span>:</span><br><span class="line">            previous_index = <span class="number">2</span></span><br><span class="line">            next_index = index + <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> index == <span class="built_in">len</span>(all_article) + <span class="number">1</span>:</span><br><span class="line">            previous_index = index</span><br><span class="line">            next_index = index</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            previous_index = index - <span class="number">1</span></span><br><span class="line">            next_index = index + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> article.article_id == article_id:</span><br><span class="line">            curr_article = article</span><br><span class="line">            previous_article = all_article[previous_index]</span><br><span class="line">            next_article = all_article[next_index]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    section_list = curr_article.content.split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;blog/detail.html&#x27;</span>,</span><br><span class="line">                  &#123;</span><br><span class="line">                      <span class="string">&#x27;curr_article&#x27;</span>: curr_article,</span><br><span class="line">                      <span class="string">&#x27;section_list&#x27;</span>: section_list,</span><br><span class="line">                      <span class="string">&#x27;previous_article&#x27;</span>: previous_article,</span><br><span class="line">                      <span class="string">&#x27;next_article&#x27;</span>: next_article</span><br><span class="line">                  &#125;</span><br><span class="line">                )</span><br></pre></td></tr></table></figure><p>然后打开浏览器输入<a class="link"   href="http://127.0.0.1:8000/blog/detail/3%E6%9B%B4%E6%94%B9%E5%90%8E%E9%9D%A2%E7%9A%84%E9%A1%B5%E7%A0%81%E4%BC%9A%E7%9C%8B%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9A%84%E8%AF%A6%E6%83%85%E9%A1%B5%EF%BC%9A" >http://127.0.0.1:8000/blog/detail/3更改后面的页码会看到对应的详情页：<i class="fas fa-external-link-alt"></i></a></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_12-00-57.me8md3bubgg.webp"                      alt="Snipaste_2020-12-04_12-00-57"                ></p></li></ol><h1 id="实现分页功能"><a href="#实现分页功能" class="headerlink" title="实现分页功能"></a>实现分页功能</h1><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_12-01-58.24z36xjnkc5c.webp"                      alt="Snipaste_2020-12-04_12-01-58"                ></p><ol><li><p>Bootstrap实现分页按钮</p><p>打开Bootstrap打开组件点击分页中的默认分页，复制其中的代码到index.html的页脚中，如图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_12-24-20.7ierayai3lg0.webp"                      alt="Snipaste_2020-12-04_12-24-20"                ></p><p>然后在进行编辑使其居中，最终效果是：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_12-25-23.4d1x1gqg02w0.webp"                      alt="Snipaste_2020-12-04_12-25-23"                ></p></li><li><p>设计分页URL</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_12-26-31.cyfuhydpn5s.webp"                      alt="Snipaste_2020-12-04_12-26-31"                ></p><p>进行逻辑代码的编写：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_12-35-52.b7is4hamsp4.webp"                      alt="Snipaste_2020-12-04_12-35-52"                ></p><p>以上代码获取请求参数然后验证是否获取成功，在控制台可以看到刚刚请求的参数：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_12-43-30.73gul2r6ya00.webp"                      alt="Snipaste_2020-12-04_12-43-30"                ></p></li><li><p>使用Django分页组件实现分页功能</p><p>先使用Django shell演示分页组件的使用方法：</p><ul><li><p>第一步导入Django的分页组件：from django.core.paginator import Paginator</p></li><li><p>在定义一个数组l</p></li><li><p>使用分页组件把数组分成几个部分：p = Paginator(l, 2)</p><p>Paginator()接收两个参数，一个是数组另一个是每一页的数目</p><p>可以用num_pages方法打印分页的数量，用count方法打印总的内容的数量，也就是列表的长度，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_13-04-51.17lc2tl59c68.webp"                      alt="Snipaste_2020-12-04_13-04-51"                ></p></li><li><p>接着我们把第一页拿出来</p><p>通过page()方法可以把对应的页提取出来，通过objects_list方法可把对应的页的内容提取出来，每一个page还有两个方法page_next和page_previous来判断此页面是否有上一页或者下一页，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_13-19-07.36h86bxi67c0.webp"                      alt="Snipaste_2020-12-04_13-19-07"                ></p></li></ul><p>接下来把Django分页组件应用到视图文件中去：</p><p>get_index_page函数如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_index_page</span>(<span class="params">request</span>):</span></span><br><span class="line">    page = request.GET.get(<span class="string">&#x27;page&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> page:</span><br><span class="line">        page = <span class="built_in">int</span>(page)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;page param:&#x27;</span>, page)</span><br><span class="line"></span><br><span class="line">    all_article = Article.objects.<span class="built_in">all</span>()</span><br><span class="line">    paginator = Paginator.page(all_article, <span class="number">3</span>)</span><br><span class="line">    page_num = paginator.num_pages</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;page_num:&#x27;</span>, page_num)</span><br><span class="line">    page_article_list = paginator.page(page)</span><br><span class="line">    <span class="keyword">if</span> page_article_list.has_next():</span><br><span class="line">        next_page = page + <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        next_page = page</span><br><span class="line">    <span class="keyword">if</span> page_article_list.has_previous():</span><br><span class="line">        previous_page = page - <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        previous_page = page</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;blog/index.html&#x27;</span>,</span><br><span class="line">                  &#123;</span><br><span class="line">                      <span class="string">&#x27;article_list&#x27;</span>: page_article_list,</span><br><span class="line">                      <span class="string">&#x27;page_num&#x27;</span>: <span class="built_in">range</span>(<span class="number">1</span>, page_num + <span class="number">1</span>),</span><br><span class="line">                      <span class="string">&#x27;curr_page&#x27;</span>: page,</span><br><span class="line">                      <span class="string">&#x27;next_page&#x27;</span>: next_page,</span><br><span class="line">                      <span class="string">&#x27;previous&#x27;</span>: previous_page</span><br><span class="line">                  &#125;</span><br><span class="line">                  )</span><br></pre></td></tr></table></figure><p>然后再修改一下index.html:<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_19-48-56.2szwbuj09qm0.webp"                      alt="Snipaste_2020-12-04_19-48-56"                ></p><p>重启一下浏览器就可以发现分页功能的实现：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_19-50-28.7ayn2ozfzqo0.webp"                      alt="Snipaste_2020-12-04_19-50-28"                ></p><h1 id="20-实现最近文章列表"><a href="#20-实现最近文章列表" class="headerlink" title="20. 实现最近文章列表"></a>20. 实现最近文章列表</h1><p>我们可以根据publish_date的逆序来取前5个文章，具体操作如下：</p><p>先修改views.py</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_19-56-53.3mkakwyh0wu0.webp"                      alt="Snipaste_2020-12-04_19-56-53"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_19-57-24.zr4yfcklwjk.webp"                      alt="Snipaste_2020-12-04_19-57-24"                ></p><p>然后修改index.html:<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_19-57-48.29uuhmcaei4g.webp"                      alt="Snipaste_2020-12-04_19-57-48"                ></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;课程内容所需要的基础&quot;&gt;&lt;a href=&quot;#课程内容所需要的基础&quot; class=&quot;headerlink&quot; title=&quot;课程内容所需要的基础&quot;&gt;&lt;/a&gt;课程内容所需要的基础&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://imgtu.com/i/bd9v8A&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于MySQL的一些整理</title>
    <link href="http://example.com/2022/03/03/%E5%85%B3%E4%BA%8EMySQL%E7%9A%84%E4%B8%80%E4%BA%9B%E6%95%B4%E7%90%86/"/>
    <id>http://example.com/2022/03/03/%E5%85%B3%E4%BA%8EMySQL%E7%9A%84%E4%B8%80%E4%BA%9B%E6%95%B4%E7%90%86/</id>
    <published>2022-03-03T09:46:30.000Z</published>
    <updated>2022-03-08T01:05:41.673Z</updated>
    
    <content type="html"><![CDATA[<h3 id="内连接、左连接、右连接以及全连接查询"><a href="#内连接、左连接、右连接以及全连接查询" class="headerlink" title="内连接、左连接、右连接以及全连接查询"></a>内连接、左连接、右连接以及全连接查询</h3><h4 id="内连接查询"><a href="#内连接查询" class="headerlink" title="内连接查询"></a>内连接查询</h4><p>关键字: <strong>inner join…on</strong></p><p>语句: </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> a_table a <span class="keyword">inner</span> <span class="keyword">join</span> b_table b <span class="keyword">on</span> a.a_id <span class="operator">=</span> b.b_id;</span><br></pre></td></tr></table></figure><p>说明: 组合两个表中的记录，返回关联字段相符的记录，<strong>也就是返回两个表的交集(阴影)部分</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173658980.3n71eo8cs860.webp"                      alt="20181005173658980"                ></p><p>案例: 在boy表和girl表中查出两表hid字段一致的姓名(gname，bname),boy表和girl 表如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173111241.1gg9di3elj1c.webp"                      alt="20181005173111241"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173203764.2a1cfu2vx6zo.webp"                      alt="20181005173203764"                ></p><p>采用内连接查询方式，SQL语句如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> boy.hid,boy.bname,girl.gname <span class="keyword">FROM</span> boy <span class="keyword">INNER</span> <span class="keyword">JOIN</span> girl <span class="keyword">ON</span> girl.hid <span class="operator">=</span> boy.hid;</span><br></pre></td></tr></table></figure><p>查询结果如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173326725.3uo8mmub3b40.webp"                      alt="20181005173326725"                ></p><h4 id="左连接查询"><a href="#左连接查询" class="headerlink" title="左连接查询"></a>左连接查询</h4><p>关键字: <strong>left join on / left outer join on</strong></p><p>语句:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  <span class="operator">*</span> <span class="keyword">FROM</span> a_table a <span class="keyword">left</span> <span class="keyword">join</span> b_table b <span class="keyword">ON</span> a.a_id <span class="operator">=</span> b.b_id;</span><br></pre></td></tr></table></figure><p>说明: <strong>left join 是left outer join的简写，它的全称是左外连接，是外连接中的一种。 左(外)连接，左表(a_table)的记录将会全部表示出来，而右表(b_table)只会显示符合搜索条件的记录。右表记录不足的地方均为NULL</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005211357263.5d61bb9exo00.webp"                      alt="20181005211357263"                ></p><p>案例: 在boy表和girl 表中左连接查询，boy表和girl 表如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/1.3if7wcwes3y0.webp"                      alt="1"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/2.eyt7d9l08rc.webp"                      alt="2"                ></p><p>采用左连接查询方式，SQL语句如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> boy.hid,boy.bname,girl.gname <span class="keyword">FROM</span> boy <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> girl <span class="keyword">ON</span> girl.hid <span class="operator">=</span> boy.hid;</span><br></pre></td></tr></table></figure><p>查询结果如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005213127795.4005998ijic0.webp"                      alt="20181005213127795"                ></p><h4 id="右连接查询"><a href="#右连接查询" class="headerlink" title="右连接查询"></a>右连接查询</h4><p>关键字: <strong>right join on / right outer join on</strong></p><p>语句: <strong>SELECT * FROM a_table a right outer join b_table b on a.a_id = b.b_id;</strong></p><p>说明: <strong>right join是right outer join的简写，它的全称是右外连接，是外连接中的一种。与左(外)连接相反，右(外)连接，左表(a_table)只会显示符合搜索条件的记录，而右表(b_table)的记录将会全部表示出来。左表记录不足的地方均为NULL</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005213457811.4lswjrs1o5m0.webp"                      alt="20181005213457811"                ></p><p>案例解释: 在boy表和girl表中右连接查询，boy表和girl 表如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173111241-(2).4vok0qpf0ik0.webp"                      alt="20181005173111241-(2)"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173203764-(2).1zk4of1jk48w.webp"                      alt="20181005173203764-(2)"                ></p><p>采用内连接查询方式:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> boy.hid,boy.bname,girl.gname <span class="keyword">FROM</span> boy <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> girl <span class="keyword">ON</span> girl.hid <span class="operator">=</span> boy.hid;</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005213611391.53bdafp885g0.webp"                      alt="20181005213611391"                ></p><h4 id="全连接查询"><a href="#全连接查询" class="headerlink" title="全连接查询"></a>全连接查询</h4><p>关键字: <strong>union /union all</strong></p><p>语句: (select colum1,colum2…columN from tableA ) union (select colum1,colum2…columN from tableB );</p><p>或 (select colum1,colum2…columN from tableA ) union all (select colum1,colum2…columN from tableB );</p><p>使用union语句注意事项:</p><ol><li><p><strong>通过union连接的SQL它们分别单独取出的列数必须相同</strong></p></li><li><p><strong>用union 时，完全相等的行，将会被合并，union all则不会，由于合并比较耗时，一般不直接使用 union 进行合并，而是通常采用union all 进行合并</strong></p></li><li><p><strong>被union 连接的sql 子句，单个子句中不用写order by ，因为不会有排序的效果。但可以对最终的结果集进行排序</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> id,name <span class="keyword">from</span> A <span class="keyword">order</span> <span class="keyword">by</span> id) <span class="keyword">union</span> <span class="keyword">all</span> (<span class="keyword">select</span> id,name <span class="keyword">from</span> B <span class="keyword">order</span> <span class="keyword">by</span> id); <span class="operator">/</span><span class="operator">/</span>没有排序效果</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">select</span> id,name <span class="keyword">from</span> A ) <span class="keyword">union</span> <span class="keyword">all</span> (<span class="keyword">select</span> id,name <span class="keyword">from</span> B ) <span class="keyword">order</span> <span class="keyword">by</span> id; <span class="operator">/</span><span class="operator">/</span>有排序效果</span><br></pre></td></tr></table></figure></li></ol><p>案例解释: 将a表和b表合并，表结构如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006095856974.z0992l6jn0g.webp"                      alt="20181006095856974"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006095918725.41oi5sczcww0.webp"                      alt="20181006095918725"                ></p><h5 id="union全连接查询"><a href="#union全连接查询" class="headerlink" title="union全连接查询"></a>union全连接查询</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">select</span> id,num <span class="keyword">from</span> a) <span class="keyword">union</span> (<span class="keyword">select</span> id,num <span class="keyword">from</span> b);</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006100043809.6tcq9p7hvew0.webp"                      alt="20181006100043809"                ></p><p>nuion会自动将完全重复的数据去除掉，a、b表中”c”的值都为15，所以只会显示一行</p><h5 id="union-all全连接查询"><a href="#union-all全连接查询" class="headerlink" title="union all全连接查询"></a>union all全连接查询</h5><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006100254174.6atmwcvn4g40.webp"                      alt="20181006100254174"                ></p><p>union all会保留那些重复的数据</p><h3 id="幻读、脏读、不可重复读"><a href="#幻读、脏读、不可重复读" class="headerlink" title="幻读、脏读、不可重复读"></a>幻读、脏读、不可重复读</h3><h4 id="事物隔离级别"><a href="#事物隔离级别" class="headerlink" title="事物隔离级别"></a>事物隔离级别</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20200919145047911.6w3l5hj97r80.webp"                      alt="20200919145047911"                ></p><h4 id="什么是幻读"><a href="#什么是幻读" class="headerlink" title="什么是幻读"></a>什么是幻读</h4><p>幻读: 当用户读取某一范围的数据行时，另一个事务又在该范围内插入了新行，当用户再读取该范围的数据行时，会发现有新的“幻影” 行</p><h4 id="什么是脏读"><a href="#什么是脏读" class="headerlink" title="什么是脏读"></a>什么是脏读</h4><p>脏读: 读取到了未提交的数据(如果事务这时候回滚了，那么第二个事务就读到了脏数据)</p><h4 id="什么是不可重复读"><a href="#什么是不可重复读" class="headerlink" title="什么是不可重复读"></a>什么是不可重复读</h4><p>同一个事务中，对于同一数据，执行完全相同的select语句时可能看到不一样的结果</p><h4 id="幻读与不可重复读的区别"><a href="#幻读与不可重复读的区别" class="headerlink" title="幻读与不可重复读的区别"></a>幻读与不可重复读的区别</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/Snipaste_2022-03-03_18-46-28.63myylheyc80.webp"                      alt="Snipaste_2022-03-03_18-46-28"                ></p><h3 id="MySQL如何分页查询"><a href="#MySQL如何分页查询" class="headerlink" title="MySQL如何分页查询"></a>MySQL如何分页查询</h3><p><a class="link"   href="https://blog.csdn.net/weixin_39762838/article/details/110864382" >https://blog.csdn.net/weixin_39762838/article/details/110864382<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;内连接、左连接、右连接以及全连接查询&quot;&gt;&lt;a href=&quot;#内连接、左连接、右连接以及全连接查询&quot; class=&quot;headerlink&quot; title=&quot;内连接、左连接、右连接以及全连接查询&quot;&gt;&lt;/a&gt;内连接、左连接、右连接以及全连接查询&lt;/h3&gt;&lt;h4 id=&quot;内</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>浅谈一下我在我的小服务器上安装GitLab的坎坷历程</title>
    <link href="http://example.com/2022/02/25/%E6%B5%85%E8%B0%88%E4%B8%80%E4%B8%8B%E6%88%91%E5%9C%A8%E6%88%91%E7%9A%84%E5%B0%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E5%AE%89%E8%A3%85GitLab%E7%9A%84%E5%9D%8E%E5%9D%B7%E5%8E%86%E7%A8%8B/"/>
    <id>http://example.com/2022/02/25/%E6%B5%85%E8%B0%88%E4%B8%80%E4%B8%8B%E6%88%91%E5%9C%A8%E6%88%91%E7%9A%84%E5%B0%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E5%AE%89%E8%A3%85GitLab%E7%9A%84%E5%9D%8E%E5%9D%B7%E5%8E%86%E7%A8%8B/</id>
    <published>2022-02-25T07:36:30.000Z</published>
    <updated>2022-02-25T08:51:22.046Z</updated>
    
    <content type="html"><![CDATA[<p>云服务器系统: ubuntu18.04</p><p>云服务器配置:1核2G+50G(建议这个配置的配置下虚拟内存，详情点击<a class="link"   href="http://kest.club/2022/02/25/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B7%BB%E5%8A%A0%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/" >这里<i class="fas fa-external-link-alt"></i></a>查看)</p><p>首先我的服务器之前是安装过Docker的，所以我才决定用Docker来安装GitLab，如果还没安装Docker，请点击<a class="link"   href="https://blog.csdn.net/tlojy/article/details/83653246" >这里<i class="fas fa-external-link-alt"></i></a>跳转，先安装Docker</p><h4 id="关于GitLab版本的介绍"><a href="#关于GitLab版本的介绍" class="headerlink" title="关于GitLab版本的介绍"></a>关于GitLab版本的介绍</h4><p>GitLab有两个版本:</p><ul><li>Community Edition 社区版</li><li>Enterprise Edition 企业版，企业版比社区版功能更丰富，但需要授权码，如果没有授权码的情况下使用企业版相当于使用社区版</li></ul><h4 id="GitLab安装-以企业版为例"><a href="#GitLab安装-以企业版为例" class="headerlink" title="GitLab安装(以企业版为例)"></a>GitLab安装(以企业版为例)</h4><p>我们执行以下代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --detach --hostname gitlab-server --publish <span class="number">9090</span>:<span class="number">9090</span> --publish <span class="number">8022</span>:<span class="number">22</span> --name gitlab --restart always --volume /srv/gitlab/config:/etc/gitlab --volume /srv/gitlab/logs:/var/log/gitlab --volume /srv/gitlab/data:/var/opt/gitlab gitlab/gitlab-ee:latest</span><br></pre></td></tr></table></figure><p>如果你的终端显示没有权限，那就在命令的最开头加一个sudo，或者直接使用su命令然后输入root用户密码直接切换成root用户，如果你想以普通用户运行docker命令，那就需要将此普通用户加入到docker组中，使用以下命令将普通用户加入到docker组:(这里以test用户为例)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpasswd -a test docker</span><br></pre></td></tr></table></figure><p>然后我们来看看上面这一长串命令的各参数以及对应的值是啥意思:</p><p><a href="https://imgtu.com/i/bA4mQg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/02/25/bA4mQg.png"                      alt="bA4mQg.png"                ></a></p><p>这里有两个<code>--publish</code>参数，第一个是配置http的访问端口，这里我两个都配置的是9090端口，前一个9090代表云服务器的端口，后一个9090代表docker容器的端口，这两个端口是对接的，也就是说我们访问云服务的9090端口，就会跳进docker容器中的9090端口进行访问http服务，如果这个端口被占用了，那也可以设定其他的，总之就是设置你想以哪个端口访问docker容器中的GitLab，这两个端口都可随意设置，只要端口不被其他服务占用即可<br>第二个<code>--publish</code>参数那就是设置ssh的</p><p>然后我们还要配置下gitlab.rb这个配置文件，用以下命令进入:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /srv/gitlab/config/gitlab.rb</span><br></pre></td></tr></table></figure><ul><li><p>设置external_url</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## GitLab URL</span></span><br><span class="line"><span class="comment">##! URL on which GitLab will be reachable.</span></span><br><span class="line"><span class="comment">##! For more details on configuring external_url see:</span></span><br><span class="line"><span class="comment">##! https://docs.gitlab.com/omnibus/settings/configuration.html#configuring-the-external-url-for-gitlab</span></span><br><span class="line">external_url <span class="string">&#x27;http://192.168.199.175:9090&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>设置ssh_port</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### GitLab Shell settings for GitLab</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;gitlab_shell_ssh_port&#x27;</span>] = <span class="number">8022</span></span><br></pre></td></tr></table></figure></li></ul><p>以上external_url和ssh_port可能不好定位，如果一个个找那就是考验我们的眼睛，我们可以用vi或者vim的查看功能，输入<code>:</code>，然后跟上一个<code>/</code>再跟上你要搜索的字符串，如果有很多个的话使用<code>n</code>键定位到下一个，只有一个的话vim会提示已经到底了并且再继续按<code>n</code>键还是定位的同一个</p><p><strong>插一句</strong>: 我之前在docker上尝试了好多次然后到后面使用<code>docker ps</code>命令后面都提示<code>unhealthy</code>，这令我很苦恼，要不我为啥说坎坷呢，我查阅资料说在gitlab.rb这个配置文件中要把<code>worker_process = 2</code>这个配置项解除注释，或者改为<code>worker_process = 1</code>，后面我发现容器状态变为<code>healthy</code>了，可能是因为我改了这个叭</p><p>然后我们就可以重启GitLab容器使得设置生效了，使用以下命令:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker restart gitlab</span><br></pre></td></tr></table></figure><p>这个重启的过程稍微有点漫长，我们可以使用<code>docker ps</code>命令来查看容器的状态，如果显示<code>starting</code>那就是还在启动中，显示<code>healthy</code>那就是启动成功，若启动成功，我们就可以在浏览器中以<code>http://云服务器地址:9090</code>来访问GitLab了，这个时候就会要我们输入用户名和密码，在一个空的GitLab中，有一个初始用户叫<code>root</code>，但是我不知道密码啊，下面我们来看看如何设置密码</p><h4 id="设置默认密码"><a href="#设置默认密码" class="headerlink" title="设置默认密码"></a>设置默认密码</h4><ul><li><p>查看容器名称，其实容器名称我们在刚开始的一大段命令中就以<code>--name</code>指定了，如果记不住的话那就用以下命令查看下也行:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure></li><li><p>进入GitLab容器(这里以gitlab容器为例)，这个命令其实就是进入到了对应的主机，这里就是进入了gitlab-server这个主机，因为上面指定了主机名，输入<code>exit</code>便可返回宿主机</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it gitlab bash</span><br></pre></td></tr></table></figure></li><li><p>启动Ruby on Rails控制台(这个过程要稍微等一下)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rails console -e production</span><br></pre></td></tr></table></figure></li><li><p>搜索用户</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user = User.where(<span class="built_in">id</span>: <span class="number">1</span>).first</span><br></pre></td></tr></table></figure><p>这个id:1是从哪儿来的呢，这里有有个小技巧，我们访问这个形式的链接就会返回以下结果:</p><p>链接示例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">175.24</span><span class="number">.172</span><span class="number">.64</span>:<span class="number">9090</span>/api/v4/users?username=root</span><br></pre></td></tr></table></figure><p>返回结果示例:</p><p><a href="https://imgtu.com/i/bAbm4A"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/02/25/bAbm4A.png"                      alt="bAbm4A.png"                ></a></p><p>从上图中我们就得到了root用户的id</p></li><li><p>更换密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.password = <span class="string">&#x27;xxxxxx&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>确认更换密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.password_confirmation = <span class="string">&#x27;xxxxxx&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>保存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.save!</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;云服务器系统: ubuntu18.04&lt;/p&gt;
&lt;p&gt;云服务器配置:1核2G+50G(建议这个配置的配置下虚拟内存，详情点击&lt;a class=&quot;link&quot;   href=&quot;http://kest.club/2022/02/25/%E8%85%BE%E8%AE%AF%E4%B</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>腾讯云服务器添加虚拟内存</title>
    <link href="http://example.com/2022/02/25/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B7%BB%E5%8A%A0%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/"/>
    <id>http://example.com/2022/02/25/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B7%BB%E5%8A%A0%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/</id>
    <published>2022-02-25T02:49:30.000Z</published>
    <updated>2022-02-25T03:55:44.054Z</updated>
    
    <content type="html"><![CDATA[<p>我的小服务器是1核2G然后加50G的，这样有时候在上面运行服务就有点卡顿，特别是运行了Gitlab之后，下面我们来看看如何添加虚拟内存</p><h4 id="查看内存使用情况"><a href="#查看内存使用情况" class="headerlink" title="查看内存使用情况"></a>查看内存使用情况</h4><p>用<code>free</code>命令查看内存使用情况，我们会发现swap分区大小为0，这说明原来腾讯云服务器默认是没有划分swap分区的，所以由于我的服务器物理内存本身就很少，而且又没设置<a class="link"   href="https://so.csdn.net/so/search?q=swap&spm=1001.2101.3001.7020" >swap<i class="fas fa-external-link-alt"></i></a>分区，运行效果可想而知，稍有点并发量、或者恶意用户探测访问等，网站就很容易卡壳了</p><h4 id="swap的作用"><a href="#swap的作用" class="headerlink" title="swap的作用"></a>swap的作用</h4><p>swap是用来做<a class="link"   href="https://so.csdn.net/so/search?q=%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98&spm=1001.2101.3001.7020" >虚拟内存<i class="fas fa-external-link-alt"></i></a>的。虽然swap无法代替物理内存，但不可缺少</p><p>swap分区作用:当系统的物理内存不够用的时候，就需要将物理内存中的一部分空间释放出来，以供当前运行的程序使用。那些被释放的空间可能来自一些很长时间没有什么操作的程序，这些被释放的空间被临时保存到Swap空间中，等到那些程序要运行时，再从Swap中恢复保存的数据到内存中。这样，系统总是在物理内存不够时，才进行Swap交换</p><h4 id="创建swap的两种方式"><a href="#创建swap的两种方式" class="headerlink" title="创建swap的两种方式"></a>创建swap的两种方式</h4><ol><li>建立一个swap分区</li><li>创建一个swap交换文件</li></ol><p>运行速度: &gt; swap分区 &gt; swap文件</p><p>这里我不用建立分区这个方法，如果你是以下情况我也不建议:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当你的数据盘已经装了很多内容，不方便重新规划的话，也只好使用swap文件了。像我由于只有一块磁盘，而且磁盘已经装了不少内容，所以就没有选择磁盘格式化，而是选择创建swap文件。</span><br></pre></td></tr></table></figure><p>下面介绍创建swap文件的方法:</p><h4 id="创建swap文件"><a href="#创建swap文件" class="headerlink" title="创建swap文件"></a>创建swap文件</h4><h5 id="定义swap的大小及位置"><a href="#定义swap的大小及位置" class="headerlink" title="定义swap的大小及位置"></a>定义swap的大小及位置</h5><p>首先，选择你swap文件要放置的位置，比如直接在根目录/ 下创建或者选择一个目录，如/opt。比如我直接在根目录下创建，然后设置swap分区的名称为swapfile</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dd <span class="keyword">if</span>=/dev/zero of=/swapfile bs=1k count=<span class="number">4096000</span></span><br></pre></td></tr></table></figure><p>上面swapfile为你创建swap文件的名称，你可以根据需要改成你自己的名称，如bs 即blocksizes，每个块大小为1k;count=4096000,总大小为4G的文件。因为建立swap分区大小的标准一般为物理内存的两倍，而我的内存是2G，所以我选择swap文件大小为4G，当然，也要考虑你硬盘剩余容量的大小。我的硬盘还剩30G，所以再划分4G给swap文件绰绰有余。如果你的内存是0.5G，那么count大小可以选择1024000(1G)</p><h5 id="建立swap"><a href="#建立swap" class="headerlink" title="建立swap"></a>建立swap</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkswap /swapfile</span><br></pre></td></tr></table></figure><h5 id="启动swap"><a href="#启动swap" class="headerlink" title="启动swap"></a>启动swap</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon /swapfile</span><br></pre></td></tr></table></figure><h5 id="检查是否正确"><a href="#检查是否正确" class="headerlink" title="检查是否正确"></a>检查是否正确</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br></pre></td></tr></table></figure><p>或者:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon -s</span><br></pre></td></tr></table></figure><p>以上命令能看到到swap总量大小然后使用了多少</p><h5 id="设置开机自启swap文件"><a href="#设置开机自启swap文件" class="headerlink" title="设置开机自启swap文件"></a>设置开机自启swap文件</h5><p>原理:</p><p>修改 <strong>/etc/fstab</strong> 使其启动时自动mount<br>添加方法如下:</p><ul><li><p>先赋予**/etc/fstab**修改权限</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod <span class="number">777</span> /etc/fstab</span><br></pre></td></tr></table></figure></li><li><p>然后添加语句:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">&quot;/swapfile swap swap defaults 0 0&quot;</span> &gt;&gt;/etc/fstab</span><br></pre></td></tr></table></figure><p>这里注意: /swapfile 路径可以修改,可以根据创建的swap文件具体路径来配置</p></li></ul><h4 id="删除swap交换文件"><a href="#删除swap交换文件" class="headerlink" title="删除swap交换文件"></a>删除swap交换文件</h4><p>如果不再需要swap，可以清理该文件: <code>swapoff /swapfile</code></p><p>以上内容参考自: <a class="link"   href="https://blog.csdn.net/qq_29856169/article/details/115430525" >https://blog.csdn.net/qq_29856169/article/details/115430525<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我的小服务器是1核2G然后加50G的，这样有时候在上面运行服务就有点卡顿，特别是运行了Gitlab之后，下面我们来看看如何添加虚拟内存&lt;/p&gt;
&lt;h4 id=&quot;查看内存使用情况&quot;&gt;&lt;a href=&quot;#查看内存使用情况&quot; class=&quot;headerlink&quot; title=&quot;查</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2022-2-24使用到的Linux命令</title>
    <link href="http://example.com/2022/02/24/2022-2-24%E4%BD%BF%E7%94%A8%E5%88%B0%E7%9A%84Linux%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2022/02/24/2022-2-24%E4%BD%BF%E7%94%A8%E5%88%B0%E7%9A%84Linux%E5%91%BD%E4%BB%A4/</id>
    <published>2022-02-24T03:20:30.000Z</published>
    <updated>2022-03-03T01:57:54.013Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>ubuntu删除用户:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo userdel test </span><br><span class="line">cd /home/</span><br><span class="line">sudo rm -f test</span><br></pre></td></tr></table></figure><p>如果提示tese is a directory，那就使用以下命令递归删除此文件夹:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf test</span><br></pre></td></tr></table></figure></li></ol><p>​        删除单个文件可以使用<code>sudo rm -f test</code>，如果是文件夹那就需要递归删除了</p><p>​        这里做个解释:</p><p>​        -r 就是向下递归，不管有多少级目录，一并删除</p><p>​        -f 就是直接强行删除，不作任何提示的意思</p><ol start="2"><li><p>ubuntu添加用户</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser test</span><br></pre></td></tr></table></figure><p>然后后面会要求输入密码和确认密码，在接着什么work/home phone都可以直接enter</p></li><li><p>ubuntu修改主机名</p><ul><li><p>修改hostname文件，这里修改为robot-home:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/hostname</span><br></pre></td></tr></table></figure></li><li><p>修改hosts文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/hosts</span><br></pre></td></tr></table></figure></li></ul></li><li><p>查看某进程，这里以gitlab为例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep gitlab</span><br></pre></td></tr></table></figure><p>或者:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep gitlab</span><br></pre></td></tr></table></figure></li><li><p>杀掉某个进程:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kill -<span class="number">9</span> <span class="number">9527</span>    <span class="comment">##(-9为强制终止，9527为进程id)</span></span><br></pre></td></tr></table></figure></li><li><p>删除所有包含xxx的文件，这里以gitlab为例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo find / -name *gitlab* | xargs rm -rf</span><br></pre></td></tr></table></figure><p>或者:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /</span><br></pre></td></tr></table></figure><p>然后:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -name *gitlab* | xargs rm -rf</span><br></pre></td></tr></table></figure></li><li><p>在没有运行image之前，删除docker中的image:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi tagid</span><br></pre></td></tr></table></figure></li><li><p>如果是已经运行了image的，那就意味着已经生成了container，那我们可以这么操作:</p><p>首先我们要找到对应的containerid，用如下命令查看:</p><p>docker ps是查看目前在运行的container，docker ps -a是查看所有的，包括了停止的container也会展示出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><p>我们要操作的container必须先将它关闭再删除，所以我们先使用下面的命令关闭:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop 117843ade696</span><br></pre></td></tr></table></figure><p>然后用rm命令删除container:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm containerid</span><br></pre></td></tr></table></figure><p>我们可以确认下，用<code>docker images</code>来查看对应image是否已被删除</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ubuntu删除用户:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ubuntu16安装Jenkins</title>
    <link href="http://example.com/2022/02/23/ubuntu16%E5%AE%89%E8%A3%85Jenkins/"/>
    <id>http://example.com/2022/02/23/ubuntu16%E5%AE%89%E8%A3%85Jenkins/</id>
    <published>2022-02-23T02:21:00.000Z</published>
    <updated>2022-02-23T03:24:15.987Z</updated>
    
    <content type="html"><![CDATA[<p>下面我们将在云服务器上安装Jenkins</p><p>首先我们看看什么是Jenkins以及他能做什么</p><h3 id="什么是Jenkins"><a href="#什么是Jenkins" class="headerlink" title="什么是Jenkins"></a>什么是Jenkins</h3><p>Jenkins是一个开源的、提供友好操作界面的持续集成(CI)工具，起源于Hudson（Hudson是商用的），主要用于持续、自动的构建/测试软件项目、监控外部任务的运行（这个比较抽象，暂且写上，不做解释）。Jenkins用Java语言编写，可在Tomcat等流行的servlet容器中运行，也可独立运行。通常与版本管理工具(SCM)、构建工具结合使用。常用的版本控制工具有SVN、GIT，构建工具有Maven、Ant、Gradle</p><h3 id="Jenkins能做什么"><a href="#Jenkins能做什么" class="headerlink" title="Jenkins能做什么"></a>Jenkins能做什么</h3><p>首先，<a class="link"   href="https://so.csdn.net/so/search?q=Jenkins&spm=1001.2101.3001.7020" >Jenkins<i class="fas fa-external-link-alt"></i></a>可以很方便的在我们的项目中帮助我们去部署、打包项目，在开发过程中避免了繁琐的手动打包步骤，只要我们把项目部署到Jenkins中，然后添加上一些列的脚本，就能帮助我们很快的完成打包工作，并且它与版本管理工具Svn、Git等兼容</p><h3 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h3><ul><li><p> 一个安装有ubuntu16.04或者ubuntu18.04系统的服务器</p></li><li><p>最小推荐配置</p><ul><li>Java8(JRE或JDK)</li><li>256MB可用内存</li><li>1GB+可用磁盘空间</li></ul></li><li><p>推荐配置小团队</p><ul><li>java8</li><li>1GB+内存</li><li>50GB+可用磁盘空间</li></ul></li><li><p>安装Java SDK，也就是Java软件开发工具包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openjdk-<span class="number">8</span>-jdk</span><br></pre></td></tr></table></figure></li></ul><h3 id="安装Jenkins"><a href="#安装Jenkins" class="headerlink" title="安装Jenkins"></a>安装Jenkins</h3><p>包含在默认Ubuntu软件包中的Jenkins版本往往落后于项目本身的最新版本。 为了利用最新的修复和功能，我们将使用项目维护的软件包来安装Jenkins</p><p>首先，我们将存储库密钥添加到系统:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>添加密钥后，系统将返回<code>OK</code> 。 接下来，我们将Debian包存储库地址附加到服务器的<code>sources.list</code> :</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c <span class="string">&#x27;echo deb http://pkg.jenkins.io/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list&#x27;</span></span><br></pre></td></tr></table></figure><p>当这两个都到位时，我们将运行<code>update</code> ，以便<code>apt-get</code>将使用新的存储库:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>最后，我们将安装Jenkins及其依赖项，包括Java:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install jenkins</span><br></pre></td></tr></table></figure><p>现在Jenkins及其依赖项已经到位，我们将启动Jenkins服务器</p><h3 id="开始Jenkins"><a href="#开始Jenkins" class="headerlink" title="开始Jenkins"></a>开始Jenkins</h3><p>使用<code>systemctl</code>我们将启动Jenkins:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start jenkins</span><br></pre></td></tr></table></figure><p>由于<code>systemctl</code>不显示输出，我们将使用其<code>status</code>命令来验证它是否成功启动:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status jenkins</span><br></pre></td></tr></table></figure><p>如果一切顺利，输出的开始应显示服务处于活动状态，并配置为启动时启动:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">● jenkins.service - LSB: Start Jenkins at boot time</span><br><span class="line">  Loaded: loaded (/etc/init.d/jenkins; bad; vendor preset: enabled)</span><br><span class="line">  Active:active (exited) since Thu <span class="number">2017</span>-04-<span class="number">20</span> <span class="number">16</span>:<span class="number">51</span>:<span class="number">13</span> UTC; 2<span class="built_in">min</span> 7s ago</span><br><span class="line">    Docs: man:systemd-sysv-generator(<span class="number">8</span>)</span><br></pre></td></tr></table></figure><p>现在Jenkins正在运行，我们将调整防火墙规则，以便我们可以从网络浏览器到达Jenkins以完成初始设置</p><h3 id="打开防火墙"><a href="#打开防火墙" class="headerlink" title="打开防火墙"></a>打开防火墙</h3><p>默认情况下，Jenkins在端口8080上运行，因此我们将在云服务器的防火墙中添加规则，打开8080端口，如果8080端口已被占用，我们可以修改Jenkins的端口，点击<a class="link"   href="https://blog.csdn.net/wudinaniya/article/details/97628477" >此处<i class="fas fa-external-link-alt"></i></a>跳转查看</p><p><a href="https://imgtu.com/i/b9EzhF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/02/23/b9EzhF.png"                      alt="b9EzhF.png"                ></a></p><p>现在，Jenkins已安装，防火墙允许我们访问它，我们可以完成初始设置</p><h3 id="设置Jenkins"><a href="#设置Jenkins" class="headerlink" title="设置Jenkins"></a>设置Jenkins</h3><p>通过以上设置，我们可以使用服务器域名或IP地址访问Jenkins，比如: <code>http://192.168.2.3:8080</code></p><p>访问网址之后，我们应该看到”Unlock Jenkins”屏幕:</p><p><a href="https://imgtu.com/i/b9VyNT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/02/23/b9VyNT.png"                      alt="b9VyNT.png"                ></a></p><p>复制以上文件路径，我们将在终端中使用<code>cat</code>命令查看密码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cat /var/lib/jenkins/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure><p>我们将从终端复制32个字符的字母数字密码，并将其粘贴到“管理员密码”字段中，然后单击“继续”。 下一个屏幕提供安装建议的插件或选择特定插件的选项:</p><p><a href="https://imgtu.com/i/b9ZPPS"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/02/23/b9ZPPS.png"                      alt="b9ZPPS.png"                ></a></p><p>我们将点击“安装建议的插件”选项，这将立即开始下载以及安装:</p><p><a href="https://imgtu.com/i/b9Z1xJ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/02/23/b9Z1xJ.png"                      alt="b9Z1xJ.png"                ></a></p><p>安装完成后，系统将提示您设置第一个管理用户；可以跳过此步骤，并点击右下方的<code>Continue as admin</code>继续，但是我们将花一点时间创建用户:</p><p>需要注意的是，此时Jenkins默认未加密，因此使用此表单提交的数据不受保护；这个时候我们可以按照指南<a class="link"   href="http://www.howtoing.com/how-to-configure-jenkins-with-ssl-using-an-nginx-reverse-proxy/" >如何使用Nginx反向代理将SSL配置为Jenkins<i class="fas fa-external-link-alt"></i></a>，这将保护用户凭据和通过Web界面发送的构建的信息(我第一次使用这个我就不配置反向代理了)</p><p><a href="https://imgtu.com/i/b9eSy9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/02/23/b9eSy9.png"                      alt="b9eSy9.png"                ></a></p><p>一旦第一个管理员用户到位，你应该看到一个“Jenkin is ready!” 确认屏幕:</p><p><a href="https://imgtu.com/i/b9emyd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/02/23/b9emyd.png"                      alt="b9emyd.png"                ></a></p><p>点击“开始使用Jenkins”来访问主要的Jenkins仪表板:</p><p><a href="https://imgtu.com/i/b9uX7R"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/02/23/b9uX7R.png"                      alt="b9uX7R.png"                ></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;下面我们将在云服务器上安装Jenkins&lt;/p&gt;
&lt;p&gt;首先我们看看什么是Jenkins以及他能做什么&lt;/p&gt;
&lt;h3 id=&quot;什么是Jenkins&quot;&gt;&lt;a href=&quot;#什么是Jenkins&quot; class=&quot;headerlink&quot; title=&quot;什么是Jenkins&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>爬虫的管理与部署之云服务器环境搭建</title>
    <link href="http://example.com/2022/02/22/%E7%88%AC%E8%99%AB%E7%9A%84%E7%AE%A1%E7%90%86%E4%B8%8E%E9%83%A8%E7%BD%B2%E4%B9%8B%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2022/02/22/%E7%88%AC%E8%99%AB%E7%9A%84%E7%AE%A1%E7%90%86%E4%B8%8E%E9%83%A8%E7%BD%B2%E4%B9%8B%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2022-02-22T08:36:30.000Z</published>
    <updated>2022-02-22T09:02:11.078Z</updated>
    
    <content type="html"><![CDATA[<p>首先我们要跟随以下链接的步骤(当然里面还介绍了如何配置访问认证)在云服务器上安装好Scrapyd:</p><p>点击<a class="link"   href="https://setup.scrape.center/scrapyd" >跳转<i class="fas fa-external-link-alt"></i></a></p><p>然后我们要做的就是安装一个高度集成话的图形界面工具—gerapy:</p><p>我在操作的时候遇到一个小小的问题，报错如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Command <span class="string">&quot;python setup.py egg_info&quot;</span> failed <span class="keyword">with</span> error code <span class="number">1</span> <span class="keyword">in</span> /tmp/pip-build-*</span><br></pre></td></tr></table></figure><p>这个问题的解决我采集自: <a class="link"   href="https://www.cnblogs.com/xiao987334176/p/12600835.html" >https://www.cnblogs.com/xiao987334176/p/12600835.html<i class="fas fa-external-link-alt"></i></a></p><p>答案就是更新下pip工具，使用以下命令:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install --upgrade pip</span><br></pre></td></tr></table></figure><p>然后我们就可以使用使用以下步骤逐步运行起图形界面:</p><p>安装完Gerapy后，我们就可以使用gerapy命令了，首先，可以利用gerapy命令创建一个工作目录，如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gerapy init</span><br></pre></td></tr></table></figure><p>这样会在当前目录下生成一个gerapy文件夹，然后进入该文件夹(进入该文件夹后再执行以下命令)，会发现一个空的projects文件夹，这会在后面提到</p><p>这时先对数据库进行初始化:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gerapy migrate</span><br></pre></td></tr></table></figure><p>这样即会生成一个SQLite数据库，该数据库中会保存各个主机配置信息、部署版本等</p><p>接下来，我们可以生成一个管理账号:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gerapy initadmin</span><br></pre></td></tr></table></figure><p>这时候可以生成一个用户名和密码都为admin的管理员账号，用于后续系统的登录</p><p>当然，如果不想使用默认的admin账号，也可以利用如下命令来创建单独的账号:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gerapy createsuperuser</span><br></pre></td></tr></table></figure><p>输入用户名和密码之后，就可以创建一个管理员帐号了</p><p>接下来，启动Gerapy服务，命令如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gerapy runserver</span><br></pre></td></tr></table></figure><p>这样即可在默认的8000端口上开启Gerapy服务，用浏览器打开<a href="http://localhost:8000即可进入">http://localhost:8000即可进入</a></p><p><code>gerapy runserver</code>这个命令一运行，那只能在云服务器本机上运行，我们在本地是无法通过<code>http://192.168.2.3:8000</code>来访问到这个面板的，如果要想在本地访问到，我们就要使用这个命令<code>gerapy runserver 0.0.0.0 8000</code>，这表示在任何主机的8000端口都可访问，前提是你云服务器主机的8000端口是否打开，也可以自定义其他端口，不一定非要8000端口</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先我们要跟随以下链接的步骤(当然里面还介绍了如何配置访问认证)在云服务器上安装好Scrapyd:&lt;/p&gt;
&lt;p&gt;点击&lt;a class=&quot;link&quot;   href=&quot;https://setup.scrape.center/scrapyd&quot; &gt;跳转&lt;i class=&quot;fas </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>腾讯云ubuntu主机安装mongodb并设置远程访问</title>
    <link href="http://example.com/2022/02/22/%E8%85%BE%E8%AE%AF%E4%BA%91ubuntu%E4%B8%BB%E6%9C%BA%E5%AE%89%E8%A3%85mongodb%E5%B9%B6%E8%AE%BE%E7%BD%AE%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/"/>
    <id>http://example.com/2022/02/22/%E8%85%BE%E8%AE%AF%E4%BA%91ubuntu%E4%B8%BB%E6%9C%BA%E5%AE%89%E8%A3%85mongodb%E5%B9%B6%E8%AE%BE%E7%BD%AE%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/</id>
    <published>2022-02-22T02:30:30.000Z</published>
    <updated>2022-02-22T07:33:04.663Z</updated>
    
    <content type="html"><![CDATA[<p>首先我们连接上云服务器，然后我们要使用以下命令更新下软件包:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade -y</span><br></pre></td></tr></table></figure><p>然后我们就可以继续使用以下命令进行安装MongoDB:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mongodb</span><br></pre></td></tr></table></figure><p>稍等一会儿之后，MongoDB就安装到云服务器上了</p><p>在安装完成之后，MongoDB是启动了的，但后期我们可以使用以下命令查看服务是否启动:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status mongodb</span><br></pre></td></tr></table></figure><p>如果看到active那服务就是启动了的，其他的都是没有启动</p><p>然后下面我们就来看看如何设置，然后在本地也能访问到远程云服务器上的MongoDB数据库:</p><p>首先，我们要使用使用以下命令修改配置文件:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/mongodb.conf</span><br></pre></td></tr></table></figure><p>进入配置文件后，我们进行编辑，把<code>bind_ip=127.0.0.1</code>这一行修改成<code>bind_ip=0.0.0.0</code>，这里要注意，设置远程访问之后，启动auth授权访问，不然非常不安全，数据库容易被攻击，在配置文件中修改如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Turn on/off security.  Off is currently the default</span></span><br><span class="line"><span class="comment">#noauth = true</span></span><br><span class="line">auth = true</span><br></pre></td></tr></table></figure><p>然后我们需要在mongodb数据库中新建用户名和密码，也就是上面的noauth = true要打开，然后，我们使用以下命令切换数据库到admin:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br></pre></td></tr></table></figure><p>然后我们使用以下命令添加admin数据库的用户:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.createUser(&#123;user:<span class="string">&quot;kimkat&quot;</span>,pwd:<span class="string">&quot;123456&quot;</span>,roles:[&#123; role: <span class="string">&quot;readWriteAnyDatabase&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125;]&#125;)</span><br></pre></td></tr></table></figure><p>这里附上mongodb添加用户的方法: <a class="link"   href="https://docs.mongodb.com/manual/reference/method/db.createUser/index.html" >https://docs.mongodb.com/manual/reference/method/db.createUser/index.html<i class="fas fa-external-link-alt"></i></a></p><p>以及mongod内置的用户角色: <a class="link"   href="https://docs.mongodb.com/manual/core/security-built-in-roles/index.html" >https://docs.mongodb.com/manual/core/security-built-in-roles/index.html<i class="fas fa-external-link-alt"></i></a></p><p>然后我们需要使用以下命令再次修改配置文件:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/mongodb.conf</span><br></pre></td></tr></table></figure><p>然后修改成如下即可:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mongodb.conf</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Where to store the data.</span></span><br><span class="line">dbpath=/var/lib/mongodb</span><br><span class="line"></span><br><span class="line"><span class="comment">#where to log</span></span><br><span class="line">logpath=/var/log/mongodb/mongodb.log</span><br><span class="line"></span><br><span class="line">logappend=true</span><br><span class="line"></span><br><span class="line">bind_ip = <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">port = <span class="number">27017</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable journaling, http://www.mongodb.org/display/DOCS/Journaling</span></span><br><span class="line">journal=true</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enables periodic logging of CPU utilization and I/O wait</span></span><br><span class="line"><span class="comment">#cpu = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Turn on/off security.  Off is currently the default</span></span><br><span class="line"><span class="comment">#noauth = true</span></span><br><span class="line">auth = true</span><br><span class="line"></span><br><span class="line"><span class="comment"># Verbose logging output.</span></span><br><span class="line"><span class="comment">#verbose = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Inspect all client data for validity on receipt (useful for</span></span><br><span class="line"><span class="comment"># developing drivers)</span></span><br><span class="line"><span class="comment">#objcheck = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable db quota management</span></span><br><span class="line"><span class="comment">#quota = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set diagnostic logging level where n is</span></span><br><span class="line"><span class="comment">#   0=off (default)</span></span><br><span class="line"><span class="comment">#   1=W</span></span><br><span class="line"><span class="comment">#   2=R</span></span><br><span class="line"><span class="comment">#   3=both</span></span><br><span class="line"><span class="comment">#   7=W+some reads</span></span><br><span class="line"><span class="comment">#diaglog = 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Diagnostic/debugging option</span></span><br><span class="line"><span class="comment">#nocursors = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Ignore query hints</span></span><br><span class="line"><span class="comment">#nohints = true</span></span><br></pre></td></tr></table></figure><p>然后我们使用以下命令重启mongodb数据库:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mongodb restart</span><br></pre></td></tr></table></figure><p>然后我们就要打开云服务器的端口了，这个在云服务器中的控制面板中可以自由设置</p><p>下面我们来看看远程连接测试:</p><p>进行到这一步的时候我遇到点问题，前面在查阅资料的时候，说<code>mongodb.conf</code>文件中的<code>bind_ip</code>可以被注释掉，这个我一注释后面就遇到怎么也无法连接的问题，所以这个千万不能注释掉，我们要把它修改为<code>0.0.0.0</code>，然后按照上面的步骤，在默认的admin数据库指定一个username和password然后开启auth即可开启用户名密码连接</p><p>这样我们就完成了远程访问</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先我们连接上云服务器，然后我们要使用以下命令更新下软件包:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于pip挂了的补充</title>
    <link href="http://example.com/2022/02/22/%E5%85%B3%E4%BA%8Epip%E6%8C%82%E4%BA%86%E7%9A%84%E8%A1%A5%E5%85%85/"/>
    <id>http://example.com/2022/02/22/%E5%85%B3%E4%BA%8Epip%E6%8C%82%E4%BA%86%E7%9A%84%E8%A1%A5%E5%85%85/</id>
    <published>2022-02-22T01:35:30.000Z</published>
    <updated>2022-02-22T01:37:24.704Z</updated>
    
    <content type="html"><![CDATA[<p>上一篇笔记提到使用<code>python -m ensurepip</code>将pip.exe文件下载下来，然后我们在Python主目录下中的Scripts文件夹内可以看到pip3.exe，然后我们要将这个.exe文件的路径添加进环境变量即可在小黑窗口使用</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;上一篇笔记提到使用&lt;code&gt;python -m ensurepip&lt;/code&gt;将pip.exe文件下载下来，然后我们在Python主目录下中的Scripts文件夹内可以看到pip3.exe，然后我们要将这个.exe文件的路径添加进环境变量即可在小黑窗口使用&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
