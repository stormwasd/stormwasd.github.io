<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-03-30T03:33:20.705Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>空中网逆向分析</title>
    <link href="http://example.com/2022/03/30/%E7%A9%BA%E4%B8%AD%E7%BD%91%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2022/03/30/%E7%A9%BA%E4%B8%AD%E7%BD%91%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/</id>
    <published>2022-03-29T17:20:52.000Z</published>
    <updated>2022-03-30T03:33:20.705Z</updated>
    
    <content type="html"><![CDATA[<p>url: <a class="link"   href="https://passport.kongzhong.com/" >https://passport.kongzhong.com/<i class="fas fa-external-link-alt"></i></a></p><p>分析:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/AxDOSN3UTp1iv4u.png"                      alt="image.png"                ></p><p>如上图所示，输入用户名和密码之后会看到对登录时对密码的一个加密，咋一看不是16位的也不是32位的</p><p>我们先搜索下，搜password关键字:</p><p>搜索结果如下，搜索结果很多，但可以看到有一条搜索结果是很可疑的:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/aUi4o13kt5NufgD.png"                      alt="image.png"                ></p><p>根据经验来说，这个部分的代码很可能经过加密，不然代码是不会写成这样的，那么加密的代码怎么还原呢，我们有两种选择:</p><ul><li>选择在线解密网站</li><li>打开浏览器自带的解密工具</li></ul><p>在线的解密网站不是很全面，但不排除会有很好的解密站点，但这个案例我们使用第二种，打开浏览器自带的解密工具，下面我们来说说打开的步骤:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/sMBftOYA2kzWrx7.png"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/XB2nqeKIuxPidcG.png"                      alt="image.png"                ></p><p>然后我们再回到刚刚的搜索页面，点击刷新按钮，就会发现代码被还原了:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/lb9Mtc1jTVCxYBg.png"                      alt="image.png"                ></p><p>我们注意到，被还原之后的文件名前面多个了个<code>VM</code>字样</p><p>我们再次点进去搜索后会发现有4个带有<code>password</code>字样的语句，其中有两个是带有<code>encrypt</code>字样的，我们就在这两个带有<code>encrypt</code>的代码处打上断点，然后观察:</p><p>点击登录后断点断到了第97行，我们发现encryp函数返回的就是加密后的密码，所以我们只需要抽离出这个函数即可，我们来看看这个函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params">pwd, data[<span class="string">&quot;dc&quot;</span>]</span>)</span></span><br></pre></td></tr></table></figure><ul><li>pwd: 经过调试之后我们会发现pwd就是我们输入的密码明文</li><li>data[“dc”]: 这好像是个密钥，这里先留着</li></ul><p>搞清楚参数之后我们就要进入<code>encrypt</code>函数看看函数的具体定义了:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/gKnDMSk8uR5W2E3.png"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/EDP68awf5Ctr47B.png"                      alt="image.png"                ></p><p>再接着滑到顶部，我们会发现这是一个对象，然后对象里面定义了个函数，我们就直接把这个对象给抠出来:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> KZLoginHandler = &#123;</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;kongzhong-login-agent&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;loginServer&#x27;</span>: <span class="string">&#x27;http://sso.kongzhong.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;service&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;targetService&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;j_data&#x27;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&#x27;f_call_back&#x27;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&#x27;timestamp&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;completed&#x27;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&#x27;renew&#x27;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&#x27;init&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.j_data = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">this</span>.f_call_back = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">this</span>.timestamp = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.completed = <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;check&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">call_back</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.init();</span><br><span class="line">        <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">        <span class="keyword">var</span> param = <span class="string">&quot;jsonp=j&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.service != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.service) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.service)</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.targetService) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">            param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;exec_login&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">param</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.completed == <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.j_data[<span class="string">&quot;state&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> data = &#123;&#125;;</span><br><span class="line">            data[<span class="string">&quot;user&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;user&quot;</span>];</span><br><span class="line">            data[<span class="string">&quot;service&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;service&quot;</span>];</span><br><span class="line">            data[<span class="string">&quot;logged&quot;</span>] = <span class="literal">true</span>;</span><br><span class="line">            data[<span class="string">&quot;dc&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;dc&quot;</span>];</span><br><span class="line">            <span class="built_in">this</span>.f_call_back(data);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> url = <span class="built_in">this</span>.loginServer + <span class="string">&quot;/ajaxLogin&quot;</span>;</span><br><span class="line">        jQuery.ajax(&#123;</span><br><span class="line">            <span class="attr">async</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">url</span>: url,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">            <span class="attr">dataType</span>: <span class="string">&#x27;jsonp&#x27;</span>,</span><br><span class="line">            <span class="attr">jsonp</span>: <span class="string">&#x27;j&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: param,</span><br><span class="line">            <span class="attr">jsonpCallback</span>: <span class="string">&quot;j&quot;</span>,</span><br><span class="line">            <span class="attr">timeout</span>: <span class="number">5000</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">json</span>) </span>&#123;&#125;,</span><br><span class="line">            <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>&#123;&#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;jsonpCallbackKongZ&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">vData</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.j_data = vData;</span><br><span class="line">        <span class="built_in">this</span>.timestamp = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.f_call_back != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> data = &#123;&#125;;</span><br><span class="line">            <span class="keyword">if</span> (vData[<span class="string">&quot;state&quot;</span>] == <span class="string">&quot;0&quot;</span>) &#123;</span><br><span class="line">                data[<span class="string">&quot;service&quot;</span>] = vData[<span class="string">&quot;service&quot;</span>];</span><br><span class="line">                data[<span class="string">&quot;logged&quot;</span>] = <span class="literal">false</span>;</span><br><span class="line">                data[<span class="string">&quot;errors&quot;</span>] = vData[<span class="string">&quot;kzmsg&quot;</span>];</span><br><span class="line">                <span class="keyword">if</span> (vData[<span class="string">&quot;requirevcode&quot;</span>] != <span class="literal">null</span> &amp;&amp; vData[<span class="string">&quot;requirevcode&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                    data[<span class="string">&quot;requirevcode&quot;</span>] = <span class="literal">true</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    data[<span class="string">&quot;requirevcode&quot;</span>] = <span class="literal">false</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (vData[<span class="string">&quot;state&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                data[<span class="string">&quot;user&quot;</span>] = vData[<span class="string">&quot;user&quot;</span>];</span><br><span class="line">                data[<span class="string">&quot;service&quot;</span>] = vData[<span class="string">&quot;service&quot;</span>];</span><br><span class="line">                data[<span class="string">&quot;logged&quot;</span>] = <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;data[<span class="string">&quot;dc&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;dc&quot;</span>];</span><br><span class="line">            <span class="built_in">this</span>.f_call_back(data)</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="built_in">this</span>.completed = <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;login&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">user, pwd, to_save, vcode, call_back</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tempTime = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>()) - <span class="built_in">this</span>.timestamp;</span><br><span class="line">        <span class="keyword">if</span> ((tempTime / <span class="number">1000</span>) &gt;= <span class="number">180</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.j_data = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data == <span class="literal">null</span> || <span class="built_in">this</span>.j_data == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.check(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">                <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;type=1&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.service != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.service) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.service)</span><br><span class="line">                &#125;</span><br><span class="line">                ;param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">                param += <span class="string">&quot;&amp;password=&quot;</span> + <span class="built_in">this</span>.encrypt(pwd, data[<span class="string">&quot;dc&quot;</span>]);</span><br><span class="line">                param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">                <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.targetService) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">            <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;type=1&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.service != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.service) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.service)</span><br><span class="line">            &#125;</span><br><span class="line">            ;param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">            param += <span class="string">&quot;&amp;password=&quot;</span> + <span class="built_in">this</span>.encrypt(pwd, <span class="built_in">this</span>.j_data[<span class="string">&quot;dc&quot;</span>]);</span><br><span class="line">            param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">            <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.targetService) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;login_sms&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">user, smscode, to_save, vcode, call_back</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tempTime = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>()) - <span class="built_in">this</span>.timestamp;</span><br><span class="line">        <span class="keyword">if</span> ((tempTime / <span class="number">1000</span>) &gt;= <span class="number">180</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.j_data = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data == <span class="literal">null</span> || <span class="built_in">this</span>.j_data == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.check(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">                <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;type=2&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">                param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">                param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">                param += <span class="string">&quot;&amp;smscode=&quot;</span> + smscode;</span><br><span class="line">                <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span>) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">            <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;type=2&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">            param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">            param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">            param += <span class="string">&quot;&amp;smscode=&quot;</span> + smscode;</span><br><span class="line">            <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span>) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;login_reg&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">user, pwd, to_save, call_back</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tempTime = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>()) - <span class="built_in">this</span>.timestamp;</span><br><span class="line">        <span class="keyword">if</span> ((tempTime / <span class="number">1000</span>) &gt;= <span class="number">180</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.j_data = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data == <span class="literal">null</span> || <span class="built_in">this</span>.j_data == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.check(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">                <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;type=101&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">                param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">                param += <span class="string">&quot;&amp;password=&quot;</span> + pwd;</span><br><span class="line">                <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">            <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;type=101&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">            param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">            param += <span class="string">&quot;&amp;password=&quot;</span> + pwd;</span><br><span class="line">            <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;encrypt&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">str, pwd</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (pwd == <span class="literal">null</span> || pwd.length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> prand = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pwd.length; i++) &#123;</span><br><span class="line">            prand += pwd.charCodeAt(i).toString()</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> sPos = <span class="built_in">Math</span>.floor(prand.length / <span class="number">5</span>);</span><br><span class="line">        <span class="keyword">var</span> mult = <span class="built_in">parseInt</span>(prand.charAt(sPos) + prand.charAt(sPos * <span class="number">2</span>) + prand.charAt(sPos * <span class="number">3</span>) + prand.charAt(sPos * <span class="number">4</span>) + prand.charAt(sPos * <span class="number">5</span>));</span><br><span class="line">        <span class="keyword">var</span> incr = <span class="built_in">Math</span>.ceil(pwd.length / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> modu = <span class="built_in">Math</span>.pow(<span class="number">2</span>, <span class="number">31</span>) - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (mult &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> salt = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * <span class="number">1000000000</span>) % <span class="number">100000000</span>;</span><br><span class="line">        prand += salt;</span><br><span class="line">        <span class="keyword">while</span> (prand.length &gt; <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> a = prand.substring(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">var</span> b = prand.substring(<span class="number">10</span>, prand.length);</span><br><span class="line">            <span class="keyword">if</span> (b.length &gt; <span class="number">10</span>) &#123;</span><br><span class="line">                prand = b</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                prand = (<span class="built_in">parseInt</span>(a) + <span class="built_in">parseInt</span>(b)).toString()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ;prand = (mult * prand + incr) % modu;</span><br><span class="line">        <span class="keyword">var</span> enc_chr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> enc_str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">            enc_chr = <span class="built_in">parseInt</span>(str.charCodeAt(i) ^ <span class="built_in">Math</span>.floor((prand / modu) * <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">if</span> (enc_chr &lt; <span class="number">16</span>) &#123;</span><br><span class="line">                enc_str += <span class="string">&quot;0&quot;</span> + enc_chr.toString(<span class="number">16</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">                enc_str += enc_chr.toString(<span class="number">16</span>);</span><br><span class="line">            prand = (mult * prand + incr) % modu</span><br><span class="line">        &#125;</span><br><span class="line">        ;salt = salt.toString(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">while</span> (salt.length &lt; <span class="number">8</span>)</span><br><span class="line">            salt = <span class="string">&quot;0&quot;</span> + salt;</span><br><span class="line">        enc_str += salt;</span><br><span class="line">        <span class="keyword">return</span> enc_str</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>然后再进行调用, 我们可以自己写个函数:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPwd</span>(<span class="params">p</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> dc = <span class="string">&#x27;993623221C8865DE42216D7EB9630527&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> KZLoginHandler.encrypt(p, dc)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是这里还有个未知的是<code>data[&quot;dc&quot;]</code>，我们可以在加密的哪个文件中搜索下是否有data这个列表啥的，发现是没有的，也没有看出什么端倪；然后我们再全局搜索下<code>data[&quot;dc&quot;]</code>发现一个也没有，这时候根据经验，我们可以猜测，应该是在登录包前还有个包是提供参数的，我们可以在登录包前面一个个去看看，果然是这样的:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/5HOB1vPie3SIDfr.png"                      alt="image.png"                ></p><p>到这里也就分析结束了，我们来看看构造结果:</p><p>首先放一个完整的代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> KZLoginHandler = &#123;</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;kongzhong-login-agent&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;loginServer&#x27;</span>: <span class="string">&#x27;http://sso.kongzhong.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;service&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;targetService&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;j_data&#x27;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&#x27;f_call_back&#x27;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&#x27;timestamp&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;completed&#x27;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&#x27;renew&#x27;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&#x27;init&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.j_data = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">this</span>.f_call_back = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">this</span>.timestamp = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.completed = <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;check&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">call_back</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.init();</span><br><span class="line">        <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">        <span class="keyword">var</span> param = <span class="string">&quot;jsonp=j&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.service != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.service) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.service)</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.targetService) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">            param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;exec_login&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">param</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.completed == <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.j_data[<span class="string">&quot;state&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> data = &#123;&#125;;</span><br><span class="line">            data[<span class="string">&quot;user&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;user&quot;</span>];</span><br><span class="line">            data[<span class="string">&quot;service&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;service&quot;</span>];</span><br><span class="line">            data[<span class="string">&quot;logged&quot;</span>] = <span class="literal">true</span>;</span><br><span class="line">            data[<span class="string">&quot;dc&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;dc&quot;</span>];</span><br><span class="line">            <span class="built_in">this</span>.f_call_back(data);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> url = <span class="built_in">this</span>.loginServer + <span class="string">&quot;/ajaxLogin&quot;</span>;</span><br><span class="line">        jQuery.ajax(&#123;</span><br><span class="line">            <span class="attr">async</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">url</span>: url,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">            <span class="attr">dataType</span>: <span class="string">&#x27;jsonp&#x27;</span>,</span><br><span class="line">            <span class="attr">jsonp</span>: <span class="string">&#x27;j&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: param,</span><br><span class="line">            <span class="attr">jsonpCallback</span>: <span class="string">&quot;j&quot;</span>,</span><br><span class="line">            <span class="attr">timeout</span>: <span class="number">5000</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">json</span>) </span>&#123;&#125;,</span><br><span class="line">            <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>&#123;&#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;jsonpCallbackKongZ&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">vData</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.j_data = vData;</span><br><span class="line">        <span class="built_in">this</span>.timestamp = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.f_call_back != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> data = &#123;&#125;;</span><br><span class="line">            <span class="keyword">if</span> (vData[<span class="string">&quot;state&quot;</span>] == <span class="string">&quot;0&quot;</span>) &#123;</span><br><span class="line">                data[<span class="string">&quot;service&quot;</span>] = vData[<span class="string">&quot;service&quot;</span>];</span><br><span class="line">                data[<span class="string">&quot;logged&quot;</span>] = <span class="literal">false</span>;</span><br><span class="line">                data[<span class="string">&quot;errors&quot;</span>] = vData[<span class="string">&quot;kzmsg&quot;</span>];</span><br><span class="line">                <span class="keyword">if</span> (vData[<span class="string">&quot;requirevcode&quot;</span>] != <span class="literal">null</span> &amp;&amp; vData[<span class="string">&quot;requirevcode&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                    data[<span class="string">&quot;requirevcode&quot;</span>] = <span class="literal">true</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    data[<span class="string">&quot;requirevcode&quot;</span>] = <span class="literal">false</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (vData[<span class="string">&quot;state&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                data[<span class="string">&quot;user&quot;</span>] = vData[<span class="string">&quot;user&quot;</span>];</span><br><span class="line">                data[<span class="string">&quot;service&quot;</span>] = vData[<span class="string">&quot;service&quot;</span>];</span><br><span class="line">                data[<span class="string">&quot;logged&quot;</span>] = <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;data[<span class="string">&quot;dc&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;dc&quot;</span>];</span><br><span class="line">            <span class="built_in">this</span>.f_call_back(data)</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="built_in">this</span>.completed = <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;login&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">user, pwd, to_save, vcode, call_back</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tempTime = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>()) - <span class="built_in">this</span>.timestamp;</span><br><span class="line">        <span class="keyword">if</span> ((tempTime / <span class="number">1000</span>) &gt;= <span class="number">180</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.j_data = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data == <span class="literal">null</span> || <span class="built_in">this</span>.j_data == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.check(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">                <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;type=1&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.service != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.service) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.service)</span><br><span class="line">                &#125;</span><br><span class="line">                ;param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">                param += <span class="string">&quot;&amp;password=&quot;</span> + <span class="built_in">this</span>.encrypt(pwd, data[<span class="string">&quot;dc&quot;</span>]);</span><br><span class="line">                param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">                <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.targetService) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">            <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;type=1&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.service != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.service) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.service)</span><br><span class="line">            &#125;</span><br><span class="line">            ;param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">            param += <span class="string">&quot;&amp;password=&quot;</span> + <span class="built_in">this</span>.encrypt(pwd, <span class="built_in">this</span>.j_data[<span class="string">&quot;dc&quot;</span>]);</span><br><span class="line">            param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">            <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.targetService) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;login_sms&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">user, smscode, to_save, vcode, call_back</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tempTime = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>()) - <span class="built_in">this</span>.timestamp;</span><br><span class="line">        <span class="keyword">if</span> ((tempTime / <span class="number">1000</span>) &gt;= <span class="number">180</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.j_data = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data == <span class="literal">null</span> || <span class="built_in">this</span>.j_data == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.check(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">                <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;type=2&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">                param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">                param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">                param += <span class="string">&quot;&amp;smscode=&quot;</span> + smscode;</span><br><span class="line">                <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span>) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">            <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;type=2&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">            param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">            param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">            param += <span class="string">&quot;&amp;smscode=&quot;</span> + smscode;</span><br><span class="line">            <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span>) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;login_reg&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">user, pwd, to_save, call_back</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tempTime = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>()) - <span class="built_in">this</span>.timestamp;</span><br><span class="line">        <span class="keyword">if</span> ((tempTime / <span class="number">1000</span>) &gt;= <span class="number">180</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.j_data = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data == <span class="literal">null</span> || <span class="built_in">this</span>.j_data == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.check(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">                <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;type=101&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">                param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">                param += <span class="string">&quot;&amp;password=&quot;</span> + pwd;</span><br><span class="line">                <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">            <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;type=101&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">            param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">            param += <span class="string">&quot;&amp;password=&quot;</span> + pwd;</span><br><span class="line">            <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;encrypt&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">str, pwd</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (pwd == <span class="literal">null</span> || pwd.length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> prand = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pwd.length; i++) &#123;</span><br><span class="line">            prand += pwd.charCodeAt(i).toString()</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> sPos = <span class="built_in">Math</span>.floor(prand.length / <span class="number">5</span>);</span><br><span class="line">        <span class="keyword">var</span> mult = <span class="built_in">parseInt</span>(prand.charAt(sPos) + prand.charAt(sPos * <span class="number">2</span>) + prand.charAt(sPos * <span class="number">3</span>) + prand.charAt(sPos * <span class="number">4</span>) + prand.charAt(sPos * <span class="number">5</span>));</span><br><span class="line">        <span class="keyword">var</span> incr = <span class="built_in">Math</span>.ceil(pwd.length / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> modu = <span class="built_in">Math</span>.pow(<span class="number">2</span>, <span class="number">31</span>) - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (mult &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> salt = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * <span class="number">1000000000</span>) % <span class="number">100000000</span>;</span><br><span class="line">        prand += salt;</span><br><span class="line">        <span class="keyword">while</span> (prand.length &gt; <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> a = prand.substring(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">var</span> b = prand.substring(<span class="number">10</span>, prand.length);</span><br><span class="line">            <span class="keyword">if</span> (b.length &gt; <span class="number">10</span>) &#123;</span><br><span class="line">                prand = b</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                prand = (<span class="built_in">parseInt</span>(a) + <span class="built_in">parseInt</span>(b)).toString()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ;prand = (mult * prand + incr) % modu;</span><br><span class="line">        <span class="keyword">var</span> enc_chr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> enc_str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">            enc_chr = <span class="built_in">parseInt</span>(str.charCodeAt(i) ^ <span class="built_in">Math</span>.floor((prand / modu) * <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">if</span> (enc_chr &lt; <span class="number">16</span>) &#123;</span><br><span class="line">                enc_str += <span class="string">&quot;0&quot;</span> + enc_chr.toString(<span class="number">16</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">                enc_str += enc_chr.toString(<span class="number">16</span>);</span><br><span class="line">            prand = (mult * prand + incr) % modu</span><br><span class="line">        &#125;</span><br><span class="line">        ;salt = salt.toString(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">while</span> (salt.length &lt; <span class="number">8</span>)</span><br><span class="line">            salt = <span class="string">&quot;0&quot;</span> + salt;</span><br><span class="line">        enc_str += salt;</span><br><span class="line">        <span class="keyword">return</span> enc_str</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPwd</span>(<span class="params">p</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> dc = <span class="string">&#x27;993623221C8865DE42216D7EB9630527&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> KZLoginHandler.encrypt(p, dc)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/u6igftBl3sYOowA.png"                      alt="image.png"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;url: &lt;a class=&quot;link&quot;   href=&quot;https://passport.kongzhong.com/&quot; &gt;https://passport.kongzhong.com/&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Node笔记</title>
    <link href="http://example.com/2022/03/23/Node%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2022/03/23/Node%E7%AC%94%E8%AE%B0/</id>
    <published>2022-03-23T09:51:30.000Z</published>
    <updated>2022-03-30T03:39:34.945Z</updated>
    
    <content type="html"><![CDATA[<h4 id="初识Node，什么是Node-js"><a href="#初识Node，什么是Node-js" class="headerlink" title="初识Node，什么是Node.js"></a>初识Node，什么是Node.js</h4><p>Node.js是一个基于<strong>ChromeV8引擎</strong>的<strong>JavaScript运行环境</strong></p><p>剖析Node.js，下面给上一个图:</p><p><a href="https://imgtu.com/i/q1jIht"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/23/q1jIht.png"                      alt="q1jIht.png"                ></a></p><p>浏览器是JavaScript的前端运行环境</p><p>Node.js是JavaScript的后端运行环境</p><p>Node.js中无法调用DOM、BOM和Ajax等浏览器内置的API</p><h4 id="Node-js能做什么"><a href="#Node-js能做什么" class="headerlink" title="Node.js能做什么"></a>Node.js能做什么</h4><p>Node.js作为一个JavaScript的运行环境，仅仅提供了基础的功能和API，然而，基于Node.js提供的这些基础功能，很多强大的工具和框架如雨后春笋，层出不穷，所以学会了Node.js，可以让前端程序员胜任更多的工作和岗位</p><ul><li>基于Express框架(<a class="link"   href="http://www.expressjs.com.cn/)%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BAweb%E5%BA%94%E7%94%A8" >http://www.expressjs.com.cn/)，可以快速构建web应用<i class="fas fa-external-link-alt"></i></a></li><li>基于Electron框架(<a class="link"   href="https://electronjs.org/)%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%9E%84%E5%BB%BA%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8" >https://electronjs.org/)，可以构建跨平台的桌面应用<i class="fas fa-external-link-alt"></i></a></li><li>基于restify框架(<a class="link"   href="http://restify.com/)%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BAAPI%E6%8E%A5%E5%8F%A3%E9%A1%B9%E7%9B%AE" >http://restify.com/)，可以快速构建API接口项目<i class="fas fa-external-link-alt"></i></a></li><li>读写和操作数据库，创建实用的命令行工具辅助前端开发，等等等等</li></ul><h4 id="如何学Node-js"><a href="#如何学Node-js" class="headerlink" title="如何学Node.js"></a>如何学Node.js</h4><p>首先需要有一定的JavaScript基础，然后先学习Node.js内置API模块(fs、path、http等)，然后再学习第三方模块(express、mysql等)</p><h4 id="Node-js的安装"><a href="#Node-js的安装" class="headerlink" title="Node.js的安装"></a>Node.js的安装</h4><p>官网安装: <a class="link"   href="https://nodejs.org/en/%EF%BC%8C%E7%84%B6%E5%90%8E%E5%8F%8C%E5%87%BB%E7%9B%B4%E6%8E%A5%E5%AE%89%E8%A3%85%E5%8D%B3%E5%8F%AF" >https://nodejs.org/en/，然后双击直接安装即可<i class="fas fa-external-link-alt"></i></a></p><p>之后使用<code>node -v</code>来检测node.js是否安装成功</p><h4 id="Node-js的运行"><a href="#Node-js的运行" class="headerlink" title="Node.js的运行"></a>Node.js的运行</h4><ol><li>打开终端</li><li>输入node 要执行的js文件的路径</li><li>便捷方法: 按住shift键，然后右键点击在此处打开powershell窗口，或者直接在文件路径栏清空再输入pwd</li></ol><h4 id="fs-读取文件内容"><a href="#fs-读取文件内容" class="headerlink" title="fs-读取文件内容"></a>fs-读取文件内容</h4><p>fs模块是Node.js官方提供的(安装后自带)、用来操作文件的模块，它提供了一系列的方法和属性，用来满足用户对文件的操作需求，例如:</p><ul><li>fs.readFile()方法，用来读取指定文件中的内容</li><li>fs.writeFile()方法，用来向指定的文件中写入内容</li></ul><p>如果要在JavaScript代码中，使用fs模块来操作文件，则需要使用如下的方式先导入它:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)  <span class="comment">//require函数会导入fs这个模块，然后使用const定义一个常量来接收即可</span></span><br></pre></td></tr></table></figure><h5 id="fs-readFile-的语法格式"><a href="#fs-readFile-的语法格式" class="headerlink" title="fs.readFile()的语法格式"></a>fs.readFile()的语法格式</h5><p>使用fs.readFile()方法，可以读取指定文件中的内容，语法格式如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(path[, options], callback)  <span class="comment">//被中括号包裹的是可选参数，其他没有被中括号包裹的是必选参数，所以这里的必选参数是path和callback</span></span><br></pre></td></tr></table></figure><p>参数解读:</p><ul><li>path: 必选参数，字符串，表示文件的路径</li><li><code>[, options]</code>: 可选参数，表示以什么<code>编码格式</code>来读取文件</li><li>callback: 必选参数，文件读取完成后，通过回调函数拿到读取的结果</li></ul><h5 id="fs-readFile-的示例代码"><a href="#fs-readFile-的示例代码" class="headerlink" title="fs.readFile()的示例代码"></a>fs.readFile()的示例代码</h5><p>以utf8的编码格式，读取指定文件的内容，并打印err和dataStr的值:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line">fs.readFile(<span class="string">&#x27;./files/11.txt&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, dataStr</span>) </span>&#123;  <span class="comment">//err为读取失败后的结果，dataStr为读取成功后的结果，无论成功或者失败都会执行function</span></span><br><span class="line">    <span class="built_in">console</span>.log(err)  <span class="comment">// 如果读取成功，则err的值为null，如果读取失败，则err的值为错误对象，dataStr的值为undefined</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;-----&#x27;</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(dataStr)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="判断文件是否读取成功"><a href="#判断文件是否读取成功" class="headerlink" title="判断文件是否读取成功"></a>判断文件是否读取成功</h5><p>可以判断err对象是否为null，从而直知晓文件读取的结果:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line">fs.readFile(<span class="string">&#x27;./files/11.txt&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, result</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">&#x27;文件读取失败:&#x27;</span> + err.,message)  <span class="comment">//失败就打印错误的消息</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;文件读取成功，内容是:&#x27;</span> + result)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="fs-写入文件内容"><a href="#fs-写入文件内容" class="headerlink" title="fs-写入文件内容"></a>fs-写入文件内容</h4><h5 id="fs-writeFile-的语法格式"><a href="#fs-writeFile-的语法格式" class="headerlink" title="fs-writeFile()的语法格式"></a>fs-writeFile()的语法格式</h5><p>使用fs.writeFile()方法，可以向指定的文件中写入内容，语法格式如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fs.writeFile(file, data[, options], callback)</span><br></pre></td></tr></table></figure><ul><li>file: 必选参数，需要指定一个<strong>文件路径的字符串</strong>，表示文件的存放路径</li><li>data: 必选参数，表示要写入的内容</li><li>[, options]，可选参数，表示以什么格式写入文件内容，默认值是utf8</li><li>callback: 必选参数，文件写入完成后的回调函数，无论失败或成功都会被调用</li></ul><h5 id="fs-writeFile-的示例代码"><a href="#fs-writeFile-的示例代码" class="headerlink" title="fs.writeFile()的示例代码"></a>fs.writeFile()的示例代码</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line">fs.writeFile(<span class="string">&#x27;./file/2.txt&#x27;</span>, <span class="string">&quot;hello node.js&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;err&#x27;</span>)  <span class="comment">//如果文件写入成功，则err的值为null，如果文件写入失败，则err的值为一个错误对象</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="判断文件是否写入成功"><a href="#判断文件是否写入成功" class="headerlink" title="判断文件是否写入成功"></a>判断文件是否写入成功</h5><p>可以判断err对象是否为null，从而知晓文件写入的结果:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line">fs.writeFile(<span class="string">&#x27;./file/2.txt&#x27;</span>, <span class="string">&quot;hello node.js&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">&quot;文件写入失败:&quot;</span> + err.message)  <span class="comment">// 写入失败err为一个错误对象</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;文件写入成功!&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="fs-处理路径问题"><a href="#fs-处理路径问题" class="headerlink" title="fs-处理路径问题"></a>fs-处理路径问题</h4><p>在使用fs模块操作文件时，如果提供的操作路径是以<code>./</code>或<code>../</code>开头的相对路径时，很容易出现动态拼接错误的问题；</p><p>原因: 代码在运行的时候，<strong>会以执行node命令时所处的目录</strong>，动态拼接出被操作文件的完整路径</p><p>如果要解决这个问题，可以直接提供一个完整的文件存放路径就行</p><h4 id="path-使用path模块处理路径"><a href="#path-使用path模块处理路径" class="headerlink" title="path-使用path模块处理路径"></a>path-使用path模块处理路径</h4><p>path模块是Node.js官方提供的、用来处理路径的模块，它提供了一系列的方法可属性，用来满足用户对路径的处理需求</p><ul><li>path.join()方法，用来将多个路径片段拼接成一个完整的路径字符串，之前使用<code>+</code>也可以进行路径的拼接，但是用<code>+</code>毕竟不太正规</li><li>path.basename()方法，用来从路径字符串中，将文件名解析出来</li></ul><p>要使用先导入:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br></pre></td></tr></table></figure><ol><li><p>path.join()的语法格式</p><p>使用path.join()方法，可以把多个路径片段拼接为完整的路径字符串，语法格式如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path.join([...paths])</span><br></pre></td></tr></table></figure><p>参数解读:</p><ul><li>…paths: 路径片段的序列</li><li>返回值: string</li></ul></li><li><p>path.join()的代码示例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pathStr1 = path.join(<span class="string">&#x27;/a&#x27;</span>, <span class="string">&#x27;/b/c&#x27;</span>, <span class="string">&#x27;../&#x27;</span>, <span class="string">&#x27;./d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>)  <span class="comment">// 这里注意../会抵消一层路径</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pathStr2 = path.join(__dirname, <span class="string">&#x27;./files/1.txt&#x27;</span>)  <span class="comment">// 输出，当前文件所在目录\files\1.txt</span></span><br></pre></td></tr></table></figure><p>使用加号处理路径时，可能会出现一些问题，用path.jion会更好一点，比如下面就体现出加号的一些弊端:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(__dirname + <span class="string">&#x27;./files/1.txt&#x27;</span>...)</span><br></pre></td></tr></table></figure><p>上面在拼接路径的时候就会把<code>.</code>也给带上，这样就会得到一个错误的路径</p></li><li><p>path.basename()的语法格式</p><p>使用path.basename()方法，可以获取路径中的最后一部分，经常通过这个方法获取路径中的文件名，语法格式如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path.basename(path[, ext])</span><br></pre></td></tr></table></figure><p>参数解读:</p><ul><li>path: 必选参数，表示一个路径的字符串</li><li>ext: 可选参数，表示文件扩展名</li><li>返回一个字符串，表示路径中的最后一部分</li></ul></li><li><p>path.basename()的代码示例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fpath = <span class="string">&#x27;/a/b/c/index.html&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fullName = path.basename(fpath)</span><br><span class="line"><span class="built_in">console</span>.log(fullname) <span class="comment">// 输出inde.htl</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> namewithoutExt = path.basename(fpath, <span class="string">&#x27;.html&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(namewithoutExt)  <span class="comment">// 输出index</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="综合案例-时钟案例"><a href="#综合案例-时钟案例" class="headerlink" title="综合案例-时钟案例"></a>综合案例-时钟案例</h4><p>我们把时钟的源文件分别拆分，然后我们要以以下步骤实现:</p><ul><li>创建两个正则表达式，分别用来匹配style和script标签</li><li>使用fs模块，读取需要被处理的HTML文件</li><li>自定义resolveCSS方法，来写入index.css样式文件</li><li>自定义resolveJS方法，来写入index.js脚本文件</li><li>自定resolveHTML方法，来写入index.html文件</li></ul><p>这个案例没有演示的必要，这里就不展示了哈哈哈</p><h4 id="理解http模块的概念及作用"><a href="#理解http模块的概念及作用" class="headerlink" title="理解http模块的概念及作用"></a>理解http模块的概念及作用</h4><p>回顾: 什么是客户端，什么是服务器</p><p>在网络节点中，负责消费资源的电脑，叫做客户端；负责对外提供网络资源的电脑，叫做服务器</p><p>http模块是Node.js官方提供的、用来创建web服务器的模块，通过http模块提供的http.createServer()方法，就能方便地把一台普通的电脑，变成一台web服务器，从而对外提供Web资源服务</p><p>使用之前，要先导入:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http =  <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="进一步理解http模块的作用"><a href="#进一步理解http模块的作用" class="headerlink" title="进一步理解http模块的作用"></a>进一步理解http模块的作用</h4><p>服务器和普通电脑的区别在于，<strong>服务器上安装了web服务器软件</strong>，例如IIS、<strong>Apathe</strong>等，通过安装这些服务器软件，就能把一台普通的电脑变成一台服务器</p><p>我们可以安装一个phpStudy这样一个软件用来把本地客户端，也就是你的电脑模拟成一个服务器:</p><p><a href="https://imgtu.com/i/qGrUsS"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qGrUsS.png"                      alt="qGrUsS.png"                ></a></p><p>在Node.js中，我们不需要使用ISS(一般asp.net使用)、Apathe(一般PHP使用)等这些第三方web服务器软件，因为我们可以基于Node.js提供的http模块，通过几行简单的代码，就能轻松的手写一个服务器软件，从而对外提供Web服务</p><h4 id="服务器相关的概念"><a href="#服务器相关的概念" class="headerlink" title="服务器相关的概念"></a>服务器相关的概念</h4><ol><li><p>IP地址</p><p>IP地址就是互联网上<strong>每台计算机的唯一地址</strong>，因此IP地址具有唯一性</p><p>IP地址的格式: 通常用点分十进制表示成(a.b.c.d)的形式，其中，a，b，c，d都是0-255之间的十进制整数</p><p>注意:</p><p>互联网中的每台Web服务器，都有自己的IP地址，例如: 可以在Windows的终端中运行ping <a class="link"   href="http://www.baidu.com命令,即可查看百度服务器的ip地址/" >www.baidu.com命令，即可查看百度服务器的IP地址<i class="fas fa-external-link-alt"></i></a></p><p>在开发期间，自己的电脑既是一台服务器，也是一个客户端，为了方便测试，可以在自己的浏览器中输入<code>127.0.0.1</code>这个IP地址，就能把自己的电脑当做一台服务器进行访问了</p></li><li><p>域名和域名服务器</p><p>尽管IP地址能够唯一地标识网络上的计算机，但IP地址是一长串数字，不直观，而且不便于记忆，于是人们又发明了另一套字符型的地址方案，即所谓的域名(Domain Name)地址</p><p>IP地址和域名是一一对应的关系，这份对应关系存放在一种叫做域名服务器(DNS)，使用者只需要通过好记的域名访问对应的服务器即可，对应的转换工作由域名服务器实现，因此，域名服务器就是提供IP地址和域名之间的转换服务的服务器</p><p>注意:</p><p>在开发测试期间，127.0.0.1对应的域名是localhost，它们代表我们自己的这台电脑，在使用效果上没有任何区别</p></li><li><p>端口号</p><p>计算机中的端口号，就好像是现实生活中的门牌号一样，通过门牌号，外卖小哥可以在整栋大楼众多的房间中，准确的把外卖送到你的手中</p><p>同样的道理，在一台电脑中，可以运行成百上千个web服务，每个web服务都对应一个唯一的端口号，客户端发送过来的网络请求，通过端口，可以被准确地交给对应的web服务进行处理:</p><p><a href="https://imgtu.com/i/qGfkIU"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qGfkIU.png"                      alt="qGfkIU.png"                ></a></p><p>注意:</p><p>每个端口号不能同时被多个web服务占用，就像每个试衣间只能同时进一个人一样的</p><p>在实际开发中， URL中的<strong>80端口可以被省略</strong></p></li></ol><h4 id="创建最基本的web服务器"><a href="#创建最基本的web服务器" class="headerlink" title="创建最基本的web服务器"></a>创建最基本的web服务器</h4><ol><li><p>创建web服务器的基本步骤</p><ul><li>导入http模块</li><li>创建web服务器实例</li><li>为服务器实例绑定request事件，<strong>监听客户端的请求</strong></li><li>启动服务器</li></ul><p>步骤1: 导入http模块</p><p>如果希望在自己的电脑上创建一个web服务器，从而对外提供web服务，则需要导入http模块:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br></pre></td></tr></table></figure><p>步骤2: 创建web服务器实例</p><p>调用http.createServer()方法，即可快速创建一个web服务器实例:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> server = http.createServer()</span><br></pre></td></tr></table></figure><p>步骤3: 为服务器实例绑定request事件</p><p>为服务器实例绑定request事件，即可监听客户端发送过来的网络请求:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用服务器实例的.on()方法，为服务器绑定一个request事件</span></span><br><span class="line">server.on(<span class="string">&#x27;request&#x27;</span>, (req, res) ==&gt; &#123;</span><br><span class="line">          <span class="comment">// 只要有客户端来请求服务器，就会触发request事件，从而调用这个事件处理函数</span></span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&#x27;someone visited our web server.&#x27;</span>)</span><br><span class="line">          &#125;)</span><br></pre></td></tr></table></figure><p>步骤4: 启动服务器</p><p>调用服务器实例的.listen()方法，即可启动当前的web服务器实例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用server.listen(端口号， 回调函数)方法，即可启动web服务器</span></span><br><span class="line">server.listen(<span class="number">8080</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) =&gt; </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;http server running at http:127.0.0.1:8080&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面的步骤3: 为服务器实例绑定request事件中的req和res参数我们没提，下面我们来看看:</p><ul><li><p>req请求对象</p><p>只要服务器接收到了客户端的请求，就会触发server.on()方法中绑定的request事件处理函数request，如果想在事件处理函数中访问与客户端相关的数据或属性，我们可以使用如下方式:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server.on(<span class="string">&#x27;request&#x27;</span>, <span class="function">(<span class="params">req</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// req是请求对象，它包含了与客户端相关的属性和数据，例如:</span></span><br><span class="line">    <span class="comment">// req.url 是客户端请求的URL地址,从端口号后面开始截取</span></span><br><span class="line">    <span class="comment">// req.method 是客户端的method请求类型，比如get、post</span></span><br><span class="line">    <span class="keyword">const</span> str = <span class="string">&#x27;your request url is $&#123;req.url&#125;, and request method is $&#123;req.method&#125;&#x27;</span></span><br><span class="line">    <span class="built_in">console</span>.log(str)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>res相应对象</p><p>在服务器的request事件处理函数中，如果想访问与服务器相关的数据或属性，可以使用如下的方式:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sever.on(<span class="string">&#x27;request&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// res是响应对象，它包含了与服务器相关的数据和数学，例如:</span></span><br><span class="line">    <span class="comment">// 要发送到客户端的字符串</span></span><br><span class="line">    <span class="keyword">const</span> str = <span class="string">&#x27;your request url is $&#123;req.url&#125;, and request method is $&#123;req.method&#125;&#x27;</span></span><br><span class="line">    <span class="comment">// res.end()方法的作用:向客户端发送指定的内容，并结束这次请求的处理过程</span></span><br><span class="line">    res.end(str)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><p>如何解决中文乱码的问题</p><p>当我们调用res.end()方法，想客户端发送中文内容的时候，会出现乱码问题，此时，需要手动设置内容的编码格式:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server.on(<span class="string">&#x27;require&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//发送的内容包含中文</span></span><br><span class="line">    cosnt str = <span class="string">&quot;你好，你请求的url地址是$&#123;req.url&#125;, 请求的method类型是$&#123;req.method&#125;&quot;</span></span><br><span class="line">    <span class="comment">// 为了防止中文显示乱码的问题，需要设置响应头，//Content-Type的值为text/html; charset=utf-8</span></span><br><span class="line">    res.setHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html; charset=utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment">// 把包含中文的内容，响应给客户端</span></span><br><span class="line">    res.end(str)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h4 id="根据不同的url响应不同的html内容"><a href="#根据不同的url响应不同的html内容" class="headerlink" title="根据不同的url响应不同的html内容"></a>根据不同的url响应不同的html内容</h4><p>核心实现步骤:</p><p><a href="https://imgtu.com/i/qJSU61"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qJSU61.png"                      alt="qJSU61.png"                ></a></p><p>实现案例:</p><p><a href="https://imgtu.com/i/qJSv7T"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qJSv7T.png"                      alt="qJSv7T.png"                ></a></p><h4 id="模块的分类-amp-require的使用"><a href="#模块的分类-amp-require的使用" class="headerlink" title="模块的分类&amp;require的使用"></a>模块的分类&amp;require的使用</h4><p><a href="https://imgtu.com/i/qJprD0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qJprD0.png"                      alt="qJprD0.png"                ></a></p><p><a href="https://imgtu.com/i/qJpHUO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qJpHUO.png"                      alt="qJpHUO.png"                ></a></p><p>注意: 使用require()方法加载其他模块时，会执行被加载模块中的代码</p><h4 id="Node-js中的模块作用域"><a href="#Node-js中的模块作用域" class="headerlink" title="Node.js中的模块作用域"></a>Node.js中的模块作用域</h4><ol><li><p>什么是模块作用域</p><p><a href="https://imgtu.com/i/qJ9DRH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qJ9DRH.png"                      alt="qJ9DRH.png"                ></a></p><p><a href="https://imgtu.com/i/qJ94Jg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qJ94Jg.png"                      alt="qJ94Jg.png"                ></a></p></li><li><p>模块作用域的好处</p><p>防止了全局变量的污染的问题</p><p>在windows中我们是没有模块的，只有函数的概念，比如说我们在一个html文档中导入了一个register.js和一个login.js，这两个js文件中各定义了一个username的变量，register.js和login.js导入之后，这两个变量都会被赋给全局变量window，当我们使用username这个变量就会被污染</p></li></ol><h4 id="向外共享模块作用域的成员"><a href="#向外共享模块作用域的成员" class="headerlink" title="向外共享模块作用域的成员"></a>向外共享模块作用域的成员</h4><p>model.exports对象</p><p>在自定义模块中，可以使用module.exports对象，将模块内的成员共享出去，供外界使用</p><p>在一个自定义模块中，默认情况下，<code>module.exports = &#123;&#125;</code>，我们导入这个动作其实就是导入了模块中用<code>module.exports = &#123;&#125;</code>所共享出去的东西</p><p><strong>外界require()方法导入自定义模块时，得到的就是module.exports所指向的对象</strong><br><a href="https://imgtu.com/i/qYdJYt"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYdJYt.png"                      alt="qYdJYt.png"                ></a></p><p>共享成员的注意点:</p><p><a href="https://imgtu.com/i/qYd579"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYd579.png"                      alt="qYd579.png"                ></a></p><p>如挂载的是一个对象，那就是指向的对象，挂载的对象会覆盖前面所挂载的方法或属性</p><p>exports对象:</p><p><a href="https://imgtu.com/i/qYwgUA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYwgUA.png"                      alt="qYwgUA.png"                ></a></p><p>以下代码便证明了这两个是同一个对象:</p><p><a href="https://imgtu.com/i/qY05J1"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qY05J1.png"                      alt="qY05J1.png"                ></a></p><p>exports向外共享的写法更简便，它是module.exports的一种简便写法</p><p>exports和module.exports的使用误区:</p><p>我们需要时刻谨记: <strong>使用require模块时，得到的永远是module.exports指向的对象</strong></p><p>下面给出一个示例图:</p><p><a href="https://imgtu.com/i/qYDvxP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYDvxP.png"                      alt="qYDvxP.png"                ></a></p><p><a href="https://imgtu.com/i/qYcLcR"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYcLcR.png"                      alt="qYcLcR.png"                ></a></p><p>视频参考: <a class="link"   href="https://www.bilibili.com/video/BV1a34y167AZ?p=24" >https://www.bilibili.com/video/BV1a34y167AZ?p=24<i class="fas fa-external-link-alt"></i></a></p><p>Node.js中的模块化规范:</p><p><a href="https://imgtu.com/i/qYRU1J"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYRU1J.png"                      alt="qYRU1J.png"                ></a></p><h4 id="npm与包"><a href="#npm与包" class="headerlink" title="npm与包"></a>npm与包</h4><h5 id="包"><a href="#包" class="headerlink" title="包"></a>包</h5><p>什么是包?</p><p>Node.js中的<strong>第三方模块</strong>又叫做包</p><p>就像电脑和计算机指的是相同的东西，第三方模块和包指的是同一个概念，只不过叫法不同</p><p>包的来源:</p><p><a href="https://imgtu.com/i/qYWpNT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYWpNT.png"                      alt="qYWpNT.png"                ></a></p><p>为什么需要包:</p><p><a href="https://imgtu.com/i/qYWlgH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYWlgH.png"                      alt="qYWlgH.png"                ></a></p><p>从哪里下载包?</p><p><a href="https://imgtu.com/i/qYWzMd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYWzMd.png"                      alt="qYWzMd.png"                ></a></p><p>如何下载包?</p><p><a href="https://imgtu.com/i/qYfmss"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYfmss.png"                      alt="qYfmss.png"                ></a></p><h5 id="npm初体验"><a href="#npm初体验" class="headerlink" title="npm初体验"></a>npm初体验</h5><ol><li><p>格式化时间的传统做法</p><p>第一步: 创建格式化时间的自定义模块</p><p>第二步: 定义格式化时间的方法</p><p>第三步: 创建补零函数</p><p>第四步: 从自定义模块中导出格式化时间的函数</p><p>第五步: 导入格式化时间的自定义模块</p><p>第六步: 调用格式化时间的函数</p><p>dateFormat.js:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义格式化时间的方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dateFormat</span>(<span class="params">dtStr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> dt = <span class="keyword">new</span> <span class="built_in">Date</span>(dtStr)</span><br><span class="line">    <span class="keyword">const</span> y = dt.getFullYear()</span><br><span class="line">    <span class="keyword">const</span> m = padZero(dt.getMonth() + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">const</span> d = padZero(dt.getDate())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> hh = padZero(dt.getHour())</span><br><span class="line">    <span class="keyword">const</span> mm = padZero(dt.getMinutes())</span><br><span class="line">    <span class="keyword">const</span> ss = padZero(dt.getSeconds())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125;-$&#123;hh&#125;$&#123;mm&#125;-$&#123;ss&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义补零的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">padZero</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n &gt; <span class="number">9</span> ? n: <span class="string">&#x27;0&#x27;</span> + n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  向外暴露出去</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    dateFormat</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>getTime.js:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入自定义的格式化时间的模块</span></span><br><span class="line"><span class="keyword">const</span> TIME = <span class="built_in">require</span>(<span class="string">&#x27;./dateFormat&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用方法，进行时间的格式化</span></span><br><span class="line"><span class="keyword">const</span> dt = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line"><span class="comment">// console.log(dt)</span></span><br><span class="line"><span class="keyword">const</span> newDT = TIME.dateFormat(dt)</span><br><span class="line"><span class="built_in">console</span>.log(newDT)</span><br></pre></td></tr></table></figure><p>可以看到，格式化时间的传统做法是比较麻烦的</p></li><li><p>格式化时间的高级做法(使用第三方包)</p><p><a href="https://imgtu.com/i/qYI64P"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYI64P.png"                      alt="qYI64P.png"                ></a></p><p>安装:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install 包的完整名称</span><br></pre></td></tr></table></figure><p>上面的的装包命令，可以简写为如下格式:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i 包的完整名称</span><br></pre></td></tr></table></figure><p>包安装好了后终端会提示<code>added 1 package from 6 contributors in xxxs</code>，然后后面<code>@</code>会跟上版本号</p><p>下面我们来看看使用moment来进行时间的格式化:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入需要的包</span></span><br><span class="line"><span class="comment">// 注意: 导入的名称，就是装包的时候的名称</span></span><br><span class="line"><span class="keyword">const</span> moment = <span class="built_in">require</span>(<span class="string">&#x27;moment&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dt = moment().format(<span class="string">&#x27;YYYY-MM-DD- HH:mm:ss&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(dt)</span><br></pre></td></tr></table></figure></li></ol><h5 id="使用npm的注意点"><a href="#使用npm的注意点" class="headerlink" title="使用npm的注意点"></a>使用npm的注意点</h5><p><a href="https://imgtu.com/i/qYTO0J"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYTO0J.png"                      alt="qYTO0J.png"                ></a></p><h5 id="安装指定版本的包"><a href="#安装指定版本的包" class="headerlink" title="安装指定版本的包"></a>安装指定版本的包</h5><p><a href="https://imgtu.com/i/qY7ZtI"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qY7ZtI.png"                      alt="qY7ZtI.png"                ></a></p><h5 id="包的语义化版本规范"><a href="#包的语义化版本规范" class="headerlink" title="包的语义化版本规范"></a>包的语义化版本规范</h5><p><a href="https://imgtu.com/i/qY7Yhq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qY7Yhq.png"                      alt="qY7Yhq.png"                ></a></p><h5 id="包管理配置文件"><a href="#包管理配置文件" class="headerlink" title="包管理配置文件"></a>包管理配置文件</h5><p><a href="https://imgtu.com/i/qY7g9x"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qY7g9x.png"                      alt="qY7g9x.png"                ></a></p><h6 id="多人协作问题"><a href="#多人协作问题" class="headerlink" title="多人协作问题"></a>多人协作问题</h6><p>如果<strong>第三方包的体积过大</strong>，这就不方便团队之间共享项目源代码了</p><p>如下图所遇到的情况:</p><p><a href="https://imgtu.com/i/qYHmVJ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYHmVJ.png"                      alt="qYHmVJ.png"                ></a></p><p>在实际开发中，我们都会使用github这样的工具来管理项目，我们希望将这个项目上传到github，如果这个项目太大，那上传也是比较费劲，第三放包我们可以下载，别人也可以下载，所以我们只需要上传项目的源代码即可(将这个文件夹添加到.gitignore忽略文件中)，那么就要在上传的时候剔除node_modules目录，我们怎么才能标记下我们的项目中用到了哪些第三方包呢，如果你不标记下，别人拿到你的代码就不知道你用到了哪些包，也就无法将项目跑起来</p><h6 id="如何记录项目中安装了哪些包"><a href="#如何记录项目中安装了哪些包" class="headerlink" title="如何记录项目中安装了哪些包?"></a>如何记录项目中安装了哪些包?</h6><p>我们可以向如下这么做:</p><p><a href="https://imgtu.com/i/qYbPdH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYbPdH.png"                      alt="qYbPdH.png"                ></a></p><h6 id="快速创建package-json"><a href="#快速创建package-json" class="headerlink" title="快速创建package.json"></a>快速创建package.json</h6><p><a href="https://imgtu.com/i/qYbeQf"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYbeQf.png"                      alt="qYbeQf.png"                ></a></p><p>在我们创建一个项目后，第一件事就是要创建一个package.json</p><p>这里有几个注意点: </p><ul><li>上述命令<strong>只能在英文目录下成功运行</strong>，所以，项目文件夹的名称一定要使用英文命名，<strong>不要使用中文，不能出现空格</strong></li><li>运行npm install 命令安装包的时候，npm包管理工具会自动把包的名称和版本号记录到package.json中</li></ul><h6 id="dependencies节点"><a href="#dependencies节点" class="headerlink" title="dependencies节点"></a>dependencies节点</h6><p>在我们创建package.json后，默认这个dependencies是空的，我们在装包之后，就会在其中添加值</p><p><a href="https://imgtu.com/i/qYqMjK"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYqMjK.png"                      alt="qYqMjK.png"                ></a></p><p>这个dependencies节点是干嘛的呢:</p><p><a href="https://imgtu.com/i/qYq23q"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYq23q.png"                      alt="qYq23q.png"                ></a></p><h6 id="如何一次性安装所有包"><a href="#如何一次性安装所有包" class="headerlink" title="如何一次性安装所有包"></a>如何一次性安装所有包</h6><p><a href="https://imgtu.com/i/qYq759"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYq759.png"                      alt="qYq759.png"                ></a></p><p><a href="https://imgtu.com/i/qYqLgx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYqLgx.png"                      alt="qYqLgx.png"                ></a></p><h6 id="如何从项目中卸载包"><a href="#如何从项目中卸载包" class="headerlink" title="如何从项目中卸载包"></a>如何从项目中卸载包</h6><p> <a href="https://imgtu.com/i/qYLPPA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYLPPA.png"                      alt="qYLPPA.png"                ></a></p><h6 id="devDependencies节点"><a href="#devDependencies节点" class="headerlink" title="devDependencies节点"></a>devDependencies节点</h6><p><a href="https://imgtu.com/i/qYL1x0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYL1x0.png"                      alt="qYL1x0.png"                ></a></p><p>如何查看我们是否需要在安装包的时候把包添加到devDependencies节点中呢，我们可以在安装包之前访问这个网站: <a class="link"   href="https://www.npmjs.com/package%EF%BC%8C%E6%9F%A5%E7%9C%8B%EF%BC%8C%E6%AF%94%E5%A6%82" >https://www.npmjs.com/package，查看，比如<i class="fas fa-external-link-alt"></i></a>:</p><p>我们搜索webpack这个包:</p><p><a href="https://imgtu.com/i/qYLzQ0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYLzQ0.png"                      alt="qYLzQ0.png"                ></a></p><p>它会告诉我们这个包只会在项目开发的时候用到，所以要加入到devDependencies节点中</p><h6 id="解决下包速度慢的问题"><a href="#解决下包速度慢的问题" class="headerlink" title="解决下包速度慢的问题"></a>解决下包速度慢的问题</h6><p>为什么下包速度慢？</p><p><a href="https://imgtu.com/i/qYOMwD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYOMwD.png"                      alt="qYOMwD.png"                ></a></p><p>如何解决下包速度慢:</p><p>可以利用淘宝NPM镜像服务器</p><p>原理:</p><p><a href="https://imgtu.com/i/qYOypn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYOypn.png"                      alt="qYOypn.png"                ></a></p><p>切换npm的下包镜像源</p><p><a href="https://imgtu.com/i/qYOIh9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYOIh9.png"                      alt="qYOIh9.png"                ></a></p><h6 id="nrm"><a href="#nrm" class="headerlink" title="nrm"></a>nrm</h6><p><a href="https://imgtu.com/i/qt8PxJ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qt8PxJ.png"                      alt="qt8PxJ.png"                ></a></p><h5 id="包的分类"><a href="#包的分类" class="headerlink" title="包的分类"></a>包的分类</h5><h6 id="项目包"><a href="#项目包" class="headerlink" title="项目包"></a>项目包</h6><p><a href="https://imgtu.com/i/qtGr1e"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtGr1e.png"                      alt="qtGr1e.png"                ></a></p><h6 id="全局包"><a href="#全局包" class="headerlink" title="全局包"></a>全局包</h6><p><a href="https://imgtu.com/i/qtGz3F"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtGz3F.png"                      alt="qtGz3F.png"                ></a></p><p><a href="https://imgtu.com/i/qtJ5Ux"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtJ5Ux.png"                      alt="qtJ5Ux.png"                ></a></p><h6 id="i5ting-toc"><a href="#i5ting-toc" class="headerlink" title="i5ting_toc"></a>i5ting_toc</h6><p><a href="https://imgtu.com/i/qtYKRU"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtYKRU.png"                      alt="qtYKRU.png"                ></a></p><p>上图中的<code>-o</code>参数表示在浏览器中打开</p><h5 id="规范的包结构"><a href="#规范的包结构" class="headerlink" title="规范的包结构"></a>规范的包结构</h5><p><a href="https://imgtu.com/i/qttn0A"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qttn0A.png"                      alt="qttn0A.png"                ></a></p><h5 id="开发属于自己的包-案例"><a href="#开发属于自己的包-案例" class="headerlink" title="开发属于自己的包(案例)"></a>开发属于自己的包(案例)</h5><h6 id="包的基本功能介绍"><a href="#包的基本功能介绍" class="headerlink" title="包的基本功能介绍"></a>包的基本功能介绍</h6><p>先说下我们要实现的功能:</p><p><a href="https://imgtu.com/i/qttocD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qttocD.png"                      alt="qttocD.png"                ></a></p><p>然后我们来看看如果开发好之后，我们具体调用的代码例子:</p><p>第一个功能:</p><p><a href="https://imgtu.com/i/qtNkEn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtNkEn.png"                      alt="qtNkEn.png"                ></a></p><p>第二个功能:</p><p><a href="https://imgtu.com/i/qtNaKe"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtNaKe.png"                      alt="qtNaKe.png"                ></a></p><p>第三个功能:</p><p><a href="https://imgtu.com/i/qtUFMD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtUFMD.png"                      alt="qtUFMD.png"                ></a></p><h6 id="初始化包的基本结构"><a href="#初始化包的基本结构" class="headerlink" title="初始化包的基本结构"></a>初始化包的基本结构</h6><p><a href="https://imgtu.com/i/qt0yjK"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qt0yjK.png"                      alt="qt0yjK.png"                ></a></p><h6 id="初始化package-json"><a href="#初始化package-json" class="headerlink" title="初始化package.json"></a>初始化package.json</h6><p>我们最终要初始化成下图这个样子:</p><p><a href="https://imgtu.com/i/qtB1Ve"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtB1Ve.png"                      alt="qtB1Ve.png"                ></a></p><p>name: 包的名称，之后上传供别人使用别人安装包就是用这个名字安装，这里要注意包的名称不能重复了，取名之前最后先去npm的官网先进行一个检索看看包名有没有被占用</p><p>version: 版本号，默认一个新的包是从1.0.0开始</p><p>main: 指定包的入口文件，外界导入包的时候，其实就是导入的main所指定的那个文件</p><p>description: 这个包的简短的描述信息</p><p>keywords: 搜索的关键字，在npm官网搜索这个关键字就能搜到相关包</p><p>license: 包所遵守的开源许可协议，默认是ISC</p><h6 id="在index-js中定义格式化时间的方法"><a href="#在index-js中定义格式化时间的方法" class="headerlink" title="在index.js中定义格式化时间的方法"></a>在index.js中定义格式化时间的方法</h6><p>我们来看下实现的整体步骤:</p><p><a href="https://imgtu.com/i/qtrscq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtrscq.png"                      alt="qtrscq.png"                ></a></p><p>格式时间的方法我刚刚已经实现了，见下面的代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义格式化时间的方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dateFormat</span>(<span class="params">dtStr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> dt = <span class="keyword">new</span> <span class="built_in">Date</span>(dtStr)</span><br><span class="line">    <span class="keyword">const</span> y = dt.getFullYear()</span><br><span class="line">    <span class="keyword">const</span> m = padZero(dt.getMonth() + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">const</span> d = padZero(dt.getDate())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> hh = padZero(dt.getHour())</span><br><span class="line">    <span class="keyword">const</span> mm = padZero(dt.getMinutes())</span><br><span class="line">    <span class="keyword">const</span> ss = padZero(dt.getSeconds())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125;-$&#123;hh&#125;$&#123;mm&#125;-$&#123;ss&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义补零的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">padZero</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n &gt; <span class="number">9</span> ? n: <span class="string">&#x27;0&#x27;</span> + n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  向外暴露出去</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    dateFormat</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试一下:</p><p><a href="https://imgtu.com/i/qtypi4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtypi4.png"                      alt="qtypi4.png"                ></a></p><p>上面require的参数是一个完整的指向index.js的一个路径，我们去掉<code>/index</code>是否还可以正常运行呢，答案是可以的，因为我们已经在package.json中的main属性已经添加了<code>index.js</code>，已经指明了入口</p><h6 id="在index-js中定义转义HTML的方法"><a href="#在index-js中定义转义HTML的方法" class="headerlink" title="在index.js中定义转义HTML的方法"></a>在index.js中定义转义HTML的方法</h6><p>我们来看下实现:</p><p><a href="https://imgtu.com/i/qt6PAS"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qt6PAS.png"                      alt="qt6PAS.png"                ></a></p><p>上图用到了字符串的replace方法，第一个参数是正则表达式，其中的<code>g</code>参数表示全局匹配，意思就是会从前到后全部匹配一遍，<code>|</code>表示或者，match表示匹配成功的字符，然后下面通过回调函数中的switch来进行匹配到的字符的一个替换</p><p>把这个方法暴露出去之后，我们来做个测试:</p><p><a href="https://imgtu.com/i/qtcxdf"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtcxdf.png"                      alt="qtcxdf.png"                ></a></p><h6 id="在index-js中定义还原HTML的方法"><a href="#在index-js中定义还原HTML的方法" class="headerlink" title="在index.js中定义还原HTML的方法"></a>在index.js中定义还原HTML的方法</h6><p>来看下实现:</p><p><a href="https://imgtu.com/i/qtgJw6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtgJw6.png"                      alt="qtgJw6.png"                ></a></p><h6 id="将不同的功能进行模块化拆分"><a href="#将不同的功能进行模块化拆分" class="headerlink" title="将不同的功能进行模块化拆分"></a>将不同的功能进行模块化拆分</h6><p>在经过上面的操作后，我们把所有的代码都写在了ithaime-tools下面的index.js中，其实在这个文件中我们做的功能比较多，这三个功能应该分处理时间和处理HTML来分成两个独立的功能，我们来看下步骤:</p><p><a href="https://imgtu.com/i/qt2HKA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qt2HKA.png"                      alt="qt2HKA.png"                ></a></p><p>我们先在ithaime-tools文件夹下新建一个src文件夹，然后在src目录下新建一个dateFormat.js和一个htmlEscape.js，我们把相应功能的函数放到对应的js文件里，然后分别导出</p><p><a href="https://imgtu.com/i/qtWvcQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtWvcQ.png"                      alt="qtWvcQ.png"                ></a></p><p><a href="https://imgtu.com/i/qtW77t"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtW77t.png"                      alt="qtW77t.png"                ></a></p><p><a href="https://imgtu.com/i/qtW0l4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtW0l4.png"                      alt="qtW0l4.png"                ></a></p><p>上图中用到了es6的部分语法<code>...</code>表示展开运算符，把这个对象中的每一个属性展开了交给新对象，关于<code>...</code>运算符可以参考: <a class="link"   href="https://www.cnblogs.com/jone-chen/p/12133441.html" >https://www.cnblogs.com/jone-chen/p/12133441.html<i class="fas fa-external-link-alt"></i></a></p><h6 id="编写包的说明文档"><a href="#编写包的说明文档" class="headerlink" title="编写包的说明文档"></a>编写包的说明文档</h6><p><a href="https://imgtu.com/i/qthNzF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qthNzF.png"                      alt="qthNzF.png"                ></a></p><h5 id="发布包"><a href="#发布包" class="headerlink" title="发布包"></a>发布包</h5><h6 id="注册npm账号"><a href="#注册npm账号" class="headerlink" title="注册npm账号"></a>注册npm账号</h6><p><a href="https://imgtu.com/i/qth4eA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qth4eA.png"                      alt="qth4eA.png"                ></a></p><h6 id="登录npm账号"><a href="#登录npm账号" class="headerlink" title="登录npm账号"></a>登录npm账号</h6><p><a href="https://imgtu.com/i/qt4KfK"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qt4KfK.png"                      alt="qt4KfK.png"                ></a></p><p>这里有一个注意点: 在运行npm login命令之前，<strong>必须先把下包的服务器地址切换成npm的官方服务器</strong>，否则会导致发布包失败</p><p><a href="https://imgtu.com/i/qt5tu4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qt5tu4.png"                      alt="qt5tu4.png"                ></a></p><h6 id="把包发布到npm上"><a href="#把包发布到npm上" class="headerlink" title="把包发布到npm上"></a>把包发布到npm上</h6><p><a href="https://imgtu.com/i/qt5Xan"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qt5Xan.png"                      alt="qt5Xan.png"                ></a></p><p>然后我们可以登录到npm的官方网站，然后点击头像右边的下拉箭头，然后点击packages，查看我们发布的包</p><h5 id="删除包"><a href="#删除包" class="headerlink" title="删除包"></a>删除包</h5><p><a href="https://imgtu.com/i/qtoCfP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtoCfP.png"                      alt="qtoCfP.png"                ></a></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/154090da36ff0728.png"                                     ></p><h4 id="模块的加载机制"><a href="#模块的加载机制" class="headerlink" title="模块的加载机制"></a>模块的加载机制</h4><ol><li><p>优先从缓存中加载</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/ef6ae3a7f166b9de.png"                                     ></p></li><li><p>内置模块的加载机制</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/6cb6718ec3bcb932.png"                                     ></p></li><li><p>自定义模块的加载机制</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/a21c31069ee5d100.png"                                     ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/93ef7f2d59aa25ea.png"                                     ></p></li><li><p>第三方模块的加载机制</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/701ef66ed0b0a5b1.png"                                     ></p></li><li><p>目作为模块</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/5b74bbfd95b8657f.png"                                     ></p></li></ol><h4 id="express"><a href="#express" class="headerlink" title="express"></a>express</h4><p>目标:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/15b9e16ac69a8c75.png"                                     ></p><h5 id="初识express"><a href="#初识express" class="headerlink" title="初识express"></a>初识express</h5><h6 id="什么是express"><a href="#什么是express" class="headerlink" title="什么是express"></a>什么是express</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/9c2443d59676ca5a.png"                                     ></p><h6 id="进一步理解express"><a href="#进一步理解express" class="headerlink" title="进一步理解express"></a>进一步理解express</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/267a759903feb79d.png"                                     ></p><h6 id="express能做什么"><a href="#express能做什么" class="headerlink" title="express能做什么"></a>express能做什么</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/855bd2becf38dbb2.png"                                     ></p><h5 id="express的基本使用"><a href="#express的基本使用" class="headerlink" title="express的基本使用"></a>express的基本使用</h5><h6 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/357d2bb25771cdc5.png"                                     ></p><h6 id="创建基本的web服务器"><a href="#创建基本的web服务器" class="headerlink" title="创建基本的web服务器"></a>创建基本的web服务器</h6><p>基本实现:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/e69e57941ce820aa.png"                                     ></p><h6 id="监听GET请求"><a href="#监听GET请求" class="headerlink" title="监听GET请求"></a>监听GET请求</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/84fce7e4bc64a53a.png"                                     ></p><h6 id="监听POST请求"><a href="#监听POST请求" class="headerlink" title="监听POST请求"></a>监听POST请求</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/d944cecd82bf2661.png"                                     ></p><h6 id="如何把内容响应给客户端"><a href="#如何把内容响应给客户端" class="headerlink" title="如何把内容响应给客户端"></a>如何把内容响应给客户端</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/1fe2735f3a7af3b9.png"                                     ></p><p>关于json对象和json字符串: <a class="link"   href="https://blog.csdn.net/u010865136/article/details/78591765" >https://blog.csdn.net/u010865136/article/details/78591765<i class="fas fa-external-link-alt"></i></a></p><h6 id="如何获取URL中携带的查询参数"><a href="#如何获取URL中携带的查询参数" class="headerlink" title="如何获取URL中携带的查询参数"></a>如何获取URL中携带的查询参数</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/d344c21b21451031.png"                                     ></p><h6 id="获取URL中的动态参数"><a href="#获取URL中的动态参数" class="headerlink" title="获取URL中的动态参数"></a>获取URL中的动态参数</h6><p>比如动态的<code>id</code>值</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/f9d27f2d2849333f.png"                                     ></p><p>id不是固定写法，只有前面的<code>:</code>是固定写法，也可以有多个动态参数比如:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">&#x27;/user/:id/:name&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.params)</span><br><span class="line">    res.send(req.params)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="托管静态资源"><a href="#托管静态资源" class="headerlink" title="托管静态资源"></a>托管静态资源</h5><h6 id="express-static"><a href="#express-static" class="headerlink" title="express.static()"></a>express.static()</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/2c623906e731fb00.png"                                     ></p><p>注意: Express在指定的静态目录中查找文件，并对外提供资源的访问路径；因此，存放静态文件的目录名不会出现在URL中</p><h6 id="托管多个静态资源目录"><a href="#托管多个静态资源目录" class="headerlink" title="托管多个静态资源目录"></a>托管多个静态资源目录</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/cd2a4620bbcbab18.png"                                     ></p><h6 id="挂载路径前缀"><a href="#挂载路径前缀" class="headerlink" title="挂载路径前缀"></a>挂载路径前缀</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/70717bfcabbf799f.png"                                     ></p><h5 id="nodemon"><a href="#nodemon" class="headerlink" title="nodemon"></a>nodemon</h5><h6 id="为什么要使用nodemon"><a href="#为什么要使用nodemon" class="headerlink" title="为什么要使用nodemon"></a>为什么要使用nodemon</h6><p><a href="https://imgtu.com/i/qUO4G4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/26/qUO4G4.png"                      alt="qUO4G4.png"                ></a></p><h6 id="安装nodemon"><a href="#安装nodemon" class="headerlink" title="安装nodemon"></a>安装nodemon</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/yY9baXmjfAF45Co.png"                      alt="image.png"                ></p><h6 id="使用nodemon"><a href="#使用nodemon" class="headerlink" title="使用nodemon"></a>使用nodemon</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/shETlbdaHB8PS1D.png"                      alt="image.png"                ></p><h5 id="express路由"><a href="#express路由" class="headerlink" title="express路由"></a>express路由</h5><h6 id="什么是路由"><a href="#什么是路由" class="headerlink" title="什么是路由"></a>什么是路由</h6><p>广义来讲，路由就是<strong>映射关系</strong></p><p>生活中的案例:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/7KtgbO1kI3nVfX9.png"                      alt="image.png"                ></p><h6 id="express中的路由"><a href="#express中的路由" class="headerlink" title="express中的路由"></a>express中的路由</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/nBQfAHxlg7ET98a.png"                      alt="image.png"                ></p><h6 id="express中的路由的例子"><a href="#express中的路由的例子" class="headerlink" title="express中的路由的例子"></a>express中的路由的例子</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/fYsKDF7gtLQU2PC.png"                      alt="image.png"                ></p><h6 id="路由的匹配过程"><a href="#路由的匹配过程" class="headerlink" title="路由的匹配过程"></a>路由的匹配过程</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/VonEirtIkTNGmjs.png"                      alt="image.png"                ></p><h5 id="路由的使用"><a href="#路由的使用" class="headerlink" title="路由的使用"></a>路由的使用</h5><h6 id="最简单的用法"><a href="#最简单的用法" class="headerlink" title="最简单的用法"></a>最简单的用法</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/KxegbOWELkalHXc.png"                      alt="image.png"                ></p><h6 id="模块化路由"><a href="#模块化路由" class="headerlink" title="模块化路由"></a>模块化路由</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/J42yBfw5PnajWzq.png"                      alt="image.png"                ></p><h6 id="创建路由模块"><a href="#创建路由模块" class="headerlink" title="创建路由模块"></a>创建路由模块</h6><p>案例:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/C6nUoGMvrzWqlSg.png"                      alt="image.png"                ></p><h6 id="注册路由模块"><a href="#注册路由模块" class="headerlink" title="注册路由模块"></a>注册路由模块</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/ygW2Pi6QIv7UcBO.png"                      alt="image.png"                ></p><p>注意: app.use()函数的作用，就是用来注册全局中间件</p><h6 id="为路由模块添加前缀"><a href="#为路由模块添加前缀" class="headerlink" title="为路由模块添加前缀"></a>为路由模块添加前缀</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/IMF1CzQAv43njqf.png"                      alt="image.png"                ></p><p>视频地址: <a class="link"   href="https://www.bilibili.com/video/BV1a34y167AZ?p=43" >https://www.bilibili.com/video/BV1a34y167AZ?p=43<i class="fas fa-external-link-alt"></i></a></p><h4 id="express中间件"><a href="#express中间件" class="headerlink" title="express中间件"></a>express中间件</h4><h5 id="中间件的概念"><a href="#中间件的概念" class="headerlink" title="中间件的概念"></a>中间件的概念</h5><h6 id="什么是中间件"><a href="#什么是中间件" class="headerlink" title="什么是中间件"></a>什么是中间件</h6><p>中间件(Middleware)，特指<strong>业务流程的中间处理环节</strong></p><p>生活中的例子:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/g5LyRDbadPti8Kh.png"                      alt="image.png"                ></p><h6 id="express中间件的调用流程"><a href="#express中间件的调用流程" class="headerlink" title="express中间件的调用流程"></a>express中间件的调用流程</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/BUomswa1EpuIQdX.png"                      alt="image.png"                ></p><h6 id="express中间件的格式"><a href="#express中间件的格式" class="headerlink" title="express中间件的格式"></a>express中间件的格式</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/MwJIRlt3yeQYhjO.png"                      alt="image.png"                ></p><h6 id="next函数的作用"><a href="#next函数的作用" class="headerlink" title="next函数的作用"></a>next函数的作用</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/tZQNTuHDiYzR4Kb.png"                      alt="image.png"                ></p><h5 id="express中间件的初体验"><a href="#express中间件的初体验" class="headerlink" title="express中间件的初体验"></a>express中间件的初体验</h5><h6 id="定义中间件函数"><a href="#定义中间件函数" class="headerlink" title="定义中间件函数"></a>定义中间件函数</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/WGXON2mdahQg1lA.png"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/BTQNfKUhtwrecsm.png"                      alt="image.png"                ></p><h6 id="全局生效的中间件"><a href="#全局生效的中间件" class="headerlink" title="全局生效的中间件"></a>全局生效的中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/bSH726PedkuOsI9.png"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/3aZgCdu9rYFUebl.png"                      alt="image.png"                ></p><h6 id="定义全局中间件的简化形式"><a href="#定义全局中间件的简化形式" class="headerlink" title="定义全局中间件的简化形式"></a>定义全局中间件的简化形式</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/K14Z5uBSXLfixlv.png"                      alt="image.png"                ></p><h6 id="中间件的作用"><a href="#中间件的作用" class="headerlink" title="中间件的作用"></a>中间件的作用</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/Tmzs46MXcQoePVd.png"                      alt="image.png"                ></p><h6 id="定义多个全局中间件"><a href="#定义多个全局中间件" class="headerlink" title="定义多个全局中间件"></a>定义多个全局中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/tFWydMTvmqZ6nO3.png"                      alt="image.png"                ></p><h6 id="局部生效的中间件"><a href="#局部生效的中间件" class="headerlink" title="局部生效的中间件"></a>局部生效的中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/u2isKMUGZr3eEoW.png"                      alt="image.png"                ></p><h6 id="定义多个局部中间件"><a href="#定义多个局部中间件" class="headerlink" title="定义多个局部中间件"></a>定义多个局部中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/iXBOehCwmrn5lWa.png"                      alt="image.png"                ></p><h6 id="中间件的5个注意事项"><a href="#中间件的5个注意事项" class="headerlink" title="中间件的5个注意事项"></a>中间件的5个注意事项</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/Mm3rODZ5kt4Pyl2.png"                      alt="image.png"                ></p><h5 id="中间件的分类"><a href="#中间件的分类" class="headerlink" title="中间件的分类"></a>中间件的分类</h5><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/DGAh4VRLSKHgyX2.png"                      alt="image.png"                ></p><h6 id="应用级别的中间件"><a href="#应用级别的中间件" class="headerlink" title="应用级别的中间件"></a>应用级别的中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/ly8eaRMcKrx9ELU.png"                      alt="image.png"                ></p><h6 id="路由级别的中间件"><a href="#路由级别的中间件" class="headerlink" title="路由级别的中间件"></a>路由级别的中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/FHgDJQU9GZBKm7o.png"                      alt="image.png"                ></p><h6 id="错误级别的中间件"><a href="#错误级别的中间件" class="headerlink" title="错误级别的中间件"></a>错误级别的中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/2kfm3ieXCGz8IoH.png"                      alt="image.png"                ></p><p>作用: 项目不会崩溃，会继续运行</p><p>案例:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/7AjdFLtMrVRawN3.png"                      alt="image.png"                ></p><p>错误中间件会捕获到路由中所抛出的错误，然后进行处理</p><p>注意: <strong>错误级别的中间件必须注册在所有路由之后!，这是个例外</strong></p><h6 id="express内置的中间件"><a href="#express内置的中间件" class="headerlink" title="express内置的中间件"></a>express内置的中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/eQDcElWavmBpdLg.png"                      alt="image.png"                ></p><p>向服务器提价json格式的请求数据:</p><p>在服务器中，可以使用req.body这个属性，来接收客户端发送过来的请求体数据，但是如果发送的是json格式的数据，在没有定义<code>express.json</code>这个格式的情况下，服务器是完全解析不了的:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/XKaZ9hemN4LlO21.png"                      alt="image.png"                ></p><p>默认情况下，如果不配置解析表单数据的中间件，则req.body默认等于undefined，就如上图所示</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/ZF7lryYpJuKC9XR.png"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/wijphVxPSeg5QRY.png"                      alt="image.png"                ></p><p>本小节视频地址: <a class="link"   href="https://www.bilibili.com/video/BV1a34y167AZ?p=48%EF%BC%8C" >https://www.bilibili.com/video/BV1a34y167AZ?p=48，<i class="fas fa-external-link-alt"></i></a> 到32分</p><h6 id="第三方的中间件"><a href="#第三方的中间件" class="headerlink" title="第三方的中间件"></a>第三方的中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/wORkdbzrILu8eUl.png"                      alt="image.png"                ></p><p>以body-parser这个第三方中间件为例:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/eK6ibhWIqDAykGm.png"                      alt="image.png"                ></p><h5 id="自定义中间件"><a href="#自定义中间件" class="headerlink" title="自定义中间件"></a>自定义中间件</h5><h6 id="需求描述与实现步骤"><a href="#需求描述与实现步骤" class="headerlink" title="需求描述与实现步骤"></a>需求描述与实现步骤</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/bzMuVEhgovDZIJ5.png"                      alt="image.png"                ></p><p>使用app.use来定义一个中间件，在全局中间件中来写业务逻辑</p><p>监听req的data事件，只要触发了req的data事件，就证明有数据被提交了</p><p>接下来还要监听req的end事件，只要触发了req的end事件，就证明服务器已经完整地接收到了数据</p><p>接收到的数据还需要使用querystring模块解析请求体数据</p><p>然后将解析出来的数据对象挂载为req.body</p><p>最后将自定义中间件封装为模块</p><h6 id="定义中间件"><a href="#定义中间件" class="headerlink" title="定义中间件"></a>定义中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/27/JsrjCKIDXFNax5v.png"                      alt="image.png"                ></p><h6 id="监听req的data事件"><a href="#监听req的data事件" class="headerlink" title="监听req的data事件"></a>监听req的data事件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/27/F1Kwc2fYpIqa9kU.png"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/27/1jIdhcRiw3maqHs.png"                      alt="image.png"                ></p><h6 id="监听req的end事件"><a href="#监听req的end事件" class="headerlink" title="监听req的end事件"></a>监听req的end事件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/27/sqhHtRcYlEI6v7j.png"                      alt="image.png"                ></p><h6 id="使用querystring模块解析请求体数据"><a href="#使用querystring模块解析请求体数据" class="headerlink" title="使用querystring模块解析请求体数据"></a>使用querystring模块解析请求体数据</h6><p>上面我们post过去的数据是字符串格式的，中文还会被编码，下面我们要做的就是进行一个解析</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/27/bjPScDmh6ktv3X5.png"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/27/CyZxBMpJibDvcY3.png"                      alt="image.png"                ></p><h6 id="将解析出来的数据对象挂载为req-body"><a href="#将解析出来的数据对象挂载为req-body" class="headerlink" title="将解析出来的数据对象挂载为req.body"></a>将解析出来的数据对象挂载为req.body</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/27/LiNVa4DlodnT1bU.png"                      alt="image.png"                ></p><h6 id="将自定义中间件封装为模块"><a href="#将自定义中间件封装为模块" class="headerlink" title="将自定义中间件封装为模块"></a>将自定义中间件封装为模块</h6><p>为了优化代码结构，我们可以把自定义的中间件函数，<strong>封装为独立的模块</strong>，示例代码如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/ilg632u4BGEfJjo.png"                      alt="image.png"                ></p><h4 id="使用express写接口"><a href="#使用express写接口" class="headerlink" title="使用express写接口"></a>使用express写接口</h4><h5 id="创建基本的服务器"><a href="#创建基本的服务器" class="headerlink" title="创建基本的服务器"></a>创建基本的服务器</h5><p>基本框架如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/FoqXankUN38PtWw.png"                      alt="image.png"                ></p><h5 id="创建API路由模块"><a href="#创建API路由模块" class="headerlink" title="创建API路由模块"></a>创建API路由模块</h5><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/884f24319fda30f5.png"                                     ></p><p>上面是创建API路由模块，下面我们就可以导入路由模块:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="comment">// 创建服务器示例</span></span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入路由模块</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="built_in">require</span>(<span class="string">&#x27;apiRouter&#x27;</span>)</span><br><span class="line"><span class="comment">// 把路由模块，注册到app上</span></span><br><span class="line">app.use(<span class="string">&#x27;/api&#x27;</span>, router)</span><br><span class="line"></span><br><span class="line"><span class="comment">//起动服务器</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h5 id="编写GET接口"><a href="#编写GET接口" class="headerlink" title="编写GET接口"></a>编写GET接口</h5><p>核心实现代码如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i0.hdslb.com/bfs/album/cfcb5f9bf8520a53652c5a53c12c16ad8cdd6b7c.png"                                     ></p><p>上面的一个实现思路是拿到用户请求的数据，然后再原封不动地返回回去</p><p>在测试上面的接口的时候，我们可以用<code>?</code>然后后面跟上比如<code>age=17</code>等等的参数，也可以在postman输入链接的下方点击Params添加get请求的参数</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/hututu-tech/IMG-gongfeng@main/2022/03/28/62412411da378.png"                                     ></p><h5 id="编写POST接口"><a href="#编写POST接口" class="headerlink" title="编写POST接口"></a>编写POST接口</h5><p>核心实现代码如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/hututu-tech/IMG-gongfeng@main/2022/03/28/6241248697646.png"                                     ></p><p>这个和上面的编写GET接口是很相似的</p><p>但这里有个注意点: 如果要获取<code>URL-encoded</code>格式的请求头数据，必须配置中间件<code>app.use(express.urlencode(&#123; extended: false &#125;))</code>，如果不配置这个中间件，那我们就无法通过<code>req.body</code>拿到里面所包含的数据</p><h5 id="CORS跨域资源共享"><a href="#CORS跨域资源共享" class="headerlink" title="CORS跨域资源共享"></a>CORS跨域资源共享</h5><h6 id="接口的跨域问题"><a href="#接口的跨域问题" class="headerlink" title="接口的跨域问题"></a>接口的跨域问题</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btnGET&quot;</span>&gt;</span>GET<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btnPOST&quot;</span>&gt;</span>POST<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 1. 测试GET接口</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        $(<span class="string">&#x27;#btnGET&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">// 通过id选择器选中GET这个按钮并绑定onclick事件</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            $.ajax(&#123;  <span class="comment">// 然后在处理函数中，我们可以调用$.ajax去发起一个请求</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">type</span>: <span class="string">&#x27;GET&#x27;</span>,  <span class="comment">// 指定请求的类型</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">url</span>: <span class="string">&#x27;http://127.0.0.1/api/get&#x27;</span>, <span class="comment">// 请求的地址，或者说请求的接口</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">data</span>: &#123;  <span class="comment">// 指定我们要发送到服务器的数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">age</span>: <span class="number">20</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;  <span class="comment">// 指定一个成功的回调函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">console</span>.log(res)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 2. 测试POST接口</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        $(<span class="string">&#x27;#btnPOST&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">// 通过id选择器选中POST这个按钮并绑定onclick事件</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            $.ajax(&#123;  <span class="comment">// 然后在处理函数中，我们可以调用$.ajax去发起一个请求</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">type</span>: <span class="string">&#x27;POST&#x27;</span>,  <span class="comment">// 指定请求的类型</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">url</span>: <span class="string">&#x27;http://127.0.0.1/api/post&#x27;</span>, <span class="comment">// 请求的地址，或者说请求的接口</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">data</span>: &#123;  <span class="comment">// 指定我们要发送到服务器的数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">bookname</span>: <span class="string">&#x27;水浒传&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">author</span>: <span class="string">&#x27;施耐庵&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;  <span class="comment">// 指定一个成功的回调函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">console</span>.log(res)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>以上我们使用了jQuery的在线版，在这个网站可以获取: <a class="link"   href="https://staticfile.org/" >https://staticfile.org/<i class="fas fa-external-link-alt"></i></a></p><p>然后我们打开浏览器，点击这两个按钮，会发现在终端中报错了:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/hututu-tech/IMG-gongfeng@main/2022/03/28/62412c5899e8c.png"                                     ></p><p>以上报错就告诉我们，我们的接口存在跨域的问题，因为当前咱们是以<code>file</code>协议打开这个浏览器窗口的，而我们要请求的接口是<code>http</code>协议的，这就存在协议上的不同。我们知道，只要协议、域名或者端口号、任何一项不同，都存在跨域的问题。在我们写的这个小案例中，我们的网页和接口就存在跨域的问题。</p><h6 id="解决跨域问题的两种方案"><a href="#解决跨域问题的两种方案" class="headerlink" title="解决跨域问题的两种方案"></a>解决跨域问题的两种方案</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i0.hdslb.com/bfs/album/a7e1f77c393922623a91fc17ddf151a58950874b.png"                                     ></p><p>目前我们绝大部分都是使用CORS来解决跨域，因为JSONP不支持GET请求</p><h6 id="使用cors中间件解决跨域问题"><a href="#使用cors中间件解决跨域问题" class="headerlink" title="使用cors中间件解决跨域问题"></a>使用cors中间件解决跨域问题</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i0.hdslb.com/bfs/album/82d7f6fead1fe41fe2fa7a480c318ac1e14ddc82.png"                                     ></p><p>第一步使用<code>npm install cors</code>来安装这个中间件模块，第二步使用<code>const cors = require(&#39;cors&#39;)</code>导入中间件，最后使用<code>app.use(cors())</code>将cors中间件注册为全局可用的中间件，这样就能帮我们解决接口跨域访问的问题了</p><p>注意: 在所有路由之前导入这个中间件</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i0.hdslb.com/bfs/album/f1baf9a684f67ba8d20676c2b22e9aeda7bfa4b9.png"                                     ></p><p>这次就没有跨域的问题了:</p><p><a href="https://imgtu.com/i/qD6IVH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/28/qD6IVH.png"                      alt="qD6IVH.png"                ></a></p><h6 id="什么是cors"><a href="#什么是cors" class="headerlink" title="什么是cors"></a>什么是cors</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/eb45af5c9e7d7059.png"                                     ></p><h6 id="cors的注意事项"><a href="#cors的注意事项" class="headerlink" title="cors的注意事项"></a>cors的注意事项</h6><p><a href="https://imgtu.com/i/qDc8sO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/28/qDc8sO.png"                      alt="qDc8sO.png"                ></a></p><h6 id="cors响应头部-Access-Control-Allow-Origin"><a href="#cors响应头部-Access-Control-Allow-Origin" class="headerlink" title="cors响应头部-Access-Control-Allow-Origin"></a>cors响应头部-Access-Control-Allow-Origin</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/3444bbf39678fdb0.png"                                     ></p><p>如果是百度的网页，就访问不了</p><p>通过<code>Access-Control-Allow-Origin</code>这个头部，我们就可以控制允许哪些网页或网站来请求我们的服务器接口，如果你允许所有的网页或网站都能请求我们的服务器，就可以指定一个<code>*</code>，如下所示:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/d1b3411fd2793dd6.png"                                     ></p><h6 id="cors响应头部-Access-Control-Allow-Headers"><a href="#cors响应头部-Access-Control-Allow-Headers" class="headerlink" title="cors响应头部-Access-Control-Allow-Headers"></a>cors响应头部-Access-Control-Allow-Headers</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/2345f918206da467.png"                                     ></p><h6 id="cors响应头部-Access-Control-Allow-Methods"><a href="#cors响应头部-Access-Control-Allow-Methods" class="headerlink" title="cors响应头部-Access-Control-Allow-Methods"></a>cors响应头部-Access-Control-Allow-Methods</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/f377f02d2c6e00e4.png"                                     ></p><h6 id="cors请求的分类"><a href="#cors请求的分类" class="headerlink" title="cors请求的分类"></a>cors请求的分类</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/baa9920df4eb0e09.png"                                     ></p><h6 id="简单请求"><a href="#简单请求" class="headerlink" title="简单请求"></a>简单请求</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/28301b52e0626918.png"                                     ></p><h6 id="预监请求"><a href="#预监请求" class="headerlink" title="预监请求"></a>预监请求</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/5711affdfe6d3e73.png"                                     ></p><h6 id="简单请求和预检测请求的区别"><a href="#简单请求和预检测请求的区别" class="headerlink" title="简单请求和预检测请求的区别"></a>简单请求和预检测请求的区别</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/1101276dea9ae0d3.png"                                     ></p><h5 id="JSONP接口"><a href="#JSONP接口" class="headerlink" title="JSONP接口"></a>JSONP接口</h5><h6 id="回顾JSONP的概念与特点"><a href="#回顾JSONP的概念与特点" class="headerlink" title="回顾JSONP的概念与特点"></a>回顾JSONP的概念与特点</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/ShIJu5eGAK1OcnY.png"                      alt="图片.png"                ></p><h6 id="创建JSONP接口的注意事项"><a href="#创建JSONP接口的注意事项" class="headerlink" title="创建JSONP接口的注意事项"></a>创建JSONP接口的注意事项</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/UaN2pMGoxfkCFTA.png"                      alt="图片.png"                ></p><h6 id="实现JSONP接口的步骤"><a href="#实现JSONP接口的步骤" class="headerlink" title="实现JSONP接口的步骤"></a>实现JSONP接口的步骤</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/wMr8PGWgoK9dIlJ.png"                      alt="图片.png"                ></p><p>jsonp实现的原理就是客户端通过script标签把一个函数的名字发送个服务器，希望服务器返回这个函数的调用，在调用期间把数据传进来即可；因此我们在服务器要先拿到函数的名字，然后准备要发送给客户端的数据，当函数的名字和数据都准备好了后，我们就要拼接出一个函数调用的字符串，最后把这个字符串发送给客户端就行了</p><p>我们来看看核心代码的实现:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/Edjqirlb7Z1mFsR.png"                      alt="图片.png"                ></p><p>视频地址: <a class="link"   href="https://www.bilibili.com/video/BV1a34y167AZ?p=56" >https://www.bilibili.com/video/BV1a34y167AZ?p=56<i class="fas fa-external-link-alt"></i></a></p><h6 id="在网页中使用JQuery发起JSONP请求"><a href="#在网页中使用JQuery发起JSONP请求" class="headerlink" title="在网页中使用JQuery发起JSONP请求"></a>在网页中使用JQuery发起JSONP请求</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/Zhy7a1Q3TKo9BJu.png"                      alt="图片.png"                ></p><p>视频地址: <a class="link"   href="https://www.bilibili.com/video/BV1a34y167AZ?p=56" >https://www.bilibili.com/video/BV1a34y167AZ?p=56<i class="fas fa-external-link-alt"></i></a></p><p>这里要注意，要指定method为<code>GET</code>, dataType为<code>jsonp</code>才能发起JSONP请求</p><h4 id="数据库与身份认证"><a href="#数据库与身份认证" class="headerlink" title="数据库与身份认证"></a>数据库与身份认证</h4><h5 id="数据库的基本概念"><a href="#数据库的基本概念" class="headerlink" title="数据库的基本概念"></a>数据库的基本概念</h5><h6 id="什么是数据库"><a href="#什么是数据库" class="headerlink" title="什么是数据库"></a>什么是数据库</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/bOqmaNedC5poFgX.png"                      alt="图片.png"                ></p><h6 id="常见数据库及分类"><a href="#常见数据库及分类" class="headerlink" title="常见数据库及分类"></a>常见数据库及分类</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/3A4TUgl2ZdnorSb.png"                      alt="图片.png"                ></p><h6 id="传统型数据库的数据组织结构"><a href="#传统型数据库的数据组织结构" class="headerlink" title="传统型数据库的数据组织结构"></a>传统型数据库的数据组织结构</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/KxaWv63YnhcIHQw.png"                      alt="图片.png"                ></p><p>参照excel:</p><ol><li><p>excel的数据组织结构</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/L7WO4Yx8oaFHyMT.png"                      alt="图片.png"                ></p><p>整个excel叫做工作簿</p><p>users和books是工作表</p><p>users工作表中有3行数据</p><p>每行数据由6列信息组成</p><p>每列信息都有对应的数据类型</p></li><li><p>传统型数据库的数据组织结构</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/6OcCWLsFSIRtKj3.png"                      alt="图片.png"                ></p></li><li><p>实际开发中库、表、行、字段的关系</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220328160035195.png"                      alt="image-20220328160035195"                ></p></li></ol><h5 id="安装并配置MySQL数据库"><a href="#安装并配置MySQL数据库" class="headerlink" title="安装并配置MySQL数据库"></a>安装并配置MySQL数据库</h5><h6 id="了解需要安装哪些MySQL相关的软件"><a href="#了解需要安装哪些MySQL相关的软件" class="headerlink" title="了解需要安装哪些MySQL相关的软件"></a>了解需要安装哪些MySQL相关的软件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/UoNMQ8xFf4CgpKj.png"                      alt="图片.png"                ></p><h6 id="MySQL在Mac环境下的安装"><a href="#MySQL在Mac环境下的安装" class="headerlink" title="MySQL在Mac环境下的安装"></a>MySQL在Mac环境下的安装</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/8pv4cZMz2exUDW5.png"                      alt="图片.png"                ></p><p>参考: <a class="link"   href="https://www.cnblogs.com/yinzhengjie/p/10125609.html" >https://www.cnblogs.com/yinzhengjie/p/10125609.html<i class="fas fa-external-link-alt"></i></a></p><h6 id="MySQL在Windows环境下的安装"><a href="#MySQL在Windows环境下的安装" class="headerlink" title="MySQL在Windows环境下的安装"></a>MySQL在Windows环境下的安装</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/cuF8DGzexnkwCKT.png"                      alt="图片.png"                ></p><p>参考: <a class="link"   href="https://www.cnblogs.com/shenstudy/p/14389079.html" >https://www.cnblogs.com/shenstudy/p/14389079.html<i class="fas fa-external-link-alt"></i></a></p><p>win7可能会出现环境不完整的警告框，以上链接是关于win10的</p><h5 id="MySQL的基本使用"><a href="#MySQL的基本使用" class="headerlink" title="MySQL的基本使用"></a>MySQL的基本使用</h5><h6 id="使用MySQL-Workbench管理数据库"><a href="#使用MySQL-Workbench管理数据库" class="headerlink" title="使用MySQL Workbench管理数据库"></a>使用MySQL Workbench管理数据库</h6><ol><li><p>连接数据库</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/rVdMhiko4e3U7m5.png"                      alt="图片.png"                ></p></li><li><p>了解主界面的组成部分</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/dZNcitK6pQjLC2x.png"                      alt="图片.png"                ></p><p>翻译一个单词，schemas: 模式</p></li><li><p>创建数据库</p><p>步骤如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/34PhTdzcELYeDAm.png"                      alt="图片.png"                ></p><p>创建数据库不要出现中文，如果有空格，之间用下划线连接</p><p>这部分跳过，都是一些软件的使用</p></li><li><p>创建数据表</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/dJsgFewLfOAnBR5.png"                      alt="图片.png"                ></p></li></ol><h6 id="使用SQL管理数据库"><a href="#使用SQL管理数据库" class="headerlink" title="使用SQL管理数据库"></a>使用SQL管理数据库</h6><ol><li><p>什么是SQL</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/tWr5PU1Bbqyul2G.png"                      alt="图片.png"                ></p></li><li><p>SQL能做什么</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/HumbTxqWvEs8GtC.png"                      alt="图片.png"                ></p></li><li><p>SQL的学习目标</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/aKRusbSqNBdzEi4.png"                      alt="图片.png"                ></p></li></ol><h6 id="SQL的SELECT语句"><a href="#SQL的SELECT语句" class="headerlink" title="SQL的SELECT语句"></a>SQL的SELECT语句</h6><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/IAhm3ZsBN5XOc7n.png"                      alt="图片.png"                ></p></li><li><p>select * 示例</p><p> <img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/H9zSALMmwTrcGVW.png"                      alt="图片.png"                ></p></li><li><p>SELECT列名称  示例</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/eDYLm3tQ8TEZH5V.png"                      alt="图片.png"                ></p></li></ol><h6 id="SQL的INSERI-INTO语句"><a href="#SQL的INSERI-INTO语句" class="headerlink" title="SQL的INSERI INTO语句"></a>SQL的INSERI INTO语句</h6><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/g92nZxFBSLEjkHt.png"                      alt="图片.png"                ></p></li><li><p>INSERT INTO 示例</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/B3P4GEVHXtnFemz.png"                      alt="图片.png"                ></p></li></ol><h6 id="SQL的UPDATE语句"><a href="#SQL的UPDATE语句" class="headerlink" title="SQL的UPDATE语句"></a>SQL的UPDATE语句</h6><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/bns5WkulfqNiXgj.png"                      alt="图片.png"                ></p></li><li><p>UPDATE示例 更新某一行中的一个列</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/AstEB1S9rPvM7dQ.png"                      alt="图片.png"                ></p></li><li><p>UPDATE示例 更新某一行中的若干列</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/JCxjUgZoyTFnXM4.png"                      alt="图片.png"                ></p></li></ol><h6 id="SQL中的DELETE语句"><a href="#SQL中的DELETE语句" class="headerlink" title="SQL中的DELETE语句"></a>SQL中的DELETE语句</h6><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/ZObfUPIWl9KXrzj.png"                      alt="图片.png"                ></p></li><li><p> DELETE 示例</p></li></ol><p>   <img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/nuCa5LT7DO28cyF.png"                      alt="图片.png"                ></p><p>   注意: 要记住加where条件</p><h6 id="SQL的WHERE子句"><a href="#SQL的WHERE子句" class="headerlink" title="SQL的WHERE子句"></a>SQL的WHERE子句</h6><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/isePrSU3dAOMwgV.png"                      alt="图片.png"                ></p></li><li><p>可在WHERE子句中使用的运算符</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/fs7cCwNKTAObrUL.png"                      alt="图片.png"                ></p></li><li><p>WHERE子句示例</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/RzfVJEa6nPWUr3d.png"                      alt="图片.png"                ></p></li></ol><h6 id="SQL的AND和OR运算符"><a href="#SQL的AND和OR运算符" class="headerlink" title="SQL的AND和OR运算符"></a>SQL的AND和OR运算符</h6><p>and:</p><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/qMa3DObWghkYLK7.png"                      alt="图片.png"                ></p></li><li><p> AND运算符示例</p></li></ol><p>   <img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/nxX4mlYHOC5N9Ak.png"                      alt="图片.png"                ></p><ol start="3"><li><p>OR运算符示例</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/TIL2roJhcVd3tWM.png"                      alt="图片.png"                ></p></li></ol><h6 id="SQL的ORDER-BY子句"><a href="#SQL的ORDER-BY子句" class="headerlink" title="SQL的ORDER BY子句"></a>SQL的ORDER BY子句</h6><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/gepREvonwxAZN6D.png"                      alt="图片.png"                ></p></li><li><p>order by 子句 - 升序排序</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/7vgW6MlQiIehA42.png"                      alt="图片.png"                ></p></li><li><p>order by 子句 - 降序排序</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/BmdsiX2La9Uzx8G.png"                      alt="图片.png"                ></p></li></ol><h6 id="SQL的COUNT-函数"><a href="#SQL的COUNT-函数" class="headerlink" title="SQL的COUNT(*)函数"></a>SQL的COUNT(*)函数</h6><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/cJDsiAB8gFeUkrf.png"                      alt="图片.png"                ></p></li><li><p>COUNT(*)示例</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/IFMO5orH3bflmDL.png"                      alt="图片.png"                ></p></li><li><p>使用AS为列设置别名</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/8WjO3kMUF9ouKPV.png"                      alt="图片.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/l8MDPHiArY3CRn7.png"                      alt="图片.png"                ></p></li></ol><h6 id="演示如何保存和打开-sql的文件"><a href="#演示如何保存和打开-sql的文件" class="headerlink" title="演示如何保存和打开.sql的文件"></a>演示如何保存和打开.sql的文件</h6><p>保存:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/fmdwxzFu3oQU4rb.png"                      alt="图片.png"                ></p><p>打开:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/mzkDwE1ISdjt2V4.png"                      alt="图片.png"                ></p><h4 id="在项目中操作MySQL"><a href="#在项目中操作MySQL" class="headerlink" title="在项目中操作MySQL"></a>在项目中操作MySQL</h4><h5 id="在项目中操作数据库的步骤"><a href="#在项目中操作数据库的步骤" class="headerlink" title="在项目中操作数据库的步骤"></a>在项目中操作数据库的步骤</h5><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/DBfzOauv17GjxCy.png"                      alt="图片.png"                ></p><h6 id="安装与配置mysql模块"><a href="#安装与配置mysql模块" class="headerlink" title="安装与配置mysql模块"></a>安装与配置mysql模块</h6><ol><li><p>安装</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/Cf4ch3lAF5tTPJI.png"                      alt="图片.png"                ></p></li><li><p>配置mysql模块</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/WUIJfgbL4s1X23u.png"                      alt="图片.png"                ></p><p>使用cre atePool方法与数据库建立连接</p></li><li><p>测试mysql模块能否正常工作</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/hs9BjxfYEKmkTt1.png"                      alt="图片.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/pdZuxVBE1DizvbP.png"                      alt="图片.png"                ></p></li></ol><h6 id="连接到MySQL数据库"><a href="#连接到MySQL数据库" class="headerlink" title="连接到MySQL数据库"></a>连接到MySQL数据库</h6><ol><li><p>查询users表中所有的数据</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/mjZdCKhkI6OaYrU.png"                      alt="图片.png"                ></p><p>注意: 如果执行的是select语句，则执行的结果是数组(对象数组)</p></li></ol><h6 id="通过mysql模块执行SQL语句"><a href="#通过mysql模块执行SQL语句" class="headerlink" title="通过mysql模块执行SQL语句"></a>通过mysql模块执行SQL语句</h6><ol><li><p>插入数据</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/O2kxNPIHcDMgRK7.png"                      alt="图片.png"                ></p><p>注意: 如果执行的是inset into插入语句，则result是一个对象，可以通过affectedRows属性，来判断是否插入数据成功:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/fiOM2UYAWZNqHlX.png"                      alt="图片.png"                ></p></li><li><p>插入数据的便捷方式</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/IvfSua1xmBCoZ74.png"                      alt="图片.png"                ></p></li><li><p>更新数据</p><p>可以通过如下方式，更新表中的数据:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/CAOSK5ZFHP9BlTo.png"                      alt="图片.png"                ></p><p>演示:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/ERZowu53I2ktSlp.png"                      alt="图片.png"                ></p><p>注意: 执行了update语句之后，执行的结果，也是一个对象，可以通过affectedRows判断是否更新成功</p></li><li><p>更新数据的便捷方式</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/iS6qoMFDhYGnAyC.png"                      alt="图片.png"                ></p><p>演示:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/7IWaKsQE3Fnz5Jr.png"                      alt="图片.png"                ></p></li><li><p>删除数据</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/MQdpb87KJDcN3PB.png"                      alt="图片.png"                ></p><p>演示:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/I5sfkh6Y1rTziRl.png"                      alt="图片.png"                ></p></li><li><p>标记删除</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/hY5ntTFgsMIBlPL.png"                      alt="图片.png"                ></p><p>演示:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/EknMcNSyr38FXOG.png"                      alt="图片.png"                ></p></li></ol><h4 id="前后端的身份认证"><a href="#前后端的身份认证" class="headerlink" title="前后端的身份认证"></a>前后端的身份认证</h4><h5 id="Web开发模式"><a href="#Web开发模式" class="headerlink" title="Web开发模式"></a>Web开发模式</h5><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/eT5phUlWnXEtLSZ.png"                      alt="图片.png"                ></p><ol><li><p>服务端渲染的Web开发模式</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/ZLaxAsdVzSG7yCP.png"                      alt="图片.png"                ></p></li><li><p>服务端渲染的优缺点</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/HwIehp5tWMgANEc.png"                      alt="图片.png"                ></p></li><li><p>前后端分离的Web开发模式</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/4CVB9X8AaxWNJIT.png"                      alt="图片.png"                ></p></li><li><p>前后端分离的Web开发模式的优缺点</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/3UjwlcfkQ4FXqbZ.png"                      alt="图片.png"                ></p></li><li><p>如何选择Web开发模式</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/PIflnoRGWHeXwNg.png"                      alt="image.png"                ></p></li></ol><h5 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h5><ol><li><p>什么是身份认证</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/KSv1Wecdu68mbZA.png"                      alt="image.png"                ></p></li><li><p>为什么需要身份认证</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/gRSiWFX4x6McoQ1.png"                      alt="image.png"                ></p></li><li><p>不同开发模式下的身份认证</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/QYX3AJKZehLzVcd.png"                      alt="image.png"                ></p></li></ol><h5 id="Session认证机制"><a href="#Session认证机制" class="headerlink" title="Session认证机制"></a>Session认证机制</h5><ol><li><p>HTTP协议的无状态性</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/yQF8ef7jHBGn1YZ.png"                      alt="image.png"                ></p></li><li><p>如何突破HTTP无状态的限制</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/MUvJsXih4dkguHt.png"                      alt="image.png"                ></p></li><li><p>什么是Cookie</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/crMNo3fTCDzRIw1.png"                      alt="image.png"                ></p></li><li><p>Cookie在身份认证中的作用</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/xZ7RWK52GAvtbCF.png"                      alt="image.png"                ></p></li><li><p>Cookie不具有安全性</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/IFAlUKCNQrq5YXB.png"                      alt="image.png"                ></p></li><li><p>提高身份认证的安全性</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/WAbEIMqoGhlXKrR.png"                      alt="image.png"                ></p></li><li><p>Session的工作原理</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/CYO2J6xNhUMVpmL.png"                      alt="image.png"                ></p></li></ol><h5 id="在Express中使用Session认证"><a href="#在Express中使用Session认证" class="headerlink" title="在Express中使用Session认证"></a>在Express中使用Session认证</h5><ol><li><p>安装express-session中间件</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/Ea7nZsjJIXG2SKP.png"                      alt="image.png"                ></p></li><li><p>配置express-session中间件</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/YpdwUhB56GxN2XT.png"                      alt="image.png"                ></p></li><li><p>向session中存数据</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/cqWzboyums6O1da.png"                      alt="图片.png"                ></p></li><li><p>从session中取数据</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/YLXQp9tdc2ez3nr.png"                      alt="图片.png"                ></p></li><li><p>清空session</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/KeJClO3RvNIuhiF.png"                      alt="图片.png"                ></p><p>调用destroy()函数，只会清空当前用户的session</p></li></ol><h5 id="JWT认证机制"><a href="#JWT认证机制" class="headerlink" title="JWT认证机制"></a>JWT认证机制</h5><ol><li><p>了解Session认证的局限性</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/NDlSQVJYduqGHek.png"                      alt="图片.png"                ></p></li><li><p>什么是JWT</p><p>JWT(英文全称: JSON Web Token)是目前最流行的跨域认证解决方案</p></li><li><p>JWT的工作原理</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/qFH267rSgbyjiYO.png"                      alt="图片.png"                ></p><p> 核心原理: <strong>用户的信息通过Token字符串的形式，保存在客户端浏览器中，服务器通过还原Token字符串的形式来认证用户的身份</strong></p></li><li><p>JWT的组成部分</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/jgHqQRXdmiEByTa.png"                      alt="图片.png"                ></p></li><li><p>JWT的三个部分各自代表的含义</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/WUvZeRuKEzq9B7L.png"                      alt="图片.png"                ></p></li><li><p>JWT的使用方式</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/yaEmuDsn7YK9zAN.png"                      alt="图片.png"                ></p></li></ol><h5 id="在Express中使用JWT"><a href="#在Express中使用JWT" class="headerlink" title="在Express中使用JWT"></a>在Express中使用JWT</h5><ol><li><p>安装JWT相关的包</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/prjLmGa2XkThwAd.png"                      alt="图片.png"                ></p></li><li><p>导入JWT相关的包</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/VlLy45Dut6OhMce.png"                      alt="图片.png"                ></p></li><li><p>定义secret秘钥</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/BX2HdkJPeqQMjFa.png"                      alt="图片.png"                ></p></li><li><p>在登录成功后生成JWT字符串</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/ZQkcidf5OMPoGWL.png"                      alt="图片.png"                ></p><p>注意: 一定不要把密码加密到token中</p></li><li><p>将JWT字符串还原为JSON对象</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/ZESIVtJqKy3prhm.png"                      alt="图片.png"                ></p><p>可以通过指定<code>unless</code>方法说明哪些方法不需要token即可访问，<code>[]</code>里面为一个正则表达式，<code>//</code>代表里面是一个正则表达式</p></li><li><p>使用req.user获取用户信息</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/ZJjLmtSMgcReGYv.png"                      alt="图片.png"                ></p></li><li><p>捕获解析JWT失败后产生的错误</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/x7cCYloMRwXFsrv.png"                      alt="图片.png"                ></p><p>视频地址: <a class="link"   href="https://www.bilibili.com/video/BV1a34y167AZ?p=76" >https://www.bilibili.com/video/BV1a34y167AZ?p=76<i class="fas fa-external-link-alt"></i></a></p></li></ol><h4 id="项目-后台API接口项目"><a href="#项目-后台API接口项目" class="headerlink" title="项目-后台API接口项目"></a>项目-后台API接口项目</h4><h5 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h5><p>在线文档地址: <a class="link"   href="http://escook.cn:8088/#/" >http://escook.cn:8088/#/<i class="fas fa-external-link-alt"></i></a></p><p>我们可以参考上面的在线文档</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;初识Node，什么是Node-js&quot;&gt;&lt;a href=&quot;#初识Node，什么是Node-js&quot; class=&quot;headerlink&quot; title=&quot;初识Node，什么是Node.js&quot;&gt;&lt;/a&gt;初识Node，什么是Node.js&lt;/h4&gt;&lt;p&gt;Node.js是一个</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>长房集团登录参数j_password(AES加密)</title>
    <link href="http://example.com/2022/03/23/%E9%95%BF%E6%88%BF%E9%9B%86%E5%9B%A2%E7%99%BB%E5%BD%95%E5%8F%82%E6%95%B0j_password/"/>
    <id>http://example.com/2022/03/23/%E9%95%BF%E6%88%BF%E9%9B%86%E5%9B%A2%E7%99%BB%E5%BD%95%E5%8F%82%E6%95%B0j_password/</id>
    <published>2022-03-23T06:34:30.000Z</published>
    <updated>2022-03-23T10:52:50.234Z</updated>
    
    <content type="html"><![CDATA[<p>目标网站: <a class="link"   href="http://eip.chanfine.com/" >http://eip.chanfine.com/<i class="fas fa-external-link-alt"></i></a></p><p>打开登录界面，随便输入一个用户名和密码后:</p><p><a href="https://imgtu.com/i/q1iFVU"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/23/q1iFVU.png"                      alt="q1iFVU.png"                ></a></p><p>我们会看到这个密码是加密过的，我们采用搜索的方式进行初步定位:</p><p><a href="https://imgtu.com/i/q1idqf"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/23/q1idqf.png"                      alt="q1idqf.png"                ></a></p><p>搜索后发现这个还是容易就定位到了加密函数的位置:</p><p><a href="https://imgtu.com/i/q1i5oF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/23/q1i5oF.png"                      alt="q1i5oF.png"                ></a></p><p>然后我们在加密处打断点，然后跟进到函数内部:</p><p><a href="https://imgtu.com/i/q1FkOP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/23/q1FkOP.png"                      alt="q1FkOP.png"                ></a></p><p><a href="https://imgtu.com/i/q1Fgte"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/23/q1Fgte.png"                      alt="q1Fgte.png"                ></a></p><p>可以看到，这个<code>desEncrypt</code>函数就返回了加密后的结果，所以我们只需要扣下相关代码运行即可:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> CryptoJS = CryptoJS || <span class="function"><span class="keyword">function</span> (<span class="params">u, p</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> d = &#123;&#125;,</span><br><span class="line">        l = d.lib = &#123;&#125;,</span><br><span class="line">        s = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">        t = l.Base = &#123;</span><br><span class="line">            <span class="attr">extend</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    s.prototype = <span class="built_in">this</span>;</span><br><span class="line">                    <span class="keyword">var</span> c = <span class="keyword">new</span> s;</span><br><span class="line">                    a &amp;&amp; c.mixIn(a);</span><br><span class="line">                    c.hasOwnProperty(<span class="string">&quot;init&quot;</span>) || (c.init = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        c.$super.init.apply(<span class="built_in">this</span>, <span class="built_in">arguments</span>)</span><br><span class="line">                    &#125;);</span><br><span class="line">                    c.init.prototype = c;</span><br><span class="line">                    c.$super = <span class="built_in">this</span>;</span><br><span class="line">                    <span class="keyword">return</span> c</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">create</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> a = <span class="built_in">this</span>.extend();</span><br><span class="line">                    a.init.apply(a, <span class="built_in">arguments</span>);</span><br><span class="line">                    <span class="keyword">return</span> a</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">                <span class="attr">mixIn</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> c <span class="keyword">in</span> a)</span><br><span class="line">                        a.hasOwnProperty(c) &amp;&amp; (<span class="built_in">this</span>[c] = a[c]);</span><br><span class="line">                    a.hasOwnProperty(<span class="string">&quot;toString&quot;</span>) &amp;&amp; (<span class="built_in">this</span>.toString = a.toString)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">clone</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.init.prototype.extend(<span class="built_in">this</span>)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        r = l.WordArray = t.extend(&#123;</span><br><span class="line">            <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, c</span>) </span>&#123;</span><br><span class="line">                    a = <span class="built_in">this</span>.words = a || [];</span><br><span class="line">                    <span class="built_in">this</span>.sigBytes = c != p ? c : <span class="number">4</span> * a.length</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">toString</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> (a || v).stringify(<span class="built_in">this</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">concat</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> c = <span class="built_in">this</span>.words,</span><br><span class="line">                        e = a.words,</span><br><span class="line">                        j = <span class="built_in">this</span>.sigBytes;</span><br><span class="line">                    a = a.sigBytes;</span><br><span class="line">                    <span class="built_in">this</span>.clamp();</span><br><span class="line">                    <span class="keyword">if</span> (j % <span class="number">4</span>)</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; a; k++)</span><br><span class="line">                            c[j + k &gt;&gt;&gt; <span class="number">2</span>] |= (e[k &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * (k % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">24</span> - <span class="number">8</span> * ((j + k) % <span class="number">4</span>);</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">65535</span> &lt; e.length)</span><br><span class="line">                        <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; a; k += <span class="number">4</span>)</span><br><span class="line">                            c[j + k &gt;&gt;&gt; <span class="number">2</span>] = e[k &gt;&gt;&gt; <span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        c.push.apply(c, e);</span><br><span class="line">                    <span class="built_in">this</span>.sigBytes += a;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">clamp</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> a = <span class="built_in">this</span>.words,</span><br><span class="line">                        c = <span class="built_in">this</span>.sigBytes;</span><br><span class="line">                    a[c &gt;&gt;&gt; <span class="number">2</span>] &amp;= <span class="number">4294967295</span> &lt;&lt; <span class="number">32</span> - <span class="number">8</span> * (c % <span class="number">4</span>);</span><br><span class="line">                    a.length = u.ceil(c / <span class="number">4</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">clone</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> a = t.clone.call(<span class="built_in">this</span>);</span><br><span class="line">                    a.words = <span class="built_in">this</span>.words.slice(<span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">return</span> a</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">random</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> c = [], e = <span class="number">0</span>; e &lt; a; e += <span class="number">4</span>)</span><br><span class="line">                        c.push(<span class="number">4294967296</span> * u.random() | <span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> r.init(c, a)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">        w = d.enc = &#123;&#125;,</span><br><span class="line">        v = w.Hex = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> c = a.words;</span><br><span class="line">                    a = a.sigBytes;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> e = [], j = <span class="number">0</span>; j &lt; a; j++) &#123;</span><br><span class="line">                        <span class="keyword">var</span> k = c[j &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * (j % <span class="number">4</span>) &amp; <span class="number">255</span>;</span><br><span class="line">                        e.push((k &gt;&gt;&gt; <span class="number">4</span>).toString(<span class="number">16</span>));</span><br><span class="line">                        e.push((k &amp; <span class="number">15</span>).toString(<span class="number">16</span>))</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> e.join(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">parse</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> c = a.length, e = [], j = <span class="number">0</span>; j &lt; c; j += <span class="number">2</span>)</span><br><span class="line">                        e[j &gt;&gt;&gt; <span class="number">3</span>] |= <span class="built_in">parseInt</span>(a.substr(j, <span class="number">2</span>), <span class="number">16</span>) &lt;&lt; <span class="number">24</span> - <span class="number">4</span> * (j % <span class="number">8</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> r.init(e, c / <span class="number">2</span>)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        b = w.Latin1 = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> c = a.words;</span><br><span class="line">                    a = a.sigBytes;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> e = [], j = <span class="number">0</span>; j &lt; a; j++)</span><br><span class="line">                        e.push(<span class="built_in">String</span>.fromCharCode(c[j &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * (j % <span class="number">4</span>) &amp; <span class="number">255</span>));</span><br><span class="line">                    <span class="keyword">return</span> e.join(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">parse</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> c = a.length, e = [], j = <span class="number">0</span>; j &lt; c; j++)</span><br><span class="line">                        e[j &gt;&gt;&gt; <span class="number">2</span>] |= (a.charCodeAt(j) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">24</span> - <span class="number">8</span> * (j % <span class="number">4</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> r.init(e, c)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        x = w.Utf8 = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(<span class="built_in">escape</span>(b.stringify(a)))</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (c) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="built_in">Error</span>(<span class="string">&quot;Malformed UTF-8 data&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">parse</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> b.parse(<span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(a)))</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        q = l.BufferedBlockAlgorithm = t.extend(&#123;</span><br><span class="line">            <span class="attr">reset</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>._data = <span class="keyword">new</span> r.init;</span><br><span class="line">                    <span class="built_in">this</span>._nDataBytes = <span class="number">0</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">_append</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> a &amp;&amp; (a = x.parse(a));</span><br><span class="line">                    <span class="built_in">this</span>._data.concat(a);</span><br><span class="line">                    <span class="built_in">this</span>._nDataBytes += a.sigBytes</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">_process</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> c = <span class="built_in">this</span>._data,</span><br><span class="line">                        e = c.words,</span><br><span class="line">                        j = c.sigBytes,</span><br><span class="line">                        k = <span class="built_in">this</span>.blockSize,</span><br><span class="line">                        b = j / (<span class="number">4</span> * k),</span><br><span class="line">                        b = a ? u.ceil(b) : u.max((b | <span class="number">0</span>) - <span class="built_in">this</span>._minBufferSize, <span class="number">0</span>);</span><br><span class="line">                    a = b * k;</span><br><span class="line">                    j = u.min(<span class="number">4</span> * a, j);</span><br><span class="line">                    <span class="keyword">if</span> (a) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> q = <span class="number">0</span>; q &lt; a; q += k)</span><br><span class="line">                            <span class="built_in">this</span>._doProcessBlock(e, q);</span><br><span class="line">                        q = e.splice(<span class="number">0</span>, a);</span><br><span class="line">                        c.sigBytes -= j</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> r.init(q, j)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">clone</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> a = t.clone.call(<span class="built_in">this</span>);</span><br><span class="line">                    a._data = <span class="built_in">this</span>._data.clone();</span><br><span class="line">                    <span class="keyword">return</span> a</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">_minBufferSize</span>: <span class="number">0</span></span><br><span class="line">        &#125;);</span><br><span class="line">    l.Hasher = q.extend(&#123;</span><br><span class="line">        <span class="attr">cfg</span>: t.extend(),</span><br><span class="line">        <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.cfg = <span class="built_in">this</span>.cfg.extend(a);</span><br><span class="line">                <span class="built_in">this</span>.reset()</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">reset</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                q.reset.call(<span class="built_in">this</span>);</span><br><span class="line">                <span class="built_in">this</span>._doReset()</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">update</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>._append(a);</span><br><span class="line">                <span class="built_in">this</span>._process();</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">finalize</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                a &amp;&amp; <span class="built_in">this</span>._append(a);</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span>._doFinalize()</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">blockSize</span>: <span class="number">16</span>,</span><br><span class="line">        <span class="attr">_createHelper</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">b, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> (<span class="keyword">new</span> a.init(e)).finalize(b)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_createHmacHelper</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">b, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> (<span class="keyword">new</span> n.HMAC.init(a, e)).finalize(b)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> n = d.algo = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> d</span><br><span class="line">&#125;(<span class="built_in">Math</span>);</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> u = CryptoJS,</span><br><span class="line">        p = u.lib.WordArray;</span><br><span class="line">    u.enc.Base64 = &#123;</span><br><span class="line">        <span class="attr">stringify</span>: <span class="function"><span class="keyword">function</span> (<span class="params">d</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> l = d.words,</span><br><span class="line">                    p = d.sigBytes,</span><br><span class="line">                    t = <span class="built_in">this</span>._map;</span><br><span class="line">                d.clamp();</span><br><span class="line">                d = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> r = <span class="number">0</span>; r &lt; p; r += <span class="number">3</span>)</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> w = (l[r &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * (r % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">16</span> | (l[r + <span class="number">1</span> &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * ((r + <span class="number">1</span>) % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">8</span> | l[r + <span class="number">2</span> &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * ((r + <span class="number">2</span>) % <span class="number">4</span>) &amp; <span class="number">255</span>, v = <span class="number">0</span>; <span class="number">4</span> &gt; v &amp;&amp; r + <span class="number">0.75</span> * v &lt; p; v++)</span><br><span class="line">                        d.push(t.charAt(w &gt;&gt;&gt; <span class="number">6</span> * (<span class="number">3</span> - v) &amp; <span class="number">63</span>));</span><br><span class="line">                <span class="keyword">if</span> (l = t.charAt(<span class="number">64</span>))</span><br><span class="line">                    <span class="keyword">for</span> (; d.length % <span class="number">4</span>;)</span><br><span class="line">                        d.push(l);</span><br><span class="line">                <span class="keyword">return</span> d.join(<span class="string">&quot;&quot;</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">parse</span>: <span class="function"><span class="keyword">function</span> (<span class="params">d</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> l = d.length,</span><br><span class="line">                    s = <span class="built_in">this</span>._map,</span><br><span class="line">                    t = s.charAt(<span class="number">64</span>);</span><br><span class="line">                t &amp;&amp; (t = d.indexOf(t), -<span class="number">1</span> != t &amp;&amp; (l = t));</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> t = [], r = <span class="number">0</span>, w = <span class="number">0</span>; w &lt; l; w++)</span><br><span class="line">                    <span class="keyword">if</span> (w % <span class="number">4</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> v = s.indexOf(d.charAt(w - <span class="number">1</span>)) &lt;&lt; <span class="number">2</span> * (w % <span class="number">4</span>),</span><br><span class="line">                            b = s.indexOf(d.charAt(w)) &gt;&gt;&gt; <span class="number">6</span> - <span class="number">2</span> * (w % <span class="number">4</span>);</span><br><span class="line">                        t[r &gt;&gt;&gt; <span class="number">2</span>] |= (v | b) &lt;&lt; <span class="number">24</span> - <span class="number">8</span> * (r % <span class="number">4</span>);</span><br><span class="line">                        r++</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">return</span> p.create(t, r)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_map</span>: <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">u</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">p</span>(<span class="params">b, n, a, c, e, j, k</span>) </span>&#123;</span><br><span class="line">        b = b + (n &amp; a | ~n &amp; c) + e + k;</span><br><span class="line">        <span class="keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="number">32</span> - j) + n</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">d</span>(<span class="params">b, n, a, c, e, j, k</span>) </span>&#123;</span><br><span class="line">        b = b + (n &amp; c | a &amp; ~c) + e + k;</span><br><span class="line">        <span class="keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="number">32</span> - j) + n</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">l</span>(<span class="params">b, n, a, c, e, j, k</span>) </span>&#123;</span><br><span class="line">        b = b + (n ^ a ^ c) + e + k;</span><br><span class="line">        <span class="keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="number">32</span> - j) + n</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params">b, n, a, c, e, j, k</span>) </span>&#123;</span><br><span class="line">        b = b + (a ^ (n | ~c)) + e + k;</span><br><span class="line">        <span class="keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="number">32</span> - j) + n</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b = [], x = <span class="number">0</span>; <span class="number">64</span> &gt; x; x++)</span><br><span class="line">        b[x] = <span class="number">4294967296</span> * u.abs(u.sin(x + <span class="number">1</span>)) | <span class="number">0</span>;</span><br><span class="line">    r = r.MD5 = v.extend(&#123;</span><br><span class="line">        <span class="attr">_doReset</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>._hash = <span class="keyword">new</span> w.init([<span class="number">1732584193</span>, <span class="number">4023233417</span>, <span class="number">2562383102</span>, <span class="number">271733878</span>])</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doProcessBlock</span>: <span class="function"><span class="keyword">function</span> (<span class="params">q, n</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">0</span>; <span class="number">16</span> &gt; a; a++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> c = n + a,</span><br><span class="line">                        e = q[c];</span><br><span class="line">                    q[c] = (e &lt;&lt; <span class="number">8</span> | e &gt;&gt;&gt; <span class="number">24</span>) &amp; <span class="number">16711935</span> | (e &lt;&lt; <span class="number">24</span> | e &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">4278255360</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> a = <span class="built_in">this</span>._hash.words,</span><br><span class="line">                    c = q[n + <span class="number">0</span>],</span><br><span class="line">                    e = q[n + <span class="number">1</span>],</span><br><span class="line">                    j = q[n + <span class="number">2</span>],</span><br><span class="line">                    k = q[n + <span class="number">3</span>],</span><br><span class="line">                    z = q[n + <span class="number">4</span>],</span><br><span class="line">                    r = q[n + <span class="number">5</span>],</span><br><span class="line">                    t = q[n + <span class="number">6</span>],</span><br><span class="line">                    w = q[n + <span class="number">7</span>],</span><br><span class="line">                    v = q[n + <span class="number">8</span>],</span><br><span class="line">                    A = q[n + <span class="number">9</span>],</span><br><span class="line">                    B = q[n + <span class="number">10</span>],</span><br><span class="line">                    C = q[n + <span class="number">11</span>],</span><br><span class="line">                    u = q[n + <span class="number">12</span>],</span><br><span class="line">                    D = q[n + <span class="number">13</span>],</span><br><span class="line">                    E = q[n + <span class="number">14</span>],</span><br><span class="line">                    x = q[n + <span class="number">15</span>],</span><br><span class="line">                    f = a[<span class="number">0</span>],</span><br><span class="line">                    m = a[<span class="number">1</span>],</span><br><span class="line">                    g = a[<span class="number">2</span>],</span><br><span class="line">                    h = a[<span class="number">3</span>],</span><br><span class="line">                    f = p(f, m, g, h, c, <span class="number">7</span>, b[<span class="number">0</span>]),</span><br><span class="line">                    h = p(h, f, m, g, e, <span class="number">12</span>, b[<span class="number">1</span>]),</span><br><span class="line">                    g = p(g, h, f, m, j, <span class="number">17</span>, b[<span class="number">2</span>]),</span><br><span class="line">                    m = p(m, g, h, f, k, <span class="number">22</span>, b[<span class="number">3</span>]),</span><br><span class="line">                    f = p(f, m, g, h, z, <span class="number">7</span>, b[<span class="number">4</span>]),</span><br><span class="line">                    h = p(h, f, m, g, r, <span class="number">12</span>, b[<span class="number">5</span>]),</span><br><span class="line">                    g = p(g, h, f, m, t, <span class="number">17</span>, b[<span class="number">6</span>]),</span><br><span class="line">                    m = p(m, g, h, f, w, <span class="number">22</span>, b[<span class="number">7</span>]),</span><br><span class="line">                    f = p(f, m, g, h, v, <span class="number">7</span>, b[<span class="number">8</span>]),</span><br><span class="line">                    h = p(h, f, m, g, A, <span class="number">12</span>, b[<span class="number">9</span>]),</span><br><span class="line">                    g = p(g, h, f, m, B, <span class="number">17</span>, b[<span class="number">10</span>]),</span><br><span class="line">                    m = p(m, g, h, f, C, <span class="number">22</span>, b[<span class="number">11</span>]),</span><br><span class="line">                    f = p(f, m, g, h, u, <span class="number">7</span>, b[<span class="number">12</span>]),</span><br><span class="line">                    h = p(h, f, m, g, D, <span class="number">12</span>, b[<span class="number">13</span>]),</span><br><span class="line">                    g = p(g, h, f, m, E, <span class="number">17</span>, b[<span class="number">14</span>]),</span><br><span class="line">                    m = p(m, g, h, f, x, <span class="number">22</span>, b[<span class="number">15</span>]),</span><br><span class="line">                    f = d(f, m, g, h, e, <span class="number">5</span>, b[<span class="number">16</span>]),</span><br><span class="line">                    h = d(h, f, m, g, t, <span class="number">9</span>, b[<span class="number">17</span>]),</span><br><span class="line">                    g = d(g, h, f, m, C, <span class="number">14</span>, b[<span class="number">18</span>]),</span><br><span class="line">                    m = d(m, g, h, f, c, <span class="number">20</span>, b[<span class="number">19</span>]),</span><br><span class="line">                    f = d(f, m, g, h, r, <span class="number">5</span>, b[<span class="number">20</span>]),</span><br><span class="line">                    h = d(h, f, m, g, B, <span class="number">9</span>, b[<span class="number">21</span>]),</span><br><span class="line">                    g = d(g, h, f, m, x, <span class="number">14</span>, b[<span class="number">22</span>]),</span><br><span class="line">                    m = d(m, g, h, f, z, <span class="number">20</span>, b[<span class="number">23</span>]),</span><br><span class="line">                    f = d(f, m, g, h, A, <span class="number">5</span>, b[<span class="number">24</span>]),</span><br><span class="line">                    h = d(h, f, m, g, E, <span class="number">9</span>, b[<span class="number">25</span>]),</span><br><span class="line">                    g = d(g, h, f, m, k, <span class="number">14</span>, b[<span class="number">26</span>]),</span><br><span class="line">                    m = d(m, g, h, f, v, <span class="number">20</span>, b[<span class="number">27</span>]),</span><br><span class="line">                    f = d(f, m, g, h, D, <span class="number">5</span>, b[<span class="number">28</span>]),</span><br><span class="line">                    h = d(h, f, m, g, j, <span class="number">9</span>, b[<span class="number">29</span>]),</span><br><span class="line">                    g = d(g, h, f, m, w, <span class="number">14</span>, b[<span class="number">30</span>]),</span><br><span class="line">                    m = d(m, g, h, f, u, <span class="number">20</span>, b[<span class="number">31</span>]),</span><br><span class="line">                    f = l(f, m, g, h, r, <span class="number">4</span>, b[<span class="number">32</span>]),</span><br><span class="line">                    h = l(h, f, m, g, v, <span class="number">11</span>, b[<span class="number">33</span>]),</span><br><span class="line">                    g = l(g, h, f, m, C, <span class="number">16</span>, b[<span class="number">34</span>]),</span><br><span class="line">                    m = l(m, g, h, f, E, <span class="number">23</span>, b[<span class="number">35</span>]),</span><br><span class="line">                    f = l(f, m, g, h, e, <span class="number">4</span>, b[<span class="number">36</span>]),</span><br><span class="line">                    h = l(h, f, m, g, z, <span class="number">11</span>, b[<span class="number">37</span>]),</span><br><span class="line">                    g = l(g, h, f, m, w, <span class="number">16</span>, b[<span class="number">38</span>]),</span><br><span class="line">                    m = l(m, g, h, f, B, <span class="number">23</span>, b[<span class="number">39</span>]),</span><br><span class="line">                    f = l(f, m, g, h, D, <span class="number">4</span>, b[<span class="number">40</span>]),</span><br><span class="line">                    h = l(h, f, m, g, c, <span class="number">11</span>, b[<span class="number">41</span>]),</span><br><span class="line">                    g = l(g, h, f, m, k, <span class="number">16</span>, b[<span class="number">42</span>]),</span><br><span class="line">                    m = l(m, g, h, f, t, <span class="number">23</span>, b[<span class="number">43</span>]),</span><br><span class="line">                    f = l(f, m, g, h, A, <span class="number">4</span>, b[<span class="number">44</span>]),</span><br><span class="line">                    h = l(h, f, m, g, u, <span class="number">11</span>, b[<span class="number">45</span>]),</span><br><span class="line">                    g = l(g, h, f, m, x, <span class="number">16</span>, b[<span class="number">46</span>]),</span><br><span class="line">                    m = l(m, g, h, f, j, <span class="number">23</span>, b[<span class="number">47</span>]),</span><br><span class="line">                    f = s(f, m, g, h, c, <span class="number">6</span>, b[<span class="number">48</span>]),</span><br><span class="line">                    h = s(h, f, m, g, w, <span class="number">10</span>, b[<span class="number">49</span>]),</span><br><span class="line">                    g = s(g, h, f, m, E, <span class="number">15</span>, b[<span class="number">50</span>]),</span><br><span class="line">                    m = s(m, g, h, f, r, <span class="number">21</span>, b[<span class="number">51</span>]),</span><br><span class="line">                    f = s(f, m, g, h, u, <span class="number">6</span>, b[<span class="number">52</span>]),</span><br><span class="line">                    h = s(h, f, m, g, k, <span class="number">10</span>, b[<span class="number">53</span>]),</span><br><span class="line">                    g = s(g, h, f, m, B, <span class="number">15</span>, b[<span class="number">54</span>]),</span><br><span class="line">                    m = s(m, g, h, f, e, <span class="number">21</span>, b[<span class="number">55</span>]),</span><br><span class="line">                    f = s(f, m, g, h, v, <span class="number">6</span>, b[<span class="number">56</span>]),</span><br><span class="line">                    h = s(h, f, m, g, x, <span class="number">10</span>, b[<span class="number">57</span>]),</span><br><span class="line">                    g = s(g, h, f, m, t, <span class="number">15</span>, b[<span class="number">58</span>]),</span><br><span class="line">                    m = s(m, g, h, f, D, <span class="number">21</span>, b[<span class="number">59</span>]),</span><br><span class="line">                    f = s(f, m, g, h, z, <span class="number">6</span>, b[<span class="number">60</span>]),</span><br><span class="line">                    h = s(h, f, m, g, C, <span class="number">10</span>, b[<span class="number">61</span>]),</span><br><span class="line">                    g = s(g, h, f, m, j, <span class="number">15</span>, b[<span class="number">62</span>]),</span><br><span class="line">                    m = s(m, g, h, f, A, <span class="number">21</span>, b[<span class="number">63</span>]);</span><br><span class="line">                a[<span class="number">0</span>] = a[<span class="number">0</span>] + f | <span class="number">0</span>;</span><br><span class="line">                a[<span class="number">1</span>] = a[<span class="number">1</span>] + m | <span class="number">0</span>;</span><br><span class="line">                a[<span class="number">2</span>] = a[<span class="number">2</span>] + g | <span class="number">0</span>;</span><br><span class="line">                a[<span class="number">3</span>] = a[<span class="number">3</span>] + h | <span class="number">0</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doFinalize</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> b = <span class="built_in">this</span>._data,</span><br><span class="line">                    n = b.words,</span><br><span class="line">                    a = <span class="number">8</span> * <span class="built_in">this</span>._nDataBytes,</span><br><span class="line">                    c = <span class="number">8</span> * b.sigBytes;</span><br><span class="line">                n[c &gt;&gt;&gt; <span class="number">5</span>] |= <span class="number">128</span> &lt;&lt; <span class="number">24</span> - c % <span class="number">32</span>;</span><br><span class="line">                <span class="keyword">var</span> e = u.floor(a / <span class="number">4294967296</span>);</span><br><span class="line">                n[(c + <span class="number">64</span> &gt;&gt;&gt; <span class="number">9</span> &lt;&lt; <span class="number">4</span>) + <span class="number">15</span>] = (e &lt;&lt; <span class="number">8</span> | e &gt;&gt;&gt; <span class="number">24</span>) &amp; <span class="number">16711935</span> | (e &lt;&lt; <span class="number">24</span> | e &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">4278255360</span>;</span><br><span class="line">                n[(c + <span class="number">64</span> &gt;&gt;&gt; <span class="number">9</span> &lt;&lt; <span class="number">4</span>) + <span class="number">14</span>] = (a &lt;&lt; <span class="number">8</span> | a &gt;&gt;&gt; <span class="number">24</span>) &amp; <span class="number">16711935</span> | (a &lt;&lt; <span class="number">24</span> | a &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">4278255360</span>;</span><br><span class="line">                b.sigBytes = <span class="number">4</span> * (n.length + <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">this</span>._process();</span><br><span class="line">                b = <span class="built_in">this</span>._hash;</span><br><span class="line">                n = b.words;</span><br><span class="line">                <span class="keyword">for</span> (a = <span class="number">0</span>; <span class="number">4</span> &gt; a; a++)</span><br><span class="line">                    c = n[a],</span><br><span class="line">                    n[a] = (c &lt;&lt; <span class="number">8</span> | c &gt;&gt;&gt; <span class="number">24</span>) &amp; <span class="number">16711935</span> | (c &lt;&lt; <span class="number">24</span> | c &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">4278255360</span>;</span><br><span class="line">                <span class="keyword">return</span> b</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">clone</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> b = v.clone.call(<span class="built_in">this</span>);</span><br><span class="line">                b._hash = <span class="built_in">this</span>._hash.clone();</span><br><span class="line">                <span class="keyword">return</span> b</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    t.MD5 = v._createHelper(r);</span><br><span class="line">    t.HmacMD5 = v._createHmacHelper(r)</span><br><span class="line">&#125;)(<span class="built_in">Math</span>);</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> u = CryptoJS,</span><br><span class="line">        p = u.lib,</span><br><span class="line">        d = p.Base,</span><br><span class="line">        l = p.WordArray,</span><br><span class="line">        p = u.algo,</span><br><span class="line">        s = p.EvpKDF = d.extend(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: d.extend(&#123;</span><br><span class="line">                <span class="attr">keySize</span>: <span class="number">4</span>,</span><br><span class="line">                <span class="attr">hasher</span>: p.MD5,</span><br><span class="line">                <span class="attr">iterations</span>: <span class="number">1</span></span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params">d</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.cfg = <span class="built_in">this</span>.cfg.extend(d)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">compute</span>: <span class="function"><span class="keyword">function</span> (<span class="params">d, r</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> p = <span class="built_in">this</span>.cfg, s = p.hasher.create(), b = l.create(), u = b.words, q = p.keySize, p = p.iterations; u.length &lt; q;) &#123;</span><br><span class="line">                        n &amp;&amp; s.update(n);</span><br><span class="line">                        <span class="keyword">var</span> n = s.update(d).finalize(r);</span><br><span class="line">                        s.reset();</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">1</span>; a &lt; p; a++)</span><br><span class="line">                            n = s.finalize(n),</span><br><span class="line">                            s.reset();</span><br><span class="line">                        b.concat(n)</span><br><span class="line">                    &#125;</span><br><span class="line">                    b.sigBytes = <span class="number">4</span> * q;</span><br><span class="line">                    <span class="keyword">return</span> b</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    u.EvpKDF = <span class="function"><span class="keyword">function</span> (<span class="params">d, l, p</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> s.create(p).compute(d, l)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br><span class="line">CryptoJS.lib.Cipher || <span class="function"><span class="keyword">function</span> (<span class="params">u</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> p = CryptoJS,</span><br><span class="line">        d = p.lib,</span><br><span class="line">        l = d.Base,</span><br><span class="line">        s = d.WordArray,</span><br><span class="line">        t = d.BufferedBlockAlgorithm,</span><br><span class="line">        r = p.enc.Base64,</span><br><span class="line">        w = p.algo.EvpKDF,</span><br><span class="line">        v = d.Cipher = t.extend(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: l.extend(),</span><br><span class="line">            <span class="attr">createEncryptor</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.create(<span class="built_in">this</span>._ENC_XFORM_MODE, e, a)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">createDecryptor</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.create(<span class="built_in">this</span>._DEC_XFORM_MODE, e, a)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a, b</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.cfg = <span class="built_in">this</span>.cfg.extend(b);</span><br><span class="line">                    <span class="built_in">this</span>._xformMode = e;</span><br><span class="line">                    <span class="built_in">this</span>._key = a;</span><br><span class="line">                    <span class="built_in">this</span>.reset()</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">reset</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    t.reset.call(<span class="built_in">this</span>);</span><br><span class="line">                    <span class="built_in">this</span>._doReset()</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">process</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>._append(e);</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>._process()</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">finalize</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                    e &amp;&amp; <span class="built_in">this</span>._append(e);</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>._doFinalize()</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">keySize</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">ivSize</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">_ENC_XFORM_MODE</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">_DEC_XFORM_MODE</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">_createHelper</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    <span class="attr">encrypt</span>: <span class="function"><span class="keyword">function</span> (<span class="params">b, k, d</span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">return</span> (<span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> k ? c : a).encrypt(e, b, k, d)</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">decrypt</span>: <span class="function"><span class="keyword">function</span> (<span class="params">b, k, d</span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">return</span> (<span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> k ? c : a).decrypt(e, b, k, d)</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    d.StreamCipher = v.extend(&#123;</span><br><span class="line">        <span class="attr">_doFinalize</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span>._process(!<span class="number">0</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">blockSize</span>: <span class="number">1</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> b = p.mode = &#123;&#125;,</span><br><span class="line">        x = <span class="function"><span class="keyword">function</span> (<span class="params">e, a, b</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> c = <span class="built_in">this</span>._iv;</span><br><span class="line">            c ? <span class="built_in">this</span>._iv = u : c = <span class="built_in">this</span>._prevBlock;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> d = <span class="number">0</span>; d &lt; b; d++)</span><br><span class="line">                e[a + d] ^= c[d]</span><br><span class="line">        &#125;,</span><br><span class="line">        q = (d.BlockCipherMode = l.extend(&#123;</span><br><span class="line">            <span class="attr">createEncryptor</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.Encryptor.create(e, a)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">createDecryptor</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.Decryptor.create(e, a)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>._cipher = e;</span><br><span class="line">                    <span class="built_in">this</span>._iv = a</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;)).extend();</span><br><span class="line">    q.Encryptor = q.extend(&#123;</span><br><span class="line">        <span class="attr">processBlock</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> b = <span class="built_in">this</span>._cipher,</span><br><span class="line">                c = b.blockSize;</span><br><span class="line">            x.call(<span class="built_in">this</span>, e, a, c);</span><br><span class="line">            b.encryptBlock(e, a);</span><br><span class="line">            <span class="built_in">this</span>._prevBlock = e.slice(a, a + c)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    q.Decryptor = q.extend(&#123;</span><br><span class="line">        <span class="attr">processBlock</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> b = <span class="built_in">this</span>._cipher,</span><br><span class="line">                c = b.blockSize,</span><br><span class="line">                d = e.slice(a, a + c);</span><br><span class="line">            b.decryptBlock(e, a);</span><br><span class="line">            x.call(<span class="built_in">this</span>, e, a, c);</span><br><span class="line">            <span class="built_in">this</span>._prevBlock = d</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    b = b.CBC = q;</span><br><span class="line">    q = (p.pad = &#123;&#125;).Pkcs7 = &#123;</span><br><span class="line">        <span class="attr">pad</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> c = <span class="number">4</span> * b, c = c - a.sigBytes % c, d = c &lt;&lt; <span class="number">24</span> | c &lt;&lt; <span class="number">16</span> | c &lt;&lt; <span class="number">8</span> | c, l = [], n = <span class="number">0</span>; n &lt; c; n += <span class="number">4</span>)</span><br><span class="line">                    l.push(d);</span><br><span class="line">                c = s.create(l, c);</span><br><span class="line">                a.concat(c)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">unpad</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                a.sigBytes -= a.words[a.sigBytes - <span class="number">1</span> &gt;&gt;&gt; <span class="number">2</span>] &amp; <span class="number">255</span></span><br><span class="line">            &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    d.BlockCipher = v.extend(&#123;</span><br><span class="line">        <span class="attr">cfg</span>: v.cfg.extend(&#123;</span><br><span class="line">            <span class="attr">mode</span>: b,</span><br><span class="line">            <span class="attr">padding</span>: q</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="attr">reset</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                v.reset.call(<span class="built_in">this</span>);</span><br><span class="line">                <span class="keyword">var</span> a = <span class="built_in">this</span>.cfg,</span><br><span class="line">                    b = a.iv,</span><br><span class="line">                    a = a.mode;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>._xformMode == <span class="built_in">this</span>._ENC_XFORM_MODE)</span><br><span class="line">                    <span class="keyword">var</span> c = a.createEncryptor;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    c = a.createDecryptor,</span><br><span class="line">                    <span class="built_in">this</span>._minBufferSize = <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">this</span>._mode = c.call(a, <span class="built_in">this</span>, b &amp;&amp; b.words)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doProcessBlock</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>._mode.processBlock(a, b)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doFinalize</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> a = <span class="built_in">this</span>.cfg.padding;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>._xformMode == <span class="built_in">this</span>._ENC_XFORM_MODE) &#123;</span><br><span class="line">                    a.pad(<span class="built_in">this</span>._data, <span class="built_in">this</span>.blockSize);</span><br><span class="line">                    <span class="keyword">var</span> b = <span class="built_in">this</span>._process(!<span class="number">0</span>)</span><br><span class="line">                &#125; <span class="keyword">else</span></span><br><span class="line">                    b = <span class="built_in">this</span>._process(!<span class="number">0</span>),</span><br><span class="line">                    a.unpad(b);</span><br><span class="line">                <span class="keyword">return</span> b</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">blockSize</span>: <span class="number">4</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> n = d.CipherParams = l.extend(&#123;</span><br><span class="line">            <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.mixIn(a)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">toString</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> (a || <span class="built_in">this</span>.formatter).stringify(<span class="built_in">this</span>)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">        b = (p.format = &#123;&#125;).OpenSSL = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> b = a.ciphertext;</span><br><span class="line">                    a = a.salt;</span><br><span class="line">                    <span class="keyword">return</span> (a ? s.create([<span class="number">1398893684</span>, <span class="number">1701076831</span>]).concat(a).concat(b) : b).toString(r)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">parse</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    a = r.parse(a);</span><br><span class="line">                    <span class="keyword">var</span> b = a.words;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">1398893684</span> == b[<span class="number">0</span>] &amp;&amp; <span class="number">1701076831</span> == b[<span class="number">1</span>]) &#123;</span><br><span class="line">                        <span class="keyword">var</span> c = s.create(b.slice(<span class="number">2</span>, <span class="number">4</span>));</span><br><span class="line">                        b.splice(<span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">                        a.sigBytes -= <span class="number">16</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> n.create(&#123;</span><br><span class="line">                        <span class="attr">ciphertext</span>: a,</span><br><span class="line">                        <span class="attr">salt</span>: c</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        a = d.SerializableCipher = l.extend(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: l.extend(&#123;</span><br><span class="line">                <span class="attr">format</span>: b</span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="attr">encrypt</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b, c, d</span>) </span>&#123;</span><br><span class="line">                    d = <span class="built_in">this</span>.cfg.extend(d);</span><br><span class="line">                    <span class="keyword">var</span> l = a.createEncryptor(c, d);</span><br><span class="line">                    b = l.finalize(b);</span><br><span class="line">                    l = l.cfg;</span><br><span class="line">                    <span class="keyword">return</span> n.create(&#123;</span><br><span class="line">                        <span class="attr">ciphertext</span>: b,</span><br><span class="line">                        <span class="attr">key</span>: c,</span><br><span class="line">                        <span class="attr">iv</span>: l.iv,</span><br><span class="line">                        <span class="attr">algorithm</span>: a,</span><br><span class="line">                        <span class="attr">mode</span>: l.mode,</span><br><span class="line">                        <span class="attr">padding</span>: l.padding,</span><br><span class="line">                        <span class="attr">blockSize</span>: a.blockSize,</span><br><span class="line">                        <span class="attr">formatter</span>: d.format</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">decrypt</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b, c, d</span>) </span>&#123;</span><br><span class="line">                    d = <span class="built_in">this</span>.cfg.extend(d);</span><br><span class="line">                    b = <span class="built_in">this</span>._parse(b, d.format);</span><br><span class="line">                    <span class="keyword">return</span> a.createDecryptor(c, d).finalize(b.ciphertext)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">_parse</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> a ? b.parse(a, <span class="built_in">this</span>) : a</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">        p = (p.kdf = &#123;&#125;).OpenSSL = &#123;</span><br><span class="line">            <span class="attr">execute</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b, c, d</span>) </span>&#123;</span><br><span class="line">                d || (d = s.random(<span class="number">8</span>));</span><br><span class="line">                a = w.create(&#123;</span><br><span class="line">                    <span class="attr">keySize</span>: b + c</span><br><span class="line">                &#125;).compute(a, d);</span><br><span class="line">                c = s.create(a.words.slice(b), <span class="number">4</span> * c);</span><br><span class="line">                a.sigBytes = <span class="number">4</span> * b;</span><br><span class="line">                <span class="keyword">return</span> n.create(&#123;</span><br><span class="line">                    <span class="attr">key</span>: a,</span><br><span class="line">                    <span class="attr">iv</span>: c,</span><br><span class="line">                    <span class="attr">salt</span>: d</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        c = d.PasswordBasedCipher = a.extend(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: a.cfg.extend(&#123;</span><br><span class="line">                <span class="attr">kdf</span>: p</span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="attr">encrypt</span>: <span class="function"><span class="keyword">function</span> (<span class="params">b, c, d, l</span>) </span>&#123;</span><br><span class="line">                    l = <span class="built_in">this</span>.cfg.extend(l);</span><br><span class="line">                    d = l.kdf.execute(d, b.keySize, b.ivSize);</span><br><span class="line">                    l.iv = d.iv;</span><br><span class="line">                    b = a.encrypt.call(<span class="built_in">this</span>, b, c, d.key, l);</span><br><span class="line">                    b.mixIn(d);</span><br><span class="line">                    <span class="keyword">return</span> b</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">decrypt</span>: <span class="function"><span class="keyword">function</span> (<span class="params">b, c, d, l</span>) </span>&#123;</span><br><span class="line">                    l = <span class="built_in">this</span>.cfg.extend(l);</span><br><span class="line">                    c = <span class="built_in">this</span>._parse(c, l.format);</span><br><span class="line">                    d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt);</span><br><span class="line">                    l.iv = d.iv;</span><br><span class="line">                    <span class="keyword">return</span> a.decrypt.call(<span class="built_in">this</span>, b, c, d.key, l)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;();</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> u = CryptoJS, p = u.lib.BlockCipher, d = u.algo, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = <span class="number">0</span>; <span class="number">256</span> &gt; c; c++)</span><br><span class="line">        a[c] = <span class="number">128</span> &gt; c ? c &lt;&lt; <span class="number">1</span> : c &lt;&lt; <span class="number">1</span> ^ <span class="number">283</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>, j = <span class="number">0</span>, c = <span class="number">0</span>; <span class="number">256</span> &gt; c; c++) &#123;</span><br><span class="line">        <span class="keyword">var</span> k = j ^ j &lt;&lt; <span class="number">1</span> ^ j &lt;&lt; <span class="number">2</span> ^ j &lt;&lt; <span class="number">3</span> ^ j &lt;&lt; <span class="number">4</span>,</span><br><span class="line">            k = k &gt;&gt;&gt; <span class="number">8</span> ^ k &amp; <span class="number">255</span> ^ <span class="number">99</span>;</span><br><span class="line">        l[e] = k;</span><br><span class="line">        s[k] = e;</span><br><span class="line">        <span class="keyword">var</span> z = a[e],</span><br><span class="line">            F = a[z],</span><br><span class="line">            G = a[F],</span><br><span class="line">            y = <span class="number">257</span> * a[k] ^ <span class="number">16843008</span> * k;</span><br><span class="line">        t[e] = y &lt;&lt; <span class="number">24</span> | y &gt;&gt;&gt; <span class="number">8</span>;</span><br><span class="line">        r[e] = y &lt;&lt; <span class="number">16</span> | y &gt;&gt;&gt; <span class="number">16</span>;</span><br><span class="line">        w[e] = y &lt;&lt; <span class="number">8</span> | y &gt;&gt;&gt; <span class="number">24</span>;</span><br><span class="line">        v[e] = y;</span><br><span class="line">        y = <span class="number">16843009</span> * G ^ <span class="number">65537</span> * F ^ <span class="number">257</span> * z ^ <span class="number">16843008</span> * e;</span><br><span class="line">        b[k] = y &lt;&lt; <span class="number">24</span> | y &gt;&gt;&gt; <span class="number">8</span>;</span><br><span class="line">        x[k] = y &lt;&lt; <span class="number">16</span> | y &gt;&gt;&gt; <span class="number">16</span>;</span><br><span class="line">        q[k] = y &lt;&lt; <span class="number">8</span> | y &gt;&gt;&gt; <span class="number">24</span>;</span><br><span class="line">        n[k] = y;</span><br><span class="line">        e ? (e = z ^ a[a[a[G ^ z]]],</span><br><span class="line">            j ^= a[a[j]]) : e = j = <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> H = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">32</span>, <span class="number">64</span>, <span class="number">128</span>, <span class="number">27</span>, <span class="number">54</span>],</span><br><span class="line">        d = d.AES = p.extend(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="built_in">this</span>._key, c = a.words, d = a.sigBytes / <span class="number">4</span>, a = <span class="number">4</span> * ((<span class="built_in">this</span>._nRounds = d + <span class="number">6</span>) + <span class="number">1</span>), e = <span class="built_in">this</span>._keySchedule = [], j = <span class="number">0</span>; j &lt; a; j++)</span><br><span class="line">                        <span class="keyword">if</span> (j &lt; d)</span><br><span class="line">                            e[j] = c[j];</span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">var</span> k = e[j - <span class="number">1</span>];</span><br><span class="line">                            j % d ? <span class="number">6</span> &lt; d &amp;&amp; <span class="number">4</span> == j % d &amp;&amp; (k = l[k &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | l[k &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | l[k &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | l[k &amp; <span class="number">255</span>]) : (k = k &lt;&lt; <span class="number">8</span> | k &gt;&gt;&gt; <span class="number">24</span>,</span><br><span class="line">                                k = l[k &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | l[k &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | l[k &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | l[k &amp; <span class="number">255</span>],</span><br><span class="line">                                k ^= H[j / d | <span class="number">0</span>] &lt;&lt; <span class="number">24</span>);</span><br><span class="line">                            e[j] = e[j - d] ^ k</span><br><span class="line">                        &#125;</span><br><span class="line">                    c = <span class="built_in">this</span>._invKeySchedule = [];</span><br><span class="line">                    <span class="keyword">for</span> (d = <span class="number">0</span>; d &lt; a; d++)</span><br><span class="line">                        j = a - d,</span><br><span class="line">                        k = d % <span class="number">4</span> ? e[j] : e[j - <span class="number">4</span>],</span><br><span class="line">                        c[d] = <span class="number">4</span> &gt; d || <span class="number">4</span> &gt;= j ? k : b[l[k &gt;&gt;&gt; <span class="number">24</span>]] ^ x[l[k &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>]] ^ q[l[k &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>]] ^ n[l[k &amp; <span class="number">255</span>]]</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">encryptBlock</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>._doCryptBlock(a, b, <span class="built_in">this</span>._keySchedule, t, r, w, v, l)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">decryptBlock</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, c</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> d = a[c + <span class="number">1</span>];</span><br><span class="line">                    a[c + <span class="number">1</span>] = a[c + <span class="number">3</span>];</span><br><span class="line">                    a[c + <span class="number">3</span>] = d;</span><br><span class="line">                    <span class="built_in">this</span>._doCryptBlock(a, c, <span class="built_in">this</span>._invKeySchedule, b, x, q, n, s);</span><br><span class="line">                    d = a[c + <span class="number">1</span>];</span><br><span class="line">                    a[c + <span class="number">1</span>] = a[c + <span class="number">3</span>];</span><br><span class="line">                    a[c + <span class="number">3</span>] = d</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">_doCryptBlock</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b, c, d, e, j, l, f</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> m = <span class="built_in">this</span>._nRounds, g = a[b] ^ c[<span class="number">0</span>], h = a[b + <span class="number">1</span>] ^ c[<span class="number">1</span>], k = a[b + <span class="number">2</span>] ^ c[<span class="number">2</span>], n = a[b + <span class="number">3</span>] ^ c[<span class="number">3</span>], p = <span class="number">4</span>, r = <span class="number">1</span>; r &lt; m; r++)</span><br><span class="line">                        <span class="keyword">var</span> q = d[g &gt;&gt;&gt; <span class="number">24</span>] ^ e[h &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] ^ j[k &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] ^ l[n &amp; <span class="number">255</span>] ^ c[p++],</span><br><span class="line">                            s = d[h &gt;&gt;&gt; <span class="number">24</span>] ^ e[k &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] ^ j[n &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] ^ l[g &amp; <span class="number">255</span>] ^ c[p++],</span><br><span class="line">                            t = d[k &gt;&gt;&gt; <span class="number">24</span>] ^ e[n &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] ^ j[g &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] ^ l[h &amp; <span class="number">255</span>] ^ c[p++],</span><br><span class="line">                            n = d[n &gt;&gt;&gt; <span class="number">24</span>] ^ e[g &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] ^ j[h &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] ^ l[k &amp; <span class="number">255</span>] ^ c[p++],</span><br><span class="line">                            g = q,</span><br><span class="line">                            h = s,</span><br><span class="line">                            k = t;</span><br><span class="line">                    q = (f[g &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | f[h &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | f[k &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | f[n &amp; <span class="number">255</span>]) ^ c[p++];</span><br><span class="line">                    s = (f[h &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | f[k &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | f[n &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | f[g &amp; <span class="number">255</span>]) ^ c[p++];</span><br><span class="line">                    t = (f[k &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | f[n &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | f[g &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | f[h &amp; <span class="number">255</span>]) ^ c[p++];</span><br><span class="line">                    n = (f[n &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | f[g &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | f[h &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | f[k &amp; <span class="number">255</span>]) ^ c[p++];</span><br><span class="line">                    a[b] = q;</span><br><span class="line">                    a[b + <span class="number">1</span>] = s;</span><br><span class="line">                    a[b + <span class="number">2</span>] = t;</span><br><span class="line">                    a[b + <span class="number">3</span>] = n</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">keySize</span>: <span class="number">8</span></span><br><span class="line">        &#125;);</span><br><span class="line">    u.AES = p._createHelper(d)</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getkeyObj</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&quot;2F6A67981887471B8FA6787849363CE2&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (str.length &lt; <span class="number">16</span>) &#123;</span><br><span class="line">        str += <span class="string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    str = str.toUpperCase();</span><br><span class="line">    <span class="keyword">var</span> key = &#123;&#125;;</span><br><span class="line">    key.key = toHexString(str.substring(<span class="number">0</span>, <span class="number">8</span>));</span><br><span class="line">    key.iv = toHexString(str.substring(<span class="number">8</span>, <span class="number">16</span>));</span><br><span class="line">    key.security = <span class="string">&quot;\u4445\u5320\u4d45&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> key</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toHexString</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> temp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">        temp += str.charCodeAt(i).toString(<span class="number">16</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> temp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parse</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> c = a.length, e = [], j = <span class="number">0</span>; j &lt; c; j += <span class="number">2</span>)</span><br><span class="line">        e[j &gt;&gt;&gt; <span class="number">3</span>] |= <span class="built_in">parseInt</span>(a.substr(j, <span class="number">2</span>), <span class="number">16</span>) &lt;&lt; <span class="number">24</span> - <span class="number">4</span> * (j % <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> r.init(e, c / <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getpwd</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    keyObj = getkeyObj();</span><br><span class="line">            value = CryptoJS.AES.encrypt(value, CryptoJS.enc.Utf8.parse(keyObj.key), &#123;</span><br><span class="line">                <span class="attr">iv</span>: CryptoJS.enc.Utf8.parse(keyObj.iv)</span><br><span class="line">            &#125;).toString()</span><br><span class="line">    <span class="keyword">return</span> keyObj.security + value</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/q1kSBV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/23/q1kSBV.png"                      alt="q1kSBV.png"                ></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目标网站: &lt;a class=&quot;link&quot;   href=&quot;http://eip.chanfine.com/&quot; &gt;http://eip.chanfine.com/&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打开登录</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MD5反爬万创邦案例</title>
    <link href="http://example.com/2022/03/19/MD5%E5%8F%8D%E7%88%AC%E6%A1%88%E4%BE%8B/"/>
    <id>http://example.com/2022/03/19/MD5%E5%8F%8D%E7%88%AC%E6%A1%88%E4%BE%8B/</id>
    <published>2022-03-19T08:18:30.000Z</published>
    <updated>2022-03-19T10:14:02.616Z</updated>
    
    <content type="html"><![CDATA[<p>目标网站: <a class="link"   href="https://m.wcbchina.com/invite/invite.html" >https://m.wcbchina.com/invite/invite.html<i class="fas fa-external-link-alt"></i></a></p><p>我们打开工具，随便输入一串数字，随意输入11位数字，电话号码是11位的嘛，然后点击获取验证码，就会出现一个验证:</p><p><a href="https://imgtu.com/i/qEPIrq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEPIrq.png"                      alt="qEPIrq.png"                ></a></p><p>我们要做的就是把加密的sign的加密逻辑给找出来，然后用Python模拟实现构造出这个sing</p><p>我们还是先用老方法先搜索下:</p><p>我们搜索sign，或者sign:，我这里搜索的是sing:，然后会看到两条数据，第一条是css的，那我们想要的很可能就在第二条:</p><p><a href="https://imgtu.com/i/qEiEzd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEiEzd.png"                      alt="qEiEzd.png"                ></a></p><p>我们点进去，会发现直接就能看到加密的一个逻辑:</p><p>可以看到就在15行</p><p><a href="https://imgtu.com/i/qEFSpQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEFSpQ.png"                      alt="qEFSpQ.png"                ></a></p><p>我们在此处打个断点:</p><p>然后看看是否就在此处构造出了我们想要的的sign:</p><p>可以到的确就在15行得到了我们想要的sign，我们可以只看这一行了</p><p><a href="https://imgtu.com/i/qEF176"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEF176.png"                      alt="qEF176.png"                ></a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">N = h.hex_md5((v || <span class="string">&quot;&quot;</span>) + (g || <span class="string">&quot;&quot;</span>) + c).toUpperCase()</span><br></pre></td></tr></table></figure><p>我们可以看到，我们想要的sign由对象h.hex_md5这个方法，然后跟了一大串的参数，最后改大写了，我们首先看看hex_md5到底跟了什么参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((v || <span class="string">&quot;&quot;</span>) + (g || <span class="string">&quot;&quot;</span>) + c)</span><br></pre></td></tr></table></figure><p>我们来看看v和g存不存在先:</p><p><a href="https://imgtu.com/i/qEkoqI"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEkoqI.png"                      alt="qEkoqI.png"                ></a></p><p>根据调试情况可知，v和g都是undefined，所以都是不存在的，所以以上的表达式，就是空字符串加空字符串加上c，那么重点就是c了，我们需要搞清c是什么:</p><p><a href="https://imgtu.com/i/qEAJQH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEAJQH.png"                      alt="qEAJQH.png"                ></a></p><p>根据经验，我们很容易就能看出这是一个时间戳，那么参数就很明显了，我们接下来要做的就是扣代码</p><p>首先我们需要搞清楚h是个什么东西，我们在h的下一行下一个断点，看看h是个什么:</p><p>这里由于这整个代码是一个自执行方法，我们一刷新就会执行，然后我们可以看看h:</p><p><a href="https://imgtu.com/i/qEeQnH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEeQnH.png"                      alt="qEeQnH.png"                ></a></p><p>h是一个大的对象，然后里面有好多个方法，后面调用的就是hex_md5方法，我们可以进入这个方法看看:</p><p><a href="https://imgtu.com/i/qEeBHs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEeBHs.png"                      alt="qEeBHs.png"                ></a></p><p>我们会发现，直接就进入了一个大的js里面，我们来分析下这个代码的结构，方法hex_md5在一个大的对象j之中，所以我们需要用对象来调用这个方法，我们可以先看看一个例子:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _hex_md5;</span><br><span class="line">!(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> j = &#123;</span><br><span class="line">        <span class="attr">hex_md5</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;111&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    _hex_md5 = j;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>我们一但把这个代码贴在控制台，就会触发这个自执行函数，然后我们就需要通过过对象调用方法的方法<code>.</code>来调用hex_md5方法，所以对于上面的函数我们也是可以这样处理:</p><p>首先我们可以看到j是一个对象，然后这个案例中的代码它其实也把这个j对象导出了，只不过它是使用的<code>module.exports = j</code></p><p>这里我们需要了解下开头的<code>define</code>，这个关键字是定义一个模块的语法，我们这里可以不用模块，所以可以把<code>define</code>删除了，然后使用上面的方法把删除<code>define</code>关键字后的方法改成一个自执行方法，修改后如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> md5_test;</span><br><span class="line">!(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">require</span>, <span class="built_in">exports</span>, <span class="built_in">module</span></span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">x, c</span>) </span>&#123;</span><br><span class="line">        x[c &gt;&gt; <span class="number">5</span>] |= <span class="number">128</span> &lt;&lt; c % <span class="number">32</span>,</span><br><span class="line">        x[(c + <span class="number">64</span> &gt;&gt;&gt; <span class="number">9</span> &lt;&lt; <span class="number">4</span>) + <span class="number">14</span>] = c;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">1732584193</span>, _ = -<span class="number">271733879</span>, y = -<span class="number">1732584194</span>, d = <span class="number">271733878</span>, i = <span class="number">0</span>; i &lt; x.length; i += <span class="number">16</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> b = a</span><br><span class="line">              , B = _</span><br><span class="line">              , D = y</span><br><span class="line">              , E = d;</span><br><span class="line">            a = h(a, _, y, d, x[i + <span class="number">0</span>], <span class="number">7</span>, -<span class="number">680876936</span>),</span><br><span class="line">            d = h(d, a, _, y, x[i + <span class="number">1</span>], <span class="number">12</span>, -<span class="number">389564586</span>),</span><br><span class="line">            y = h(y, d, a, _, x[i + <span class="number">2</span>], <span class="number">17</span>, <span class="number">606105819</span>),</span><br><span class="line">            _ = h(_, y, d, a, x[i + <span class="number">3</span>], <span class="number">22</span>, -<span class="number">1044525330</span>),</span><br><span class="line">            a = h(a, _, y, d, x[i + <span class="number">4</span>], <span class="number">7</span>, -<span class="number">176418897</span>),</span><br><span class="line">            d = h(d, a, _, y, x[i + <span class="number">5</span>], <span class="number">12</span>, <span class="number">1200080426</span>),</span><br><span class="line">            y = h(y, d, a, _, x[i + <span class="number">6</span>], <span class="number">17</span>, -<span class="number">1473231341</span>),</span><br><span class="line">            _ = h(_, y, d, a, x[i + <span class="number">7</span>], <span class="number">22</span>, -<span class="number">45705983</span>),</span><br><span class="line">            a = h(a, _, y, d, x[i + <span class="number">8</span>], <span class="number">7</span>, <span class="number">1770035416</span>),</span><br><span class="line">            d = h(d, a, _, y, x[i + <span class="number">9</span>], <span class="number">12</span>, -<span class="number">1958414417</span>),</span><br><span class="line">            y = h(y, d, a, _, x[i + <span class="number">10</span>], <span class="number">17</span>, -<span class="number">42063</span>),</span><br><span class="line">            _ = h(_, y, d, a, x[i + <span class="number">11</span>], <span class="number">22</span>, -<span class="number">1990404162</span>),</span><br><span class="line">            a = h(a, _, y, d, x[i + <span class="number">12</span>], <span class="number">7</span>, <span class="number">1804603682</span>),</span><br><span class="line">            d = h(d, a, _, y, x[i + <span class="number">13</span>], <span class="number">12</span>, -<span class="number">40341101</span>),</span><br><span class="line">            y = h(y, d, a, _, x[i + <span class="number">14</span>], <span class="number">17</span>, -<span class="number">1502002290</span>),</span><br><span class="line">            _ = h(_, y, d, a, x[i + <span class="number">15</span>], <span class="number">22</span>, <span class="number">1236535329</span>),</span><br><span class="line">            a = g(a, _, y, d, x[i + <span class="number">1</span>], <span class="number">5</span>, -<span class="number">165796510</span>),</span><br><span class="line">            d = g(d, a, _, y, x[i + <span class="number">6</span>], <span class="number">9</span>, -<span class="number">1069501632</span>),</span><br><span class="line">            y = g(y, d, a, _, x[i + <span class="number">11</span>], <span class="number">14</span>, <span class="number">643717713</span>),</span><br><span class="line">            _ = g(_, y, d, a, x[i + <span class="number">0</span>], <span class="number">20</span>, -<span class="number">373897302</span>),</span><br><span class="line">            a = g(a, _, y, d, x[i + <span class="number">5</span>], <span class="number">5</span>, -<span class="number">701558691</span>),</span><br><span class="line">            d = g(d, a, _, y, x[i + <span class="number">10</span>], <span class="number">9</span>, <span class="number">38016083</span>),</span><br><span class="line">            y = g(y, d, a, _, x[i + <span class="number">15</span>], <span class="number">14</span>, -<span class="number">660478335</span>),</span><br><span class="line">            _ = g(_, y, d, a, x[i + <span class="number">4</span>], <span class="number">20</span>, -<span class="number">405537848</span>),</span><br><span class="line">            a = g(a, _, y, d, x[i + <span class="number">9</span>], <span class="number">5</span>, <span class="number">568446438</span>),</span><br><span class="line">            d = g(d, a, _, y, x[i + <span class="number">14</span>], <span class="number">9</span>, -<span class="number">1019803690</span>),</span><br><span class="line">            y = g(y, d, a, _, x[i + <span class="number">3</span>], <span class="number">14</span>, -<span class="number">187363961</span>),</span><br><span class="line">            _ = g(_, y, d, a, x[i + <span class="number">8</span>], <span class="number">20</span>, <span class="number">1163531501</span>),</span><br><span class="line">            a = g(a, _, y, d, x[i + <span class="number">13</span>], <span class="number">5</span>, -<span class="number">1444681467</span>),</span><br><span class="line">            d = g(d, a, _, y, x[i + <span class="number">2</span>], <span class="number">9</span>, -<span class="number">51403784</span>),</span><br><span class="line">            y = g(y, d, a, _, x[i + <span class="number">7</span>], <span class="number">14</span>, <span class="number">1735328473</span>),</span><br><span class="line">            _ = g(_, y, d, a, x[i + <span class="number">12</span>], <span class="number">20</span>, -<span class="number">1926607734</span>),</span><br><span class="line">            a = v(a, _, y, d, x[i + <span class="number">5</span>], <span class="number">4</span>, -<span class="number">378558</span>),</span><br><span class="line">            d = v(d, a, _, y, x[i + <span class="number">8</span>], <span class="number">11</span>, -<span class="number">2022574463</span>),</span><br><span class="line">            y = v(y, d, a, _, x[i + <span class="number">11</span>], <span class="number">16</span>, <span class="number">1839030562</span>),</span><br><span class="line">            _ = v(_, y, d, a, x[i + <span class="number">14</span>], <span class="number">23</span>, -<span class="number">35309556</span>),</span><br><span class="line">            a = v(a, _, y, d, x[i + <span class="number">1</span>], <span class="number">4</span>, -<span class="number">1530992060</span>),</span><br><span class="line">            d = v(d, a, _, y, x[i + <span class="number">4</span>], <span class="number">11</span>, <span class="number">1272893353</span>),</span><br><span class="line">            y = v(y, d, a, _, x[i + <span class="number">7</span>], <span class="number">16</span>, -<span class="number">155497632</span>),</span><br><span class="line">            _ = v(_, y, d, a, x[i + <span class="number">10</span>], <span class="number">23</span>, -<span class="number">1094730640</span>),</span><br><span class="line">            a = v(a, _, y, d, x[i + <span class="number">13</span>], <span class="number">4</span>, <span class="number">681279174</span>),</span><br><span class="line">            d = v(d, a, _, y, x[i + <span class="number">0</span>], <span class="number">11</span>, -<span class="number">358537222</span>),</span><br><span class="line">            y = v(y, d, a, _, x[i + <span class="number">3</span>], <span class="number">16</span>, -<span class="number">722521979</span>),</span><br><span class="line">            _ = v(_, y, d, a, x[i + <span class="number">6</span>], <span class="number">23</span>, <span class="number">76029189</span>),</span><br><span class="line">            a = v(a, _, y, d, x[i + <span class="number">9</span>], <span class="number">4</span>, -<span class="number">640364487</span>),</span><br><span class="line">            d = v(d, a, _, y, x[i + <span class="number">12</span>], <span class="number">11</span>, -<span class="number">421815835</span>),</span><br><span class="line">            y = v(y, d, a, _, x[i + <span class="number">15</span>], <span class="number">16</span>, <span class="number">530742520</span>),</span><br><span class="line">            _ = v(_, y, d, a, x[i + <span class="number">2</span>], <span class="number">23</span>, -<span class="number">995338651</span>),</span><br><span class="line">            a = A(a, _, y, d, x[i + <span class="number">0</span>], <span class="number">6</span>, -<span class="number">198630844</span>),</span><br><span class="line">            d = A(d, a, _, y, x[i + <span class="number">7</span>], <span class="number">10</span>, <span class="number">1126891415</span>),</span><br><span class="line">            y = A(y, d, a, _, x[i + <span class="number">14</span>], <span class="number">15</span>, -<span class="number">1416354905</span>),</span><br><span class="line">            _ = A(_, y, d, a, x[i + <span class="number">5</span>], <span class="number">21</span>, -<span class="number">57434055</span>),</span><br><span class="line">            a = A(a, _, y, d, x[i + <span class="number">12</span>], <span class="number">6</span>, <span class="number">1700485571</span>),</span><br><span class="line">            d = A(d, a, _, y, x[i + <span class="number">3</span>], <span class="number">10</span>, -<span class="number">1894986606</span>),</span><br><span class="line">            y = A(y, d, a, _, x[i + <span class="number">10</span>], <span class="number">15</span>, -<span class="number">1051523</span>),</span><br><span class="line">            _ = A(_, y, d, a, x[i + <span class="number">1</span>], <span class="number">21</span>, -<span class="number">2054922799</span>),</span><br><span class="line">            a = A(a, _, y, d, x[i + <span class="number">8</span>], <span class="number">6</span>, <span class="number">1873313359</span>),</span><br><span class="line">            d = A(d, a, _, y, x[i + <span class="number">15</span>], <span class="number">10</span>, -<span class="number">30611744</span>),</span><br><span class="line">            y = A(y, d, a, _, x[i + <span class="number">6</span>], <span class="number">15</span>, -<span class="number">1560198380</span>),</span><br><span class="line">            _ = A(_, y, d, a, x[i + <span class="number">13</span>], <span class="number">21</span>, <span class="number">1309151649</span>),</span><br><span class="line">            a = A(a, _, y, d, x[i + <span class="number">4</span>], <span class="number">6</span>, -<span class="number">145523070</span>),</span><br><span class="line">            d = A(d, a, _, y, x[i + <span class="number">11</span>], <span class="number">10</span>, -<span class="number">1120210379</span>),</span><br><span class="line">            y = A(y, d, a, _, x[i + <span class="number">2</span>], <span class="number">15</span>, <span class="number">718787259</span>),</span><br><span class="line">            _ = A(_, y, d, a, x[i + <span class="number">9</span>], <span class="number">21</span>, -<span class="number">343485551</span>),</span><br><span class="line">            a = C(a, b),</span><br><span class="line">            _ = C(_, B),</span><br><span class="line">            y = C(y, D),</span><br><span class="line">            d = C(d, E)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>(a, _, y, d)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">q, c, a, x, s, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> C(y(C(C(c, q), C(x, t)), s), a)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">h</span>(<span class="params">c, h, g, d, x, s, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a(h &amp; g | ~h &amp; d, c, h, x, s, t)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">g</span>(<span class="params">c, h, g, d, x, s, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a(h &amp; d | g &amp; ~d, c, h, x, s, t)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">v</span>(<span class="params">c, h, g, d, x, s, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a(h ^ g ^ d, c, h, x, s, t)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params">c, h, g, d, x, s, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a(g ^ (h | ~d), c, h, x, s, t)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_</span>(<span class="params">a, h</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> g = b(a);</span><br><span class="line">        g.length &gt; <span class="number">16</span> &amp;&amp; (g = c(g, a.length * U));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> v = <span class="built_in">Array</span>(<span class="number">16</span>), A = <span class="built_in">Array</span>(<span class="number">16</span>), i = <span class="number">0</span>; <span class="number">16</span> &gt; i; i++)</span><br><span class="line">            v[i] = <span class="number">909522486</span> ^ g[i],</span><br><span class="line">            A[i] = <span class="number">1549556828</span> ^ g[i];</span><br><span class="line">        <span class="keyword">var</span> _ = c(v.concat(b(h)), <span class="number">512</span> + h.length * U);</span><br><span class="line">        <span class="keyword">return</span> c(A.concat(_), <span class="number">640</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">C</span>(<span class="params">x, c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = (<span class="number">65535</span> &amp; x) + (<span class="number">65535</span> &amp; c)</span><br><span class="line">          , h = (x &gt;&gt; <span class="number">16</span>) + (c &gt;&gt; <span class="number">16</span>) + (a &gt;&gt; <span class="number">16</span>);</span><br><span class="line">        <span class="keyword">return</span> h &lt;&lt; <span class="number">16</span> | <span class="number">65535</span> &amp; a</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">y</span>(<span class="params">c, a</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> c &lt;&lt; a | c &gt;&gt;&gt; <span class="number">32</span> - a</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="built_in">Array</span>(), h = (<span class="number">1</span> &lt;&lt; U) - <span class="number">1</span>, i = <span class="number">0</span>; i &lt; c.length * U; i += U)</span><br><span class="line">            a[i &gt;&gt; <span class="number">5</span>] |= (c.charCodeAt(i / U) &amp; h) &lt;&lt; i % <span class="number">32</span>;</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="string">&quot;&quot;</span>, h = (<span class="number">1</span> &lt;&lt; U) - <span class="number">1</span>, i = <span class="number">0</span>; i &lt; <span class="number">32</span> * c.length; i += U)</span><br><span class="line">            a += <span class="built_in">String</span>.fromCharCode(c[i &gt;&gt; <span class="number">5</span>] &gt;&gt;&gt; i % <span class="number">32</span> &amp; h);</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">D</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> a = F ? <span class="string">&quot;0123456789ABCDEF&quot;</span> : <span class="string">&quot;0123456789abcdef&quot;</span>, h = <span class="string">&quot;&quot;</span>, i = <span class="number">0</span>; i &lt; <span class="number">4</span> * c.length; i++)</span><br><span class="line">            h += a.charAt(c[i &gt;&gt; <span class="number">2</span>] &gt;&gt; i % <span class="number">4</span> * <span class="number">8</span> + <span class="number">4</span> &amp; <span class="number">15</span>) + a.charAt(c[i &gt;&gt; <span class="number">2</span>] &gt;&gt; i % <span class="number">4</span> * <span class="number">8</span> &amp; <span class="number">15</span>);</span><br><span class="line">        <span class="keyword">return</span> h</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">E</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>, h = <span class="string">&quot;&quot;</span>, i = <span class="number">0</span>; i &lt; <span class="number">4</span> * c.length; i += <span class="number">3</span>)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> g = (c[i &gt;&gt; <span class="number">2</span>] &gt;&gt; <span class="number">8</span> * (i % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">16</span> | (c[i + <span class="number">1</span> &gt;&gt; <span class="number">2</span>] &gt;&gt; <span class="number">8</span> * ((i + <span class="number">1</span>) % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">8</span> | c[i + <span class="number">2</span> &gt;&gt; <span class="number">2</span>] &gt;&gt; <span class="number">8</span> * ((i + <span class="number">2</span>) % <span class="number">4</span>) &amp; <span class="number">255</span>, v = <span class="number">0</span>; <span class="number">4</span> &gt; v; v++)</span><br><span class="line">                h += <span class="number">8</span> * i + <span class="number">6</span> * v &gt; <span class="number">32</span> * c.length ? S : a.charAt(g &gt;&gt; <span class="number">6</span> * (<span class="number">3</span> - v) &amp; <span class="number">63</span>);</span><br><span class="line">        <span class="keyword">return</span> h</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> F = <span class="number">0</span></span><br><span class="line">      , S = <span class="string">&quot;&quot;</span></span><br><span class="line">      , U = <span class="number">8</span></span><br><span class="line">      , j = &#123;</span><br><span class="line">        <span class="attr">hex_md5</span>: <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> D(c(b(s), s.length * U)).toUpperCase()</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">b64_md5</span>: <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> E(c(b(s), s.length * U))</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">str_md5</span>: <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> B(c(b(s), s.length * U))</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">hex_hmac_md5</span>: <span class="function"><span class="keyword">function</span>(<span class="params">c, a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> D(_(c, a))</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">b64_hmac_md5</span>: <span class="function"><span class="keyword">function</span>(<span class="params">c, a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> E(_(c, a))</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">str_hmac_md5</span>: <span class="function"><span class="keyword">function</span>(<span class="params">c, a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> B(_(c, a))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    md5_test = j;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>导出变量我们就定义为md5_test，然后根据这个自执行方法我们就能得到加密后的sign</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目标网站: &lt;a class=&quot;link&quot;   href=&quot;https://m.wcbchina.com/invite/invite.html&quot; &gt;https://m.wcbchina.com/invite/invite.html&lt;i class=&quot;fas fa-exter</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Python创建虚拟环境的步骤</title>
    <link href="http://example.com/2022/03/19/Python%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%AD%A5%E9%AA%A4/"/>
    <id>http://example.com/2022/03/19/Python%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%AD%A5%E9%AA%A4/</id>
    <published>2022-03-19T06:55:30.000Z</published>
    <updated>2022-03-19T07:57:43.831Z</updated>
    
    <content type="html"><![CDATA[<p>第一步，安装相应的包:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install virtualenv</span><br></pre></td></tr></table></figure><p>第二步，创建虚拟环境:</p><p>这里也有两种方式，一种是创建纯净环境，一种是创建一个环境然后这个环境会继承原安装的模块</p><ul><li><p>创建纯净环境</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv  evn_name</span><br></pre></td></tr></table></figure></li><li><p>创建环境，继承原安装的模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv --system-site-packages env_name</span><br></pre></td></tr></table></figure></li></ul><p>如果你的计算机中安装了不止一个版本的Python，那在创建虚拟环境时也可以指定Python版本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv  evn_name python=python3<span class="number">.7</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第一步，安装相应的包:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Django项目体验--Django安装</title>
    <link href="http://example.com/2022/03/11/Django%E8%81%94%E9%80%9A%E7%94%A8%E6%88%B7%E7%AE%A1%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0--%E5%88%9D%E7%BA%A7/"/>
    <id>http://example.com/2022/03/11/Django%E8%81%94%E9%80%9A%E7%94%A8%E6%88%B7%E7%AE%A1%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0--%E5%88%9D%E7%BA%A7/</id>
    <published>2022-03-11T08:49:30.000Z</published>
    <updated>2022-03-21T08:40:06.632Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装Django"><a href="#安装Django" class="headerlink" title="安装Django"></a>安装Django</h3><p>使用一下命令:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django</span><br></pre></td></tr></table></figure><p>安装完成之后，会分别安装两个东西:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">c:python37</span><br><span class="line">    - python.exe</span><br><span class="line">    - Scripts</span><br><span class="line">    - pip.exe</span><br><span class="line">        - django-admin.exe【一个工具，用于创建django项目的文件和文件夹】</span><br><span class="line">    - lib</span><br><span class="line">    - 内置模块</span><br><span class="line">        - site-packages</span><br><span class="line">        - openpyxl</span><br><span class="line">            - python-docx</span><br><span class="line">            - flask</span><br><span class="line">            - django  【框架的源码，网站就需要用到里面所封装的功能】</span><br></pre></td></tr></table></figure><p>相比于flask，flask会比较简便，而django因为涉及到的组件很多，在一开始打开django项目我们就会发现有很多已经创建好的文件夹，这就是<code>django-admin</code>做到的，</p><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><h4 id="终端创建"><a href="#终端创建" class="headerlink" title="终端创建"></a>终端创建</h4><p>django项目中会有一些默认的文件和默认的文件夹，这些是需要手动敲命令去创建的</p><ul><li><p>打开终端</p></li><li><p>进入某个目录(项目所存放的位置)，例如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/user/LHJ/PythonProjects/DjangoProjects/LianTongUserManage</span><br></pre></td></tr></table></figure></li><li><p>执行命令创建项目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;c:python37\Scripts\django-admin.exe&quot;</span> startproject 项目名称</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果&quot;c:python37\Scripts&quot;已经加入系统环境变量，就可以直接在终端中使用django-admin这个命令:</span></span><br><span class="line">django-admin startproject 项目名称</span><br></pre></td></tr></table></figure></li></ul><h4 id="Pycharm创建"><a href="#Pycharm创建" class="headerlink" title="Pycharm创建"></a>Pycharm创建</h4><p>其实Pycharm创建和上面使用命令行创建是一样的，只不过是把相关命令集成成了一些按钮</p><p>打开pycharm，然后点击new project再选择Django，然后选择django项目所存放的路径和解释器，如果是虚拟环境就选虚拟环境，其实推荐使用虚拟环境</p><h4 id="两种方式对比"><a href="#两种方式对比" class="headerlink" title="两种方式对比"></a>两种方式对比</h4><ul><li><p>命令行创建的项目是比较标准的</p></li><li><p>pycharm在标准的基础上默认加了以下东西:</p><ul><li><p>创建了一个templates目录，最好删除</p></li><li><p>因为创建了templates目录，所以在settings.py中templates列表中也会比命令行创建的项目的settings.py多一个路径，如果删除了这个目录，这个路径也最好清除</p><p><a href="https://imgtu.com/i/boPQwn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/boPQwn.png"                      alt="boPQwn.png"                ></a></p><p>这加的这一句的意思就是以后我们找模板就去最外层这个templates目录去找</p></li></ul></li></ul><h3 id="项目默认文件介绍"><a href="#项目默认文件介绍" class="headerlink" title="项目默认文件介绍"></a>项目默认文件介绍</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">LianTongUserManage</span><br><span class="line">manage.py            【项目的管理、启动项目、创建app、数据管理】默认放着不要动【常常用】</span><br><span class="line">    LianTongUserManage </span><br><span class="line">    __init__.py</span><br><span class="line">        asgi.py          【接收网络请求】默认放着不要动，异步的，这是Django3才支持的</span><br><span class="line">        settings.py 【项目配置文件，例如连接数据库、注册app等】【常常修改】</span><br><span class="line">        urls.py 【URL和函数的对应关系，这个是常常操作的】【常常修改】</span><br><span class="line">        wsgi.py          【接收网络请求】默认放着不要动，同步的</span><br></pre></td></tr></table></figure><p>flask的配置文件很多都是已经集成在内部</p><h3 id="App的创建和说明"><a href="#App的创建和说明" class="headerlink" title="App的创建和说明"></a>App的创建和说明</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 项目</span><br><span class="line">- app, 用户管理【可以是独立的表结构、独立的函数、独立的HTML模板、独立的CSS样式】</span><br><span class="line">    - app, 订单管理【可以是独立的表结构、独立的函数、独立的HTML模板、独立的CSS样式】</span><br><span class="line">- app, 后台管理【可以是独立的表结构、独立的函数、独立的HTML模板、独立的CSS样式】</span><br><span class="line">    ...</span><br><span class="line">注意: 我们开发比较简洁，用不到多app，一般情况下，都是一个项目下创建一个app</span><br></pre></td></tr></table></figure><p>使用以下命令创建:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp app01</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bouQiQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/bouQiQ.png"                      alt="bouQiQ.png"                ></a></p><p>来看看app里面的文件:</p><p>这里以app01为例:</p><p><a href="https://imgtu.com/i/bouXFg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/bouXFg.png"                      alt="bouXFg.png"                ></a></p><ul><li>apps.py: 固定的不用动，app启动类</li><li>migrations: 一般来说也不用动，它是用于对数据库的字段进行修改的时候用来做记录的</li><li>test.py: 一般来说也不用动，是用于做单元测试的，一般小项目也用不到</li><li>admin.py: 一般来说也不用动，这是为后台提供admin功能，django默认提供了admin后台管理</li><li>views.py: 这是比较重要的，url对应的函数就在这里编写</li><li>models.py: 这也是比较重要的，对数据操作，因为django封装了一个orm以供使用</li></ul><h3 id="启动运行Django"><a href="#启动运行Django" class="headerlink" title="启动运行Django"></a>启动运行Django</h3><h4 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h4><ul><li><p>确保app已注册(settings.py)</p><p>刚刚我们创建了app，在使用app之前我们要先注册这个app，打开settings.py，然后找到INSTALLED_APPS这个列表，然后把我们创建的app加入进去，那么该怎么写呢，如下图所示:</p><p>我们主要就是加入一个路径</p><p>在app01目录下有一个apps.py，然后里面有一个类叫App01Config然后下面有一个name叫app01，就写这个路径，<code>app01.apps.App01Config</code>，通过这个路径就能找到名字为app01的app</p><p><a href="https://imgtu.com/i/b7d3lt"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/b7d3lt.png"                      alt="b7d3lt.png"                ></a></p></li><li><p>编写URL和视图函数对应关系(urls.py)</p><p><a href="https://imgtu.com/i/b7wCB8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/b7wCB8.png"                      alt="b7wCB8.png"                ></a></p><p>打开urls.py我们会看到如上图所示，其中红框中的<code>urlpatterns</code>列表就是记录url和相应试图处理函数的对应关系，里面默认会有一个<code>admin/</code>和<code>admins.site.urls</code>，前者是一个路径，后面是访问这个路径所触发的函数，我们可以再举个例子:</p><p><a href="https://imgtu.com/i/b70Fr6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/b70Fr6.png"                      alt="b70Fr6.png"                ></a></p></li><li><p>编写视图函数(views.py)</p><p>我们在app01目录下的views.py编写index函数，这个函数默认要有一个参数<code>requests</code>:</p><p><a href="https://imgtu.com/i/b7BiWj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/b7BiWj.png"                      alt="b7BiWj.png"                ></a></p></li><li><p>启动Django项目</p><ul><li><p>命令行启动，可以指定端口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure></li><li><p>Pycharm启动，在设置中也可以指定端口</p><p><a href="https://imgtu.com/i/b7D34g"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/b7D34g.png"                      alt="b7D34g.png"                ></a></p></li></ul><p><a href="https://imgtu.com/i/b7rCxs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/b7rCxs.png"                      alt="b7rCxs.png"                ></a></p></li></ul><h4 id="再写一个页面"><a href="#再写一个页面" class="headerlink" title="再写一个页面"></a>再写一个页面</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url -&gt; 函数</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bHcGrj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/bHcGrj.png"                      alt="bHcGrj.png"                ></a></p><h3 id="模板和静态文件"><a href="#模板和静态文件" class="headerlink" title="模板和静态文件"></a>模板和静态文件</h3><p>前面我们已经写了一个快速上手，但是我们感觉还是有点欠缺，这应该返回一大堆的html代码，那django中能不能也给我们返回html呢，答案当然是肯定的，如果只是想返回一个普通的字符串，就可以直接用<code>HttpResponse</code>，如果想返回一个html，就不能在view.py中简单地<code>return</code>一个<code>HttpResponse</code>了，应该是<code>return</code>一个<code>render</code>，<code>render</code>的第一个参数也是request，第二个参数就写html文件，在<code>render</code>的内部就会自动帮你寻找这个文件，并把这个文件的内容读取到内存然后以供使用，那么问题来了，Django会去哪个目录下找这个html文件呢，我们可以在当前app的目录下新建一个templates文件夹，然后在里面新建一个html文件，views.py会默认在app目录下的templates目录下找html文件</p><p>我们在views.py中添加一个UserList的路由，并指定一个视图函数，然后再新建一个templates文件夹，并在里面新建一个UserList.html文件，如下图所示:</p><p><a href="https://imgtu.com/i/bHToVO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/bHToVO.png"                      alt="bHToVO.png"                ></a></p><p><a href="https://imgtu.com/i/bHTOxI"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/bHTOxI.png"                      alt="bHTOxI.png"                ></a></p><p><a href="https://imgtu.com/i/bH7pdS"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/bH7pdS.png"                      alt="bH7pdS.png"                ></a></p><p>上面说的是会在当前app下的templates目录寻找对应views.py中的html文件，实际上会根据app的注册顺序，逐一去他们的templates目录中找，目前这里是只有一个app01，如果还有app02、app03，并且已经注册，也就是已经写入到了settings.py中的INSTALLED_APPS列表中，就会先去app01的templates中找，然后再去app02的templates中找，再去app03，这样按顺序找下去</p><p><a href="https://imgtu.com/i/bHHiTO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/bHHiTO.png"                      alt="bHHiTO.png"                ></a></p><p>关于模板这里再多提一嘴，如果你在项目的根目录下也有一个templates目录，并且项目还是会从app里面的templates目录里面找相关的html文件，默认情况下项目只会从app里面的templates目录里面找相关的html文件，如果你要看别人的网站，我们就要打开settings.py文件，看看TEMPLATES列表，是否有以下情况:</p><p><a href="https://imgtu.com/i/bb4Jx0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bb4Jx0.png"                      alt="bb4Jx0.png"                ></a></p><p>如果出现了上图红框中所标注的代码，那就说明项目会默认从项目根目录的templates中找html相关代码，一般Pycharm专业版创建的项目就会自动在项目的根目录创建一个templates目录，然后再在settings.py中加上上图所示的代码</p><p>如果我们把这个根目录下的templates目录删除或者里面没有放我们想要的html代码，项目会再接着从项目app的注册顺序找</p><p>在开发过程中，一般将:</p><ul><li>图片</li><li>CSS</li><li>JS</li></ul><p>都会当作静态文件处理</p><p>在django中，静态文件不能乱放，一般会在当前app目录下新建一个static目录，里面去放一些静态文件，如下，我们在app01目录下新建了一个static目录，然后里面放了一个1.jpeg，然后我们在UserList.html文件中导入了这个图片，如下图所示:</p><p><a href="https://imgtu.com/i/bb7JDP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bb7JDP.png"                      alt="bb7JDP.png"                ></a></p><p>运行效果如下:</p><p><a href="https://imgtu.com/i/bb7wCQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bb7wCQ.png"                      alt="bb7wCQ.png"                ></a></p><p>这里需要注意的是，static目录的名字只能为static，如果为其他的可能会出现展现不出静态文件的问题</p><p>一般来说，我们会在static目录下再进行细分，一般会有以下4个小分类:</p><ul><li>css</li><li>img</li><li>js</li><li>plugins</li></ul><p>刚刚我们的1.jpeg就可以放在img目录下，那么相应的路径就可以修改为<code>/static/img/1.jpeg</code></p><p>如果有什么css或者js就可以对号入座放在对应的目录下，如下图所示，我们就引入了相应的js框架和bootstrap组件:</p><p><a href="https://imgtu.com/i/bqkgZ8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqkgZ8.png"                      alt="bqkgZ8.png"                ></a></p><p>其实在html文件中我们可以使用刚刚那种方式<code>/static/img/1.jpeg</code>来导入一个静态文件，但是Django推荐使用<code>&#123;load static&#125;</code>这种模板语法来实现导入，如下图所示:</p><p><a href="https://imgtu.com/i/bqm5z4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqm5z4.png"                      alt="bqm5z4.png"                ></a></p><p>如果像之前那样写死了就不好，因为一但项目上线就需要修改所有的路径，而如果后期static文件的路径变了或者放静态文件的文件夹不叫static了，我们也只需要在settings.py中配置下配置下STATIC_URL即可:</p><p><a href="https://imgtu.com/i/bquYUP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bquYUP.png"                      alt="bquYUP.png"                ></a></p><p>既然导入了bootstrap，我们来确认下是否导入成功:</p><p><a href="https://imgtu.com/i/bqKYL9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqKYL9.png"                      alt="bqKYL9.png"                ></a></p><p>写了一个按钮，我们来看看效果:</p><p><a href="https://imgtu.com/i/bqKDzD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqKDzD.png"                      alt="bqKDzD.png"                ></a></p><p>这就说明导入成功了</p><h3 id="Django的模板语法"><a href="#Django的模板语法" class="headerlink" title="Django的模板语法"></a>Django的模板语法</h3><p>本质: 在HTML中写一些占位符，由数据对这些占位符进行替换和处理</p><p>下面我们来写上一个URL来专门学习下这个模板语法:</p><p><a href="https://imgtu.com/i/bqQLGV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqQLGV.png"                      alt="bqQLGV.png"                ></a></p><p><a href="https://imgtu.com/i/bqlCI1"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqlCI1.png"                      alt="bqlCI1.png"                ></a></p><p>我们分屏打开views.py和tpl.html这两个文件来看看模板语法的使用:</p><p><a href="https://imgtu.com/i/bq1Q0J"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bq1Q0J.png"                      alt="bq1Q0J.png"                ></a></p><p><a href="https://imgtu.com/i/bq1Gfx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bq1Gfx.png"                      alt="bq1Gfx.png"                ></a></p><p>我们来复习下刚才的逻辑，当我们在浏览器地址栏键入<code>http://127.0.0.1:8000/tpl/</code>，就会触发views.py中的tpl函数，继而触发hpl.html文件，从而在浏览器中就会显示相应的界面；</p><p>我们在页面中可以随便写东西，比如写个<code>&lt;h1&gt;&lt;h1&gt;</code>:</p><p><a href="https://imgtu.com/i/bq8wFA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bq8wFA.png"                      alt="bq8wFA.png"                ></a></p><p><a href="https://imgtu.com/i/bq82wQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bq82wQ.png"                      alt="bq82wQ.png"                ></a></p><p>这是我们写死了的，但是以后我们如果想从数据库或者从什么地方获取了数据，然后想把数据放在html文件中，然后显示出来，该怎么写呢?</p><p>可以像如下图一样写:</p><p>下图只是举了个例子而已哈</p><p>下面我们在vies.py中给了个数据叫name，值是韩超，当然开发中绝对不可能这样写的，然后我们在render函数中要写入一个字典，值和数据的变量名一致，键可以自己指定，那么对应着，在html文件中，我们可以直接用所谓的模板语法写上一个双花括号，然后里面放一个n1，也就是刚刚在views.py中给定的键名，这样在html文件中就可以访问该数据了</p><p><a href="https://imgtu.com/i/bqGjHg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqGjHg.png"                      alt="bqGjHg.png"                ></a></p><p>运行效果如下:</p><p><a href="https://imgtu.com/i/bqJivV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqJivV.png"                      alt="bqJivV.png"                ></a></p><p>这里记住一个点，显示单独的一个值就直接花括号加变量的键即可</p><p>现在我们又有个列表，可否把这个列表的数据也展现在前端页面上?，当然是可以的</p><p>我们又添加一个roles列表，和上面的操作是一样一样的:</p><p><a href="https://imgtu.com/i/bqYpZD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqYpZD.png"                      alt="bqYpZD.png"                ></a></p><p>如果我们直接用双花括号然后包裹着n2会是什么效果呢</p><p><a href="https://imgtu.com/i/bqYQij"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqYQij.png"                      alt="bqYQij.png"                ></a></p><p><a href="https://imgtu.com/i/bqYyy6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqYyy6.png"                      alt="bqYyy6.png"                ></a></p><p>两个花括号括起来的话，就会原封不动地显示该变量，是个列表就显示列表</p><p>很显然，这种方式显示比较不友好，我们如何将列表拆分然后将每个列表中的元素取到呢？</p><p>是否可以<code>n2[0]</code>呢?，这样是不可以的，行不通的，如果非要用取索引的方式的话，那也应该使用<code>n2.0</code>，<code>n2.1</code>这种方式，如下图所示:</p><p><a href="https://imgtu.com/i/bqt8tH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqt8tH.png"                      alt="bqt8tH.png"                ></a></p><p><a href="https://imgtu.com/i/bqtUjP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqtUjP.png"                      alt="bqtUjP.png"                ></a></p><p>如果列表中有很多个数据，那么通过上图的方法那未免有点捉襟见肘，其实我们可以使用for循环</p><p><a href="https://imgtu.com/i/bqNivt"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqNivt.png"                      alt="bqNivt.png"                ></a></p><p><a href="https://imgtu.com/i/bqNuCj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqNuCj.png"                      alt="bqNuCj.png"                ></a></p><p>如果你现在有一个字典，如下图所示:</p><p><a href="https://imgtu.com/i/bqa8NF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqa8NF.png"                      alt="bqa8NF.png"                ></a></p><p>如果想将这个字典的信息也想放在模板语法中让它给处理下，应该怎么写呢?</p><p>我们也可以像之前那样直接用显示一个变量的方式来显示这个字典，但是这显然不是我们想要的:</p><p><a href="https://imgtu.com/i/bqdADx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqdADx.png"                      alt="bqdADx.png"                ></a></p><p><a href="https://imgtu.com/i/bqduPe"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqduPe.png"                      alt="bqduPe.png"                ></a></p><p>我们想要的是获取字典中的值，那么我们就可以通过键来获取:</p><p><a href="https://imgtu.com/i/bqdd2j"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqdd2j.png"                      alt="bqdd2j.png"                ></a></p><p><a href="https://imgtu.com/i/bqdDrq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqdDrq.png"                      alt="bqdDrq.png"                ></a></p><p>对于字典来讲，他也是一个可迭代对象，也是支持for循环的，那么这里的字典也是可以使用for循环的，如下图所示:</p><p><a href="https://imgtu.com/i/bqrQBR"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqrQBR.png"                      alt="bqrQBR.png"                ></a></p><p>字典可以循环keys也可以循环values，上面我循环的是keys，items就是键和值，例如:<code>for k, v in n3.items</code>，如果不写items或者keys或者values那默认就是keys</p><p><a href="https://imgtu.com/i/bqr7CT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqr7CT.png"                      alt="bqr7CT.png"                ></a></p><p><a href="https://imgtu.com/i/bqrIU0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqrIU0.png"                      alt="bqrIU0.png"                ></a></p><p>上面是使用的是列表，其实使用元组也是一样的</p><p>如果是列表套字典，其实那也是一样的，遍历列表再遍历里面的字典，或者通过“下标操作”也是可行的</p><p>举个例子说:</p><p><a href="https://imgtu.com/i/bqvcJP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqvcJP.png"                      alt="bqvcJP.png"                ></a></p><p><a href="https://imgtu.com/i/bqv2z8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqv2z8.png"                      alt="bqv2z8.png"                ></a></p><p>下面是循环操作:</p><p><a href="https://imgtu.com/i/bqxZeH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqxZeH.png"                      alt="bqxZeH.png"                ></a></p><p><a href="https://imgtu.com/i/bqxMfP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqxMfP.png"                      alt="bqxMfP.png"                ></a></p><p>模板语法也支持逻辑判断:</p><p><a href="https://imgtu.com/i/bLiFN4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLiFN4.png"                      alt="bLiFN4.png"                ></a></p><p><a href="https://imgtu.com/i/bLiEC9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLiEC9.png"                      alt="bLiEC9.png"                ></a></p><p><a href="https://imgtu.com/i/bLiUDf"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLiUDf.png"                      alt="bLiUDf.png"                ></a></p><p>到这里我们要清楚一点，通过URL找到views.py中视图函数后，会在render函数内读取templates里面的含模板语法的html文件，然后进行内容的替换，然后再返回给用户浏览器</p><p><a href="https://imgtu.com/i/bLibKx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLibKx.png"                      alt="bLibKx.png"                ></a></p><h4 id="案例-伪联通新闻中心"><a href="#案例-伪联通新闻中心" class="headerlink" title="案例: 伪联通新闻中心"></a>案例: 伪联通新闻中心</h4><p>首先我们写上一个URL:</p><p><a href="https://imgtu.com/i/bLEHYD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLEHYD.png"                      alt="bLEHYD.png"                ></a></p><p>然后再定义一个视图函数:</p><p><a href="https://imgtu.com/i/bLVPfg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLVPfg.png"                      alt="bLVPfg.png"                ></a></p><p>再定义一个html文件:</p><p><a href="https://imgtu.com/i/bLVEXn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLVEXn.png"                      alt="bLVEXn.png"                ></a></p><p>运行效果为:</p><p><a href="https://imgtu.com/i/bLVMhF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLVMhF.png"                      alt="bLVMhF.png"                ></a></p><p>但是呢，这里我自己又没有新闻，当然我可以自己定义一些新闻，构造成字典或者列表，或者去数据库，如果去数据库的话我们就得创建数据库表，然后使用一些查询数据库的语句；还有一种就是通过网络请求，也就是爬虫手段去爬取现成的的新闻数据；这里我们就使用爬虫的手段拿数据</p><p>我们先来看看这个联通新闻中心:</p><p>链接: <a class="link"   href="http://www.chinaunicom.com.cn/news/list202203.html" >http://www.chinaunicom.com.cn/news/list202203.html<i class="fas fa-external-link-alt"></i></a></p><p><a href="https://imgtu.com/i/bLqKC8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/14/bLqKC8.png"                      alt="bLqKC8.png"                ></a></p><p>不过这里我没成功抓到包，一直报502错误，我们就简单看看流程叭，在视频中是成功抓到包的，然后返回的是一个json数据</p><p>我们就在view.py中的new方法中向目标链接发起一个请求，这里我们要导入requests模块</p><p><a href="https://imgtu.com/i/bLOu6g"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/14/bLOu6g.png"                      alt="bLOu6g.png"                ></a></p><p>然后就可以在html代码中使用这些爬取到的的数据了</p><h3 id="请求和响应"><a href="#请求和响应" class="headerlink" title="请求和响应"></a>请求和响应</h3><p>之前我们已经安装了django，并且熟悉了相应的模板语法然后我们也写了个小案例，在小案例中已经可以集成一些数据进行展示了，但这些还不够，下面我们就来聊聊请求和响应</p><p>我们知道，我们的浏览器可以向服务器发送get请求和post请求，用来传递一些数据还有获取一些数据，那么接下来我们就来看看它是如何去传递数据以及传递数据之后咱们怎么来接收的</p><p>我们来写一个something的url:</p><p><a href="https://imgtu.com/i/bLvb36"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/14/bLvb36.png"                      alt="bLvb36.png"                ></a><br>然后我们先来写一个视图函数的框架:</p><p><a href="https://imgtu.com/i/bLvzEd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/14/bLvzEd.png"                      alt="bLvzEd.png"                ></a></p><p>图片中也提到了，视图函数中的参数request是一个对象，里面封装了所有请求后返回过来的所有数据</p><p>request.method可以返回请求方式</p><p>request.GET可以返回在URL中的参数(GET请求传参方式)</p><p>request.POST可以返回请求体中的的参数(POST请求传参方式)</p><p><a href="https://imgtu.com/i/bLzHOO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/14/bLzHOO.png"                      alt="bLzHOO.png"                ></a></p><p>以上说的是请求，那么响应呢，自然是由return来返回，可以用<code>return HttpResponse</code>来返回一个字符串，也可以用<code>return render(request, &#39;example.html&#39;)</code>来返回一个页面，我们要注意刚刚所说的<code>print(request.GET)</code>或<code>print(request.POST)</code>再或者<code>print(request.method)</code>都不会展现在浏览器页面上的，就和上面图片中所展示的一样，是显示在控制台中的，而<code>return</code>出来的响应则会实实在在地显示出来，在<code>example.html</code>中，我们可以使用模板语言，项目在把这个响应给浏览器之前，就会进行渲染，渲染成一个完整的<code>html</code>文件</p><p>除了上述提到的<code>HttpResponse</code>和<code>render</code>两种方式的响应外，其实还可以返回一个<code>redirect</code>，相当于一个重定向，如下案例所示:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> redirect(<span class="string">&quot;https://www.baidu.com&quot;</span>)  <span class="comment"># 让浏览器重定向到其它页面</span></span><br></pre></td></tr></table></figure><p>然后当我们访问项目设置的地址后，就会跳转到百度的界面</p><p>那么是由django向浏览器发送请求，然后再把响应给浏览器的呢，还是直接由浏览器发送请求呢</p><p>那么答案是第二种，也就是不经过django，就是浏览器和相应的服务器一对一，浏览器发送请求，然后相应的服务器返回数据，是不经过我们正在访问的网站的</p><p>就好比我们访问联通的官网，然后里面有一个按钮跳转到百度，我们点击后，因为是在联通的官网点击的，但是联通的官网没有这个资源，资源那肯定在百度的服务器上，所以联通的服务器会告诉浏览器说，你去请求百度的服务器吧，然后浏览器就去访问百度的服务器了，这就叫重定向，百度这个网页的资源的传输是不经过联通官网的</p><p>以上我们就介绍了三个常见的请求和三个常见的响应，我们来总结下:</p><p>请求</p><ul><li>request.method</li><li>request.GET</li><li>request.POST</li></ul><p>响应</p><ul><li>HttpResponse(‘返回内容’)</li><li>render(request, ‘example.html’)</li><li>redirect(“<a class="link"   href="http://www.baidu.com&quot;/" >www.baidu.com&quot;<i class="fas fa-external-link-alt"></i></a>)</li></ul><p>那么到这里，我们了解了这个之后，实际上我们现在就可以基于我们的django就可以写出一些页面，并且通过页面给咱们去传递一些数据，然后我们获取到数据之后，再给用户进行返回，这些事咱们其实就可以开始干了哈，那接下来我们就来搞上一个案例好叭</p><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><p>用户登录</p><p>我们上面所写的那些代码都是用于测试，咱们接下来每写一个案例，我们都会写一个新的函数，新的url，跟之前的是没有关系的，是分开的，我们现在做的这个用户登录，那还是在原来的基础上去做</p><p>上面那一段话其实可以不看，我们下面开始</p><p>首先我们写上一个url:</p><p><a href="https://imgtu.com/i/bj7OcF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bj7OcF.png"                      alt="bj7OcF.png"                ></a></p><p>然后写上一个视图函数:</p><p><a href="https://imgtu.com/i/bjbnr4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjbnr4.png"                      alt="bjbnr4.png"                ></a></p><p>然后再写html文件:</p><p><a href="https://imgtu.com/i/bjbJxO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjbJxO.png"                      alt="bjbJxO.png"                ></a></p><p>我们指定了一个表单，为post提交方式，后面的action指定了提交方式</p><p>我们来梳理下流程，我们指定了url为<code>127.0.0.1:8000/login/</code>，我们访问这个地址就会触发视图函数，然后就会指向login.html，这个时候我们用户就看到了登录表单，然后我们输入了用户名和密码点击登录，由于action指定的提交地址是<code>/login/</code>，所以又会再走上面那个流程，所以我们要在视图函数中判断请求方式</p><p>如果是get请求，我们直接让用户看到登录页面</p><p>如果是其他请求，这其中就包含了post请求，我们就获取用户提交的数据，那么如何获取用户post提交的数据上面已经说过了，写上一个<code>request.POST</code>就可以获取了</p><p>所以我们来修改视图函数如下:</p><p><a href="https://imgtu.com/i/bjLsKS"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjLsKS.png"                      alt="bjLsKS.png"                ></a></p><p>好，到目前为止，我们看起来已经做好了一切工作，我们来启动下项目看看效果</p><p>第一步，用户登录，好，没有问题:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220315112233898.png"                      alt="image-20220315112233898"                ></p><p>然后输入用户名秘密，点击提交</p><p><a href="https://imgtu.com/i/bjOlIs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjOlIs.png"                      alt="bjOlIs.png"                ></a></p><p>哦吼，这个时候报了一个错: <code>CSRF token missing or incorrect</code></p><p>默认情况下，django比flask多一个CSRF token的验证，你可以认为这是多了一个安全机制的检验，如果你在django中想要解决这种问题怎么办呢，请注意，就是在你的form表单里面写上一个<code>&#123;% csrf_token %&#125;</code>，写上它就可以了</p><p>我们加上<code>&#123;% csrf_token %&#125;</code>，再来登录下试试</p><p><a href="https://imgtu.com/i/bjXPyT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjXPyT.png"                      alt="bjXPyT.png"                ></a></p><p><a href="https://imgtu.com/i/bjXQOO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjXQOO.png"                      alt="bjXQOO.png"                ></a></p><p><a href="https://imgtu.com/i/bjXUpt"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjXUpt.png"                      alt="bjXUpt.png"                ></a></p><p>从上图我们可以发现在<code>QueryDict</code>中除了我们输入的用户名和密码，还有一个<code>csrfmiddlewaretoken</code>，那这个是个啥啊，这其实就是django默认提供的一个机制，当我们查看浏览器源代码时，在其html文件form表单内部加了<code>&#123;% csrf_token %&#125;</code>的前提下，实际上就在内部帮你隐藏了一个input框:</p><p><a href="https://imgtu.com/i/bjj6bD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjj6bD.png"                      alt="bjj6bD.png"                ></a></p><p>然后你在提交的时候，除了你提交的这个值，还有django内部给你隐藏生成的这个值也会提交过去，所以刚刚我们会看到<code>csrfmiddlewaretoken</code>的值，这个隐藏的值我们不用管，django在内部回去读取它，用来校验这个请求是否是咱们正常请求过来的网页，如果是，它就默认会带着这个值，如果不是，那就会被认为是非法的请求，那也就不会有后续的操作了，当我们不带<code>&#123;% csrf_token %&#125;</code>这个值，源文件内部就不会有隐藏的<code>input</code>框，一点提交diango就会阻拦你的提交，认为你是一个非法的请求，就如上面的报错一样</p><p>接着刚刚的，我们已经拿到了post过来的数据了，也就是用户名和密码，那么不能什么都登录成功啊，那肯定得做个校验，我们可以用<code>request.POST.get(&#39;user&#39;)</code>拿到用户名，用<code>request.POST.get(&#39;pwd&#39;)</code>拿到密码，然后再根据用户名和密码是否正确来让用户是否登录成功</p><p><a href="https://imgtu.com/i/bjxJk4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjxJk4.png"                      alt="bjxJk4.png"                ></a></p><p>这里我们就完成了对用户名和密码的校验，以此来让用户登录成功或者登录失败，但是这里有一点是不合理的，正常来说我们登录失败应该返回到登录页面，但是这里是直接显示了一个登录失败的字符串，这显然是不合理的，我们不应该以<code>return HttpResponse(&quot;登录失败&quot;)</code>来返回一个文本，应该是也返回登录页面，所以我们把视图函数修改如下:</p><p><a href="https://imgtu.com/i/bjzTr6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjzTr6.png"                      alt="bjzTr6.png"                ></a></p><p>以上的方法又有点欠缺，我们能不能在登录页面提示用户名和密码输入错了呢，这种做法就相比来说更人性化，不然每次数了用户名和密码错了，然后都得重定向，都得加载和渲染html，这个就从资源利用来说或者响应速度来说都是不够好的</p><p> 我们可以在view.py中对如果登录的信息不对进行一个提示，然后再在html代码中展现出来，如下图所示:</p><p><a href="https://imgtu.com/i/bv1FGd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv1FGd.png"                      alt="bv1FGd.png"                ></a></p><p><a href="https://imgtu.com/i/bv1udS"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv1udS.png"                      alt="bv1udS.png"                ></a></p><p>这种实现方式实际上就是根据模板语法去实现的</p><p>而这个写成这个还不是很方便，我们给它加上一个span标签，然后span标签再给它加上一个颜色，所以我们修改上面的login.html如下:</p><p><a href="https://imgtu.com/i/bv14Wd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv14Wd.png"                      alt="bv14Wd.png"                ></a></p><p>我们刷新下页面，然后输入一个错误的用户名和密码，就会出现红色的字体提示:</p><p><a href="https://imgtu.com/i/bv1zSs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv1zSs.png"                      alt="bv1zSs.png"                ></a></p><p>其实登录成功我们返回的是<code>登录成功</code>也不太好，正常来说应该是跳转到另一个页面，在这里我们可以使用<code>redirect</code>跳转到某个网址，比如我们就可以跳转到百度的首页，就以这个为例叭:</p><p><a href="https://imgtu.com/i/bv8Mgs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv8Mgs.png"                      alt="bv8Mgs.png"                ></a></p><p><a href="https://imgtu.com/i/bv8fxA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv8fxA.png"                      alt="bv8fxA.png"                ></a></p><p>以上我们只是写了个简单的小案例，我们这里的用户名和密码是固定了的，项目中肯定不会这么用，我们肯定是要在数据库中去校验用户名和密码的，由于我们还没接触django操作数据库，我们就先写成这样，写成这样这纯纯的是一个初学者的代码，第一点，我们这里面的<code>if...else...</code>的嵌套有点多，我们可以把多余的else去除，修改后的代码如下:</p><p><a href="https://imgtu.com/i/bvJn6s"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvJn6s.png"                      alt="bvJn6s.png"                ></a></p><h3 id="数据库的操作"><a href="#数据库的操作" class="headerlink" title="数据库的操作"></a>数据库的操作</h3><p>我们在Python中操作数据库是使用<code>pymysql</code></p><p>案例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接MySQL</span></span><br><span class="line">conn = pymysql.connect(host=<span class="string">&#x27;1270.0.1&#x27;</span>, port=<span class="number">3306</span>, user=<span class="string">&#x27;root&#x27;</span>, password=<span class="string">&#x27;123456&#x27;</span>, charset=<span class="string">&#x27;utf-8&#x27;</span>, db=<span class="string">&#x27;student&#x27;</span>)</span><br><span class="line">cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送指令</span></span><br><span class="line">cursor.execute(<span class="string">&#x27;insert into admin(username, password, mobile) values(&quot;lihoujian&quot;, &quot;123456&quot;, &quot;18796853411&quot;)&#x27;</span>)</span><br><span class="line">conn.commit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p>而django操作数据库更加简单，它在内部提供了一个ORM框架，在django中，我们不再需要去写SQL语句，ORM就相当于一个翻译工具，我们不再需要像之前使用<code>pymysql</code>模块的时候去写SQL语句，而取而代之的是<code>models.xxx.all()</code>之类的语句，ORM会把这个语句翻译成相应的SQL语句，然后底层再使用比如<code>pymysql</code>、<code>MySQLdb</code>、<code>mysqlclient</code>等模块去执行</p><p>这个ORM就是一个翻译的过程:</p><p><a href="https://imgtu.com/i/bvUM2F"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvUM2F.png"                      alt="bvUM2F.png"                ></a></p><p>让我们开发者编写代码的时候更简洁，而不像以前自己还要再去写SQL语句；当然，有了ORM这个翻译工具，我们也要去学如何使用这个工具进行类数据库的增删改查</p><p>刚刚我们提到了ORM是依赖于一些库的，所以我们要先安装，这里我们需要安装第三方模块</p><h4 id="安装第三方模块"><a href="#安装第三方模块" class="headerlink" title="安装第三方模块"></a>安装第三方模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mysqlclient</span><br></pre></td></tr></table></figure><p>这里需要注意，如果是使用django以前的版本，比如django1或者django2，使用pymysql是完全没有问题的，但是到了django3，pymysql支持得不太好，在其内部有一个编码的错误，用pymysql就比较费劲；而django在最新的版本里面支持了mysqlclient，在这里我们底层就是用这个就可以的</p><h4 id="ORM能做啥子"><a href="#ORM能做啥子" class="headerlink" title="ORM能做啥子"></a>ORM能做啥子</h4><p>ORM可以帮助我们做两件事:</p><ul><li><p>创建、修改、删除数据库中的表(不用写SQL语句)，但是它无法创建数据库</p></li><li><p>操作表中的数据(不用写SQL语句)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">insert into...</span><br><span class="line">update...</span><br><span class="line">selecet...<span class="keyword">from</span>...</span><br></pre></td></tr></table></figure></li></ul><h4 id="创建数据库-自己创建"><a href="#创建数据库-自己创建" class="headerlink" title="创建数据库(自己创建)"></a>创建数据库(自己创建)</h4><p>前面也提到了，由于django不能创建数据库，所以我们得手动创建数据库，可以直接使用数据库的工具创建数据库，下面给个命令行的样例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database xxx DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</span><br></pre></td></tr></table></figure><p><code>CHARSET</code>表示编码，<code>COLLATE</code>表示校对集，可以理解为排序规则</p><p>下面就和视频作者一起走一遍叭，哈哈哈哈哈:</p><ul><li>mysql -u root -p</li><li>输入密码</li><li>show databases;</li><li>然后把上面的代码贴进来即可</li></ul><p>视频中创建的是gx_day15，我也创建这个吧</p><p><a href="https://imgtu.com/i/bvDtIA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvDtIA.png"                      alt="bvDtIA.png"                ></a></p><h4 id="Django连接数据库"><a href="#Django连接数据库" class="headerlink" title="Django连接数据库"></a>Django连接数据库</h4><p>在settings.py文件中进行配置和修改，找到DATABASES列表，默认用的是sqlite3数据库一个文件型数据库，我们不需要用这个，可以把目录中的<code>db.sqlite3</code>删除掉，然后settings.py中修改成如下即可:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置数据库</span></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="comment"># python自带的一个数据库，基本不会被使用</span></span><br><span class="line">        <span class="comment"># &#x27;ENGINE&#x27;: &#x27;django.db.backends.sqlite3&#x27;,</span></span><br><span class="line">        <span class="comment"># &#x27;NAME&#x27;: os.path.join(BASE_DIR, &#x27;db.sqlite3&#x27;),</span></span><br><span class="line">        <span class="comment"># 注册我们自己使用的数据库连接</span></span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,  <span class="comment"># 数据库引擎</span></span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;gx_day15&#x27;</span>, <span class="comment">#数据库名称</span></span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>:<span class="string">&#x27;root&#x27;</span>, <span class="comment"># 连接数据库的用户名称</span></span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>:<span class="string">&#x27;123456&#x27;</span>,  <span class="comment"># 用户密码</span></span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>:<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="comment"># 访问的数据库的主机的ip地址</span></span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>:<span class="string">&#x27;3306&#x27;</span>, <span class="comment"># 默认mysql访问端口</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>django可以连接多种数据库，这里我们就看到了可以连接sqlite3、mysql、其实还有很多，可以看官网了解下</p><h4 id="Django操作表"><a href="#Django操作表" class="headerlink" title="Django操作表"></a>Django操作表</h4><h5 id="类创建表"><a href="#类创建表" class="headerlink" title="类创建表"></a>类创建表</h5><p>在models.py中操作</p><p>这里给上一个示例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">name = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line">password = models.CharField(max_length=<span class="number">64</span>)</span><br><span class="line">age = models.IntegerField()</span><br></pre></td></tr></table></figure><p>那么如果你写上面这么一个类，在django的底层，ORM会根据这个类帮助我们去生成并执行以下SQL语句:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table app名称_类名的小写(</span><br><span class="line">    name = varchar(<span class="number">32</span>),</span><br><span class="line">    password varchar(<span class="number">64</span>),</span><br><span class="line">    age <span class="built_in">int</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>由于我们在项目中的app名称为app_01，所以这底层执行的SQL语句为:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table app01_userinfo(</span><br><span class="line">    name = varchar(<span class="number">32</span>),</span><br><span class="line">    password varchar(<span class="number">64</span>),</span><br><span class="line">    age <span class="built_in">int</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>除了这上面的内容之外，其实还有一句也会自动生成，虽然在类中没有写，但是还是会自动生成:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span> bigint auto_increment primary key,</span><br></pre></td></tr></table></figure><p>所以以上所给出的类，django底层实际上生成的sql语句完整版为:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table app01_userinfo(</span><br><span class="line">    <span class="built_in">id</span> bigint auto_increment primary key,</span><br><span class="line">    name = varchar(<span class="number">32</span>),</span><br><span class="line">    password varchar(<span class="number">64</span>),</span><br><span class="line">    age <span class="built_in">int</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>生成以上SQL语句之后，django就会利用模块来生成数据库表了</p><p>类名就代指了数据库表表名，类里面的变量就代指了数据库表里的字段名</p><p>上面我们写了一个类，但这时候数据库中其实啥也没有呢，接下来我们还需要执行命令</p><p>打开terminal，执行两个命令:</p><p>注意: app已经注册，python已经安装mysqlclient，下面命令在项目根目录中执行</p><ul><li>```python<br>python manage.py makemigrations<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ ```python</span><br><span class="line">  python manage.py migrate</span><br></pre></td></tr></table></figure></li></ul><p>下面是我执行的样例:</p><p><a href="https://imgtu.com/i/bv2vh4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv2vh4.png"                      alt="bv2vh4.png"                ></a></p><p><a href="https://imgtu.com/i/bvRe9H"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvRe9H.png"                      alt="bvRe9H.png"                ></a></p><p>我们会发现它怎么给咱创建了这么多的表呢，这么多的表，它是办什么用的呢</p><p>实际上，在我们使用上面的两条命令时，django会去找每一个注册的app中的models.py，我们可以看见的，django默认打开一个项目是有好多app是已经注册了的，所以那些默认注册的app也有models.py，那肯定也会被创建表；那些默认的app也是有用的，会给我们提供一些功能，所以django在生成表的时候不仅把我们的app中的models.py给生成了表，默认的app也给生成表了；如果以后我们不想用其中某个功能，可以把它注释了</p><h5 id="类添加表"><a href="#类添加表" class="headerlink" title="类添加表"></a>类添加表</h5><p> 咱们刚一个类创建了一张表，那么我们可以再写多个类去创建多张表，比如就如下面所示:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Department</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">title = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Role</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">caption = models.CharField(max_length=<span class="number">16</span>)</span><br></pre></td></tr></table></figure><p>再次使用上面的两个命令，即可添加这两张表</p><p><a href="https://imgtu.com/i/bvfI9e"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvfI9e.png"                      alt="bvfI9e.png"                ></a></p><h5 id="类删除表"><a href="#类删除表" class="headerlink" title="类删除表"></a>类删除表</h5><p>如果我不想要其中哪个表了，就把相应的类去掉，再执行上面的两条命令即可删除表</p><p><a href="https://imgtu.com/i/bvhHGF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvhHGF.png"                      alt="bvhHGF.png"                ></a></p><p><a href="https://imgtu.com/i/bvhWKs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvhWKs.png"                      alt="bvhWKs.png"                ></a></p><h5 id="类修改表"><a href="#类修改表" class="headerlink" title="类修改表"></a>类修改表</h5><p>这里比如说<code>app01_userinfo</code>表中的age字段我不想要了，我想把这个字段给删除掉，那我们在相应的类中把相应的变量注释掉，同样再使用上面的两条命令即可</p><p><a href="https://imgtu.com/i/bv5KTx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv5KTx.png"                      alt="bv5KTx.png"                ></a></p><p><a href="https://imgtu.com/i/bv5YXd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv5YXd.png"                      alt="bv5YXd.png"                ></a></p><p>上面是删除一个字段，那如果我想在原有表的基础上新增一个字段呢，我们同样可以在原来的类中新增一个变量，然后使用上面提到的两条命令；但是这个时候我们要思考一个问题，如果，而且很有可能目标表是有数据的，那么我们新增的这个字段该填写什么数据呢？我们不妨先试试:</p><p>我打算在app01_userinfo表中新增size字段:</p><p><a href="https://imgtu.com/i/bvIlbn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvIlbn.png"                      alt="bvIlbn.png"                ></a></p><p>然后我使用两条命令:</p><p><a href="https://imgtu.com/i/bvIt8U"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvIt8U.png"                      alt="bvIt8U.png"                ></a></p><p>可以看到，我在输入第一条命令后出现了提示，大致意思就是说我插入了新字段的值该怎么处理，是我们输入一个确定的值还是直接退出然后后续修改填入默认值，给了两个选项，选项1就是我们输入确定的值，选项2就是直接退出然后后续修改填入默认值</p><p>如果我们选择1，并且输入1，那该字段将全为1，如果我们选择2，那将直接退出，然后我们可以在指定变量的时候可以给定一个默认值，如下所示:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">size = models.IntegerField(default=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>那么再执行两条命令就不会报错了，而且size字段的所有值都是2</p><p>要么就是允许该字段为空:</p><p>举个栗子说:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data = models.IntegerField(null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>那么新增的data字段将全是空</p><p>所以我们在新增列的时候一定要注意</p><p>以后在开发中，如果想要对表结构进行调整，只需要在models.py操作类即可</p><h5 id="表的增删改查"><a href="#表的增删改查" class="headerlink" title="表的增删改查"></a>表的增删改查</h5><p>我们留下两个表来举栗子:</p><p><a href="https://imgtu.com/i/bvHyeH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvHyeH.png"                      alt="bvHyeH.png"                ></a></p><h5 id="增"><a href="#增" class="headerlink" title="增"></a>增</h5><p>给app01_department表新增数据，案例如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Department.objects.create(title=<span class="string">&#x27;销售部&#x27;</span>)</span><br></pre></td></tr></table></figure><p>以上代码就相当于SQL语句:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into app01_department(title) value(<span class="string">&#x27;销售部&#x27;</span>)</span><br></pre></td></tr></table></figure><p>给app01_useringo表新增数据，案例如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UserInfo.objects.create(name=<span class="string">&#x27;lihoujian&#x27;</span>, password=<span class="string">&#x27;123&#x27;</span>, age=<span class="number">99</span>)</span><br></pre></td></tr></table></figure><p>我们可以写个URL来测试下:</p><p><a href="https://imgtu.com/i/bvj8OK"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvj8OK.png"                      alt="bvj8OK.png"                ></a></p><p>然后通过视图函数来新增数据:</p><p><a href="https://imgtu.com/i/bvjD6P"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvjD6P.png"                      alt="bvjD6P.png"                ></a></p><p><a href="https://imgtu.com/i/bvj560"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvj560.png"                      alt="bvj560.png"                ></a></p><p><a href="https://imgtu.com/i/bvvQAg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvvQAg.png"                      alt="bvvQAg.png"                ></a></p><h5 id="删"><a href="#删" class="headerlink" title="删"></a>删</h5><p>删除要使用<code>filter</code>函数:</p><p><a href="https://imgtu.com/i/bvz0p9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvz0p9.png"                      alt="bvz0p9.png"                ></a></p><p><a href="https://imgtu.com/i/bvzZef"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvzZef.png"                      alt="bvzZef.png"                ></a></p><p>如果是使用<code>UserInfo.objects.all().delete()</code>就是把这张表所有的数据都删除</p><h5 id="查"><a href="#查" class="headerlink" title="查"></a>查</h5><p>刚刚我们使用了<code>UserInfo.objects.all().delete()</code>方法来删除数据，我们同样可以用这个方法来获取数据</p><p><code>UserInfo.objects.all()</code>拿到的是一个Queryset，拿到的是表中的所有数据，Queryset类似于Python中的列表，然后我们自然可以遍历它:</p><p><a href="https://imgtu.com/i/bxpoo8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bxpoo8.png"                      alt="bxpoo8.png"                ></a></p><p>刚刚同样使用了<code>objects.filter()</code>筛选然后删除，我们同样可以使用这个方法来获取数据，比如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">models.UserInfo.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=<span class="number">1</span>)  <span class="comment"># 拿到app01_userinfo表中的id为1的这一行数据，返回的也是Queryset</span></span><br></pre></td></tr></table></figure><p>这里要区别于<code>models.UserInfo.objects.filter(id=1).first()</code>，这个语句加上<code>.first</code>返回的就不是Queryset了，而是里面的对象，就相当于列表只有一个元素，然后把这个元素拿出来了</p><p>拿到对象我们就不用循环了，直接<code>.</code>就可以拿到里面的数据</p><h5 id="改"><a href="#改" class="headerlink" title="改"></a>改</h5><p>有了上面的基础，我们来看看如何更新数据:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">models.UserInfo.objects.<span class="built_in">all</span>().update(password=<span class="number">99</span>)  <span class="comment"># 把app01_userinfo表里面的password字段都修改为99</span></span><br></pre></td></tr></table></figure><p>如果你只想找到某一个或某一些，那就该加筛选条件了:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">models.UserInfo.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=<span class="number">2</span>).update(password=<span class="number">99</span>)</span><br></pre></td></tr></table></figure><p>不只是id，还可以筛选name啥的:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">models.UserInfo.objects.<span class="built_in">filter</span>(name=lihoujian).update(password=<span class="number">99</span>)</span><br></pre></td></tr></table></figure><h3 id="案例-用户管理"><a href="#案例-用户管理" class="headerlink" title="案例-用户管理"></a>案例-用户管理</h3><h4 id="展示用户列表"><a href="#展示用户列表" class="headerlink" title="展示用户列表"></a>展示用户列表</h4><p>我们要写上一个URL，然后写上一个函数，在函数内，获取所有用户信息，把用户信息嵌套进HTML进行渲染再展现出来</p><p>URL:</p><p><a href="https://imgtu.com/i/bxiv3F"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bxiv3F.png"                      alt="bxiv3F.png"                ></a></p><p>视图函数:</p><p><a href="https://imgtu.com/i/bxFvIP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bxFvIP.png"                      alt="bxFvIP.png"                ></a></p><p>info_list.html:</p><p><a href="https://imgtu.com/i/bxkPMQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bxkPMQ.png"                      alt="bxkPMQ.png"                ></a></p><p>效果:</p><p><a href="https://imgtu.com/i/bxAc7R"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bxAc7R.png"                      alt="bxAc7R.png"                ></a></p><p>这里插一句，如果要改变date字段的显示格式，我们可以是使用以下代码:</p><p>这个时间(time)可以是数据写入的时间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; item.time|date:<span class="string">&quot;Y-m-d H:i:s&quot;</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>更多的显示格式可以看武培齐的个人博客: <a class="link"   href="https://www.cnblogs.com/wupeiqi/articles/5237704.html" >https://www.cnblogs.com/wupeiqi/articles/5237704.html<i class="fas fa-external-link-alt"></i></a></p><h4 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h4><p>上面的内容的数据都是从我们手动添加导数据库的，这里我们加一个添加用户的功能:</p><ul><li>准备一个URL</li><li>视图函数<ul><li>GET: 看到页面，输入内容</li><li>POST: 提交-&gt;写入到数据库</li></ul></li></ul><p>URL:</p><p><a href="https://imgtu.com/i/bzlHPg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzlHPg.png"                      alt="bzlHPg.png"                ></a></p><p>GET-&gt;页面:</p><p><a href="https://imgtu.com/i/bz10zj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bz10zj.png"                      alt="bz10zj.png"                ></a></p><p><a href="https://imgtu.com/i/bz1cwV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bz1cwV.png"                      alt="bz1cwV.png"                ></a></p><p>这个时候我们注意了，如果post提交的地址和当前地址是一致的，这个action可以不写，所以上面的action是可以省略的</p><p>这个时候又要注意了，要加上<code>&#123;% csrf_token %&#125;</code>不然会提交不了</p><p>加上就能提交了，那么一点击数据就到了我们的后台，数据到了后台，我们应该就要读取它的用户名密码等数据了</p><p>POST-&gt;写入到数据库:</p><p><a href="https://imgtu.com/i/bz8iuR"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bz8iuR.png"                      alt="bz8iuR.png"                ></a></p><p>目前我们是只显示添加成功，我们还想直接跳转到INFO列表:</p><p>这里注意，如果是跳转到别人的网站那就得把域名啥的写清楚，但是我们自己的就不用写这么清楚了，因为它会自动帮你拼接当前的域名</p><p><a href="https://imgtu.com/i/bzGFzQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzGFzQ.png"                      alt="bzGFzQ.png"                ></a></p><p>要打开添加页面还要在地址栏输入地址才能打开添加的界面，这未免交互起来不太方便，一般来说在INFO列表有一个按钮，然后直接点击就能打开添加的界面，下面我们来实现下:</p><p><a href="https://imgtu.com/i/bzJYcQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzJYcQ.png"                      alt="bzJYcQ.png"                ></a></p><p><a href="https://imgtu.com/i/bzJaBn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzJaBn.png"                      alt="bzJaBn.png"                ></a></p><h4 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h4><ul><li>准备一个URL</li><li>视图函数</li></ul><p>那么如何来删除呢，我们肯定要传入一个参数，我们就以id来删除吧，下面给出一个示例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8000</span>/info/delete/?nid=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>上面这个请求是get请求，我们就可以在视图函数中用<code>request.GET.get(&#39;nid&#39;)</code>来获取<code>nid</code>这个值，然后我们可以通过以下代码进行删除数据:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">models.UserInfo.<span class="built_in">filter</span>(<span class="built_in">id</span>=nid).delete()</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bzNcjg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzNcjg.png"                      alt="bzNcjg.png"                ></a></p><p><a href="https://imgtu.com/i/bzN7gU"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzN7gU.png"                      alt="bzN7gU.png"                ></a></p><p>还是和前面一样，我们可以实现点击一个按钮来删除:</p><p>修改info_list.html</p><p><a href="https://imgtu.com/i/bzaff0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzaff0.png"                      alt="bzaff0.png"                ></a></p><p>实现试图函数:</p><p><a href="https://imgtu.com/i/bzax1K"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzax1K.png"                      alt="bzax1K.png"                ></a></p><h3 id="案例概要-员工管理系统"><a href="#案例概要-员工管理系统" class="headerlink" title="案例概要(员工管理系统)"></a>案例概要(员工管理系统)</h3><p>主题: 员工管理系统</p><h4 id="创建项目和app"><a href="#创建项目和app" class="headerlink" title="创建项目和app"></a>创建项目和app</h4><p>如何创建项目和app这里不赘述，上面都有相关知识点，项目名称为<code>Staff_Management_System</code>，app名称我取名为: <code>staff</code></p><p>这里再提一下，如果是pycharm创建的项目，我们需要把自动生成的templates文件夹删除，然后在settings中对应的TEMPLATES列表也清空</p><p>如果是pycharm创建的项目，我们在创建app的时候不止可以在Terminal中敲命令，其实还有更方便地点击tools，然后点击run manage.py task，这个其实就是不用在敲manage.py了，pycharm这个编辑器自动帮你执行了manage.py，然后你就只需要输入startapp xxx即可，这个工具还有提示</p><p>创建好app之后就是注册app，这个之前也提到过，这里不再赘述</p><h4 id="表结构的创建"><a href="#表结构的创建" class="headerlink" title="表结构的创建"></a>表结构的创建</h4><p>在开始项目之前，我们要先来设计下这个系统的表结构，之前我们创建表，设计表结构都是通过sql语句，在django中我们就可以使用orm(对象关系映射)了，我们要去上面创建的stuff这个app下面的models.py中编写表结构</p><p>我们创建了两张表:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Department</span>(<span class="params">models.Model</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;部门表&quot;&quot;&quot;</span></span><br><span class="line">title = models.CharField(verbose_name=<span class="string">&#x27;标题&#x27;</span>, max_length=<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span>(<span class="params">models.Model</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;员工表&quot;&quot;&quot;</span></span><br><span class="line">name = models.CharField(verbose_name=<span class="string">&#x27;姓名&#x27;</span>, max_length=<span class="number">16</span>)</span><br><span class="line">password = models.CharField(verbose_name=<span class="string">&#x27;密码&#x27;</span>, max_length=<span class="number">64</span>)</span><br><span class="line">age = models.IntegerField(verbose_name=<span class="string">&#x27;年龄&#x27;</span>)</span><br><span class="line">account = models.DecimalField(verbose_name=<span class="string">&#x27;账户余额&#x27;</span>, max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, default=<span class="number">0</span>)</span><br><span class="line">create_time = models.DateTimeField(verbose_name=<span class="string">&#x27;入职时间&#x27;</span>)</span><br></pre></td></tr></table></figure><p>我们来解读下上面创建表的语句:</p><ul><li>verbose_name = ‘标题’，就相当于对前面title的一个备注，一个解释</li><li>max_length = 32，规定了char类型的一个所能存储字节的个数，比如这里是最多存储32个字节</li><li>max_digits = 10，表示这个小数的最大长度是10位</li><li>decimal_places = 2，表示这个小数的小数位是2位</li><li>default = 0，表示如未填充数据，将默认为0</li></ul><p>目前我们就相当于创建了两个这种类型的表，用excel表示如下:</p><p><a href="https://imgtu.com/i/bzfg7q"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzfg7q.png"                      alt="bzfg7q.png"                ></a></p><p>到这里，我们有两个问题:</p><ul><li><p>那么如何把这两张彪串联起来呢，按理来说应该在第二张表在添加一个字段部门，那么是<strong>存储部门的名称比如销售还是存储部门名称对应的ID</strong>呢，其实这两者都有存储的，但是一般在开发中是存ID的，因为这样更符合数据库范式，常见开发都是这样的，如果存部门名称还需要更多空间，正常来说一个中国字所占字节在2~4个之间</p><p>但是一些大厂就不会按数据库范式来存，他会直接存名称，之所以会直接存名称，那很有可能这张表被查询的次数会非常非常多，一天可能好几千万次那种，如果存的是ID那就需要去联表，就是说如果想知道老奇幻(以上图为例)在哪个部门，还需要结合部门表才能得出结果，而联表操作就比较耗时，为了加速查找就会直接存名称</p><p>但是小公司一般没有这么大的数据访问量，所以一般还是存ID，所以确定了我们这里存部门ID</p></li><li><p><strong>部门ID需不需约束呢</strong>，就好比我们写下了这个语句:</p><ul><li><p>```python<br>class UserInfo(models.Model):</p><pre><code>&quot;&quot;&quot;员工表&quot;&quot;&quot;name = models.CharField(verbose_name=&#39;姓名&#39;, max_length=16)password = models.CharField(verbose_name=&#39;密码&#39;, max_length=64)age = models.IntegerField(verbose_name=&#39;年龄&#39;)account = models.DecimalField(verbose_name=&#39;账户余额&#39;, max_digits=10, decimal_places=2, default=0)create_time = models.DateTimeField(verbose_name=&#39;入职时间&#39;)depart_id = models.BigIntegerField(verbose_name = &#39;部门ID&#39;)</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">我们添加了最后这一句，这是没有加约束的，那也就意味着，这里depart_id也可以写10000，但是，在部门表中又没有对应的部门，那这样是不行的；那没有约束的话，这里的部门ID就可以写任何值，写进去完全是个垃圾值</span><br><span class="line"></span><br><span class="line">所以我们要给这个字段加上约束，这个depart_id只能是部门表中已存在的ID，如果写了部门表中不存在的ID，mysql会直接报错</span><br><span class="line"></span><br><span class="line">如果像上面这样写是不会加约束的，像下面这样写才是有约束的:</span><br><span class="line"></span><br><span class="line">比如说我们写上一个depart:</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">depart = models.ForeignKey(to=&quot;Department&quot;, to_field=&quot;id&quot;)</span><br></pre></td></tr></table></figure></li><li><p>to就表示要与哪张表关联</p></li><li><p>to_field就表示要与表中的哪个字段相关联</p></li><li><p>这里需要注意的一点是，虽然我们这里写的字段名是depart，但是django底层在生成表的的时候就会自动加一个<code>_id</code>，这也表示和部门表中id这个字段相关联叭</p></li></ul><p>除此之外，我们还需要考虑个问题，如果我们把一个部门删除了，那与之相关联的员工怎么办，他们原有的部门已经被删除了，下面有集中解决方法:</p><ul><li><p>删除用户，也就是级联删除，因为员工表与部门表是关联了的，所以当我们把某一个部门删除后，相对应的员工也会从员工表中删除，这个时候我们可以如下操作:</p><p><code>on_delete=models.CASCADE</code>就表示级联删除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">depart = models.ForeignKey(to=<span class="string">&quot;Department&quot;</span>, to_field=<span class="string">&quot;id&quot;</span>, on_delete=models.CASCADE)</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>那么还有一种就是置空，就是让它变成空值，前提是这一行要允许为空，这个时候我们可以这么如下操作:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">depart = models.Foreignkey(to=<span class="string">&quot;Department&quot;</span>, to_field=<span class="string">&quot;id&quot;</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>,on_delete=models.SET_NULL)</span><br></pre></td></tr></table></figure><p>然后我还想在员工表中新增一个性别字段，我们本可以直接写男，或者女，但是这样感觉又会占空间，所以我们可以用如下方式实现:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gender_choices = (</span><br><span class="line">    (<span class="number">1</span>, <span class="string">&#x27;男&#x27;</span>)，</span><br><span class="line">    (<span class="number">2</span>, <span class="string">&#x27;女&#x27;</span>)</span><br><span class="line">)</span><br><span class="line">gender = models.SmallIntegerField(verbose_name=<span class="string">&#x27;性别&#x27;</span>, choices=gender_choices)</span><br></pre></td></tr></table></figure><p>上面我们用来<code>SmallIntegerField</code>来存储小数字，这个类型所占的字节数非常少，这里我们想用数字1和2分别代指男和女，但是1代表什么2代表什么我不知道啊，所以我们创建一个元组，然后使用<code>choices=&#39;gender_choices&#39;</code>来实现一个映射；这个就和数据库的约束无关了，这就属于在django中所做的约束了，以后写性别的时候只能写1或者2,1代表的是男，2代表的是女</p><h4 id="生成数据库表"><a href="#生成数据库表" class="headerlink" title="生成数据库表"></a>生成数据库表</h4><p>上面我们已经写了个模型类，下面我们就该在实际数据库中生成数据库表了</p><p>首先我们知道ORM(对象关系映射)是只能生成表的，不能生成数据库，所以我们首先要手动去生成数据库</p><p>如何生成数据库已经是老生常谈了，前面提到过，这里就不赘述了</p><p>如下所示我生成了一个gx_day16的数据库</p><p><a href="https://imgtu.com/i/qSNQII"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qSNQII.png"                      alt="qSNQII.png"                ></a></p><p> 然后第二步就是在django中修改配置文件，连接mysql:</p><p>我们直接修改之前的即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,  <span class="comment"># 数据库引擎</span></span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;gx_day16&#x27;</span>, <span class="comment">#数据库名称</span></span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>:<span class="string">&#x27;root&#x27;</span>, <span class="comment"># 连接数据库的用户名称</span></span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>:<span class="string">&#x27;123456&#x27;</span>,  <span class="comment"># 用户密码</span></span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>:<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="comment"># 访问的数据库的主机的ip地址</span></span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>:<span class="string">&#x27;3306&#x27;</span>, <span class="comment"># 默认mysql访问端口</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那接下来就是我们需要使用命令在数据库中生成相应的表，还是那两个熟悉的命令</p><p>这样写上之后，表结构就在数据库中被创建了:</p><p><a href="https://imgtu.com/i/qSaorD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qSaorD.png"                      alt="qSaorD.png"                ></a></p><p>后续我们就能开始写页面了，对数据库中的表进行增删改查</p><h4 id="静态文件管理"><a href="#静态文件管理" class="headerlink" title="静态文件管理"></a>静态文件管理</h4><p>我们需要在stuff这个目录下创建一个static文件，用于放静态文件，由于之前我们已有这些静态文件里，所以呢，我们就直接拷贝之前的过来即可，后续使用到其他的静态文件可以再引入</p><p>然后我们再创建一个模板文件templates，也是直接在stuff这个app下创建</p><p><a href="https://imgtu.com/i/qSwpSx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qSwpSx.png"                      alt="qSwpSx.png"                ></a></p><h4 id="部门管理"><a href="#部门管理" class="headerlink" title="部门管理"></a>部门管理</h4><p>这里我们先用最原始的方法来做，其实Django中提供了Form和ModelForm组件，如果用这个实现起来会更方便，现在我们先用最原始的方式来做:</p><h5 id="部门列表展示"><a href="#部门列表展示" class="headerlink" title="部门列表展示"></a>部门列表展示</h5><p>我们自己给自己当UI，先来画一下大概想要实现的样子:</p><p><a href="https://imgtu.com/i/qSwq3t"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qSwq3t.png"                      alt="qSwq3t.png"                ></a><br>下面就先把简单的页面做出来</p><p>URL:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(<span class="string">&#x27;depart/list/&#x27;</span>, views.depart_list)</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/qS0Q81"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qS0Q81.png"                      alt="qS0Q81.png"                ></a></p><p>views.py:</p><p>到目前我们还未用到数据库</p><p><a href="https://imgtu.com/i/qpSDSg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qpSDSg.png"                      alt="qpSDSg.png"                ></a></p><p>depart_list.html:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/css/bootstrap.min.css&#x27;%&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--下面的样式用于去掉导航栏的圆角--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.navbar</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">border-radius</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-default&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Brand and toggle get grouped for better mobile display --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-header&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggle collapsed&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;collapse&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">data-target</span>=<span class="string">&quot;#bs-example-navbar-collapse-1&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 联通用户管理系统 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Collect the nav links, forms, and other content for toggling --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse navbar-collapse&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bs-example-navbar-collapse-1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          修改下面两个li标签，第一个改为部门管理，第二个改为用户管理--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/depart/list&quot;</span>&gt;</span>部门管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          下拉菜单删除--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--        &lt;li class=&quot;dropdown&quot;&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;Dropdown &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          &lt;ul class=&quot;dropdown-menu&quot;&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something else here&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;One more separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          &lt;/ul&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--        &lt;/li&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        输入框删除--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--      &lt;form class=&quot;navbar-form navbar-left&quot;&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;div class=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--          &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;/div&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--      &lt;/form&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav navbar-right&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          修改下面这个li标签，成为登录按钮， 这里先做部分修改--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          下面这个下拉框，我们可以用于登录后显示用户信息，这里先做个修改案例--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span>lihoujian<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>个人资料<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我的信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我的爱好<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>注销<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.navbar-collapse --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.container-fluid --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        新建部门按钮--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        margin-bottom: 10px让新建按钮和下面的表格有个间距--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-bottom: 10px&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-success&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                新加了一个新建部门的图标，这个也是直接从bootstrap的网页中扣取下来的--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-plus&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                新建部门</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--        表格用面板展现出来, 这里是直接扣的bootstrap示例的网页源代码--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel panel-default&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Default panel contents --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-heading&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--                新加了一个部门图标--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-th-list&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                部门列表</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- Table --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--            table-bordered给表格加上一个边框--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-bordered&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;row&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>销售部<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                        btn-xs使得图标显示得小一些--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-xs&quot;</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger btn-xs&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;% static &#x27;js/jQuery-3.6.1.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1.js/bootstrap.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面就是对部门列表的一些展示，如果觉得这个导航栏平铺着比较难看，我们可以在代码中把<code>&lt;div class=&quot;container-fluid&quot;&gt;</code>改为<code>&lt;div class=&quot;container</code>他就会设置一个宽度，并且让内容居中，代码中我也写了一些注释</p><p>暂时的效果如下:</p><p><a href="https://imgtu.com/i/qSzBrR"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qSzBrR.png"                      alt="qSzBrR.png"                ></a></p><h5 id="部门列表展示-续之使用上数据库"><a href="#部门列表展示-续之使用上数据库" class="headerlink" title="部门列表展示(续之使用上数据库)"></a>部门列表展示(续之使用上数据库)</h5><p>我们需要从数据库中把数据读出来，但是目前数据库中还没有数据，所以我现在手动地往里面加几个数据</p><p><a href="https://imgtu.com/i/qppODs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qppODs.png"                      alt="qppODs.png"                ></a></p><p>当我添加这两行数据后，我就要将它们在页面中给我展现出来</p><p>我们来修改views.py:</p><p><a href="https://imgtu.com/i/qpCiJf"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qpCiJf.png"                      alt="qpCiJf.png"                ></a></p><p>然后我们自然是要修改表格了，嵌入一个循环来读取数据:</p><p>这里附上代码片段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;table <span class="class"><span class="keyword">class</span>=&quot;<span class="title">table</span> <span class="title">table</span>-<span class="title">bordered</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">thead</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">th</span>&gt;<span class="title">ID</span>&lt;/<span class="title">th</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">th</span>&gt;名称&lt;/<span class="title">th</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">th</span>&gt;操作&lt;/<span class="title">th</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">thead</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">tbody</span>&gt;</span></span><br><span class="line"><span class="class">                &#123;% <span class="title">for</span> <span class="title">obj</span> <span class="title">in</span> <span class="title">queryset</span> %&#125;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">th</span> <span class="title">scope</span>=&quot;<span class="title">row</span>&quot;&gt;&#123;&#123; <span class="title">obj</span>.<span class="title">id</span> &#125;&#125;&lt;/<span class="title">th</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">td</span>&gt;&#123;&#123; <span class="title">obj</span>.<span class="title">title</span> &#125;&#125;&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">td</span>&gt;</span></span><br><span class="line"><span class="class">&lt;!--                        <span class="title">btn</span>-<span class="title">xs</span>使得图标显示得小一些--&gt;</span></span><br><span class="line"><span class="class">                        &lt;a href=&quot;&quot; <span class="keyword">class</span>=&quot;btn btn-primary btn-xs&quot;&gt;新增&lt;/a&gt;</span></span><br><span class="line"><span class="class">                        &lt;a href=&quot;&quot; <span class="keyword">class</span>=&quot;btn btn-danger btn-xs&quot;&gt;删除&lt;/a&gt;</span></span><br><span class="line"><span class="class">                    &lt;/td&gt;</span></span><br><span class="line"><span class="class">                &lt;/tr&gt;</span></span><br><span class="line"><span class="class">                &#123;% endfor %&#125;</span></span><br><span class="line"><span class="class">                &lt;/tbody&gt;</span></span><br><span class="line"><span class="class">            &lt;/table&gt;</span></span><br></pre></td></tr></table></figure><p>实现效果:</p><p><a href="https://imgtu.com/i/qpCtm9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qpCtm9.png"                      alt="qpCtm9.png"                ></a></p><h5 id="添加部门"><a href="#添加部门" class="headerlink" title="添加部门"></a>添加部门</h5><p>刚才我们已经完成了展示部门列表</p><p>下面我们来完成添加功能的部分内容，完成添加页面的前端部分</p><p>在部门列表展示中有一个新建部门的按钮，点击它，应该会跳转到一个页面 ，我们就是要完成这个页面的部分，和URL的部分</p><p>首先我们要修改<code>depart/list</code>中的新建部门按钮所跳转的链接:</p><p>下面给上代码片段:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;/depart/add/&quot;</span> <span class="class"><span class="keyword">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">success</span>&quot; <span class="title">target</span>=&quot;<span class="title">_blank</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;!--                新加了一个新建部门的图标，这个也是直接从<span class="title">bootstrap</span>的网页中扣取下来的--&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;glyphicon glyphicon-plus&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="class">                新建部门</span></span><br><span class="line"><span class="class">            &lt;/a&gt;</span></span><br></pre></td></tr></table></figure><p><code>target=&quot;_blank&quot;</code>就表示在新页面中打开，我们这里就不在新页面中打开了</p><p>那自然还要配置URL和视图:</p><p>然后就是<code>depart_add.html</code>了:</p><p>导航栏什么的肯定是原封不动从<code>depart_list.html</code>中拿过来了，然后我们也可以给他加上一个面板</p><p>下面直接上代码吧，代码中我也嵌入了注释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;添加部门&lt;/title&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/css/bootstrap.min.css&#x27;%&#125;&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--下面的样式用于去掉导航栏的圆角--&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    .navbar&#123;</span><br><span class="line">        border-radius: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;nav <span class="class"><span class="keyword">class</span>=&quot;<span class="title">navbar</span> <span class="title">navbar</span>-<span class="title">default</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">container</span>-<span class="title">fluid</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;!-- <span class="title">Brand</span> <span class="title">and</span> <span class="title">toggle</span> <span class="title">get</span> <span class="title">grouped</span> <span class="title">for</span> <span class="title">better</span> <span class="title">mobile</span> <span class="title">display</span> --&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;navbar-header&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;button <span class="built_in">type</span>=&quot;button&quot; <span class="keyword">class</span>=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot;</span></span><br><span class="line"><span class="class">                    data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="class">            &lt;/button&gt;</span></span><br><span class="line"><span class="class">            &lt;a <span class="keyword">class</span>=&quot;navbar-brand&quot; href=&quot;#&quot;&gt; 联通用户管理系统 &lt;/a&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">        &lt;!-- Collect the nav links, forms, <span class="keyword">and</span> other content <span class="keyword">for</span> toggling --&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;collapse navbar-collapse&quot; <span class="built_in">id</span>=&quot;bs-example-navbar-collapse-1&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;ul <span class="keyword">class</span>=&quot;nav navbar-nav&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          修改下面两个li标签，第一个改为部门管理，第二个改为用户管理--&gt;</span></span><br><span class="line"><span class="class">                &lt;li&gt;&lt;a href=&quot;/depart/<span class="built_in">list</span>&quot;&gt;部门管理&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;用户管理&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          下拉菜单删除--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--        &lt;li <span class="keyword">class</span>=&quot;dropdown&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          &lt;a href=&quot;#&quot; <span class="keyword">class</span>=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;Dropdown &lt;span <span class="keyword">class</span>=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          &lt;ul <span class="keyword">class</span>=&quot;dropdown-menu&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something <span class="keyword">else</span> here&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li role=&quot;separator&quot; <span class="keyword">class</span>=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li role=&quot;separator&quot; <span class="keyword">class</span>=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;One more separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          &lt;/ul&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--        &lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;/ul&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        输入框删除--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--      &lt;form <span class="keyword">class</span>=&quot;navbar-form navbar-left&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--          &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;text&quot; <span class="keyword">class</span>=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        &lt;button <span class="built_in">type</span>=&quot;submit&quot; <span class="keyword">class</span>=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--      &lt;/form&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;ul <span class="keyword">class</span>=&quot;nav navbar-nav navbar-right&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          修改下面这个li标签，成为登录按钮， 这里先做部分修改--&gt;</span></span><br><span class="line"><span class="class">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;登录&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          下面这个下拉框，我们可以用于登录后显示用户信息，这里先做个修改案例--&gt;</span></span><br><span class="line"><span class="class">                &lt;li <span class="keyword">class</span>=&quot;dropdown&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;a href=&quot;#&quot; <span class="keyword">class</span>=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot;</span></span><br><span class="line"><span class="class">                       aria-expanded=&quot;false&quot;&gt;lihoujian&lt;span <span class="keyword">class</span>=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="class">                    &lt;ul <span class="keyword">class</span>=&quot;dropdown-menu&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;个人资料&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;我的信息&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;我的爱好&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li role=&quot;separator&quot; <span class="keyword">class</span>=&quot;divider&quot;&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;注销&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                    &lt;/ul&gt;</span></span><br><span class="line"><span class="class">                &lt;/li&gt;</span></span><br><span class="line"><span class="class">            &lt;/ul&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;&lt;!-- /.navbar-collapse --&gt;</span></span><br><span class="line"><span class="class">    &lt;/div&gt;&lt;!-- /.container-fluid --&gt;</span></span><br><span class="line"><span class="class">&lt;/nav&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;div&gt;</span></span><br><span class="line"><span class="class">    &lt;div <span class="keyword">class</span>=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;!--        加入面板--&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;panel panel-default&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;div <span class="keyword">class</span>=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;h3 <span class="keyword">class</span>=&quot;panel-title&quot;&gt;新建部门&lt;/h3&gt;</span></span><br><span class="line"><span class="class">            &lt;/div&gt;</span></span><br><span class="line"><span class="class">            &lt;div <span class="keyword">class</span>=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                面板的内容我们写表单--&gt;</span></span><br><span class="line"><span class="class">                &lt;form method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="class">                    &#123;% csrf_token %&#125;</span></span><br><span class="line"><span class="class">                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;label&gt;标题&lt;/label&gt;</span></span><br><span class="line"><span class="class">                        &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;text&quot; <span class="keyword">class</span>=&quot;form-control&quot; placeholder=&quot;标题&quot; name=&quot;title&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;/div&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;label <span class="keyword">class</span>=&quot;col-sm-2 co ntrol-label&quot;&gt;保存&lt;/label&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;div <span class="keyword">class</span>=&quot;col-sm-10&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                            &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;password&quot; <span class="keyword">class</span>=&quot;form-control&quot; <span class="built_in">id</span>=&quot;inputPassword3&quot; placeholder=&quot;Password&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;div <span class="keyword">class</span>=&quot;col-sm-offset-2 col-sm-10&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                            &lt;div <span class="keyword">class</span>=&quot;checkbox&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                                &lt;label&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                                    &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;checkbox&quot;&gt; Remember me--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                                &lt;/label&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                            &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;button <span class="built_in">type</span>=&quot;submit&quot; <span class="keyword">class</span>=&quot;btn btn-primary&quot;&gt;提交&lt;/button&gt;</span></span><br><span class="line"><span class="class">                &lt;/form&gt;</span></span><br><span class="line"><span class="class">            &lt;/div&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    &lt;/div&gt;</span></span><br><span class="line"><span class="class">&lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;script src=&quot;&#123;% static &#x27;js/jQuery-3.6.1.<span class="built_in">min</span>.js&#x27; %&#125;&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="class">&lt;script src=&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1.js/bootstrap.<span class="built_in">min</span>.js&#x27; %&#125;&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="class">&lt;/body&gt;</span></span><br><span class="line"><span class="class">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>视图:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">depart_add</span>(<span class="params">request</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;添加部门&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">&#x27;depart_add.html&#x27;</span>)</span><br><span class="line"><span class="comment"># 获取用户post提交过来的数据,如果title为空呢，后面我们会有一个组件来判断，这里先默认用户输入的这个标题都是合法的</span></span><br><span class="line">depart_name = request.POST.get(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line"><span class="comment"># 保存到数据库</span></span><br><span class="line">models.Department.objects.create(title=depart_name)</span><br><span class="line"><span class="keyword">return</span> redirect(<span class="string">&#x27;/depart/list/&#x27;</span>)</span><br></pre></td></tr></table></figure><h5 id="删除部门"><a href="#删除部门" class="headerlink" title="删除部门"></a>删除部门</h5><p>URL:</p><p><a href="https://imgtu.com/i/qCnuzd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/17/qCnuzd.png"                      alt="qCnuzd.png"                ></a></p><p>views.py:</p><p><a href="https://imgtu.com/i/qCn3eP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/17/qCn3eP.png"                      alt="qCn3eP.png"                ></a></p><p>我们在<code>depart_list.html</code>中做修改:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                &#123;% for obj in queryset %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;row&quot;</span>&gt;</span>&#123;&#123; obj.id &#125;&#125;<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; obj.title &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                        btn-xs使得图标显示得小一些--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/depart/add/&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-xs&quot;</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/depart/delete/?nid=&#123;&#123; obj.id &#125;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger btn-xs&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br></pre></td></tr></table></figure><p>到这里我们删除部门的功能就实现了</p><h5 id="编辑部门"><a href="#编辑部门" class="headerlink" title="编辑部门"></a>编辑部门</h5><p>我们点击编辑就会跳转到一个界面</p><p><a href="https://imgtu.com/i/qCuh9g"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/17/qCuh9g.png"                      alt="qCuh9g.png"                ></a></p><p>首先我们需要大概测绘出长什么样子</p><p>它应该长得和我们新建部门差不多叭，然后会显示一个默认值，我们在默认值的基础上进行修改</p><p>首先还是老样子，我们先写URL:</p><p><a href="https://imgtu.com/i/qCKfVx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/17/qCKfVx.png"                      alt="qCKfVx.png"                ></a></p><p>然后我们用之前<code>depart_add.html</code>做一些修改然后保存为<code>depart_edit.html</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;添加部门&lt;/title&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/css/bootstrap.min.css&#x27;%&#125;&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--下面的样式用于去掉导航栏的圆角--&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    .navbar&#123;</span><br><span class="line">        border-radius: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;nav <span class="class"><span class="keyword">class</span>=&quot;<span class="title">navbar</span> <span class="title">navbar</span>-<span class="title">default</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">container</span>-<span class="title">fluid</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;!-- <span class="title">Brand</span> <span class="title">and</span> <span class="title">toggle</span> <span class="title">get</span> <span class="title">grouped</span> <span class="title">for</span> <span class="title">better</span> <span class="title">mobile</span> <span class="title">display</span> --&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;navbar-header&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;button <span class="built_in">type</span>=&quot;button&quot; <span class="keyword">class</span>=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot;</span></span><br><span class="line"><span class="class">                    data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="class">            &lt;/button&gt;</span></span><br><span class="line"><span class="class">            &lt;a <span class="keyword">class</span>=&quot;navbar-brand&quot; href=&quot;#&quot;&gt; 联通用户管理系统 &lt;/a&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">        &lt;!-- Collect the nav links, forms, <span class="keyword">and</span> other content <span class="keyword">for</span> toggling --&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;collapse navbar-collapse&quot; <span class="built_in">id</span>=&quot;bs-example-navbar-collapse-1&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;ul <span class="keyword">class</span>=&quot;nav navbar-nav&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          修改下面两个li标签，第一个改为部门管理，第二个改为用户管理--&gt;</span></span><br><span class="line"><span class="class">                &lt;li&gt;&lt;a href=&quot;/depart/<span class="built_in">list</span>&quot;&gt;部门管理&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;用户管理&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          下拉菜单删除--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--        &lt;li <span class="keyword">class</span>=&quot;dropdown&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          &lt;a href=&quot;#&quot; <span class="keyword">class</span>=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;Dropdown &lt;span <span class="keyword">class</span>=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          &lt;ul <span class="keyword">class</span>=&quot;dropdown-menu&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something <span class="keyword">else</span> here&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li role=&quot;separator&quot; <span class="keyword">class</span>=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li role=&quot;separator&quot; <span class="keyword">class</span>=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;One more separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          &lt;/ul&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--        &lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;/ul&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        输入框删除--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--      &lt;form <span class="keyword">class</span>=&quot;navbar-form navbar-left&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--          &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;text&quot; <span class="keyword">class</span>=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        &lt;button <span class="built_in">type</span>=&quot;submit&quot; <span class="keyword">class</span>=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--      &lt;/form&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;ul <span class="keyword">class</span>=&quot;nav navbar-nav navbar-right&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          修改下面这个li标签，成为登录按钮， 这里先做部分修改--&gt;</span></span><br><span class="line"><span class="class">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;登录&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          下面这个下拉框，我们可以用于登录后显示用户信息，这里先做个修改案例--&gt;</span></span><br><span class="line"><span class="class">                &lt;li <span class="keyword">class</span>=&quot;dropdown&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;a href=&quot;#&quot; <span class="keyword">class</span>=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot;</span></span><br><span class="line"><span class="class">                       aria-expanded=&quot;false&quot;&gt;lihoujian&lt;span <span class="keyword">class</span>=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="class">                    &lt;ul <span class="keyword">class</span>=&quot;dropdown-menu&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;个人资料&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;我的信息&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;我的爱好&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li role=&quot;separator&quot; <span class="keyword">class</span>=&quot;divider&quot;&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;注销&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                    &lt;/ul&gt;</span></span><br><span class="line"><span class="class">                &lt;/li&gt;</span></span><br><span class="line"><span class="class">            &lt;/ul&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;&lt;!-- /.navbar-collapse --&gt;</span></span><br><span class="line"><span class="class">    &lt;/div&gt;&lt;!-- /.container-fluid --&gt;</span></span><br><span class="line"><span class="class">&lt;/nav&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;div&gt;</span></span><br><span class="line"><span class="class">    &lt;div <span class="keyword">class</span>=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;!--        加入面板--&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;panel panel-default&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;div <span class="keyword">class</span>=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;h3 <span class="keyword">class</span>=&quot;panel-title&quot;&gt;编辑部门&lt;/h3&gt;</span></span><br><span class="line"><span class="class">            &lt;/div&gt;</span></span><br><span class="line"><span class="class">            &lt;div <span class="keyword">class</span>=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                面板的内容我们写表单--&gt;</span></span><br><span class="line"><span class="class">                &lt;form method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="class">                    &#123;% csrf_token %&#125;</span></span><br><span class="line"><span class="class">                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;label&gt;标题&lt;/label&gt;</span></span><br><span class="line"><span class="class">                        &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;text&quot; <span class="keyword">class</span>=&quot;form-control&quot; placeholder=&quot;标题&quot; name=&quot;title&quot; value=&quot;&#123;&#123; row_object.title &#125;&#125;&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;/div&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;label <span class="keyword">class</span>=&quot;col-sm-2 co ntrol-label&quot;&gt;保存&lt;/label&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;div <span class="keyword">class</span>=&quot;col-sm-10&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                            &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;password&quot; <span class="keyword">class</span>=&quot;form-control&quot; <span class="built_in">id</span>=&quot;inputPassword3&quot; placeholder=&quot;Password&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;div <span class="keyword">class</span>=&quot;col-sm-offset-2 col-sm-10&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                            &lt;div <span class="keyword">class</span>=&quot;checkbox&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                                &lt;label&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                                    &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;checkbox&quot;&gt; Remember me--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                                &lt;/label&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                            &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;button <span class="built_in">type</span>=&quot;submit&quot; <span class="keyword">class</span>=&quot;btn btn-primary&quot;&gt;提交&lt;/button&gt;</span></span><br><span class="line"><span class="class">                &lt;/form&gt;</span></span><br><span class="line"><span class="class">            &lt;/div&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    &lt;/div&gt;</span></span><br><span class="line"><span class="class">&lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;script src=&quot;&#123;% static &#x27;js/jQuery-3.6.1.<span class="built_in">min</span>.js&#x27; %&#125;&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="class">&lt;script src=&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1.js/bootstrap.<span class="built_in">min</span>.js&#x27; %&#125;&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="class">&lt;/body&gt;</span></span><br><span class="line"><span class="class">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>比如这个面板的标题应该叫编辑部门或者修改部门，然我们刚也提到了就是我们修改哪一个部门然后在修改界面也应该显示这个部门名称，那么我们就可以这么实现，当我们点击编辑的时候，就把这个数据的id也携带过去，然后我们在编辑页面就可以针对这个id在数据库里面进行寻找，找到这个id的数据自然也就能获取到名称了，刚刚我们删除部门的时候就使用过一种方法，就是直接在url中携带一个uid；但是这里基于django啊，我们还可以做上一个更加方便的传值的一个功能，我们可以直接修改URL，在URL中嵌入正则表达式，比如<code>path(&#39;depart/&lt;int:nid&gt;/edit/&#39;)</code>那么我们以后填写URL的时候就必须填入类似<code>http://127.0.0.1:8000/depart/1/edit/</code>这样的URL，如果这样传了，我们在视图函数中加个参数nid，这个参数就是你通过这个URL传递过来的这个真实的id，然后在视图函数中就可以拿到这个id来进行数据库查找的操作了:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">depart_edit</span>(<span class="params">request, nid</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;修改部门&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 根据nid,获取它的数据</span></span><br><span class="line">row_object = models.Department.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=nid).first()</span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">&#x27;depart_edit.html&#x27;</span>, &#123;<span class="string">&#x27;row_object&#x27;</span>: row_object&#125;)</span><br></pre></td></tr></table></figure><p>然后下一步就是点击提交了，这个时候就是post请求了，我们需要在views.py中拿到该数据的id，然后针对这个id对该数据进行修改，id就携带在url中，又由于我们没写action属性，所以post就会走默认的url，所以，url还是刚刚的url，然后，我们只需要对title做一个更新即可:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">depart_edit</span>(<span class="params">request, nid</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;修改部门&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line"><span class="comment"># 根据nid,获取它的数据</span></span><br><span class="line">row_object = models.Department.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=nid).first()</span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">&#x27;depart_edit.html&#x27;</span>, &#123;<span class="string">&#x27;row_object&#x27;</span>: row_object&#125;)</span><br><span class="line"><span class="comment"># 根据id找到数据库中的数据并进行更新</span></span><br><span class="line">title = request.POST.get(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">models.Department.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=nid).update(title=title)</span><br><span class="line"><span class="keyword">return</span> redirect(<span class="string">&#x27;/depart/list/&#x27;</span>)</span><br></pre></td></tr></table></figure><h5 id="模板的继承"><a href="#模板的继承" class="headerlink" title="模板的继承"></a>模板的继承</h5><p>我们之前写的部门列表，添加部门，编辑部门都用到了一些相同的页面，比如导航栏，这些都是重复的；其实这个三个页面很多部分都是重复的，这样导致我们使用起来就不太方便</p><p>在django中支持模板的继承，我们一些重复的代码可以写在模板中，我们把container中的东西挖空，然后在templates目录中新建一个layout.html，把layout.html作为一个模板:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>部门列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/css/bootstrap.min.css&#x27;%&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--下面的样式用于去掉导航栏的圆角--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.navbar</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">border-radius</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-default&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Brand and toggle get grouped for better mobile display --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-header&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggle collapsed&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;collapse&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">data-target</span>=<span class="string">&quot;#bs-example-navbar-collapse-1&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 联通用户管理系统 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Collect the nav links, forms, and other content for toggling --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse navbar-collapse&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bs-example-navbar-collapse-1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          修改下面两个li标签，第一个改为部门管理，第二个改为用户管理--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/depart/list&quot;</span>&gt;</span>部门管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          下拉菜单删除--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--        &lt;li class=&quot;dropdown&quot;&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;Dropdown &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          &lt;ul class=&quot;dropdown-menu&quot;&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something else here&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;One more separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          &lt;/ul&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--        &lt;/li&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        输入框删除--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--      &lt;form class=&quot;navbar-form navbar-left&quot;&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;div class=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--          &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;/div&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--      &lt;/form&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav navbar-right&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          修改下面这个li标签，成为登录按钮， 这里先做部分修改--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          下面这个下拉框，我们可以用于登录后显示用户信息，这里先做个修改案例--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span>lihoujian<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>个人资料<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我的信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我的爱好<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>注销<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.navbar-collapse --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.container-fluid --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% block content %&#125;&#123;% endblock %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;% static &#x27;js/jQuery-3.6.1.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1.js/bootstrap.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中，我们把原来的class=container的div替换成了<code>&#123;% block content %&#125;&#123;% endblock %&#125;`，这就表示继承这个模板的文件只需要写这部分内容即可这里写一个示例index.html，用于继承这个模板:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends layout.html %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">&lt;h1&gt;首页&lt;/h1&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>`&#123;% extends layout.html %&#125;`表示引入`layout.html`这个模板文件，然后里面`&#123;% block content %&#125;`和`&#123;% endblock %&#125;</code>中间就写我们的html内容，这里面的<code>&lt;h1&gt;首页&lt;/h1&gt;</code>就会把模板的<code>&#123;% block content %&#125;`和`&#123;% endblock %&#125;</code>替换掉</p><p>有了模板之后我们很多的代码都可以省略掉</p><p>我们想在这三个页面中新加一个菜单，那就可以在模板中直接修改，那么将会作用于这三个页面</p><h5 id="用户列表展示"><a href="#用户列表展示" class="headerlink" title="用户列表展示"></a>用户列表展示</h5><p>和部门列表展示是一样的，我们这里就不赘述了，不然这个笔记的篇幅就很大，和前面的实现是很类似的</p><p><a href="https://imgtu.com/i/qFLtMQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/18/qFLtMQ.png"                      alt="qFLtMQ.png"                ></a></p><h5 id="添加用户-原始方法"><a href="#添加用户-原始方法" class="headerlink" title="添加用户(原始方法)"></a>添加用户(原始方法)</h5><p>用之前的方法就是原始方法</p><p>新建方法有两种方法:</p><ul><li><p>原始方式实现: 这个比较麻烦，但是这是实现的本质</p></li><li><p>Django组件</p><ul><li>Form组件(小简便)</li><li>ModelForm组件(最简便)</li></ul><p>要想使用ModelForm，我们先要理解Form</p></li></ul><p>这个和前面添加部门是很类似的</p><p><a href="https://imgtu.com/i/qAF8aT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qAF8aT.png"                      alt="qAF8aT.png"                ></a></p><p>到这里我把我的项目进行一个上传，为一个初始版本</p><h5 id="Model和ModelForm"><a href="#Model和ModelForm" class="headerlink" title="Model和ModelForm"></a>Model和ModelForm</h5><p>上面我们用普通方法已经实现了添加用户的，但是这里有几点是不太方便的，首先一个比较核心的点，<strong>用户提交的数据我们没有经过任何有验证</strong>，起码输入不能为空，如果要校验的话，我们得拿到这几个字段一个一个校验，如果一个一个校验的话，那就需要写好多的逻辑代码，这种方法是不可取的；然后就是在<strong>页面上缺少一个错误提示</strong></p><p>然后就是一个这样的问题，我们<strong>如果有很多个很多个字段，那么在写添加页面的时候就得写同等数量的输入框</strong>，这个也是比较繁琐的</p><p>如果有一些下拉框，我们<strong>还得亲自去表里面关联数据</strong>，并且把它当做数据传到前端页面，前端页面还得在这循环，然后把每一个数据展现出来，所以你会发现在这里它关联的数据还需要咱们手动去获取并展示在页面中</p><p>如果我们非得用这个模式开发，就会漏洞百出，或者就是说自己做的事太多太多了</p><p>我们总结下上一种方法的不方便之处:</p><ul><li>用户提交数据没有校验</li><li>页面上没有错误提示</li><li>每一个字段都需要我们重新写一遍</li><li>关联的数据需要手动去获取并展示在页面</li></ul><p>真正用django开发我们不会这么干，我们会用组件，用组件来帮我们把以上这些事全做了</p><p>下面我们先来说说Form组件:</p><h6 id="初识Form组件"><a href="#初识Form组件" class="headerlink" title="初识Form组件"></a>初识Form组件</h6><p>可以理解为它可以自动做前三个事，最后一个事要完成它还得写点代码</p><p>我们首先来看一个例子:</p><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyForm</span>(<span class="params">Form</span>):</span></span><br><span class="line">user = forms.CharField(widget=form.Inputs)</span><br><span class="line">    pwd = form.CharField(widget=form.Inputs)</span><br><span class="line">    email = form.CharField(widget=form.Inputs)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_add</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        form = MyForm()</span><br><span class="line">        <span class="keyword">return</span> render(request, &#123;<span class="string">&#x27;form&#x27;</span>: form&#125;)</span><br></pre></td></tr></table></figure><p><code>widget=form.Inputs</code>会自动生成一个输入框</p><p>user.add.html:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">&#123;&#123; form.user &#125;&#125;</span><br><span class="line">    &#123;&#123; form.pwd &#125;&#125;</span><br><span class="line">    &#123;&#123; form.email &#125;&#125;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>像以上这么写就能自动生成html标签</p><p>上面其实还可以更简便，直接用循环:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">&#123;% <span class="keyword">for</span> field <span class="keyword">in</span> <span class="built_in">format</span> %&#125;</span><br><span class="line">    &#123;&#123; field &#125;&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>如果我们使用Form组件的话，那这些字段，比如上面MyForm这个类里面的字段都需要我们预定义，如果使用ModelForm组件的话就更简单了</p><h6 id="ModelForm-推荐"><a href="#ModelForm-推荐" class="headerlink" title="ModelForm(推荐)"></a>ModelForm(推荐)</h6><p>比如说这里有一个models.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Department</span>(<span class="params">models.Model</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;部门表&quot;&quot;&quot;</span></span><br><span class="line">title = models.CharField(verbose_name=<span class="string">&#x27;标题&#x27;</span>, max_length=<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span>(<span class="params">models.Model</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;员工表&quot;&quot;&quot;</span></span><br><span class="line">name = models.CharField(verbose_name=<span class="string">&#x27;姓名&#x27;</span>, max_length=<span class="number">16</span>)</span><br><span class="line">password = models.CharField(verbose_name=<span class="string">&#x27;密码&#x27;</span>, max_length=<span class="number">64</span>)</span><br><span class="line">age = models.IntegerField(verbose_name=<span class="string">&#x27;年龄&#x27;</span>)</span><br><span class="line">account = models.DecimalField(verbose_name=<span class="string">&#x27;账户余额&#x27;</span>, max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, default=<span class="number">0</span>)</span><br><span class="line">create_time = models.DateTimeField(verbose_name=<span class="string">&#x27;入职时间&#x27;</span>)</span><br><span class="line">depart = models.ForeignKey(to=<span class="string">&quot;Department&quot;</span>, to_field=<span class="string">&quot;id&quot;</span>, on_delete=models.CASCADE)</span><br><span class="line">gender_choices = (</span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;男&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;女&#x27;</span>),</span><br><span class="line">)</span><br><span class="line">gender = models.SmallIntegerField(verbose_name=<span class="string">&#x27;性别&#x27;</span>, choices=gender_choices)</span><br></pre></td></tr></table></figure><p>那么我们就可以对views.py做一个更好的优化:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyForm</span>(<span class="params">ModelForm</span>):</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        meta = UserInfo</span><br><span class="line">        field = [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;password&#x27;</span>, <span class="string">&#x27;age&#x27;</span>, <span class="string">&#x27;account&#x27;</span>, <span class="string">&#x27;create_time&#x27;</span>, <span class="string">&#x27;depart&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>]</span><br></pre></td></tr></table></figure><p>相比来说ModelForm会更方便得多</p><h5 id="基于ModelForm的用户添加"><a href="#基于ModelForm的用户添加" class="headerlink" title="基于ModelForm的用户添加"></a>基于ModelForm的用户添加</h5><p>点击<a class="link"   href="https://www.bilibili.com/video/BV1NL41157ph?p=30&spm_id_from=333.1007.top_right_bar_window_history.content.click" >跳转视频<i class="fas fa-external-link-alt"></i></a></p><p>这边我们在user_list.html中再加入一个按钮，用来实验基于ModelForm的用户添加:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.15z8pbmrago0.webp"                      alt="图片"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.4s8sbt4kbqio.webp"                      alt="图片"                ></p><p>然后我们来写上一个路由:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.k4ez0f6hnhc.webp"                      alt="图片"                ></p><p>然后我们来完成视图函数:</p><p>在写视图函数之前我们要先写一个类，导入需要显示的表格:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220321105308220.png"                      alt="image-20220321105308220"                ></p><p>然后我们再继续完成核心的视图函数:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.62vhzlvnnaps.webp"                      alt="图片"                ></p><p>就如上图所示的一样，我们首先需要构造一个form对象，然后把这个form对象传递到对应的html页面中</p><p>然后我们只需要几行代码就能生成如下所示的几个输入框:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220321105558697.png"                      alt="image-20220321105558697"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.jxbr4zl0j8w.webp"                      alt="图片"                ></p><p>由于我们在构建模型类的时候就指定了verbose_name，那么我们就可以将它显示在html页面中，可以像如下操作:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.3sb606c8fe2o.webp"                      alt="图片"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.3r57ylcudz7k.webp"                      alt="图片"                ></p><p>这里要注意哈，虽然这里的名称什么的是关联着models.py中的verbosename，但是这里要用<code>.label</code></p><p>如果我们在models.py这个模型类中新增了几个字段，比如在UserInfo中新加入<code>height</code>、<code>weight</code>等，我们又要去html页面中修改嘛，其实是不用的，我们可以做如下修改:</p><p>form是可以被for循环的</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.3ivd8b7antog.webp"                      alt="图片"                ></p><p>ModelForm还会自动生成下拉框，它会自动查数据库:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.74h6kxzc8qkg.webp"                      alt="图片"                ></p><p>如果写要加上depart就直接写depart即可，前面说过，由于depart关联了别的表的id这一列，所以它会在数据库中自动改名为depart_id，但是我们在使用modelforl时就直接写在models.py中所定义的名字即可，但是还有定义一个verbosename，不然在前端中就会直接显示depart这个单词</p><p>但是在我们修改好以上所提到的后，发现有一个这样的问题:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.3m7hrptwhugw.webp"                      alt="图片"                ></p><p>为什么这里显示<code>Department object()</code>呢，这是因为这里展现的是一个个对象，这里的下拉框实际上是遍历了一个queryset(通过models.Department.objects.all()拿到)，而我们知道这个queryset就类似与一个列表中放了好多个对象；django底层是比较粗暴地直接就显示了这个对象，就如下面的例子一样:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo</span>(<span class="params">objects</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">obj = Foo()</span><br><span class="line"><span class="built_in">print</span>(obj)</span><br></pre></td></tr></table></figure><p>这就会直接打印出这个对象:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.3z73kindc5z4.webp"                      alt="图片"                ></p><p>那如果我想让它在输出对象的时候输出一个其他的东西，可以像如下修改:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.5c06tcx2yiyo.webp"                      alt="图片"                ></p><p>在输出对象时，如果想要定制显示的内容，我们可以去类的内部定义一个<code>__str__</code>方法，那么这个对象输出的内容就变成我们定制的内容了</p><p>我们还可以这样定制:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">demo</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line">obj = demo(<span class="string">&quot;张珊&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(obj)</span><br></pre></td></tr></table></figure><p>所以在我们的项目中可以这么修改，我们返回对象的title属性即可:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.54r9ckzd00w0.webp"                      alt="图片"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.3ghsvsbd222o.webp"                      alt="图片"                ></p><p>经过上面的一些修改，大体框架已经实现了，接下来我们需要加入bootstrap，我们可以把前端代码修改如下:</p><p>user_model_form_add.html:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends <span class="string">&#x27;layout.html&#x27;</span> %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;!--        加入面板--&gt;</span></span><br><span class="line"><span class="class">    &lt;div <span class="keyword">class</span>=&quot;panel panel-default&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;h3 <span class="keyword">class</span>=&quot;panel-title&quot;&gt;新建用户&lt;/h3&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;!--                面板的内容我们写表单--&gt;</span></span><br><span class="line"><span class="class">            &lt;form method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="class">                &#123;% csrf_token %&#125;</span></span><br><span class="line"><span class="class">                &#123;% <span class="keyword">for</span> field <span class="keyword">in</span> form %&#125;</span></span><br><span class="line"><span class="class">                &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;label&gt;&#123;&#123; field.label &#125;&#125;&lt;/label&gt;</span></span><br><span class="line"><span class="class">                        &#123;&#123; field &#125;&#125;</span></span><br><span class="line"><span class="class">                &lt;/div&gt;</span></span><br><span class="line"><span class="class">                &#123;% endfor %&#125;</span></span><br><span class="line"><span class="class">                &lt;!--                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                        &lt;label <span class="keyword">class</span>=&quot;col-sm-2 co ntrol-label&quot;&gt;保存&lt;/label&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                        &lt;div <span class="keyword">class</span>=&quot;col-sm-10&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                            &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;password&quot; <span class="keyword">class</span>=&quot;form-control&quot; <span class="built_in">id</span>=&quot;inputPassword3&quot; placeholder=&quot;Password&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                    &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                        &lt;div <span class="keyword">class</span>=&quot;col-sm-offset-2 col-sm-10&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                            &lt;div <span class="keyword">class</span>=&quot;checkbox&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                                &lt;label&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                                    &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;checkbox&quot;&gt; Remember me--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                                &lt;/label&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                            &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                    &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;button <span class="built_in">type</span>=&quot;submit&quot; <span class="keyword">class</span>=&quot;btn btn-primary&quot;&gt;提交&lt;/button&gt;</span></span><br><span class="line"><span class="class">            &lt;/form&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;</span></span><br><span class="line"><span class="class">    &lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;/div&gt;</span></span><br><span class="line"><span class="class">&#123;% endblock %&#125;</span></span><br></pre></td></tr></table></figure><p>但这个时候我们发现这咋和之前的添加用户那个页面不一样，这是因为django自动生成的input标签啥样式也没带，所以就会显示 如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.oi5l6tv33kw.webp"                      alt="图片"                ></p><p>经过对比我们会发现，这个和之前添加用户的表单只差了个<code>class = form-control</code>的属性</p><p>这个时候我们应该怎么修改呢，我们可以在views.py中的UserModelForm类中加一个插件:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.792b1tmrh6gw.webp"                      alt="图片"                ></p><p>但是这看起来又有点傻瓜式操作了，要是很多个输入框那就得傻傻地写很多个了</p><p>我们可以重新定义<code>__init__</code>方法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.778xd7qrlchs.webp"                      alt="图片"                ></p><p>如上图所示我们重写了<code>__init__</code>方法，然后打印了<code>field.items()</code>，可以从控制台中看出，这就是我django定义表单的一些对象，我们在此就可以通过插件修改这个对象，让它在生成html代码的时候加上<code>class = form-control</code>:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.2ey6q8vyx4e8.webp"                      alt="图片"                ></p><p>如果你不想让某个input标签用上某个属性，可以选择跳过:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220321152241360.png"                      alt="image-20220321152241360"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.3c6pz27hm0u8.webp"                      alt="图片"                ></p><p>这个时候其实我们还可以加上一个<code>palceholder</code>属性，让输入框中有个提示的文字</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.5ek5khoveb28.webp"                      alt="图片"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.739rd7yfuyyo.webp"                      alt="图片"                ></p><h5 id="用户添加错误提示"><a href="#用户添加错误提示" class="headerlink" title="用户添加错误提示"></a>用户添加错误提示</h5><p>刚刚我们已经写好了基于ModelForm的用户提交，在没有action的情况下，会默认提交到当前地址，和之前一样，我们在此需要做一个判断，如果是get请求，就显示用户添加页面，如果是post请求那就要获取提交过来的数据:</p><p>我们首先修改views.py:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.40v2am17o9c0.webp"                      alt="图片"                ></p><p>然后我们再修改user_model_form_add.html:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.2if8i4cg8j9c.webp"                      alt="图片"                ></p><p>那django默认帮我们验证输入是否为空，那有时候我们可能输入了一些错误的信息，那该如何校验呢</p><p>比如说用户名的长度，比如是大于个多少，如果我们要设置用户名的长度必须是大于等于3呢，可以像如下修改:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.5jvo0oc8yrnk.webp"                      alt="图片"                ></p><p>然后当我们输入少于三个字符的用户名时，就会报错:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.5pjon8xmgdmo.webp"                      alt="图片"                ></p><p>我们的密码也可以用正则表达式做一个验证，可以像下面这样写:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.37h5zrf2s39c.webp"                      alt="图片"                ></p><p>这里面的验证规则非常非常多，这里就不一一列举了</p><p>到现在这个程度，我们发现这英文看着不太好，我们可以把它修改为中文的:</p><p>打开settings.py，然后找到<code>LANGUAGE_CODE = &#39;en-us&#39;</code>，可以把en-us改成zh-hans，这就会显示中文了</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.20ui8fvsx10g.webp"                      alt="图片"                ></p><p>入职时间其实还可以通过导入一个gs插件来让用户选，而不再用户自己输入</p><p>其实不知道大家发现没有，这里点击提交后，如果出现错误，后面返回回来，还是会显示之前输入的数据，这是比较好的，就是说在上一次的基础上还能继续写</p><p>这个笔记初级阶段就到这里结束了，下次将更新高级阶段，高级阶段包括Ajax提交，分页，以及相关数据的提交</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装Django&quot;&gt;&lt;a href=&quot;#安装Django&quot; class=&quot;headerlink&quot; title=&quot;安装Django&quot;&gt;&lt;/a&gt;安装Django&lt;/h3&gt;&lt;p&gt;使用一下命令:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于JS调试用xhr打断点没有停住的解决</title>
    <link href="http://example.com/2022/03/11/%E5%85%B3%E4%BA%8EJS%E8%B0%83%E8%AF%95%E7%94%A8xhr%E6%89%93%E6%96%AD%E7%82%B9%E6%B2%A1%E6%9C%89%E5%81%9C%E4%BD%8F%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    <id>http://example.com/2022/03/11/%E5%85%B3%E4%BA%8EJS%E8%B0%83%E8%AF%95%E7%94%A8xhr%E6%89%93%E6%96%AD%E7%82%B9%E6%B2%A1%E6%9C%89%E5%81%9C%E4%BD%8F%E7%9A%84%E8%A7%A3%E5%86%B3/</id>
    <published>2022-03-11T08:19:30.000Z</published>
    <updated>2022-03-11T08:30:34.848Z</updated>
    
    <content type="html"><![CDATA[<p>网站: <a class="link"   href="https://www.gm99.com/" >https://www.gm99.com/<i class="fas fa-external-link-alt"></i></a></p><p>加密参数如下:<br><a href="https://imgtu.com/i/bIhE8O"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/bIhE8O.png"                      alt="bIhE8O.png"                ></a></p><p>我们在xhr中有看到这个请求，然后我们就在source面板中添加一个xhr breakpoint，然后来看看效果:</p><p>那么添加什么参数呢，我们可以截取URL的一部分，比如这里我们就截取<code>/login/login3</code>，注意不要截取到了URL的参数部分</p><p>点击登入后并没有反应，说明这断点没有断到，那我们可以直接在network中找:</p><p><a href="https://imgtu.com/i/bI5L5t"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/bI5L5t.png"                      alt="bI5L5t.png"                ></a></p><p>点击上图中的函数地址，就能跳转到发包的位置，因为jQuery是一个js库，一个处理异步和发包的库</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;网站: &lt;a class=&quot;link&quot;   href=&quot;https://www.gm99.com/&quot; &gt;https://www.gm99.com/&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;加密参数如下:&lt;br&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JS逆向中烟新商盟</title>
    <link href="http://example.com/2022/03/11/JS%E9%80%86%E5%90%91%E4%B8%AD%E7%83%9F%E6%96%B0%E5%95%86%E7%9B%9F/"/>
    <id>http://example.com/2022/03/11/JS%E9%80%86%E5%90%91%E4%B8%AD%E7%83%9F%E6%96%B0%E5%95%86%E7%9B%9F/</id>
    <published>2022-03-10T16:00:00.000Z</published>
    <updated>2022-03-11T03:46:48.951Z</updated>
    
    <content type="html"><![CDATA[<p>网址: <a class="link"   href="https://www.xinshangmeng.com/xsm2/?Version=2022022600" >https://www.xinshangmeng.com/xsm2/?Version=2022022600<i class="fas fa-external-link-alt"></i></a></p><p>加密参数:</p><p><a href="https://imgtu.com/i/b5RNXn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5RNXn.png"                      alt="b5RNXn.png"                ></a></p><p>这里可以看到，貌似有两个加密参数，一个是密码加密，然后最后一个是时间戳</p><p>由于前面我们是点击登录按钮触发请求的，所以我们可以从<strong>DOM事件</strong>为入口找到相关登录的代码，看看是否能找到加密逻辑:</p><p><a href="https://imgtu.com/i/b5WCcj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5WCcj.png"                      alt="b5WCcj.png"                ></a></p><p>点击上图右侧的函数位置就能跳转到对应登录的代码，分析这段代码逻辑之后，我感觉在1126行对密码进行了加密，然后我们在该行打断点:</p><p><a href="https://imgtu.com/i/b5ffJO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5ffJO.png"                      alt="b5ffJO.png"                ></a></p><p>可以看到这里最里面是调用了两次F函数，我们鼠标放在上面然后跳转进这个函数:</p><p><a href="https://imgtu.com/i/b5fjfS"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5fjfS.png"                      alt="b5fjfS.png"                ></a></p><p><a href="https://imgtu.com/i/b5hPwq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5hPwq.png"                      alt="b5hPwq.png"                ></a></p><p>可以看到跳进了d(a)函数，我们在函数的结尾打个断点，看看函数里面的值是啥:</p><p>用鼠标选中return后面的所有东西，可以看到这就是我们要的加密后的密码:</p><p><a href="https://imgtu.com/i/b5h8fO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5h8fO.png"                      alt="b5h8fO.png"                ></a></p><p>参数a就是我们输入的密码</p><p>d(a)函数内部又嵌套调用了n、e、o、m四个函数，那么接下来就只需要把代码抠出来再模拟执行即可</p><p>这里就不赘述了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;网址: &lt;a class=&quot;link&quot;   href=&quot;https://www.xinshangmeng.com/xsm2/?Version=2022022600&quot; &gt;https://www.xinshangmeng.com/xsm2/?Version=2022022600</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JS逆向登录国道路货运车辆公共监管与服务平台</title>
    <link href="http://example.com/2022/03/09/JS%E9%80%86%E5%90%91%E7%99%BB%E5%BD%95%E5%9B%BD%E9%81%93%E8%B7%AF%E8%B4%A7%E8%BF%90%E8%BD%A6%E8%BE%86%E5%85%AC%E5%85%B1%E7%9B%91%E7%AE%A1%E4%B8%8E%E6%9C%8D%E5%8A%A1%E5%B9%B3%E5%8F%B0/"/>
    <id>http://example.com/2022/03/09/JS%E9%80%86%E5%90%91%E7%99%BB%E5%BD%95%E5%9B%BD%E9%81%93%E8%B7%AF%E8%B4%A7%E8%BF%90%E8%BD%A6%E8%BE%86%E5%85%AC%E5%85%B1%E7%9B%91%E7%AE%A1%E4%B8%8E%E6%9C%8D%E5%8A%A1%E5%B9%B3%E5%8F%B0/</id>
    <published>2022-03-09T06:28:30.000Z</published>
    <updated>2022-03-09T08:55:14.409Z</updated>
    
    <content type="html"><![CDATA[<p>网址: <a class="link"   href="https://www.gghypt.net/" >https://www.gghypt.net/<i class="fas fa-external-link-alt"></i></a></p><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>首先我们打开上面的网址，点击普通用户登录，再随便输入一个用户名和密码和验证码，然后按F12打开控制台，观察登录的加密参数:</p><p><a href="https://imgtu.com/i/bRymZ9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/bRymZ9.png"                      alt="bRymZ9.png"                ></a></p><p>从上图我们可以得知，这三个参数分别就对应着用户名、密码和验证码；其中密码是经过加密的，然后我们在控制台搜索<code>opPass</code>:</p><p><a href="https://imgtu.com/i/bRyhWV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/bRyhWV.png"                      alt="bRyhWV.png"                ></a></p><p>可以看到就一个结果，我们点进去:</p><p><a href="https://imgtu.com/i/bR6CeH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/bR6CeH.png"                      alt="bR6CeH.png"                ></a></p><p>可以看到这里就很清晰了，我们输入密码后会在js中对密码进行一个加密，然后通过Ajax在不刷新页面的情况下发送给服务器，服务器肯定也有一套同样的原始密码和加密后的密码的字符串，所以一对应就让我们登陆了，那么接下来我们就需要构造这个密码的加密逻辑或者是直接扣代码，然后结合用户名和一开始进入这个网址服务器所返回的验证码图片的识别结果进行登录</p><p>从上图中我们可以看出，这里的加密逻辑还是很清晰的，上图第一个框框就是一个总的加密函数，然后再进行小写字母化，点击去有如下加密函数:</p><p><a href="https://imgtu.com/i/bRg0Rx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/bRg0Rx.png"                      alt="bRg0Rx.png"                ></a></p><p>我们只需要一步步扣出代码，然后再汇总到一起就可以拿到加密后的密码，我扣的代码如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">str2rstr_utf8</span>(<span class="params">input</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> output = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> i = -<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">var</span> x, y;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span>(++i &lt; input.length)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* Decode utf-16 surrogate pairs */</span></span><br><span class="line">    x = input.charCodeAt(i);</span><br><span class="line">    y = i + <span class="number">1</span> &lt; input.length ? input.charCodeAt(i + <span class="number">1</span>) : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">0xD800</span> &lt;= x &amp;&amp; x &lt;= <span class="number">0xDBFF</span> &amp;&amp; <span class="number">0xDC00</span> &lt;= y &amp;&amp; y &lt;= <span class="number">0xDFFF</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      x = <span class="number">0x10000</span> + ((x &amp; <span class="number">0x03FF</span>) &lt;&lt; <span class="number">10</span>) + (y &amp; <span class="number">0x03FF</span>);</span><br><span class="line">      i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Encode output as utf-8 */</span></span><br><span class="line">    <span class="keyword">if</span>(x &lt;= <span class="number">0x7F</span>)</span><br><span class="line">      output += <span class="built_in">String</span>.fromCharCode(x);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x &lt;= <span class="number">0x7FF</span>)</span><br><span class="line">      output += <span class="built_in">String</span>.fromCharCode(<span class="number">0xC0</span> | ((x &gt;&gt;&gt; <span class="number">6</span> ) &amp; <span class="number">0x1F</span>),</span><br><span class="line">                                    <span class="number">0x80</span> | ( x         &amp; <span class="number">0x3F</span>));</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x &lt;= <span class="number">0xFFFF</span>)</span><br><span class="line">      output += <span class="built_in">String</span>.fromCharCode(<span class="number">0xE0</span> | ((x &gt;&gt;&gt; <span class="number">12</span>) &amp; <span class="number">0x0F</span>),</span><br><span class="line">                                    <span class="number">0x80</span> | ((x &gt;&gt;&gt; <span class="number">6</span> ) &amp; <span class="number">0x3F</span>),</span><br><span class="line">                                    <span class="number">0x80</span> | ( x         &amp; <span class="number">0x3F</span>));</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x &lt;= <span class="number">0x1FFFFF</span>)</span><br><span class="line">      output += <span class="built_in">String</span>.fromCharCode(<span class="number">0xF0</span> | ((x &gt;&gt;&gt; <span class="number">18</span>) &amp; <span class="number">0x07</span>),</span><br><span class="line">                                    <span class="number">0x80</span> | ((x &gt;&gt;&gt; <span class="number">12</span>) &amp; <span class="number">0x3F</span>),</span><br><span class="line">                                    <span class="number">0x80</span> | ((x &gt;&gt;&gt; <span class="number">6</span> ) &amp; <span class="number">0x3F</span>),</span><br><span class="line">                                    <span class="number">0x80</span> | ( x         &amp; <span class="number">0x3F</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rstr_sha1</span>(<span class="params">s</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> binb2rstr(binb_sha1(rstr2binb(s), s.length * <span class="number">8</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rstr2binb</span>(<span class="params">input</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> output = <span class="built_in">Array</span>(input.length &gt;&gt; <span class="number">2</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; output.length; i++)</span><br><span class="line">    output[i] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; input.length * <span class="number">8</span>; i += <span class="number">8</span>)</span><br><span class="line">    output[i&gt;&gt;<span class="number">5</span>] |= (input.charCodeAt(i / <span class="number">8</span>) &amp; <span class="number">0xFF</span>) &lt;&lt; (<span class="number">24</span> - i % <span class="number">32</span>);</span><br><span class="line">  <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">binb_sha1</span>(<span class="params">x, len</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* append padding */</span></span><br><span class="line">  x[len &gt;&gt; <span class="number">5</span>] |= <span class="number">0x80</span> &lt;&lt; (<span class="number">24</span> - len % <span class="number">32</span>);</span><br><span class="line">  x[((len + <span class="number">64</span> &gt;&gt; <span class="number">9</span>) &lt;&lt; <span class="number">4</span>) + <span class="number">15</span>] = len;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> w = <span class="built_in">Array</span>(<span class="number">80</span>);</span><br><span class="line">  <span class="keyword">var</span> a =  <span class="number">1732584193</span>;</span><br><span class="line">  <span class="keyword">var</span> b = -<span class="number">271733879</span>;</span><br><span class="line">  <span class="keyword">var</span> c = -<span class="number">1732584194</span>;</span><br><span class="line">  <span class="keyword">var</span> d =  <span class="number">271733878</span>;</span><br><span class="line">  <span class="keyword">var</span> e = -<span class="number">1009589776</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; x.length; i += <span class="number">16</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">var</span> olda = a;</span><br><span class="line">    <span class="keyword">var</span> oldb = b;</span><br><span class="line">    <span class="keyword">var</span> oldc = c;</span><br><span class="line">    <span class="keyword">var</span> oldd = d;</span><br><span class="line">    <span class="keyword">var</span> olde = e;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; <span class="number">80</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(j &lt; <span class="number">16</span>) w[j] = x[i + j];</span><br><span class="line">      <span class="keyword">else</span> w[j] = bit_rol(w[j-<span class="number">3</span>] ^ w[j-<span class="number">8</span>] ^ w[j-<span class="number">14</span>] ^ w[j-<span class="number">16</span>], <span class="number">1</span>);</span><br><span class="line">      <span class="keyword">var</span> t = safe_add(safe_add(bit_rol(a, <span class="number">5</span>), sha1_ft(j, b, c, d)),</span><br><span class="line">                       safe_add(safe_add(e, w[j]), sha1_kt(j)));</span><br><span class="line">      e = d;</span><br><span class="line">      d = c;</span><br><span class="line">      c = bit_rol(b, <span class="number">30</span>);</span><br><span class="line">      b = a;</span><br><span class="line">      a = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    a = safe_add(a, olda);</span><br><span class="line">    b = safe_add(b, oldb);</span><br><span class="line">    c = safe_add(c, oldc);</span><br><span class="line">    d = safe_add(d, oldd);</span><br><span class="line">    e = safe_add(e, olde);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Array</span>(a, b, c, d, e);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">binb2rstr</span>(<span class="params">input</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> output = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; input.length * <span class="number">32</span>; i += <span class="number">8</span>)</span><br><span class="line">    output += <span class="built_in">String</span>.fromCharCode((input[i&gt;&gt;<span class="number">5</span>] &gt;&gt;&gt; (<span class="number">24</span> - i % <span class="number">32</span>)) &amp; <span class="number">0xFF</span>);</span><br><span class="line">  <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sha1_ft</span>(<span class="params">t, b, c, d</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(t &lt; <span class="number">20</span>) <span class="keyword">return</span> (b &amp; c) | ((~b) &amp; d);</span><br><span class="line">  <span class="keyword">if</span>(t &lt; <span class="number">40</span>) <span class="keyword">return</span> b ^ c ^ d;</span><br><span class="line">  <span class="keyword">if</span>(t &lt; <span class="number">60</span>) <span class="keyword">return</span> (b &amp; c) | (b &amp; d) | (c &amp; d);</span><br><span class="line">  <span class="keyword">return</span> b ^ c ^ d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sha1_kt</span>(<span class="params">t</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (t &lt; <span class="number">20</span>) ?  <span class="number">1518500249</span> : (t &lt; <span class="number">40</span>) ?  <span class="number">1859775393</span> :</span><br><span class="line">         (t &lt; <span class="number">60</span>) ? -<span class="number">1894007588</span> : -<span class="number">899497514</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bit_rol</span>(<span class="params">num, cnt</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (num &lt;&lt; cnt) | (num &gt;&gt;&gt; (<span class="number">32</span> - cnt));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_add</span>(<span class="params">x, y</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> lsw = (x &amp; <span class="number">0xFFFF</span>) + (y &amp; <span class="number">0xFFFF</span>);</span><br><span class="line">  <span class="keyword">var</span> msw = (x &gt;&gt; <span class="number">16</span>) + (y &gt;&gt; <span class="number">16</span>) + (lsw &gt;&gt; <span class="number">16</span>);</span><br><span class="line">  <span class="keyword">return</span> (msw &lt;&lt; <span class="number">16</span>) | (lsw &amp; <span class="number">0xFFFF</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rstr2hex</span>(<span class="params">input</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123; hexcase; &#125; <span class="keyword">catch</span>(e) &#123; hexcase=<span class="number">0</span>; &#125;</span><br><span class="line">  <span class="keyword">var</span> hex_tab = hexcase ? <span class="string">&quot;0123456789ABCDEF&quot;</span> : <span class="string">&quot;0123456789abcdef&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> output = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> x;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; input.length; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    x = input.charCodeAt(i);</span><br><span class="line">    output += hex_tab.charAt((x &gt;&gt;&gt; <span class="number">4</span>) &amp; <span class="number">0x0F</span>)</span><br><span class="line">           +  hex_tab.charAt( x        &amp; <span class="number">0x0F</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_encrypted_pwd</span>(<span class="params">s</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> rstr2hex(rstr_sha1(str2rstr_utf8(s))).toLowerCase();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="模拟登录"><a href="#模拟登录" class="headerlink" title="模拟登录"></a>模拟登录</h4><p>然后我们就用Python模拟js的执行来完成模拟登录:</p><p>get_encrypted_password.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@Description : </span></span><br><span class="line"><span class="string">@File        : get_encrypted_password</span></span><br><span class="line"><span class="string">@Project     : test</span></span><br><span class="line"><span class="string">@Time        : 2022/3/9 15:00</span></span><br><span class="line"><span class="string">@Author      : LiHouJian</span></span><br><span class="line"><span class="string">@Software    : PyCharm</span></span><br><span class="line"><span class="string">@issue       : </span></span><br><span class="line"><span class="string">@change      : </span></span><br><span class="line"><span class="string">@reason      : </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> scrapy.utils <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> scrapy.utils.project <span class="keyword">import</span> get_project_settings</span><br><span class="line"><span class="keyword">from</span> pybase.util <span class="keyword">import</span> send_file</span><br><span class="line"><span class="keyword">import</span> execjs</span><br><span class="line"></span><br><span class="line">jscode = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">function str2rstr_utf8(input)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  var output = &quot;&quot;;</span></span><br><span class="line"><span class="string">  var i = -1;</span></span><br><span class="line"><span class="string">  var x, y;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  while(++i &lt; input.length)</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    /* Decode utf-16 surrogate pairs */</span></span><br><span class="line"><span class="string">    x = input.charCodeAt(i);</span></span><br><span class="line"><span class="string">    y = i + 1 &lt; input.length ? input.charCodeAt(i + 1) : 0;</span></span><br><span class="line"><span class="string">    if(0xD800 &lt;= x &amp;&amp; x &lt;= 0xDBFF &amp;&amp; 0xDC00 &lt;= y &amp;&amp; y &lt;= 0xDFFF)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      x = 0x10000 + ((x &amp; 0x03FF) &lt;&lt; 10) + (y &amp; 0x03FF);</span></span><br><span class="line"><span class="string">      i++;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    /* Encode output as utf-8 */</span></span><br><span class="line"><span class="string">    if(x &lt;= 0x7F)</span></span><br><span class="line"><span class="string">      output += String.fromCharCode(x);</span></span><br><span class="line"><span class="string">    else if(x &lt;= 0x7FF)</span></span><br><span class="line"><span class="string">      output += String.fromCharCode(0xC0 | ((x &gt;&gt;&gt; 6 ) &amp; 0x1F),</span></span><br><span class="line"><span class="string">                                    0x80 | ( x         &amp; 0x3F));</span></span><br><span class="line"><span class="string">    else if(x &lt;= 0xFFFF)</span></span><br><span class="line"><span class="string">      output += String.fromCharCode(0xE0 | ((x &gt;&gt;&gt; 12) &amp; 0x0F),</span></span><br><span class="line"><span class="string">                                    0x80 | ((x &gt;&gt;&gt; 6 ) &amp; 0x3F),</span></span><br><span class="line"><span class="string">                                    0x80 | ( x         &amp; 0x3F));</span></span><br><span class="line"><span class="string">    else if(x &lt;= 0x1FFFFF)</span></span><br><span class="line"><span class="string">      output += String.fromCharCode(0xF0 | ((x &gt;&gt;&gt; 18) &amp; 0x07),</span></span><br><span class="line"><span class="string">                                    0x80 | ((x &gt;&gt;&gt; 12) &amp; 0x3F),</span></span><br><span class="line"><span class="string">                                    0x80 | ((x &gt;&gt;&gt; 6 ) &amp; 0x3F),</span></span><br><span class="line"><span class="string">                                    0x80 | ( x         &amp; 0x3F));</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return output;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function rstr_sha1(s)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  return binb2rstr(binb_sha1(rstr2binb(s), s.length * 8));</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function rstr2binb(input)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  var output = Array(input.length &gt;&gt; 2);</span></span><br><span class="line"><span class="string">  for(var i = 0; i &lt; output.length; i++)</span></span><br><span class="line"><span class="string">    output[i] = 0;</span></span><br><span class="line"><span class="string">  for(var i = 0; i &lt; input.length * 8; i += 8)</span></span><br><span class="line"><span class="string">    output[i&gt;&gt;5] |= (input.charCodeAt(i / 8) &amp; 0xFF) &lt;&lt; (24 - i % 32);</span></span><br><span class="line"><span class="string">  return output;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function binb_sha1(x, len)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  /* append padding */</span></span><br><span class="line"><span class="string">  x[len &gt;&gt; 5] |= 0x80 &lt;&lt; (24 - len % 32);</span></span><br><span class="line"><span class="string">  x[((len + 64 &gt;&gt; 9) &lt;&lt; 4) + 15] = len;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  var w = Array(80);</span></span><br><span class="line"><span class="string">  var a =  1732584193;</span></span><br><span class="line"><span class="string">  var b = -271733879;</span></span><br><span class="line"><span class="string">  var c = -1732584194;</span></span><br><span class="line"><span class="string">  var d =  271733878;</span></span><br><span class="line"><span class="string">  var e = -1009589776;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  for(var i = 0; i &lt; x.length; i += 16)</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    var olda = a;</span></span><br><span class="line"><span class="string">    var oldb = b;</span></span><br><span class="line"><span class="string">    var oldc = c;</span></span><br><span class="line"><span class="string">    var oldd = d;</span></span><br><span class="line"><span class="string">    var olde = e;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    for(var j = 0; j &lt; 80; j++)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      if(j &lt; 16) w[j] = x[i + j];</span></span><br><span class="line"><span class="string">      else w[j] = bit_rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);</span></span><br><span class="line"><span class="string">      var t = safe_add(safe_add(bit_rol(a, 5), sha1_ft(j, b, c, d)),</span></span><br><span class="line"><span class="string">                       safe_add(safe_add(e, w[j]), sha1_kt(j)));</span></span><br><span class="line"><span class="string">      e = d;</span></span><br><span class="line"><span class="string">      d = c;</span></span><br><span class="line"><span class="string">      c = bit_rol(b, 30);</span></span><br><span class="line"><span class="string">      b = a;</span></span><br><span class="line"><span class="string">      a = t;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    a = safe_add(a, olda);</span></span><br><span class="line"><span class="string">    b = safe_add(b, oldb);</span></span><br><span class="line"><span class="string">    c = safe_add(c, oldc);</span></span><br><span class="line"><span class="string">    d = safe_add(d, oldd);</span></span><br><span class="line"><span class="string">    e = safe_add(e, olde);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return Array(a, b, c, d, e);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function binb2rstr(input)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  var output = &quot;&quot;;</span></span><br><span class="line"><span class="string">  for(var i = 0; i &lt; input.length * 32; i += 8)</span></span><br><span class="line"><span class="string">    output += String.fromCharCode((input[i&gt;&gt;5] &gt;&gt;&gt; (24 - i % 32)) &amp; 0xFF);</span></span><br><span class="line"><span class="string">  return output;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function sha1_ft(t, b, c, d)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  if(t &lt; 20) return (b &amp; c) | ((~b) &amp; d);</span></span><br><span class="line"><span class="string">  if(t &lt; 40) return b ^ c ^ d;</span></span><br><span class="line"><span class="string">  if(t &lt; 60) return (b &amp; c) | (b &amp; d) | (c &amp; d);</span></span><br><span class="line"><span class="string">  return b ^ c ^ d;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function sha1_kt(t)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  return (t &lt; 20) ?  1518500249 : (t &lt; 40) ?  1859775393 :</span></span><br><span class="line"><span class="string">         (t &lt; 60) ? -1894007588 : -899497514;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function bit_rol(num, cnt)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  return (num &lt;&lt; cnt) | (num &gt;&gt;&gt; (32 - cnt));</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function safe_add(x, y)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  var lsw = (x &amp; 0xFFFF) + (y &amp; 0xFFFF);</span></span><br><span class="line"><span class="string">  var msw = (x &gt;&gt; 16) + (y &gt;&gt; 16) + (lsw &gt;&gt; 16);</span></span><br><span class="line"><span class="string">  return (msw &lt;&lt; 16) | (lsw &amp; 0xFFFF);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function rstr2hex(input)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  try &#123; hexcase; &#125; catch(e) &#123; hexcase=0; &#125;</span></span><br><span class="line"><span class="string">  var hex_tab = hexcase ? &quot;0123456789ABCDEF&quot; : &quot;0123456789abcdef&quot;;</span></span><br><span class="line"><span class="string">  var output = &quot;&quot;;</span></span><br><span class="line"><span class="string">  var x;</span></span><br><span class="line"><span class="string">  for(var i = 0; i &lt; input.length; i++)</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    x = input.charCodeAt(i);</span></span><br><span class="line"><span class="string">    output += hex_tab.charAt((x &gt;&gt;&gt; 4) &amp; 0x0F)</span></span><br><span class="line"><span class="string">           +  hex_tab.charAt( x        &amp; 0x0F);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  return output;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function get_encrypted_pwd(s)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">return rstr2hex(rstr_sha1(str2rstr_utf8(s))).toLowerCase();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">password = <span class="string">&#x27;999999&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_encryption</span>():</span></span><br><span class="line">    encrypted_password = execjs.<span class="built_in">compile</span>(jscode).call(<span class="string">&quot;get_encrypted_pwd&quot;</span>, password)</span><br><span class="line">    <span class="keyword">return</span> encrypted_password</span><br><span class="line"><span class="built_in">print</span>(get_encryption())</span><br></pre></td></tr></table></figure><p>gghypt.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@Description : </span></span><br><span class="line"><span class="string">@File        : gghypt</span></span><br><span class="line"><span class="string">@Project     : test</span></span><br><span class="line"><span class="string">@Time        : 2022/3/9 14:57</span></span><br><span class="line"><span class="string">@Author      : LiHouJian</span></span><br><span class="line"><span class="string">@Software    : PyCharm</span></span><br><span class="line"><span class="string">@issue       : https://www.gghypt.net/</span></span><br><span class="line"><span class="string">@change      : </span></span><br><span class="line"><span class="string">@reason      : </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> scrapy.utils <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> scrapy.utils.project <span class="keyword">import</span> get_project_settings</span><br><span class="line"><span class="keyword">from</span> pybase.util <span class="keyword">import</span> send_file</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> get_encrypted_password</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://www.gghypt.net/sysbasic/loginPub.action?userName=18979685342d1646807655185&quot;</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">f&quot;requestParam.equal.opLoginname=18979685341&amp;requestParam.equal.opPass=<span class="subst">&#123;get_encrypted_password.get_encryption()&#125;</span>&quot;</span></span><br><span class="line">headers = &#123;</span><br><span class="line">  <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Pragma&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;sec-ch-ua&#x27;</span>: <span class="string">&#x27;&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;99&quot;&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/json, text/javascript, */*; q=0.01&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded; charset=UTF-8&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Safari/537.36&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="string">&#x27;&quot;Windows&quot;&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;https://www.gghypt.net&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://www.gghypt.net/&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&#x27;zg_did=%7B%22did%22%3A%20%2217f68abc597507-0b1b26eaafcf36-35385a00-240000-17f68abc5989dc%22%7D; JSESSIONID=5444A259A73840485B8D71CC3105402B; RandomCheckCode_PSS=ca7b5edf-a540-4ddd-beeb-1f0674a922bd; zg_8eef6a6900324a39bb3b203913a53cf5=%7B%22sid%22%3A%201646807645857%2C%22updated%22%3A%201646807655184%2C%22info%22%3A%201646728562076%2C%22superProperty%22%3A%20%22%7B%7D%22%2C%22platform%22%3A%20%22%7B%7D%22%2C%22utm%22%3A%20%22%7B%7D%22%2C%22referrerDomain%22%3A%20%22www.jianshu.com%22%2C%22zs%22%3A%200%2C%22sc%22%3A%200%2C%22firstScreen%22%3A%201646807645857%7D&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">response = requests.request(<span class="string">&quot;POST&quot;</span>, url, headers=headers, data=payload)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;网址: &lt;a class=&quot;link&quot;   href=&quot;https://www.gghypt.net/&quot; &gt;https://www.gghypt.net/&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;分析&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Tabby的基本使用</title>
    <link href="http://example.com/2022/03/09/Tabby%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2022/03/09/Tabby%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</id>
    <published>2022-03-09T01:33:30.000Z</published>
    <updated>2022-03-09T01:52:15.286Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><p>官网: <a class="link"   href="https://tabby.sh/" >https://tabby.sh/<i class="fas fa-external-link-alt"></i></a></p><p>github: <a class="link"   href="https://github.com/Eugeny/tabby" >https://github.com/Eugeny/tabby<i class="fas fa-external-link-alt"></i></a></p><h3 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h3><h4 id="添加SSH连接"><a href="#添加SSH连接" class="headerlink" title="添加SSH连接"></a>添加SSH连接</h4><p>打开终端，点击设置，然后在Profiles&amp;connections页面点击+New profile:</p><p><a href="https://imgtu.com/i/b2RUWq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2RUWq.png"                      alt="b2RUWq.png"                ></a></p><p>选择SSH连接:</p><p><a href="https://imgtu.com/i/b2RBOU"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2RBOU.png"                      alt="b2RBOU.png"                ></a></p><p>填写SSH连接信息，完成后点击Save进行保存:</p><p><a href="https://imgtu.com/i/b2RbtA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2RbtA.png"                      alt="b2RbtA.png"                ></a></p><p>可以看到SSH连接已经添加成功，点击按钮进行连接:</p><p><a href="https://imgtu.com/i/b2WEcV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2WEcV.png"                      alt="b2WEcV.png"                ></a></p><p>连接显示的效果如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://upload-images.jianshu.io/upload_images/3821938-9bfb53789dcaaef4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/815/format/webp"                      alt="img"                ></p><h4 id="SFTP传输文件"><a href="#SFTP传输文件" class="headerlink" title="SFTP传输文件"></a>SFTP传输文件</h4><p>对于经常使用终端的小伙伴而言，文件传输啃食是个刚需，Tabby集成了SFTP，所以传输大文件时，我们不用再安装其他软件了，点击终端上方的SFTP按钮，可以将文件直接拖拽到目录下，还是挺方便的:</p><p><a href="https://imgtu.com/i/b2WWNj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2WWNj.png"                      alt="b2WWNj.png"                ></a></p><h4 id="修改配色方案"><a href="#修改配色方案" class="headerlink" title="修改配色方案"></a>修改配色方案</h4><p>如果你不满意终端显示的配色，可以选择其它的配色方案，Tabby内部集成了非常多的配色方案，总有一款适合你，配色方案可以到Color scheme界面中挑选，这里我选择了Adventure Time:</p><p><a href="https://imgtu.com/i/b2fZ8I"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2fZ8I.png"                      alt="b2fZ8I.png"                ></a></p><p>使用该方案后的显示效果如下:</p><p><a href="https://imgtu.com/i/b2f35j"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2f35j.png"                      alt="b2f35j.png"                ></a></p><h4 id="安装主题插件"><a href="#安装主题插件" class="headerlink" title="安装主题插件"></a>安装主题插件</h4><p>我觉得Tabby自带的主题已经很美观了，如果你想更换其他主题，可以到Windows界面修改:</p><p><a href="https://imgtu.com/i/b2fUMV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2fUMV.png"                      alt="b2fUMV.png"                ></a></p><p>如果还是不喜欢自带的主题，可以试试安装主题插件，这里我安装了theme-gruvbox这个主题插件:</p><p><a href="https://imgtu.com/i/b2f2M6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2f2M6.png"                      alt="b2f2M6.png"                ></a></p><p>安装完后重启Tabby，再回到Window界面，可以应用刚添加的主题:</p><p><a href="https://imgtu.com/i/b2f7RI"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/09/b2f7RI.png"                      alt="b2f7RI.png"                ></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;下载安装&quot;&gt;&lt;a href=&quot;#下载安装&quot; class=&quot;headerlink&quot; title=&quot;下载安装&quot;&gt;&lt;/a&gt;下载安装&lt;/h3&gt;&lt;p&gt;官网: &lt;a class=&quot;link&quot;   href=&quot;https://tabby.sh/&quot; &gt;https://tabby.</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JS逆向登录房天下</title>
    <link href="http://example.com/2022/03/08/JS%E9%80%86%E5%90%91%E7%99%BB%E5%BD%95%E6%88%BF%E5%A4%A9%E4%B8%8B/"/>
    <id>http://example.com/2022/03/08/JS%E9%80%86%E5%90%91%E7%99%BB%E5%BD%95%E6%88%BF%E5%A4%A9%E4%B8%8B/</id>
    <published>2022-03-08T09:18:30.000Z</published>
    <updated>2022-03-08T10:49:03.668Z</updated>
    
    <content type="html"><![CDATA[<p>目标网站: <a class="link"   href="https://www1.fang.com/" >https://www1.fang.com/<i class="fas fa-external-link-alt"></i></a></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>我们打开目标网站，然后点击右上角的登录，选择账号密码登录并且取消自动登录，在登录之前我们先打开控制台，观察参数的加密:</p><p><a href="https://imgtu.com/i/bgU6r6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgU6r6.png"                      alt="bgU6r6.png"                ></a></p><p>这里我随便输入了一对账号密码，然后我们会看到如下加密参数:</p><p><a href="https://imgtu.com/i/bgUTMt"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgUTMt.png"                      alt="bgUTMt.png"                ></a></p><p>我们在控制台中搜索pwd，然后惊喜地发现有直接线索:</p><p><a href="https://imgtu.com/i/bgaCLV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgaCLV.png"                      alt="bgaCLV.png"                ></a></p><p>上图红框中有些字眼直接就和加密扯上了关系，我们点进去看看，然后在对应行打下断点，再点击登录，如下图所示:</p><p><a href="https://imgtu.com/i/bgazkD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgazkD.png"                      alt="bgazkD.png"                ></a></p><p>上图红框中的函数有两个参数，我们分别复制到console中看看是什么值，如下图所示:</p><p><a href="https://imgtu.com/i/bgdQcn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgdQcn.png"                      alt="bgdQcn.png"                ></a></p><p>可以看到，第一个参数是一个RSAKeyPair，类似于字典叭，然后第二个参数就是我们输入的密码，我们展开这个字典来看看是否还有其他线索:</p><p><a href="https://imgtu.com/i/bgwRaT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgwRaT.png"                      alt="bgwRaT.png"                ></a></p><p>从prototype一步步展开下来，我们可以看到这个参数实际上是来自RSA.min.js执行的结果，RSA.min.js显然是开发者引入的别的包，既然它可以引入，我们也就可以扣下来，然后我们再次全局搜索key_to_encode这个参数，看看会有什么发现，如下图所示:</p><p><a href="https://imgtu.com/i/bg0Tfg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bg0Tfg.png"                      alt="bg0Tfg.png"                ></a></p><p>我们发现，上面搜索定义的函数和刚刚点击RSA.min.js跳转的函数是同一个，然后我们就可以断定，这搜索到的函数就是得到第一个参数的函数，我们跳转到这个函数，然后复制这个函数，再复制全部的RSA.min.js，我们在鬼鬼调试助手中简单构造下，看是否能成功拿到加密参数pwd:</p><p>以下代码是我构造好的，直接粘贴到鬼鬼调试助手中验证即可:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setMaxDigits</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    maxDigits = n;</span><br><span class="line">    ZERO_ARRAY = <span class="keyword">new</span> <span class="built_in">Array</span>(maxDigits);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; ZERO_ARRAY.length; t++)</span><br><span class="line">        ZERO_ARRAY[t] = <span class="number">0</span>;</span><br><span class="line">    bigZero = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    bigOne = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    bigOne.digits[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BigInt</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.digits = <span class="keyword">typeof</span> n == <span class="string">&quot;boolean&quot;</span> &amp;&amp; n == !<span class="number">0</span> ? <span class="literal">null</span> : ZERO_ARRAY.slice(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">this</span>.isNeg = !<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biFromDecimal</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> u = n.charAt(<span class="number">0</span>) == <span class="string">&quot;-&quot;</span>, t = u ? <span class="number">1</span> : <span class="number">0</span>, i, f, r; t &lt; n.length &amp;&amp; n.charAt(t) == <span class="string">&quot;0&quot;</span>; )</span><br><span class="line">        ++t;</span><br><span class="line">    <span class="keyword">if</span> (t == n.length)</span><br><span class="line">        i = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (f = n.length - t,</span><br><span class="line">        r = f % dpl10,</span><br><span class="line">        r == <span class="number">0</span> &amp;&amp; (r = dpl10),</span><br><span class="line">        i = biFromNumber(<span class="built_in">Number</span>(n.substr(t, r))),</span><br><span class="line">        t += r; t &lt; n.length; )</span><br><span class="line">            i = biAdd(biMultiply(i, lr10), biFromNumber(<span class="built_in">Number</span>(n.substr(t, dpl10)))),</span><br><span class="line">            t += dpl10;</span><br><span class="line">        i.isNeg = u</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biCopy</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="keyword">new</span> <span class="built_in">BigInt</span>(!<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> t.digits = n.digits.slice(<span class="number">0</span>),</span><br><span class="line">    t.isNeg = n.isNeg,</span><br><span class="line">    t</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biFromNumber</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="keyword">new</span> <span class="built_in">BigInt</span>, i;</span><br><span class="line">    <span class="keyword">for</span> (t.isNeg = n &lt; <span class="number">0</span>,</span><br><span class="line">    n = <span class="built_in">Math</span>.abs(n),</span><br><span class="line">    i = <span class="number">0</span>; n &gt; <span class="number">0</span>; )</span><br><span class="line">        t.digits[i++] = n &amp; maxDigitVal,</span><br><span class="line">        n = <span class="built_in">Math</span>.floor(n / biRadix);</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reverseStr</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="string">&quot;&quot;</span>, t = n.length - <span class="number">1</span>; t &gt; -<span class="number">1</span>; --t)</span><br><span class="line">        i += n.charAt(t);</span><br><span class="line">    <span class="keyword">return</span> i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biToString</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r = <span class="keyword">new</span> <span class="built_in">BigInt</span>, i, u;</span><br><span class="line">    <span class="keyword">for</span> (r.digits[<span class="number">0</span>] = t,</span><br><span class="line">    i = biDivideModulo(n, r),</span><br><span class="line">    u = hexatrigesimalToChar[i[<span class="number">1</span>].digits[<span class="number">0</span>]]; biCompare(i[<span class="number">0</span>], bigZero) == <span class="number">1</span>; )</span><br><span class="line">        i = biDivideModulo(i[<span class="number">0</span>], r),</span><br><span class="line">        digit = i[<span class="number">1</span>].digits[<span class="number">0</span>],</span><br><span class="line">        u += hexatrigesimalToChar[i[<span class="number">1</span>].digits[<span class="number">0</span>]];</span><br><span class="line">    <span class="keyword">return</span> (n.isNeg ? <span class="string">&quot;-&quot;</span> : <span class="string">&quot;&quot;</span>) + reverseStr(u)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biToDecimal</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="keyword">new</span> <span class="built_in">BigInt</span>, t, r;</span><br><span class="line">    <span class="keyword">for</span> (i.digits[<span class="number">0</span>] = <span class="number">10</span>,</span><br><span class="line">    t = biDivideModulo(n, i),</span><br><span class="line">    r = <span class="built_in">String</span>(t[<span class="number">1</span>].digits[<span class="number">0</span>]); biCompare(t[<span class="number">0</span>], bigZero) == <span class="number">1</span>; )</span><br><span class="line">        t = biDivideModulo(t[<span class="number">0</span>], i),</span><br><span class="line">        r += <span class="built_in">String</span>(t[<span class="number">1</span>].digits[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">return</span> (n.isNeg ? <span class="string">&quot;-&quot;</span> : <span class="string">&quot;&quot;</span>) + reverseStr(r)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">digitToHex</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">        t += hexToChar[n &amp; <span class="number">15</span>],</span><br><span class="line">        n &gt;&gt;&gt;= <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">return</span> reverseStr(t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biToHex</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="string">&quot;&quot;</span>, r = biHighIndex(n), t = biHighIndex(n); t &gt; -<span class="number">1</span>; --t)</span><br><span class="line">        i += digitToHex(n.digits[t]);</span><br><span class="line">    <span class="keyword">return</span> i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">charToHex</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="number">48</span></span><br><span class="line">      , u = t + <span class="number">9</span></span><br><span class="line">      , i = <span class="number">97</span></span><br><span class="line">      , f = i + <span class="number">25</span></span><br><span class="line">      , r = <span class="number">65</span>;</span><br><span class="line">    <span class="keyword">return</span> n &gt;= t &amp;&amp; n &lt;= u ? n - t : n &gt;= r &amp;&amp; n &lt;= <span class="number">90</span> ? <span class="number">10</span> + n - r : n &gt;= i &amp;&amp; n &lt;= f ? <span class="number">10</span> + n - i : <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hexToDigit</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>, r = <span class="built_in">Math</span>.min(n.length, <span class="number">4</span>), i = <span class="number">0</span>; i &lt; r; ++i)</span><br><span class="line">        t &lt;&lt;= <span class="number">4</span>,</span><br><span class="line">        t |= charToHex(n.charCodeAt(i));</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biFromHex</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="keyword">new</span> <span class="built_in">BigInt</span>, u = n.length, t = u, r = <span class="number">0</span>; t &gt; <span class="number">0</span>; t -= <span class="number">4</span>,</span><br><span class="line">    ++r)</span><br><span class="line">        i.digits[r] = hexToDigit(n.substr(<span class="built_in">Math</span>.max(t - <span class="number">4</span>, <span class="number">0</span>), <span class="built_in">Math</span>.min(t, <span class="number">4</span>)));</span><br><span class="line">    <span class="keyword">return</span> i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biFromString</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> f = n.charAt(<span class="number">0</span>) == <span class="string">&quot;-&quot;</span>, e = f ? <span class="number">1</span> : <span class="number">0</span>, i = <span class="keyword">new</span> <span class="built_in">BigInt</span>, r = <span class="keyword">new</span> <span class="built_in">BigInt</span>, u;</span><br><span class="line">    <span class="keyword">for</span> (r.digits[<span class="number">0</span>] = <span class="number">1</span>,</span><br><span class="line">    u = n.length - <span class="number">1</span>; u &gt;= e; u--) &#123;</span><br><span class="line">        <span class="keyword">var</span> o = n.charCodeAt(u)</span><br><span class="line">          , s = charToHex(o)</span><br><span class="line">          , h = biMultiplyDigit(r, s);</span><br><span class="line">        i = biAdd(i, h);</span><br><span class="line">        r = biMultiplyDigit(r, t)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i.isNeg = f,</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biDump</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (n.isNeg ? <span class="string">&quot;-&quot;</span> : <span class="string">&quot;&quot;</span>) + n.digits.join(<span class="string">&quot; &quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biAdd</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r, u, f, i;</span><br><span class="line">    <span class="keyword">if</span> (n.isNeg != t.isNeg)</span><br><span class="line">        t.isNeg = !t.isNeg,</span><br><span class="line">        r = biSubtract(n, t),</span><br><span class="line">        t.isNeg = !t.isNeg;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (r = <span class="keyword">new</span> <span class="built_in">BigInt</span>,</span><br><span class="line">        u = <span class="number">0</span>,</span><br><span class="line">        i = <span class="number">0</span>; i &lt; n.digits.length; ++i)</span><br><span class="line">            f = n.digits[i] + t.digits[i] + u,</span><br><span class="line">            r.digits[i] = f % biRadix,</span><br><span class="line">            u = <span class="built_in">Number</span>(f &gt;= biRadix);</span><br><span class="line">        r.isNeg = n.isNeg</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biSubtract</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r, f, u, i;</span><br><span class="line">    <span class="keyword">if</span> (n.isNeg != t.isNeg)</span><br><span class="line">        t.isNeg = !t.isNeg,</span><br><span class="line">        r = biAdd(n, t),</span><br><span class="line">        t.isNeg = !t.isNeg;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (r = <span class="keyword">new</span> <span class="built_in">BigInt</span>,</span><br><span class="line">        u = <span class="number">0</span>,</span><br><span class="line">        i = <span class="number">0</span>; i &lt; n.digits.length; ++i)</span><br><span class="line">            f = n.digits[i] - t.digits[i] + u,</span><br><span class="line">            r.digits[i] = f % biRadix,</span><br><span class="line">            r.digits[i] &lt; <span class="number">0</span> &amp;&amp; (r.digits[i] += biRadix),</span><br><span class="line">            u = <span class="number">0</span> - <span class="built_in">Number</span>(f &lt; <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (u == -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (u = <span class="number">0</span>,</span><br><span class="line">            i = <span class="number">0</span>; i &lt; n.digits.length; ++i)</span><br><span class="line">                f = <span class="number">0</span> - r.digits[i] + u,</span><br><span class="line">                r.digits[i] = f % biRadix,</span><br><span class="line">                r.digits[i] &lt; <span class="number">0</span> &amp;&amp; (r.digits[i] += biRadix),</span><br><span class="line">                u = <span class="number">0</span> - <span class="built_in">Number</span>(f &lt; <span class="number">0</span>);</span><br><span class="line">            r.isNeg = !n.isNeg</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            r.isNeg = n.isNeg</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biHighIndex</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> t = n.digits.length - <span class="number">1</span>; t &gt; <span class="number">0</span> &amp;&amp; n.digits[t] == <span class="number">0</span>; )</span><br><span class="line">        --t;</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biNumBits</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = biHighIndex(n), r = n.digits[i], u = (i + <span class="number">1</span>) * bitsPerDigit, t = u; t &gt; u - bitsPerDigit; --t) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((r &amp; <span class="number">32768</span>) != <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        r &lt;&lt;= <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biMultiply</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="keyword">new</span> <span class="built_in">BigInt</span>, u, o = biHighIndex(n), s = biHighIndex(t), e, f, r = <span class="number">0</span>; r &lt;= s; ++r) &#123;</span><br><span class="line">        <span class="keyword">for</span> (u = <span class="number">0</span>,</span><br><span class="line">        f = r,</span><br><span class="line">        j = <span class="number">0</span>; j &lt;= o; ++j,</span><br><span class="line">        ++f)</span><br><span class="line">            e = i.digits[f] + n.digits[j] * t.digits[r] + u,</span><br><span class="line">            i.digits[f] = e &amp; maxDigitVal,</span><br><span class="line">            u = e &gt;&gt;&gt; biRadixBits;</span><br><span class="line">        i.digits[r + o + <span class="number">1</span>] = u</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i.isNeg = n.isNeg != t.isNeg,</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biMultiplyDigit</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> u, r, f, i;</span><br><span class="line">    <span class="keyword">for</span> (result = <span class="keyword">new</span> <span class="built_in">BigInt</span>,</span><br><span class="line">    u = biHighIndex(n),</span><br><span class="line">    r = <span class="number">0</span>,</span><br><span class="line">    i = <span class="number">0</span>; i &lt;= u; ++i)</span><br><span class="line">        f = result.digits[i] + n.digits[i] * t + r,</span><br><span class="line">        result.digits[i] = f &amp; maxDigitVal,</span><br><span class="line">        r = f &gt;&gt;&gt; biRadixBits;</span><br><span class="line">    <span class="keyword">return</span> result.digits[<span class="number">1</span> + u] = r,</span><br><span class="line">    result</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arrayCopy</span>(<span class="params">n, t, i, r, u</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> o = <span class="built_in">Math</span>.min(t + u, n.length), f = t, e = r; f &lt; o; ++f,</span><br><span class="line">    ++e)</span><br><span class="line">        i[e] = n[f]</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biShiftLeft</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e = <span class="built_in">Math</span>.floor(t / bitsPerDigit), i = <span class="keyword">new</span> <span class="built_in">BigInt</span>, u, o, r, f;</span><br><span class="line">    <span class="keyword">for</span> (arrayCopy(n.digits, <span class="number">0</span>, i.digits, e, i.digits.length - e),</span><br><span class="line">    u = t % bitsPerDigit,</span><br><span class="line">    o = bitsPerDigit - u,</span><br><span class="line">    r = i.digits.length - <span class="number">1</span>,</span><br><span class="line">    f = r - <span class="number">1</span>; r &gt; <span class="number">0</span>; --r,</span><br><span class="line">    --f)</span><br><span class="line">        i.digits[r] = i.digits[r] &lt;&lt; u &amp; maxDigitVal | (i.digits[f] &amp; highBitMasks[u]) &gt;&gt;&gt; o;</span><br><span class="line">    <span class="keyword">return</span> i.digits[<span class="number">0</span>] = i.digits[r] &lt;&lt; u &amp; maxDigitVal,</span><br><span class="line">    i.isNeg = n.isNeg,</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biShiftRight</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e = <span class="built_in">Math</span>.floor(t / bitsPerDigit), i = <span class="keyword">new</span> <span class="built_in">BigInt</span>, u, o, r, f;</span><br><span class="line">    <span class="keyword">for</span> (arrayCopy(n.digits, e, i.digits, <span class="number">0</span>, n.digits.length - e),</span><br><span class="line">    u = t % bitsPerDigit,</span><br><span class="line">    o = bitsPerDigit - u,</span><br><span class="line">    r = <span class="number">0</span>,</span><br><span class="line">    f = r + <span class="number">1</span>; r &lt; i.digits.length - <span class="number">1</span>; ++r,</span><br><span class="line">    ++f)</span><br><span class="line">        i.digits[r] = i.digits[r] &gt;&gt;&gt; u | (i.digits[f] &amp; lowBitMasks[u]) &lt;&lt; o;</span><br><span class="line">    <span class="keyword">return</span> i.digits[i.digits.length - <span class="number">1</span>] &gt;&gt;&gt;= u,</span><br><span class="line">    i.isNeg = n.isNeg,</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biMultiplyByRadixPower</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    <span class="keyword">return</span> arrayCopy(n.digits, <span class="number">0</span>, i.digits, t, i.digits.length - t),</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biDivideByRadixPower</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    <span class="keyword">return</span> arrayCopy(n.digits, t, i.digits, <span class="number">0</span>, i.digits.length - t),</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biModuloByRadixPower</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    <span class="keyword">return</span> arrayCopy(n.digits, <span class="number">0</span>, i.digits, <span class="number">0</span>, t),</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biCompare</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n.isNeg != t.isNeg)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> - <span class="number">2</span> * <span class="built_in">Number</span>(n.isNeg);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = n.digits.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">        <span class="keyword">if</span> (n.digits[i] != t.digits[i])</span><br><span class="line">            <span class="keyword">return</span> n.isNeg ? <span class="number">1</span> - <span class="number">2</span> * <span class="built_in">Number</span>(n.digits[i] &gt; t.digits[i]) : <span class="number">1</span> - <span class="number">2</span> * <span class="built_in">Number</span>(n.digits[i] &lt; t.digits[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biDivideModulo</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = biNumBits(n), s = biNumBits(t), v = t.isNeg, r, i, u, e, h, o, f, y, p;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; s)</span><br><span class="line">        <span class="keyword">return</span> n.isNeg ? (r = biCopy(bigOne),</span><br><span class="line">        r.isNeg = !t.isNeg,</span><br><span class="line">        n.isNeg = !<span class="number">1</span>,</span><br><span class="line">        t.isNeg = !<span class="number">1</span>,</span><br><span class="line">        i = biSubtract(t, n),</span><br><span class="line">        n.isNeg = !<span class="number">0</span>,</span><br><span class="line">        t.isNeg = v) : (r = <span class="keyword">new</span> <span class="built_in">BigInt</span>,</span><br><span class="line">        i = biCopy(n)),</span><br><span class="line">        [r, i];</span><br><span class="line">    <span class="keyword">for</span> (r = <span class="keyword">new</span> <span class="built_in">BigInt</span>,</span><br><span class="line">    i = n,</span><br><span class="line">    u = <span class="built_in">Math</span>.ceil(s / bitsPerDigit) - <span class="number">1</span>,</span><br><span class="line">    e = <span class="number">0</span>; t.digits[u] &lt; biHalfRadix; )</span><br><span class="line">        t = biShiftLeft(t, <span class="number">1</span>),</span><br><span class="line">        ++e,</span><br><span class="line">        ++s,</span><br><span class="line">        u = <span class="built_in">Math</span>.ceil(s / bitsPerDigit) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = biShiftLeft(i, e),</span><br><span class="line">    a += e,</span><br><span class="line">    h = <span class="built_in">Math</span>.ceil(a / bitsPerDigit) - <span class="number">1</span>,</span><br><span class="line">    o = biMultiplyByRadixPower(t, h - u); biCompare(i, o) != -<span class="number">1</span>; )</span><br><span class="line">        ++r.digits[h - u],</span><br><span class="line">        i = biSubtract(i, o);</span><br><span class="line">    <span class="keyword">for</span> (f = h; f &gt; u; --f) &#123;</span><br><span class="line">        <span class="keyword">var</span> c = f &gt;= i.digits.length ? <span class="number">0</span> : i.digits[f]</span><br><span class="line">          , w = f - <span class="number">1</span> &gt;= i.digits.length ? <span class="number">0</span> : i.digits[f - <span class="number">1</span>]</span><br><span class="line">          , b = f - <span class="number">2</span> &gt;= i.digits.length ? <span class="number">0</span> : i.digits[f - <span class="number">2</span>]</span><br><span class="line">          , l = u &gt;= t.digits.length ? <span class="number">0</span> : t.digits[u]</span><br><span class="line">          , k = u - <span class="number">1</span> &gt;= t.digits.length ? <span class="number">0</span> : t.digits[u - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (r.digits[f - u - <span class="number">1</span>] = c == l ? maxDigitVal : <span class="built_in">Math</span>.floor((c * biRadix + w) / l),</span><br><span class="line">        y = r.digits[f - u - <span class="number">1</span>] * (l * biRadix + k),</span><br><span class="line">        p = c * biRadixSquared + (w * biRadix + b); y &gt; p; )</span><br><span class="line">            --r.digits[f - u - <span class="number">1</span>],</span><br><span class="line">            y = r.digits[f - u - <span class="number">1</span>] * (l * biRadix | k),</span><br><span class="line">            p = c * biRadix * biRadix + (w * biRadix + b);</span><br><span class="line">        o = biMultiplyByRadixPower(t, f - u - <span class="number">1</span>);</span><br><span class="line">        i = biSubtract(i, biMultiplyDigit(o, r.digits[f - u - <span class="number">1</span>]));</span><br><span class="line">        i.isNeg &amp;&amp; (i = biAdd(i, o),</span><br><span class="line">        --r.digits[f - u - <span class="number">1</span>])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i = biShiftRight(i, e),</span><br><span class="line">    r.isNeg = n.isNeg != v,</span><br><span class="line">    n.isNeg &amp;&amp; (r = v ? biAdd(r, bigOne) : biSubtract(r, bigOne),</span><br><span class="line">    t = biShiftRight(t, e),</span><br><span class="line">    i = biSubtract(t, i)),</span><br><span class="line">    i.digits[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; biHighIndex(i) == <span class="number">0</span> &amp;&amp; (i.isNeg = !<span class="number">1</span>),</span><br><span class="line">    [r, i]</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biDivide</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> biDivideModulo(n, t)[<span class="number">0</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biModulo</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> biDivideModulo(n, t)[<span class="number">1</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biMultiplyMod</span>(<span class="params">n, t, i</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> biModulo(biMultiply(n, t), i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biPow</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> r = bigOne, i = n; ; ) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((t &amp; <span class="number">1</span>) != <span class="number">0</span> &amp;&amp; (r = biMultiply(r, i)),</span><br><span class="line">        t &gt;&gt;= <span class="number">1</span>,</span><br><span class="line">        t == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        i = biMultiply(i, i)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">biPowMod</span>(<span class="params">n, t, i</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> f = bigOne, u = n, r = t; ; ) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((r.digits[<span class="number">0</span>] &amp; <span class="number">1</span>) != <span class="number">0</span> &amp;&amp; (f = biMultiplyMod(f, u, i)),</span><br><span class="line">        r = biShiftRight(r, <span class="number">1</span>),</span><br><span class="line">        r.digits[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; biHighIndex(r) == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        u = biMultiplyMod(u, u, i)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BarrettMu</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.modulus = biCopy(n);</span><br><span class="line">    <span class="built_in">this</span>.k = biHighIndex(<span class="built_in">this</span>.modulus) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    t.digits[<span class="number">2</span> * <span class="built_in">this</span>.k] = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">this</span>.mu = biDivide(t, <span class="built_in">this</span>.modulus);</span><br><span class="line">    <span class="built_in">this</span>.bkplus1 = <span class="keyword">new</span> <span class="built_in">BigInt</span>;</span><br><span class="line">    <span class="built_in">this</span>.bkplus1.digits[<span class="built_in">this</span>.k + <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">this</span>.modulo = BarrettMu_modulo;</span><br><span class="line">    <span class="built_in">this</span>.multiplyMod = BarrettMu_multiplyMod;</span><br><span class="line">    <span class="built_in">this</span>.powMod = BarrettMu_powMod</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BarrettMu_modulo</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> r = biDivideByRadixPower(n, <span class="built_in">this</span>.k - <span class="number">1</span>), u = biMultiply(r, <span class="built_in">this</span>.mu), f = biDivideByRadixPower(u, <span class="built_in">this</span>.k + <span class="number">1</span>), e = biModuloByRadixPower(n, <span class="built_in">this</span>.k + <span class="number">1</span>), o = biMultiply(f, <span class="built_in">this</span>.modulus), s = biModuloByRadixPower(o, <span class="built_in">this</span>.k + <span class="number">1</span>), t = biSubtract(e, s), i;</span><br><span class="line">    <span class="keyword">for</span> (t.isNeg &amp;&amp; (t = biAdd(t, <span class="built_in">this</span>.bkplus1)),</span><br><span class="line">    i = biCompare(t, <span class="built_in">this</span>.modulus) &gt;= <span class="number">0</span>; i; )</span><br><span class="line">        t = biSubtract(t, <span class="built_in">this</span>.modulus),</span><br><span class="line">        i = biCompare(t, <span class="built_in">this</span>.modulus) &gt;= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BarrettMu_multiplyMod</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = biMultiply(n, t);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.modulo(i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BarrettMu_powMod</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> u = <span class="keyword">new</span> <span class="built_in">BigInt</span>, r, i;</span><br><span class="line">    <span class="keyword">for</span> (u.digits[<span class="number">0</span>] = <span class="number">1</span>,</span><br><span class="line">    r = n,</span><br><span class="line">    i = t; ; ) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((i.digits[<span class="number">0</span>] &amp; <span class="number">1</span>) != <span class="number">0</span> &amp;&amp; (u = <span class="built_in">this</span>.multiplyMod(u, r)),</span><br><span class="line">        i = biShiftRight(i, <span class="number">1</span>),</span><br><span class="line">        i.digits[<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; biHighIndex(i) == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        r = <span class="built_in">this</span>.multiplyMod(r, r)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> u</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">RSAKeyPair</span>(<span class="params">n, t, i</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.e = biFromHex(n);</span><br><span class="line">    <span class="built_in">this</span>.d = biFromHex(t);</span><br><span class="line">    <span class="built_in">this</span>.m = biFromHex(i);</span><br><span class="line">    <span class="built_in">this</span>.digitSize = <span class="number">2</span> * biHighIndex(<span class="built_in">this</span>.m) + <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">this</span>.chunkSize = <span class="built_in">this</span>.digitSize - <span class="number">11</span>;</span><br><span class="line">    <span class="built_in">this</span>.radix = <span class="number">16</span>;</span><br><span class="line">    <span class="built_in">this</span>.barrett = <span class="keyword">new</span> BarrettMu(<span class="built_in">this</span>.m)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">twoDigit</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (n &lt; <span class="number">10</span> ? <span class="string">&quot;0&quot;</span> : <span class="string">&quot;&quot;</span>) + <span class="built_in">String</span>(n)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encryptedString</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e, o, s, h, c, i, f, u, v, l, y;</span><br><span class="line">    <span class="keyword">if</span> (n.chunkSize &gt; n.digitSize - <span class="number">11</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Error&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> a = [], p = t.length, r = <span class="number">0</span>; r &lt; p; )</span><br><span class="line">        a[r] = t.charCodeAt(r),</span><br><span class="line">        r++;</span><br><span class="line">    <span class="keyword">for</span> (e = a.length,</span><br><span class="line">    o = <span class="string">&quot;&quot;</span>,</span><br><span class="line">    r = <span class="number">0</span>; r &lt; e; r += n.chunkSize) &#123;</span><br><span class="line">        <span class="keyword">for</span> (c = <span class="keyword">new</span> <span class="built_in">BigInt</span>,</span><br><span class="line">        s = <span class="number">0</span>,</span><br><span class="line">        f = r + n.chunkSize &gt; e ? e % n.chunkSize : n.chunkSize,</span><br><span class="line">        u = [],</span><br><span class="line">        i = <span class="number">0</span>; i &lt; f; i++)</span><br><span class="line">            u[i] = a[r + f - <span class="number">1</span> - i];</span><br><span class="line">        <span class="keyword">for</span> (u[f] = <span class="number">0</span>,</span><br><span class="line">        v = <span class="built_in">Math</span>.max(<span class="number">8</span>, n.digitSize - <span class="number">3</span> - f),</span><br><span class="line">        i = <span class="number">0</span>; i &lt; v; i++)</span><br><span class="line">            u[f + <span class="number">1</span> + i] = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">254</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (u[n.digitSize - <span class="number">2</span>] = <span class="number">2</span>,</span><br><span class="line">        u[n.digitSize - <span class="number">1</span>] = <span class="number">0</span>,</span><br><span class="line">        h = <span class="number">0</span>; h &lt; n.digitSize; ++s)</span><br><span class="line">            c.digits[s] = u[h++],</span><br><span class="line">            c.digits[s] += u[h++] &lt;&lt; <span class="number">8</span>;</span><br><span class="line">        l = n.barrett.powMod(c, n.e);</span><br><span class="line">        y = n.radix == <span class="number">16</span> ? biToHex(l) : biToString(l, n.radix);</span><br><span class="line">        o += y + <span class="string">&quot; &quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> o.substring(<span class="number">0</span>, o.length - <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decryptedString</span>(<span class="params">n, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e = t.split(<span class="string">&quot; &quot;</span>), i = <span class="string">&quot;&quot;</span>, r, u, o, f = <span class="number">0</span>; f &lt; e.length; ++f)</span><br><span class="line">        <span class="keyword">for</span> (o = n.radix == <span class="number">16</span> ? biFromHex(e[f]) : biFromString(e[f], n.radix),</span><br><span class="line">        u = n.barrett.powMod(o, n.d),</span><br><span class="line">        r = <span class="number">0</span>; r &lt;= biHighIndex(u); ++r)</span><br><span class="line">            i += <span class="built_in">String</span>.fromCharCode(u.digits[r] &amp; <span class="number">255</span>, u.digits[r] &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">return</span> i.charCodeAt(i.length - <span class="number">1</span>) == <span class="number">0</span> &amp;&amp; (i = i.substring(<span class="number">0</span>, i.length - <span class="number">1</span>)),</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> biRadixBase = <span class="number">2</span>, biRadixBits = <span class="number">16</span>, bitsPerDigit = biRadixBits, biRadix = <span class="number">65536</span>, biHalfRadix = biRadix &gt;&gt;&gt; <span class="number">1</span>, biRadixSquared = biRadix * biRadix, maxDigitVal = biRadix - <span class="number">1</span>, maxInteger = <span class="number">9999999999999998</span>, maxDigits, ZERO_ARRAY, bigZero, bigOne, dpl10, lr10, hexatrigesimalToChar, hexToChar, highBitMasks, lowBitMasks;</span><br><span class="line">setMaxDigits(<span class="number">20</span>);</span><br><span class="line">dpl10 = <span class="number">15</span>;</span><br><span class="line">lr10 = biFromNumber(<span class="number">1e15</span>);</span><br><span class="line">hexatrigesimalToChar = [<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="string">&quot;e&quot;</span>, <span class="string">&quot;f&quot;</span>, <span class="string">&quot;g&quot;</span>, <span class="string">&quot;h&quot;</span>, <span class="string">&quot;i&quot;</span>, <span class="string">&quot;j&quot;</span>, <span class="string">&quot;k&quot;</span>, <span class="string">&quot;l&quot;</span>, <span class="string">&quot;m&quot;</span>, <span class="string">&quot;n&quot;</span>, <span class="string">&quot;o&quot;</span>, <span class="string">&quot;p&quot;</span>, <span class="string">&quot;q&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="string">&quot;s&quot;</span>, <span class="string">&quot;t&quot;</span>, <span class="string">&quot;u&quot;</span>, <span class="string">&quot;v&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>, <span class="string">&quot;z&quot;</span>];</span><br><span class="line">hexToChar = [<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="string">&quot;e&quot;</span>, <span class="string">&quot;f&quot;</span>];</span><br><span class="line">highBitMasks = [<span class="number">0</span>, <span class="number">32768</span>, <span class="number">49152</span>, <span class="number">57344</span>, <span class="number">61440</span>, <span class="number">63488</span>, <span class="number">64512</span>, <span class="number">65024</span>, <span class="number">65280</span>, <span class="number">65408</span>, <span class="number">65472</span>, <span class="number">65504</span>, <span class="number">65520</span>, <span class="number">65528</span>, <span class="number">65532</span>, <span class="number">65534</span>, <span class="number">65535</span>];</span><br><span class="line">lowBitMasks = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">31</span>, <span class="number">63</span>, <span class="number">127</span>, <span class="number">255</span>, <span class="number">511</span>, <span class="number">1023</span>, <span class="number">2047</span>, <span class="number">4095</span>, <span class="number">8191</span>, <span class="number">16383</span>, <span class="number">32767</span>, <span class="number">65535</span>];</span><br><span class="line">setMaxDigits(<span class="number">129</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getpwd</span>(<span class="params">pwd</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> key_to_encode = <span class="keyword">new</span> RSAKeyPair(<span class="string">&quot;010001&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;978C0A92D2173439707498F0944AA476B1B62595877DD6FA87F6E2AC6DCB3D0BF0B82857439C99B5091192BC134889DFF60C562EC54EFBA4FF2F9D55ADBCCEA4A2FBA80CB398ED501280A007C83AF30C3D1A142D6133C63012B90AB26AC60C898FB66EDC3192C3EC4FF66925A64003B72496099F4F09A9FB72A2CF9E4D770C41&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> encryptedString(key_to_encode, pwd)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在鬼鬼调试助手上我们可以看到如下运行效果:</p><p><a href="https://imgtu.com/i/bgDcqI"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgDcqI.png"                      alt="bgDcqI.png"                ></a></p><h3 id="Python模拟执行"><a href="#Python模拟执行" class="headerlink" title="Python模拟执行"></a>Python模拟执行</h3><p>我在房天下注册了个账号: 18979685***，然后我们来测试下</p><ul><li><p>get_encrypted_pwd.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@Description : </span></span><br><span class="line"><span class="string">@File        : get_encrypted_pwd</span></span><br><span class="line"><span class="string">@Project     : test</span></span><br><span class="line"><span class="string">@Time        : 2022/3/8 18:16</span></span><br><span class="line"><span class="string">@Author      : LiHouJian</span></span><br><span class="line"><span class="string">@Software    : PyCharm</span></span><br><span class="line"><span class="string">@issue       : </span></span><br><span class="line"><span class="string">@change      : </span></span><br><span class="line"><span class="string">@reason      : </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> scrapy.utils <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> scrapy.utils.project <span class="keyword">import</span> get_project_settings</span><br><span class="line"><span class="keyword">from</span> pybase.util <span class="keyword">import</span> send_file</span><br><span class="line"><span class="keyword">import</span> execjs</span><br><span class="line"></span><br><span class="line">jscode = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">function setMaxDigits(n) &#123;</span></span><br><span class="line"><span class="string">    maxDigits = n;</span></span><br><span class="line"><span class="string">    ZERO_ARRAY = new Array(maxDigits);</span></span><br><span class="line"><span class="string">    for (var t = 0; t &lt; ZERO_ARRAY.length; t++)</span></span><br><span class="line"><span class="string">        ZERO_ARRAY[t] = 0;</span></span><br><span class="line"><span class="string">    bigZero = new BigInt;</span></span><br><span class="line"><span class="string">    bigOne = new BigInt;</span></span><br><span class="line"><span class="string">    bigOne.digits[0] = 1</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function BigInt(n) &#123;</span></span><br><span class="line"><span class="string">    this.digits = typeof n == &quot;boolean&quot; &amp;&amp; n == !0 ? null : ZERO_ARRAY.slice(0);</span></span><br><span class="line"><span class="string">    this.isNeg = !1</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biFromDecimal(n) &#123;</span></span><br><span class="line"><span class="string">    for (var u = n.charAt(0) == &quot;-&quot;, t = u ? 1 : 0, i, f, r; t &lt; n.length &amp;&amp; n.charAt(t) == &quot;0&quot;; )</span></span><br><span class="line"><span class="string">        ++t;</span></span><br><span class="line"><span class="string">    if (t == n.length)</span></span><br><span class="line"><span class="string">        i = new BigInt;</span></span><br><span class="line"><span class="string">    else &#123;</span></span><br><span class="line"><span class="string">        for (f = n.length - t,</span></span><br><span class="line"><span class="string">        r = f % dpl10,</span></span><br><span class="line"><span class="string">        r == 0 &amp;&amp; (r = dpl10),</span></span><br><span class="line"><span class="string">        i = biFromNumber(Number(n.substr(t, r))),</span></span><br><span class="line"><span class="string">        t += r; t &lt; n.length; )</span></span><br><span class="line"><span class="string">            i = biAdd(biMultiply(i, lr10), biFromNumber(Number(n.substr(t, dpl10)))),</span></span><br><span class="line"><span class="string">            t += dpl10;</span></span><br><span class="line"><span class="string">        i.isNeg = u</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biCopy(n) &#123;</span></span><br><span class="line"><span class="string">    var t = new BigInt(!0);</span></span><br><span class="line"><span class="string">    return t.digits = n.digits.slice(0),</span></span><br><span class="line"><span class="string">    t.isNeg = n.isNeg,</span></span><br><span class="line"><span class="string">    t</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biFromNumber(n) &#123;</span></span><br><span class="line"><span class="string">    var t = new BigInt, i;</span></span><br><span class="line"><span class="string">    for (t.isNeg = n &lt; 0,</span></span><br><span class="line"><span class="string">    n = Math.abs(n),</span></span><br><span class="line"><span class="string">    i = 0; n &gt; 0; )</span></span><br><span class="line"><span class="string">        t.digits[i++] = n &amp; maxDigitVal,</span></span><br><span class="line"><span class="string">        n = Math.floor(n / biRadix);</span></span><br><span class="line"><span class="string">    return t</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function reverseStr(n) &#123;</span></span><br><span class="line"><span class="string">    for (var i = &quot;&quot;, t = n.length - 1; t &gt; -1; --t)</span></span><br><span class="line"><span class="string">        i += n.charAt(t);</span></span><br><span class="line"><span class="string">    return i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biToString(n, t) &#123;</span></span><br><span class="line"><span class="string">    var r = new BigInt, i, u;</span></span><br><span class="line"><span class="string">    for (r.digits[0] = t,</span></span><br><span class="line"><span class="string">    i = biDivideModulo(n, r),</span></span><br><span class="line"><span class="string">    u = hexatrigesimalToChar[i[1].digits[0]]; biCompare(i[0], bigZero) == 1; )</span></span><br><span class="line"><span class="string">        i = biDivideModulo(i[0], r),</span></span><br><span class="line"><span class="string">        digit = i[1].digits[0],</span></span><br><span class="line"><span class="string">        u += hexatrigesimalToChar[i[1].digits[0]];</span></span><br><span class="line"><span class="string">    return (n.isNeg ? &quot;-&quot; : &quot;&quot;) + reverseStr(u)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biToDecimal(n) &#123;</span></span><br><span class="line"><span class="string">    var i = new BigInt, t, r;</span></span><br><span class="line"><span class="string">    for (i.digits[0] = 10,</span></span><br><span class="line"><span class="string">    t = biDivideModulo(n, i),</span></span><br><span class="line"><span class="string">    r = String(t[1].digits[0]); biCompare(t[0], bigZero) == 1; )</span></span><br><span class="line"><span class="string">        t = biDivideModulo(t[0], i),</span></span><br><span class="line"><span class="string">        r += String(t[1].digits[0]);</span></span><br><span class="line"><span class="string">    return (n.isNeg ? &quot;-&quot; : &quot;&quot;) + reverseStr(r)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function digitToHex(n) &#123;</span></span><br><span class="line"><span class="string">    var t = &quot;&quot;;</span></span><br><span class="line"><span class="string">    for (i = 0; i &lt; 4; ++i)</span></span><br><span class="line"><span class="string">        t += hexToChar[n &amp; 15],</span></span><br><span class="line"><span class="string">        n &gt;&gt;&gt;= 4;</span></span><br><span class="line"><span class="string">    return reverseStr(t)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biToHex(n) &#123;</span></span><br><span class="line"><span class="string">    for (var i = &quot;&quot;, r = biHighIndex(n), t = biHighIndex(n); t &gt; -1; --t)</span></span><br><span class="line"><span class="string">        i += digitToHex(n.digits[t]);</span></span><br><span class="line"><span class="string">    return i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function charToHex(n) &#123;</span></span><br><span class="line"><span class="string">    var t = 48</span></span><br><span class="line"><span class="string">      , u = t + 9</span></span><br><span class="line"><span class="string">      , i = 97</span></span><br><span class="line"><span class="string">      , f = i + 25</span></span><br><span class="line"><span class="string">      , r = 65;</span></span><br><span class="line"><span class="string">    return n &gt;= t &amp;&amp; n &lt;= u ? n - t : n &gt;= r &amp;&amp; n &lt;= 90 ? 10 + n - r : n &gt;= i &amp;&amp; n &lt;= f ? 10 + n - i : 0</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function hexToDigit(n) &#123;</span></span><br><span class="line"><span class="string">    for (var t = 0, r = Math.min(n.length, 4), i = 0; i &lt; r; ++i)</span></span><br><span class="line"><span class="string">        t &lt;&lt;= 4,</span></span><br><span class="line"><span class="string">        t |= charToHex(n.charCodeAt(i));</span></span><br><span class="line"><span class="string">    return t</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biFromHex(n) &#123;</span></span><br><span class="line"><span class="string">    for (var i = new BigInt, u = n.length, t = u, r = 0; t &gt; 0; t -= 4,</span></span><br><span class="line"><span class="string">    ++r)</span></span><br><span class="line"><span class="string">        i.digits[r] = hexToDigit(n.substr(Math.max(t - 4, 0), Math.min(t, 4)));</span></span><br><span class="line"><span class="string">    return i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biFromString(n, t) &#123;</span></span><br><span class="line"><span class="string">    var f = n.charAt(0) == &quot;-&quot;, e = f ? 1 : 0, i = new BigInt, r = new BigInt, u;</span></span><br><span class="line"><span class="string">    for (r.digits[0] = 1,</span></span><br><span class="line"><span class="string">    u = n.length - 1; u &gt;= e; u--) &#123;</span></span><br><span class="line"><span class="string">        var o = n.charCodeAt(u)</span></span><br><span class="line"><span class="string">          , s = charToHex(o)</span></span><br><span class="line"><span class="string">          , h = biMultiplyDigit(r, s);</span></span><br><span class="line"><span class="string">        i = biAdd(i, h);</span></span><br><span class="line"><span class="string">        r = biMultiplyDigit(r, t)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return i.isNeg = f,</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biDump(n) &#123;</span></span><br><span class="line"><span class="string">    return (n.isNeg ? &quot;-&quot; : &quot;&quot;) + n.digits.join(&quot; &quot;)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biAdd(n, t) &#123;</span></span><br><span class="line"><span class="string">    var r, u, f, i;</span></span><br><span class="line"><span class="string">    if (n.isNeg != t.isNeg)</span></span><br><span class="line"><span class="string">        t.isNeg = !t.isNeg,</span></span><br><span class="line"><span class="string">        r = biSubtract(n, t),</span></span><br><span class="line"><span class="string">        t.isNeg = !t.isNeg;</span></span><br><span class="line"><span class="string">    else &#123;</span></span><br><span class="line"><span class="string">        for (r = new BigInt,</span></span><br><span class="line"><span class="string">        u = 0,</span></span><br><span class="line"><span class="string">        i = 0; i &lt; n.digits.length; ++i)</span></span><br><span class="line"><span class="string">            f = n.digits[i] + t.digits[i] + u,</span></span><br><span class="line"><span class="string">            r.digits[i] = f % biRadix,</span></span><br><span class="line"><span class="string">            u = Number(f &gt;= biRadix);</span></span><br><span class="line"><span class="string">        r.isNeg = n.isNeg</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return r</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biSubtract(n, t) &#123;</span></span><br><span class="line"><span class="string">    var r, f, u, i;</span></span><br><span class="line"><span class="string">    if (n.isNeg != t.isNeg)</span></span><br><span class="line"><span class="string">        t.isNeg = !t.isNeg,</span></span><br><span class="line"><span class="string">        r = biAdd(n, t),</span></span><br><span class="line"><span class="string">        t.isNeg = !t.isNeg;</span></span><br><span class="line"><span class="string">    else &#123;</span></span><br><span class="line"><span class="string">        for (r = new BigInt,</span></span><br><span class="line"><span class="string">        u = 0,</span></span><br><span class="line"><span class="string">        i = 0; i &lt; n.digits.length; ++i)</span></span><br><span class="line"><span class="string">            f = n.digits[i] - t.digits[i] + u,</span></span><br><span class="line"><span class="string">            r.digits[i] = f % biRadix,</span></span><br><span class="line"><span class="string">            r.digits[i] &lt; 0 &amp;&amp; (r.digits[i] += biRadix),</span></span><br><span class="line"><span class="string">            u = 0 - Number(f &lt; 0);</span></span><br><span class="line"><span class="string">        if (u == -1) &#123;</span></span><br><span class="line"><span class="string">            for (u = 0,</span></span><br><span class="line"><span class="string">            i = 0; i &lt; n.digits.length; ++i)</span></span><br><span class="line"><span class="string">                f = 0 - r.digits[i] + u,</span></span><br><span class="line"><span class="string">                r.digits[i] = f % biRadix,</span></span><br><span class="line"><span class="string">                r.digits[i] &lt; 0 &amp;&amp; (r.digits[i] += biRadix),</span></span><br><span class="line"><span class="string">                u = 0 - Number(f &lt; 0);</span></span><br><span class="line"><span class="string">            r.isNeg = !n.isNeg</span></span><br><span class="line"><span class="string">        &#125; else</span></span><br><span class="line"><span class="string">            r.isNeg = n.isNeg</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return r</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biHighIndex(n) &#123;</span></span><br><span class="line"><span class="string">    for (var t = n.digits.length - 1; t &gt; 0 &amp;&amp; n.digits[t] == 0; )</span></span><br><span class="line"><span class="string">        --t;</span></span><br><span class="line"><span class="string">    return t</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biNumBits(n) &#123;</span></span><br><span class="line"><span class="string">    for (var i = biHighIndex(n), r = n.digits[i], u = (i + 1) * bitsPerDigit, t = u; t &gt; u - bitsPerDigit; --t) &#123;</span></span><br><span class="line"><span class="string">        if ((r &amp; 32768) != 0)</span></span><br><span class="line"><span class="string">            break;</span></span><br><span class="line"><span class="string">        r &lt;&lt;= 1</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return t</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biMultiply(n, t) &#123;</span></span><br><span class="line"><span class="string">    for (var i = new BigInt, u, o = biHighIndex(n), s = biHighIndex(t), e, f, r = 0; r &lt;= s; ++r) &#123;</span></span><br><span class="line"><span class="string">        for (u = 0,</span></span><br><span class="line"><span class="string">        f = r,</span></span><br><span class="line"><span class="string">        j = 0; j &lt;= o; ++j,</span></span><br><span class="line"><span class="string">        ++f)</span></span><br><span class="line"><span class="string">            e = i.digits[f] + n.digits[j] * t.digits[r] + u,</span></span><br><span class="line"><span class="string">            i.digits[f] = e &amp; maxDigitVal,</span></span><br><span class="line"><span class="string">            u = e &gt;&gt;&gt; biRadixBits;</span></span><br><span class="line"><span class="string">        i.digits[r + o + 1] = u</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return i.isNeg = n.isNeg != t.isNeg,</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biMultiplyDigit(n, t) &#123;</span></span><br><span class="line"><span class="string">    var u, r, f, i;</span></span><br><span class="line"><span class="string">    for (result = new BigInt,</span></span><br><span class="line"><span class="string">    u = biHighIndex(n),</span></span><br><span class="line"><span class="string">    r = 0,</span></span><br><span class="line"><span class="string">    i = 0; i &lt;= u; ++i)</span></span><br><span class="line"><span class="string">        f = result.digits[i] + n.digits[i] * t + r,</span></span><br><span class="line"><span class="string">        result.digits[i] = f &amp; maxDigitVal,</span></span><br><span class="line"><span class="string">        r = f &gt;&gt;&gt; biRadixBits;</span></span><br><span class="line"><span class="string">    return result.digits[1 + u] = r,</span></span><br><span class="line"><span class="string">    result</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function arrayCopy(n, t, i, r, u) &#123;</span></span><br><span class="line"><span class="string">    for (var o = Math.min(t + u, n.length), f = t, e = r; f &lt; o; ++f,</span></span><br><span class="line"><span class="string">    ++e)</span></span><br><span class="line"><span class="string">        i[e] = n[f]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biShiftLeft(n, t) &#123;</span></span><br><span class="line"><span class="string">    var e = Math.floor(t / bitsPerDigit), i = new BigInt, u, o, r, f;</span></span><br><span class="line"><span class="string">    for (arrayCopy(n.digits, 0, i.digits, e, i.digits.length - e),</span></span><br><span class="line"><span class="string">    u = t % bitsPerDigit,</span></span><br><span class="line"><span class="string">    o = bitsPerDigit - u,</span></span><br><span class="line"><span class="string">    r = i.digits.length - 1,</span></span><br><span class="line"><span class="string">    f = r - 1; r &gt; 0; --r,</span></span><br><span class="line"><span class="string">    --f)</span></span><br><span class="line"><span class="string">        i.digits[r] = i.digits[r] &lt;&lt; u &amp; maxDigitVal | (i.digits[f] &amp; highBitMasks[u]) &gt;&gt;&gt; o;</span></span><br><span class="line"><span class="string">    return i.digits[0] = i.digits[r] &lt;&lt; u &amp; maxDigitVal,</span></span><br><span class="line"><span class="string">    i.isNeg = n.isNeg,</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biShiftRight(n, t) &#123;</span></span><br><span class="line"><span class="string">    var e = Math.floor(t / bitsPerDigit), i = new BigInt, u, o, r, f;</span></span><br><span class="line"><span class="string">    for (arrayCopy(n.digits, e, i.digits, 0, n.digits.length - e),</span></span><br><span class="line"><span class="string">    u = t % bitsPerDigit,</span></span><br><span class="line"><span class="string">    o = bitsPerDigit - u,</span></span><br><span class="line"><span class="string">    r = 0,</span></span><br><span class="line"><span class="string">    f = r + 1; r &lt; i.digits.length - 1; ++r,</span></span><br><span class="line"><span class="string">    ++f)</span></span><br><span class="line"><span class="string">        i.digits[r] = i.digits[r] &gt;&gt;&gt; u | (i.digits[f] &amp; lowBitMasks[u]) &lt;&lt; o;</span></span><br><span class="line"><span class="string">    return i.digits[i.digits.length - 1] &gt;&gt;&gt;= u,</span></span><br><span class="line"><span class="string">    i.isNeg = n.isNeg,</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biMultiplyByRadixPower(n, t) &#123;</span></span><br><span class="line"><span class="string">    var i = new BigInt;</span></span><br><span class="line"><span class="string">    return arrayCopy(n.digits, 0, i.digits, t, i.digits.length - t),</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biDivideByRadixPower(n, t) &#123;</span></span><br><span class="line"><span class="string">    var i = new BigInt;</span></span><br><span class="line"><span class="string">    return arrayCopy(n.digits, t, i.digits, 0, i.digits.length - t),</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biModuloByRadixPower(n, t) &#123;</span></span><br><span class="line"><span class="string">    var i = new BigInt;</span></span><br><span class="line"><span class="string">    return arrayCopy(n.digits, 0, i.digits, 0, t),</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biCompare(n, t) &#123;</span></span><br><span class="line"><span class="string">    if (n.isNeg != t.isNeg)</span></span><br><span class="line"><span class="string">        return 1 - 2 * Number(n.isNeg);</span></span><br><span class="line"><span class="string">    for (var i = n.digits.length - 1; i &gt;= 0; --i)</span></span><br><span class="line"><span class="string">        if (n.digits[i] != t.digits[i])</span></span><br><span class="line"><span class="string">            return n.isNeg ? 1 - 2 * Number(n.digits[i] &gt; t.digits[i]) : 1 - 2 * Number(n.digits[i] &lt; t.digits[i]);</span></span><br><span class="line"><span class="string">    return 0</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biDivideModulo(n, t) &#123;</span></span><br><span class="line"><span class="string">    var a = biNumBits(n), s = biNumBits(t), v = t.isNeg, r, i, u, e, h, o, f, y, p;</span></span><br><span class="line"><span class="string">    if (a &lt; s)</span></span><br><span class="line"><span class="string">        return n.isNeg ? (r = biCopy(bigOne),</span></span><br><span class="line"><span class="string">        r.isNeg = !t.isNeg,</span></span><br><span class="line"><span class="string">        n.isNeg = !1,</span></span><br><span class="line"><span class="string">        t.isNeg = !1,</span></span><br><span class="line"><span class="string">        i = biSubtract(t, n),</span></span><br><span class="line"><span class="string">        n.isNeg = !0,</span></span><br><span class="line"><span class="string">        t.isNeg = v) : (r = new BigInt,</span></span><br><span class="line"><span class="string">        i = biCopy(n)),</span></span><br><span class="line"><span class="string">        [r, i];</span></span><br><span class="line"><span class="string">    for (r = new BigInt,</span></span><br><span class="line"><span class="string">    i = n,</span></span><br><span class="line"><span class="string">    u = Math.ceil(s / bitsPerDigit) - 1,</span></span><br><span class="line"><span class="string">    e = 0; t.digits[u] &lt; biHalfRadix; )</span></span><br><span class="line"><span class="string">        t = biShiftLeft(t, 1),</span></span><br><span class="line"><span class="string">        ++e,</span></span><br><span class="line"><span class="string">        ++s,</span></span><br><span class="line"><span class="string">        u = Math.ceil(s / bitsPerDigit) - 1;</span></span><br><span class="line"><span class="string">    for (i = biShiftLeft(i, e),</span></span><br><span class="line"><span class="string">    a += e,</span></span><br><span class="line"><span class="string">    h = Math.ceil(a / bitsPerDigit) - 1,</span></span><br><span class="line"><span class="string">    o = biMultiplyByRadixPower(t, h - u); biCompare(i, o) != -1; )</span></span><br><span class="line"><span class="string">        ++r.digits[h - u],</span></span><br><span class="line"><span class="string">        i = biSubtract(i, o);</span></span><br><span class="line"><span class="string">    for (f = h; f &gt; u; --f) &#123;</span></span><br><span class="line"><span class="string">        var c = f &gt;= i.digits.length ? 0 : i.digits[f]</span></span><br><span class="line"><span class="string">          , w = f - 1 &gt;= i.digits.length ? 0 : i.digits[f - 1]</span></span><br><span class="line"><span class="string">          , b = f - 2 &gt;= i.digits.length ? 0 : i.digits[f - 2]</span></span><br><span class="line"><span class="string">          , l = u &gt;= t.digits.length ? 0 : t.digits[u]</span></span><br><span class="line"><span class="string">          , k = u - 1 &gt;= t.digits.length ? 0 : t.digits[u - 1];</span></span><br><span class="line"><span class="string">        for (r.digits[f - u - 1] = c == l ? maxDigitVal : Math.floor((c * biRadix + w) / l),</span></span><br><span class="line"><span class="string">        y = r.digits[f - u - 1] * (l * biRadix + k),</span></span><br><span class="line"><span class="string">        p = c * biRadixSquared + (w * biRadix + b); y &gt; p; )</span></span><br><span class="line"><span class="string">            --r.digits[f - u - 1],</span></span><br><span class="line"><span class="string">            y = r.digits[f - u - 1] * (l * biRadix | k),</span></span><br><span class="line"><span class="string">            p = c * biRadix * biRadix + (w * biRadix + b);</span></span><br><span class="line"><span class="string">        o = biMultiplyByRadixPower(t, f - u - 1);</span></span><br><span class="line"><span class="string">        i = biSubtract(i, biMultiplyDigit(o, r.digits[f - u - 1]));</span></span><br><span class="line"><span class="string">        i.isNeg &amp;&amp; (i = biAdd(i, o),</span></span><br><span class="line"><span class="string">        --r.digits[f - u - 1])</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return i = biShiftRight(i, e),</span></span><br><span class="line"><span class="string">    r.isNeg = n.isNeg != v,</span></span><br><span class="line"><span class="string">    n.isNeg &amp;&amp; (r = v ? biAdd(r, bigOne) : biSubtract(r, bigOne),</span></span><br><span class="line"><span class="string">    t = biShiftRight(t, e),</span></span><br><span class="line"><span class="string">    i = biSubtract(t, i)),</span></span><br><span class="line"><span class="string">    i.digits[0] == 0 &amp;&amp; biHighIndex(i) == 0 &amp;&amp; (i.isNeg = !1),</span></span><br><span class="line"><span class="string">    [r, i]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biDivide(n, t) &#123;</span></span><br><span class="line"><span class="string">    return biDivideModulo(n, t)[0]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biModulo(n, t) &#123;</span></span><br><span class="line"><span class="string">    return biDivideModulo(n, t)[1]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biMultiplyMod(n, t, i) &#123;</span></span><br><span class="line"><span class="string">    return biModulo(biMultiply(n, t), i)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biPow(n, t) &#123;</span></span><br><span class="line"><span class="string">    for (var r = bigOne, i = n; ; ) &#123;</span></span><br><span class="line"><span class="string">        if ((t &amp; 1) != 0 &amp;&amp; (r = biMultiply(r, i)),</span></span><br><span class="line"><span class="string">        t &gt;&gt;= 1,</span></span><br><span class="line"><span class="string">        t == 0)</span></span><br><span class="line"><span class="string">            break;</span></span><br><span class="line"><span class="string">        i = biMultiply(i, i)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return r</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function biPowMod(n, t, i) &#123;</span></span><br><span class="line"><span class="string">    for (var f = bigOne, u = n, r = t; ; ) &#123;</span></span><br><span class="line"><span class="string">        if ((r.digits[0] &amp; 1) != 0 &amp;&amp; (f = biMultiplyMod(f, u, i)),</span></span><br><span class="line"><span class="string">        r = biShiftRight(r, 1),</span></span><br><span class="line"><span class="string">        r.digits[0] == 0 &amp;&amp; biHighIndex(r) == 0)</span></span><br><span class="line"><span class="string">            break;</span></span><br><span class="line"><span class="string">        u = biMultiplyMod(u, u, i)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return f</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function BarrettMu(n) &#123;</span></span><br><span class="line"><span class="string">    this.modulus = biCopy(n);</span></span><br><span class="line"><span class="string">    this.k = biHighIndex(this.modulus) + 1;</span></span><br><span class="line"><span class="string">    var t = new BigInt;</span></span><br><span class="line"><span class="string">    t.digits[2 * this.k] = 1;</span></span><br><span class="line"><span class="string">    this.mu = biDivide(t, this.modulus);</span></span><br><span class="line"><span class="string">    this.bkplus1 = new BigInt;</span></span><br><span class="line"><span class="string">    this.bkplus1.digits[this.k + 1] = 1;</span></span><br><span class="line"><span class="string">    this.modulo = BarrettMu_modulo;</span></span><br><span class="line"><span class="string">    this.multiplyMod = BarrettMu_multiplyMod;</span></span><br><span class="line"><span class="string">    this.powMod = BarrettMu_powMod</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function BarrettMu_modulo(n) &#123;</span></span><br><span class="line"><span class="string">    var r = biDivideByRadixPower(n, this.k - 1), u = biMultiply(r, this.mu), f = biDivideByRadixPower(u, this.k + 1), e = biModuloByRadixPower(n, this.k + 1), o = biMultiply(f, this.modulus), s = biModuloByRadixPower(o, this.k + 1), t = biSubtract(e, s), i;</span></span><br><span class="line"><span class="string">    for (t.isNeg &amp;&amp; (t = biAdd(t, this.bkplus1)),</span></span><br><span class="line"><span class="string">    i = biCompare(t, this.modulus) &gt;= 0; i; )</span></span><br><span class="line"><span class="string">        t = biSubtract(t, this.modulus),</span></span><br><span class="line"><span class="string">        i = biCompare(t, this.modulus) &gt;= 0;</span></span><br><span class="line"><span class="string">    return t</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function BarrettMu_multiplyMod(n, t) &#123;</span></span><br><span class="line"><span class="string">    var i = biMultiply(n, t);</span></span><br><span class="line"><span class="string">    return this.modulo(i)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function BarrettMu_powMod(n, t) &#123;</span></span><br><span class="line"><span class="string">    var u = new BigInt, r, i;</span></span><br><span class="line"><span class="string">    for (u.digits[0] = 1,</span></span><br><span class="line"><span class="string">    r = n,</span></span><br><span class="line"><span class="string">    i = t; ; ) &#123;</span></span><br><span class="line"><span class="string">        if ((i.digits[0] &amp; 1) != 0 &amp;&amp; (u = this.multiplyMod(u, r)),</span></span><br><span class="line"><span class="string">        i = biShiftRight(i, 1),</span></span><br><span class="line"><span class="string">        i.digits[0] == 0 &amp;&amp; biHighIndex(i) == 0)</span></span><br><span class="line"><span class="string">            break;</span></span><br><span class="line"><span class="string">        r = this.multiplyMod(r, r)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return u</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function RSAKeyPair(n, t, i) &#123;</span></span><br><span class="line"><span class="string">    this.e = biFromHex(n);</span></span><br><span class="line"><span class="string">    this.d = biFromHex(t);</span></span><br><span class="line"><span class="string">    this.m = biFromHex(i);</span></span><br><span class="line"><span class="string">    this.digitSize = 2 * biHighIndex(this.m) + 2;</span></span><br><span class="line"><span class="string">    this.chunkSize = this.digitSize - 11;</span></span><br><span class="line"><span class="string">    this.radix = 16;</span></span><br><span class="line"><span class="string">    this.barrett = new BarrettMu(this.m)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function twoDigit(n) &#123;</span></span><br><span class="line"><span class="string">    return (n &lt; 10 ? &quot;0&quot; : &quot;&quot;) + String(n)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function encryptedString(n, t) &#123;</span></span><br><span class="line"><span class="string">    var e, o, s, h, c, i, f, u, v, l, y;</span></span><br><span class="line"><span class="string">    if (n.chunkSize &gt; n.digitSize - 11)</span></span><br><span class="line"><span class="string">        return &quot;Error&quot;;</span></span><br><span class="line"><span class="string">    for (var a = [], p = t.length, r = 0; r &lt; p; )</span></span><br><span class="line"><span class="string">        a[r] = t.charCodeAt(r),</span></span><br><span class="line"><span class="string">        r++;</span></span><br><span class="line"><span class="string">    for (e = a.length,</span></span><br><span class="line"><span class="string">    o = &quot;&quot;,</span></span><br><span class="line"><span class="string">    r = 0; r &lt; e; r += n.chunkSize) &#123;</span></span><br><span class="line"><span class="string">        for (c = new BigInt,</span></span><br><span class="line"><span class="string">        s = 0,</span></span><br><span class="line"><span class="string">        f = r + n.chunkSize &gt; e ? e % n.chunkSize : n.chunkSize,</span></span><br><span class="line"><span class="string">        u = [],</span></span><br><span class="line"><span class="string">        i = 0; i &lt; f; i++)</span></span><br><span class="line"><span class="string">            u[i] = a[r + f - 1 - i];</span></span><br><span class="line"><span class="string">        for (u[f] = 0,</span></span><br><span class="line"><span class="string">        v = Math.max(8, n.digitSize - 3 - f),</span></span><br><span class="line"><span class="string">        i = 0; i &lt; v; i++)</span></span><br><span class="line"><span class="string">            u[f + 1 + i] = Math.floor(Math.random() * 254) + 1;</span></span><br><span class="line"><span class="string">        for (u[n.digitSize - 2] = 2,</span></span><br><span class="line"><span class="string">        u[n.digitSize - 1] = 0,</span></span><br><span class="line"><span class="string">        h = 0; h &lt; n.digitSize; ++s)</span></span><br><span class="line"><span class="string">            c.digits[s] = u[h++],</span></span><br><span class="line"><span class="string">            c.digits[s] += u[h++] &lt;&lt; 8;</span></span><br><span class="line"><span class="string">        l = n.barrett.powMod(c, n.e);</span></span><br><span class="line"><span class="string">        y = n.radix == 16 ? biToHex(l) : biToString(l, n.radix);</span></span><br><span class="line"><span class="string">        o += y + &quot; &quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return o.substring(0, o.length - 1)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function decryptedString(n, t) &#123;</span></span><br><span class="line"><span class="string">    for (var e = t.split(&quot; &quot;), i = &quot;&quot;, r, u, o, f = 0; f &lt; e.length; ++f)</span></span><br><span class="line"><span class="string">        for (o = n.radix == 16 ? biFromHex(e[f]) : biFromString(e[f], n.radix),</span></span><br><span class="line"><span class="string">        u = n.barrett.powMod(o, n.d),</span></span><br><span class="line"><span class="string">        r = 0; r &lt;= biHighIndex(u); ++r)</span></span><br><span class="line"><span class="string">            i += String.fromCharCode(u.digits[r] &amp; 255, u.digits[r] &gt;&gt; 8);</span></span><br><span class="line"><span class="string">    return i.charCodeAt(i.length - 1) == 0 &amp;&amp; (i = i.substring(0, i.length - 1)),</span></span><br><span class="line"><span class="string">    i</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">var biRadixBase = 2, biRadixBits = 16, bitsPerDigit = biRadixBits, biRadix = 65536, biHalfRadix = biRadix &gt;&gt;&gt; 1, biRadixSquared = biRadix * biRadix, maxDigitVal = biRadix - 1, maxInteger = 9999999999999998, maxDigits, ZERO_ARRAY, bigZero, bigOne, dpl10, lr10, hexatrigesimalToChar, hexToChar, highBitMasks, lowBitMasks;</span></span><br><span class="line"><span class="string">setMaxDigits(20);</span></span><br><span class="line"><span class="string">dpl10 = 15;</span></span><br><span class="line"><span class="string">lr10 = biFromNumber(1e15);</span></span><br><span class="line"><span class="string">hexatrigesimalToChar = [&quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;g&quot;, &quot;h&quot;, &quot;i&quot;, &quot;j&quot;, &quot;k&quot;, &quot;l&quot;, &quot;m&quot;, &quot;n&quot;, &quot;o&quot;, &quot;p&quot;, &quot;q&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;u&quot;, &quot;v&quot;, &quot;w&quot;, &quot;x&quot;, &quot;y&quot;, &quot;z&quot;];</span></span><br><span class="line"><span class="string">hexToChar = [&quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;];</span></span><br><span class="line"><span class="string">highBitMasks = [0, 32768, 49152, 57344, 61440, 63488, 64512, 65024, 65280, 65408, 65472, 65504, 65520, 65528, 65532, 65534, 65535];</span></span><br><span class="line"><span class="string">lowBitMasks = [0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535];</span></span><br><span class="line"><span class="string">setMaxDigits(129);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function getpwd(pwd)&#123;</span></span><br><span class="line"><span class="string">    var key_to_encode = new RSAKeyPair(&quot;010001&quot;,&quot;&quot;,&quot;978C0A92D2173439707498F0944AA476B1B62595877DD6FA87F6E2AC6DCB3D0BF0B82857439C99B5091192BC134889DFF60C562EC54EFBA4FF2F9D55ADBCCEA4A2FBA80CB398ED501280A007C83AF30C3D1A142D6133C63012B90AB26AC60C898FB66EDC3192C3EC4FF66925A64003B72496099F4F09A9FB72A2CF9E4D770C41&quot;);</span></span><br><span class="line"><span class="string">    return encryptedString(key_to_encode, pwd)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">password = <span class="string">&quot;zx******&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_encryption</span>():</span></span><br><span class="line">    encrypted_password = execjs.<span class="built_in">compile</span>(jscode).call(<span class="string">&quot;getpwd&quot;</span>, password)</span><br><span class="line">    <span class="keyword">return</span> encrypted_password</span><br><span class="line"></span><br><span class="line">get_encryption()</span><br></pre></td></tr></table></figure></li><li><p>Fang.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@Description : </span></span><br><span class="line"><span class="string">@File        : Fang</span></span><br><span class="line"><span class="string">@Project     : test</span></span><br><span class="line"><span class="string">@Time        : 2022/3/8 17:57</span></span><br><span class="line"><span class="string">@Author      : LiHouJian</span></span><br><span class="line"><span class="string">@Software    : PyCharm</span></span><br><span class="line"><span class="string">@issue       : https://www1.fang.com/</span></span><br><span class="line"><span class="string">@change      : </span></span><br><span class="line"><span class="string">@reason      : </span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> traceback</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> scrapy.utils <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">from</span> scrapy.utils.project <span class="keyword">import</span> get_project_settings</span><br><span class="line"><span class="keyword">from</span> pybase.util <span class="keyword">import</span> send_file</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> get_encrypted_pwd</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://passport.fang.com/login.api&quot;</span></span><br><span class="line">headers = &#123;</span><br><span class="line">  <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Pragma&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;sec-ch-ua&#x27;</span>: <span class="string">&#x27;&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;98&quot;, &quot;Google Chrome&quot;;v=&quot;98&quot;&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;*/*&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded; charset=UTF-8&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;X-Requested-With&#x27;</span>: <span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="string">&#x27;&quot;Windows&quot;&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Origin&#x27;</span>: <span class="string">&#x27;https://passport.fang.com&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Sec-Fetch-Site&#x27;</span>: <span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Sec-Fetch-Mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Sec-Fetch-Dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;https://passport.fang.com/?backurl=http%3A%2F%2Fmy.fang.com%2FAccount%2FSecuritySet.html%3Fcity%3Dbj&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">  <span class="comment"># &#x27;Cookie&#x27;: &#x27;global_cookie=oe8q9avuq3j9tlztoytsdel5m19l0hvqfxu; __jsluid_s=799d58c84f2792a88df18cb929fdff1c; g_sourcepage=txz_dl%5Egg_pc; __utmc=147393320; __utma=147393320.1290564514.1646728721.1646730819.1646735182.3; __utmz=147393320.1646735182.3.3.utmcsr=www1.fang.com|utmccn=(referral)|utmcmd=referral|utmcct=/; __utmt_t0=1; __utmt_t1=1; city=bj; token=57848a3bb7c4466499b350c5229495b4; unique_cookie=U_oe8q9avuq3j9tlztoytsdel5m19l0hvqfxu*14; __utmb=147393320.4.10.1646735182&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">pay_load = &#123;</span><br><span class="line"><span class="string">&#x27;uid&#x27;</span>: <span class="string">&#x27;18979****&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;pwd&#x27;</span>: get_encrypted_pwd.get_encryption(),</span><br><span class="line"><span class="string">&#x27;Service&#x27;</span>: <span class="string">&#x27;soufun-passport-web&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;AutoLogin&#x27;</span>: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">req = requests.post(url=url, headers=headers, data=pay_load)</span><br><span class="line"><span class="built_in">print</span>(req)</span><br></pre></td></tr></table></figure></li></ul><p>运行效果:</p><p><a href="https://imgtu.com/i/bgRC90"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bgRC90.png"                      alt="bgRC90.png"                ></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目标网站: &lt;a class=&quot;link&quot;   href=&quot;https://www1.fang.com/&quot; &gt;https://www1.fang.com/&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;分析&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>字节抖音后端日常实习一面面经(部分)</title>
    <link href="http://example.com/2022/03/08/%E5%AD%97%E8%8A%82%E6%8A%96%E9%9F%B3%E5%90%8E%E7%AB%AF%E6%97%A5%E5%B8%B8%E5%AE%9E%E4%B9%A0%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F(%E9%83%A8%E5%88%86)/"/>
    <id>http://example.com/2022/03/08/%E5%AD%97%E8%8A%82%E6%8A%96%E9%9F%B3%E5%90%8E%E7%AB%AF%E6%97%A5%E5%B8%B8%E5%AE%9E%E4%B9%A0%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F(%E9%83%A8%E5%88%86)/</id>
    <published>2022-03-08T01:20:30.000Z</published>
    <updated>2022-03-08T02:33:11.210Z</updated>
    
    <content type="html"><![CDATA[<h4 id="MySQL的四个特性是什么"><a href="#MySQL的四个特性是什么" class="headerlink" title="MySQL的四个特性是什么?"></a>MySQL的四个特性是什么?</h4><ul><li>原子性</li><li>一致性</li><li>隔离性</li><li>持久性</li></ul><h4 id="MySQL的隔离级别有哪些"><a href="#MySQL的隔离级别有哪些" class="headerlink" title="MySQL的隔离级别有哪些?"></a>MySQL的隔离级别有哪些?</h4><p><a class="link"   href="http://lib.csdn.net/base/mysql" >数据库<i class="fas fa-external-link-alt"></i></a>事务的隔离级别有4个，由低到高依次为Read uncommitted、Read committed、Repeatable read、Serializable，这四个级别可以逐个解决<strong>脏读、不可重复读、幻读</strong>这几类问题</p><p><a href="https://imgtu.com/i/bcV7OP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/08/bcV7OP.png"                      alt="bcV7OP.png"                ></a></p><ul><li><p>Read Uncommitted(读未提交)</p><p>案例讲解:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">公司发工资了，领导把5000元打到singo的账号上，但是该事务并未提交，而singo正好去查看账户，发现工资已经到账，是5000元整，非常高兴。可是不幸的是，领导发现发给singo的工资金额不对，是2000元，于是迅速回滚了事务，修改金额后，将事务提交，最后singo实际的工资只有2000元，singo空欢喜一场。</span><br><span class="line"></span><br><span class="line">出现上述情况，即我们所说的脏读，两个并发的事务，“事务A：领导给singo发工资”、“事务B：singo查询工资账户”，事务B读取了事务A尚未提交的数据。</span><br><span class="line"></span><br><span class="line">当隔离级别设置为Read uncommitted时，就可能出现脏读，甚至不可重复读、幻读，如何避免脏读，请看下一个隔离级别</span><br></pre></td></tr></table></figure></li><li><p>Read Committed(读已提交)</p><p>案例讲解:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">singo拿着工资卡去消费，系统读取到卡里确实有2000元，而此时她的老婆也正好在网上转账，把singo工资卡的2000元转到另一账户，并在singo之前提交了事务，当singo扣款时，系统检查到singo的工资卡已经没有钱，扣款失败，singo十分纳闷，明明卡里有钱，为何......</span><br><span class="line"></span><br><span class="line">出现上述情况，即我们所说的不可重复读，两个并发的事务，“事务A：singo消费”、“事务B：singo的老婆网上转账”，事务A事先读取了数据，事务B紧接了更新了数据，并提交了事务，而事务A再次读取该数据时，数据已经发生了改变。</span><br><span class="line"></span><br><span class="line">当隔离级别设置为Read committed时，避免了脏读，但是可能会造成不可重复读。</span><br><span class="line"></span><br><span class="line">大多数数据库的默认级别就是Read committed，比如SqlServer , Oracle，如何解决不可重复读这一问题，请看下一个隔离级别</span><br></pre></td></tr></table></figure></li><li><p>Repeatable Read(可重复读)</p><p>案例讲解:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">当隔离级别设置为Repeatable read时，可以避免不可重复读。当singo拿着工资卡去消费时，一旦系统开始读取工资卡信息（即事务开始），singo的老婆就不可能对该记录进行修改，也就是singo的老婆不能在此时转账。</span><br><span class="line"></span><br><span class="line">虽然Repeatable read避免了不可重复读，但还有可能出现幻读。</span><br><span class="line"></span><br><span class="line">singo的老婆工作在银行部门，她时常通过银行内部系统查看singo的信用卡消费记录。有一天，她正在查询到singo当月信用卡的总消费金额（select sum(amount) from transaction where month = 本月）为80元，而singo此时正好在外面胡吃海塞后在收银台买单，消费1000元，即新增了一条1000元的消费记录（insert transaction ... ），并提交了事务，随后singo的老婆将singo当月信用卡消费的明细打印到A4纸上，却发现消费总额为1080元，singo的老婆很诧异，以为出现了幻觉，幻读就这样产生了</span><br></pre></td></tr></table></figure></li><li><p>Serializable(串行化)</p><p>案例讲解:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Serializable是最高的事务隔离级别，同时代价也花费最高，性能很低，一般很少使用，在该级别下，事务顺序执行，不仅可以避免脏读、不可重复读，还避免了幻像读</span><br></pre></td></tr></table></figure></li></ul><p>详见: <a class="link"   href="https://juejin.cn/post/6844903805822173198" >https://juejin.cn/post/6844903805822173198<i class="fas fa-external-link-alt"></i></a></p><p>详见: <a class="link"   href="https://www.cnblogs.com/sunpengblog/p/11791475.html" >https://www.cnblogs.com/sunpengblog/p/11791475.html<i class="fas fa-external-link-alt"></i></a></p><h4 id="MySQL的默认隔离级别"><a href="#MySQL的默认隔离级别" class="headerlink" title="MySQL的默认隔离级别?"></a>MySQL的默认隔离级别?</h4><ul><li>REPEATABLE READ(<strong>可重复读</strong>): 事务A在读到一条数据之后，此时事务B对该数据进行了修改并提交，那么事务A再读该数据，读到的还是原来的内容</li></ul><h4 id="为什么MySQL选可重复读作为默认的隔离级别"><a href="#为什么MySQL选可重复读作为默认的隔离级别" class="headerlink" title="为什么MySQL选可重复读作为默认的隔离级别?"></a>为什么MySQL选可重复读作为默认的隔离级别?</h4><p>首先，我们知道有四种隔离级别，但是可串行化和读未提交两种很少使用，而大部分的关系型数据库的默认隔离级别都是RC(读已提交)，但是MySQL的默认隔离级别是RR(可重复读)；</p><p>为什么MySQL要独树一帜的选用RR的隔离级别呢?</p><p>这是一个上古遗留问题:</p><p>在MySQL的早期版本(大概是5.1)中，binlog的默认格式是语句格式。这时候如果启用了RC的隔离级别，binlog记录的顺序可能与实际不一致。所以系统做了一个判断，如果隔离级别为RC，则binlog格式必须要是Mix或者row，<strong>由于当时的默认参数binlog的默认格式是语句格式，所以隔离级别的默认值就设置到了RR</strong></p><h4 id="MySQL的可重复读是如何实现的"><a href="#MySQL的可重复读是如何实现的" class="headerlink" title="MySQL的可重复读是如何实现的?"></a>MySQL的可重复读是如何实现的?</h4><p>InnoDB在每行记录后面保存两个隐藏的列来，分别保存了这个行的创建时间和行的删除时间。这里存储的并不是实际的时间值,而是系统版本号，当数据被修改时，版本号加1，在读取事务开始时，系统会给当前读事务一个版本号，事务会读取版本号&lt;=当前版本号的数据，此时如果其他写事务修改了这条数据，那么这条数据的版本号就会加1，从而比当前读事务的版本号高，读事务自然而然的就读不到更新后的数据了</p><h4 id="读已提交和读未提交的区别"><a href="#读已提交和读未提交的区别" class="headerlink" title="读已提交和读未提交的区别?"></a>读已提交和读未提交的区别?</h4><p>详见上面<code>MySQL的隔离级别有哪些?</code>这个章节</p><h4 id="TCP和UDP的区别"><a href="#TCP和UDP的区别" class="headerlink" title="TCP和UDP的区别?"></a>TCP和UDP的区别?</h4><ul><li><strong>TCP是面向连接的</strong>(如打电话要先拨号，TCP通过三次握手)；<strong>UDP是无连接的</strong>，即发送数据之前不需要先建立连接(不需要握手)</li><li><strong>TCP提供可靠服务</strong>，也就是说，通过TCP传送的数据，无差错，不丢失，不重复，且按序到达；<strong>UDP尽最大努力交付，即不保证可靠交付</strong></li><li><strong>TCP面向字节流</strong>，实际上是TCP把数据看成一连串无结构的字节流；<strong>UDP是面向报文的</strong></li><li><strong>UDP没有拥塞控制</strong>，因此网络出现拥塞不会使源主机的发送速率降低(<strong>对实时应用很有用，如IP电话，实时视频会议等</strong>)</li><li>每一条<strong>TCP连接只能是点到点的</strong>；<strong>UDP支持一对一，一对多，多对一和多对多的交互通信</strong></li><li>TCP首部开销20字节；UDP的首部开销小，只有8个字节</li><li>TCP的逻辑通信信道是全双工的可靠信道，UDP则是不可靠信道</li></ul><h4 id="TCP的拥塞算法的了解"><a href="#TCP的拥塞算法的了解" class="headerlink" title="TCP的拥塞算法的了解?"></a>TCP的拥塞算法的了解?</h4><p>TCP协议有两个比较重要的控制算法，一个是流量控制，另一个就是阻塞控制</p><p>详情见: <a class="link"   href="https://segmentfault.com/a/1190000018360050" >https://segmentfault.com/a/1190000018360050<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;MySQL的四个特性是什么&quot;&gt;&lt;a href=&quot;#MySQL的四个特性是什么&quot; class=&quot;headerlink&quot; title=&quot;MySQL的四个特性是什么?&quot;&gt;&lt;/a&gt;MySQL的四个特性是什么?&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;原子性&lt;/li&gt;
&lt;li&gt;一致性&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于JavaScript的面试准备-3.7</title>
    <link href="http://example.com/2022/03/07/%E5%85%B3%E4%BA%8EJavaScript%E7%9A%84%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-3.7/"/>
    <id>http://example.com/2022/03/07/%E5%85%B3%E4%BA%8EJavaScript%E7%9A%84%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-3.7/</id>
    <published>2022-03-07T09:45:30.000Z</published>
    <updated>2022-03-07T10:43:42.509Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Js中let和const有什么用"><a href="#Js中let和const有什么用" class="headerlink" title="Js中let和const有什么用?"></a>Js中let和const有什么用?</h3><p>在现代js中，let＆const是创建变量的不同方式。 在早期的js中，咱们使用var关键字来创建变量。 let＆const关键字是在ES6版本中引入的，其目的是在js中创建两种不同类型的变量，一种是不可变的，另一种是可变的。</p><p><strong>const</strong>:它用于创建一个不可变变量。不可变变量是指其值在程序的整个生命周期中永不改变的变量。</p><p><strong>let</strong>: let用于创建一个可变变量，可变变量是像var这样的普通变量，可以任意次数地更改</p><h3 id="Js-中的主要有哪几类错误"><a href="#Js-中的主要有哪几类错误" class="headerlink" title="Js 中的主要有哪几类错误?"></a>Js 中的主要有哪几类错误?</h3><p><strong>加载时错误</strong>: 加载web页面时出现的错误(如语法错误)称为加载时错误，它会动态生成错误</p><p><strong>运行时错误</strong>: 由于滥用html语言中的命令而导致的错误</p><p><strong>逻辑错误</strong>: 这些错误是由于对具有不同操作的函数执行了错误的逻辑而导致的</p><h3 id="Js如何通过类别名获取dom元素"><a href="#Js如何通过类别名获取dom元素" class="headerlink" title="Js如何通过类别名获取dom元素"></a>Js如何通过类别名获取dom元素</h3><p>在 JS 中使用document.getElementsByClassName() 方法来获取具有类名的元素</p><h3 id="用纯JS编写一个程序来反转字符串"><a href="#用纯JS编写一个程序来反转字符串" class="headerlink" title="用纯JS编写一个程序来反转字符串"></a>用纯JS编写一个程序来反转字符串</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">str=<span class="string">&quot;jQuery&quot;</span>;</span><br><span class="line">str = str.split(<span class="string">&quot;&quot;</span>)</span><br><span class="line">str = str.reverse()</span><br><span class="line">str = str.join(<span class="string">&quot;&quot;</span>)</span><br><span class="line">alert(str);</span><br></pre></td></tr></table></figure><h3 id="JS中如何将页面重定向到另一个页面"><a href="#JS中如何将页面重定向到另一个页面" class="headerlink" title="JS中如何将页面重定向到另一个页面?"></a>JS中如何将页面重定向到另一个页面?</h3><ul><li><p>第一种</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.href：<span class="built_in">window</span>.location.href =“https:<span class="comment">//www.onlineinterviewquestions.com/”</span></span><br></pre></td></tr></table></figure></li><li><p>第二种</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location.replace： <span class="built_in">window</span>.location.replace(<span class="string">&quot; https://www.onlineinterviewquestions.com/;&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul><h3 id="解释下什么是promise"><a href="#解释下什么是promise" class="headerlink" title="解释下什么是promise?"></a>解释下什么是promise?</h3><p>promise是js中的一个对象，用于生成可能在将来产生结果的值。 值可以是已解析的值，也可以是说明为什么未解析该值的原因</p><p>promise可以有三种状态:</p><ul><li>pending: 初始状态，既不是成功也不是失败</li><li>fulfulled: 意味着操作完全成功</li><li>rejected: 意味着操作失败</li></ul><p>一个等待状态的promise对象能够成功后返回一个值，也能失败后带回一个错误当这两种情况发生的时候，处理函数会排队执行通过then方法会被调用</p><h3 id="数组去重的方法有哪些"><a href="#数组去重的方法有哪些" class="headerlink" title="数组去重的方法有哪些?"></a>数组去重的方法有哪些?</h3><ul><li><p>使用set</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uniquearray</span>(<span class="params">array</span>) </span>&#123; </span><br><span class="line"> <span class="keyword">let</span> unique_array= <span class="built_in">Array</span>.from(set(array)) </span><br><span class="line"> <span class="keyword">return</span> unique_array;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用filter</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unque_array</span> (<span class="params">arr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> unique_array = arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem, index, self</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> index == self.indexOf(elem);</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> unique_array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(unique_array(array_with_duplicates));</span><br></pre></td></tr></table></figure></li><li><p>for循环</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Array</span> dups_names = [<span class="string">&#x27;Ron&#x27;</span>, <span class="string">&#x27;Pal&#x27;</span>, <span class="string">&#x27;Fred&#x27;</span>, <span class="string">&#x27;Rongo&#x27;</span>, <span class="string">&#x27;Ron&#x27;</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dups_array</span>(<span class="params">dups_names</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">let</span> unique = &#123;&#125;;</span><br><span class="line"> names.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123;</span><br><span class="line">    If (!unique[i]) &#123;</span><br><span class="line">      unique[i] = <span class="literal">true</span>;    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Object</span>.keys(unique);&#125;   <span class="comment">// Ron, Pal, Fred, Rongo</span></span><br><span class="line">Dups_array(names);</span><br></pre></td></tr></table></figure></li></ul><h3 id="undefined，null-和-undeclared-有什么区别"><a href="#undefined，null-和-undeclared-有什么区别" class="headerlink" title="undefined，null 和 undeclared 有什么区别?"></a>undefined，null 和 undeclared 有什么区别?</h3><ul><li>null表示”没有对象”，即该处不应该有值，转为数值时为0，典型的用法是:<ul><li>作为函数的参数，表示该函数的参数不是对象</li><li>作为对象原型链的终点</li></ul></li><li>undefined表示”缺少值”，就是此处应该有一个值，但是还没有定义，转为数值时为NaN。典型用法是:<ul><li>变量被声明了，但没有赋值时，就等于undefined</li><li>调用函数时，应该提供的参数没有提供，该参数等于undefined</li><li>对象没有赋值的属性，该属性的值为undefined</li><li>函数没有返回值时，默认返回undefined</li></ul></li><li>undeclared：js语法错误，没有申明直接使用，js无法找到对应的上下文</li></ul><h3 id="Js的基本数据类型"><a href="#Js的基本数据类型" class="headerlink" title="Js的基本数据类型"></a>Js的基本数据类型</h3><p>Undefined、Null、Boolean、Number、Symbol 和 String</p><h3 id="如何给对象添加新属性"><a href="#如何给对象添加新属性" class="headerlink" title="如何给对象添加新属性"></a>如何给对象添加新属性</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">person.country= “India”;</span><br></pre></td></tr></table></figure><h3 id="JS中的深拷贝与浅拷贝的区别"><a href="#JS中的深拷贝与浅拷贝的区别" class="headerlink" title="JS中的深拷贝与浅拷贝的区别?"></a>JS中的深拷贝与浅拷贝的区别?</h3><p>深拷贝递归地复制新对象中的所有值或属性，而拷贝只复制引用</p><p>在深拷贝中，<strong>新对象中的更改不会影响原始对象</strong>，而在浅拷贝中，<strong>新对象中的更改，原始对象中也会跟着改</strong></p><p>在深拷贝中，原始对象不与新对象共享相同的属性，而在浅拷贝中，它们具有相同的属性</p><h3 id="如何在JavaScript中每x秒调用一个函数"><a href="#如何在JavaScript中每x秒调用一个函数" class="headerlink" title="如何在JavaScript中每x秒调用一个函数?"></a>如何在JavaScript中每x秒调用一个函数?</h3><p>在JS中，咱们使用函数 setInterval() 在每x秒内调用函数:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123; alert(<span class="string">&quot;Hello&quot;</span>); &#125;, <span class="number">3000</span>);</span><br></pre></td></tr></table></figure><h3 id="解释一下JS的展开操作符"><a href="#解释一下JS的展开操作符" class="headerlink" title="解释一下JS的展开操作符?"></a>解释一下JS的展开操作符?</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mid = [<span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newarray = [<span class="number">1</span>, <span class="number">2</span>, ...mid, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(newarray);</span><br><span class="line"></span><br><span class="line"><span class="comment">// [1, 2, 3, 4, 5, 6]</span></span><br></pre></td></tr></table></figure><h3 id="JS中的宿主对象与原生对象有何不同"><a href="#JS中的宿主对象与原生对象有何不同" class="headerlink" title="JS中的宿主对象与原生对象有何不同?"></a>JS中的宿主对象与原生对象有何不同?</h3><p><strong>宿主对象</strong>:这些是运行环境提供的对象。这意味着它们在不同的环境下是不同的。例如，浏览器包含像windows这样的对象，但是<strong>Node.js</strong>环境提供像Node List这样的对象</p><p><strong>原生对象</strong>:这些是JS中的内置对象。它们也被称为全局对象，因为如果使用JS，内置对象不受是运行环境影响</p><h3 id="JS中-和-区别是什么"><a href="#JS中-和-区别是什么" class="headerlink" title="JS中==和===区别是什么?"></a>JS中==和===区别是什么?</h3><h3 id="Js中的匿名函数是什么"><a href="#Js中的匿名函数是什么" class="headerlink" title="Js中的匿名函数是什么?"></a>Js中的匿名函数是什么?</h3><p>匿名函数：就是没有函数名的函数，如:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">x, y</span>)</span>&#123;</span><br><span class="line">    alert(x + y);  </span><br><span class="line">&#125;)(<span class="number">2</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><p>这里创建了一个匿名函数(在第一个括号内)，<strong>第二个括号用于调用该匿名函数，并传入参数</strong></p><h3 id="解释下什么是箭头函数"><a href="#解释下什么是箭头函数" class="headerlink" title="解释下什么是箭头函数?"></a>解释下什么是箭头函数?</h3><p>箭头函数是在es6或更高版本中编写函数表达式的简明方法。箭头函数不能用作构造函数，也不支持this，arguments，super或new.target关键字，它最适合非方法函数。</p><p>详见: <a class="link"   href="https://www.cnblogs.com/liyuanhong/articles/10139214.html" >https://www.cnblogs.com/liyuanhong/articles/10139214.html<i class="fas fa-external-link-alt"></i></a></p><h3 id="JS中有哪些不同类型的弹出框可用"><a href="#JS中有哪些不同类型的弹出框可用" class="headerlink" title="JS中有哪些不同类型的弹出框可用?"></a>JS中有哪些不同类型的弹出框可用?</h3><ul><li>Alert</li><li>Confirm</li><li>Prompt</li></ul><h3 id="如何将-JS-日期转换为ISO标准"><a href="#如何将-JS-日期转换为ISO标准" class="headerlink" title="如何将 JS 日期转换为ISO标准?"></a>如何将 JS 日期转换为ISO标准?</h3><p><strong>toISOString()</strong> 方法用于将js日期转换为ISO标准。 它使用ISO标准将js Date对象转换为字符串，如:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> n = date.toISOString();</span><br><span class="line"><span class="built_in">console</span>.log(n);</span><br><span class="line"><span class="comment">// YYYY-MM-DDTHH:mm:ss.sssZ</span></span><br></pre></td></tr></table></figure><h3 id="如何在JS中克隆对象"><a href="#如何在JS中克隆对象" class="headerlink" title="如何在JS中克隆对象?"></a>如何在JS中克隆对象?</h3><p>Object.assign() 方法用于在JS中克隆对象。如:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = &#123;<span class="attr">myProp</span>: <span class="string">&quot;value&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> y = <span class="built_in">Object</span>.assign(&#123;&#125;, x); </span><br></pre></td></tr></table></figure><h3 id="var和let的区别"><a href="#var和let的区别" class="headerlink" title="var和let的区别"></a>var和let的区别</h3><p>var是函数作用域，而let是块作用域。在函数内声明了var，整个函数内都是有效的，在for循环内定义了一个var变量，实际上其在for循环以外也是可以访问的，而let由于是块作用域，所以如果在块作用域内（for循环内）定义的变量，在其外面是不可被访问的</p><h3 id="解释一下-“use-strict”"><a href="#解释一下-“use-strict”" class="headerlink" title="解释一下 “use strict”?"></a>解释一下 “use strict”?</h3><p>使用“use strict”指令的目的是强制执行严格模式下的代码。 在严格模式下，咱们不能在不声明变量的情况下使用变量</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Js中let和const有什么用&quot;&gt;&lt;a href=&quot;#Js中let和const有什么用&quot; class=&quot;headerlink&quot; title=&quot;Js中let和const有什么用?&quot;&gt;&lt;/a&gt;Js中let和const有什么用?&lt;/h3&gt;&lt;p&gt;在现代js中，let＆c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>菜鸟教程上的JavaScript测验</title>
    <link href="http://example.com/2022/03/07/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B%E4%B8%8A%E7%9A%84JavaScript%E6%B5%8B%E9%AA%8C/"/>
    <id>http://example.com/2022/03/07/%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B%E4%B8%8A%E7%9A%84JavaScript%E6%B5%8B%E9%AA%8C/</id>
    <published>2022-03-07T09:17:30.000Z</published>
    <updated>2022-03-07T09:38:41.003Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://imgtu.com/i/by0Y4J"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/by0Y4J.png"                      alt="by0Y4J.png"                ></a></p><p><a href="https://imgtu.com/i/by0U3R"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/by0U3R.png"                      alt="by0U3R.png"                ></a></p><p><a href="https://imgtu.com/i/by00u6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/by00u6.png"                      alt="by00u6.png"                ></a></p><p><a href="https://imgtu.com/i/by0gCd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/by0gCd.png"                      alt="by0gCd.png"                ></a></p><p><a href="https://imgtu.com/i/byBF2R"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byBF2R.png"                      alt="byBF2R.png"                ></a></p><p>关于上题的解释: <a class="link"   href="https://www.cnblogs.com/wymbk/p/5775549.html" >https://www.cnblogs.com/wymbk/p/5775549.html<i class="fas fa-external-link-alt"></i></a></p><p><a href="https://imgtu.com/i/byBtZ8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byBtZ8.png"                      alt="byBtZ8.png"                ></a></p><p><a href="https://imgtu.com/i/byB0Rs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byB0Rs.png"                      alt="byB0Rs.png"                ></a></p><p><a href="https://imgtu.com/i/byB2oF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byB2oF.png"                      alt="byB2oF.png"                ></a></p><p><a href="https://imgtu.com/i/byBIQ1"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byBIQ1.png"                      alt="byBIQ1.png"                ></a></p><p><a href="https://imgtu.com/i/byBbdO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byBbdO.png"                      alt="byBbdO.png"                ></a></p><p><a href="https://imgtu.com/i/byDPw8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byDPw8.png"                      alt="byDPw8.png"                ></a></p><p><a href="https://imgtu.com/i/byDAYQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byDAYQ.png"                      alt="byDAYQ.png"                ></a></p><p><a href="https://imgtu.com/i/byDnO0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byDnO0.png"                      alt="byDnO0.png"                ></a></p><p><a href="https://imgtu.com/i/byDQTU"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byDQTU.png"                      alt="byDQTU.png"                ></a></p><p><a href="https://imgtu.com/i/byDOBV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byDOBV.png"                      alt="byDOBV.png"                ></a></p><p><a href="https://imgtu.com/i/byrZND"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byrZND.png"                      alt="byrZND.png"                ></a></p><p><a href="https://imgtu.com/i/bysEMn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/bysEMn.png"                      alt="bysEMn.png"                ></a></p><p><a href="https://imgtu.com/i/byyCex"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/07/byyCex.png"                      alt="byyCex.png"                ></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://imgtu.com/i/by0Y4J&quot;&gt;&lt;img  
                     lazyload
                     src=&quot;/images/loading.svg&quot;
                </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于MySQL的面试准备-3.7</title>
    <link href="http://example.com/2022/03/07/%E5%85%B3%E4%BA%8EMySQL%E7%9A%84%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-3.7/"/>
    <id>http://example.com/2022/03/07/%E5%85%B3%E4%BA%8EMySQL%E7%9A%84%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87-3.7/</id>
    <published>2022-03-07T02:08:30.000Z</published>
    <updated>2022-03-08T01:16:30.438Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于MySQL"><a href="#关于MySQL" class="headerlink" title="关于MySQL"></a>关于MySQL</h2><h3 id="连接MySQL的指令"><a href="#连接MySQL的指令" class="headerlink" title="连接MySQL的指令"></a>连接MySQL的指令</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>h <span class="operator">-</span>u <span class="operator">-</span>p</span><br></pre></td></tr></table></figure><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><ul><li><p>新建用户:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>设置与更改用户密码:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span> <span class="operator">=</span> PASSWORD(<span class="string">&#x27;newpassword&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>权限管理:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> name;  <span class="operator">/</span><span class="operator">/</span>查看name用户权限</span><br><span class="line"></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> testdb <span class="keyword">to</span> dba@<span class="string">&#x27;localhost&#x27;</span>　<span class="operator">/</span><span class="operator">/</span>给dba用户testdb数据库的所有权限</span><br></pre></td></tr></table></figure></li></ul><h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><ul><li><p>查看数据库:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> DATABASES;</span><br></pre></td></tr></table></figure></li><li><p>创建数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE db_name;　　<span class="operator">/</span><span class="operator">/</span>db_name为数据库名</span><br></pre></td></tr></table></figure></li><li><p>使用数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE db_name;</span><br></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE db_name;</span><br></pre></td></tr></table></figure></li></ul><h3 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h3><ul><li><p>创建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name(</span><br><span class="line">    id TINYINT UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,  <span class="operator">/</span><span class="operator">/</span>id值，无符号、非空、递增</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">60</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    score TINYINT UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY(id)  <span class="operator">/</span><span class="operator">/</span> 把id字段作为主键</span><br><span class="line">    )ENGINE<span class="operator">=</span>InnoDB  <span class="operator">/</span><span class="operator">/</span> 设置表的存储引擎，一般常用InnoDB和MyISAM；InnoDB可靠，支持事务；MyISAM高效不支持全文检索</span><br><span class="line">    <span class="keyword">DEFAULT</span> charset<span class="operator">=</span>utf8;  <span class="operator">/</span><span class="operator">/</span> 设置默认的编码，防止数据库中文乱码</span><br></pre></td></tr></table></figure><p>如果有条件的创建数据表还可以使用:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> tb_name(...</span><br></pre></td></tr></table></figure></li><li><p>复制表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_name2 <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_name;</span><br></pre></td></tr></table></figure></li><li><p>或者部分复制</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_name2 <span class="keyword">SELECT</span> id,name <span class="keyword">FROM</span> tb_name;</span><br></pre></td></tr></table></figure></li><li><p>创建临时表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> TEMPORARY <span class="keyword">TABLE</span> tb_name  <span class="operator">/</span><span class="operator">/</span> 这里和创建普通表一样</span><br></pre></td></tr></table></figure></li><li><p>查看数据库中可用的表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> TABLES;</span><br></pre></td></tr></table></figure></li><li><p>查看表的结构</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DESCRIBE</span> tb_name;</span><br></pre></td></tr></table></figure><p>也可以使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> COLUMNS <span class="keyword">in</span> tb_name;  <span class="operator">/</span><span class="operator">/</span> <span class="keyword">from</span>也可以</span><br></pre></td></tr></table></figure></li><li><p>删除表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> tb_name;</span><br></pre></td></tr></table></figure></li><li><p>表重命名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RENAME <span class="keyword">TABLE</span> name_old <span class="keyword">TO</span> name_new;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> name_old RENAME name_new;</span><br></pre></td></tr></table></figure></li></ul><h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><ul><li><p>更改表结构</p><p>示例如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_name <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> address <span class="type">varchar</span>(<span class="number">80</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_name <span class="keyword">DROP</span> address;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_name CHANGE score score <span class="type">SMALLINT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><ul><li><p>插入数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_name(id,name,score)<span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">140</span>),(<span class="keyword">NULL</span>,<span class="string">&#x27;张四&#x27;</span>,<span class="number">178</span>),(<span class="keyword">NULL</span>,<span class="string">&#x27;张五&#x27;</span>,<span class="number">134</span>);</span><br></pre></td></tr></table></figure><p>这里的插入多条数据直接在后边加上逗号，直接写入插入的数据即可；主键id是自增的列，可以不用写</p></li><li><p>插入检索出来的数据:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_name(name,score) <span class="keyword">SELECT</span> name,score <span class="keyword">FROM</span> tb_name2;</span><br></pre></td></tr></table></figure></li></ul><h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><ul><li><p>指定更新数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE tb_name <span class="keyword">SET</span> score<span class="operator">=</span><span class="number">189</span> <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><ul><li><p>删除数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> tb_name <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">3</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="条件控制"><a href="#条件控制" class="headerlink" title="条件控制"></a>条件控制</h3><ul><li><p>WHERE 语句:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_name <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">3</span>;</span><br></pre></td></tr></table></figure></li><li><p>HAVING 语句:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_name <span class="keyword">GROUP</span> <span class="keyword">BY</span> score <span class="keyword">HAVING</span> <span class="built_in">count</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">2</span></span><br></pre></td></tr></table></figure><p>关于having语句的使用: <a class="link"   href="https://www.cnblogs.com/sanzashu/p/11011227.html%EF%BC%8Chttps://www.runoob.com/sql/sql-having.html" >https://www.cnblogs.com/sanzashu/p/11011227.html，https://www.runoob.com/sql/sql-having.html<i class="fas fa-external-link-alt"></i></a></p></li><li><p>相关条件控制符:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">=</span>、<span class="operator">&gt;</span>、<span class="operator">&lt;</span>、<span class="operator">&lt;&gt;</span>、<span class="keyword">IN</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3.</span>.....)、<span class="keyword">BETWEEN</span> a <span class="keyword">AND</span> b、<span class="keyword">NOT</span>、<span class="keyword">AND</span> 、<span class="keyword">OR</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="MySQL正则表达式操作"><a href="#MySQL正则表达式操作" class="headerlink" title="MySQL正则表达式操作"></a>MySQL正则表达式操作</h3><ul><li><p>Mysql支持REGEXP的正则表达式:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tb_name <span class="keyword">WHERE</span> name REGEXP <span class="string">&#x27;^[A-D]&#x27;</span>   <span class="operator">/</span><span class="operator">/</span> 找出以A<span class="operator">-</span>D 为开头的name</span><br></pre></td></tr></table></figure></li><li><p>要注意特殊字符需要转义</p></li></ul><h3 id="MySQL的一些函数"><a href="#MySQL的一些函数" class="headerlink" title="MySQL的一些函数"></a>MySQL的一些函数</h3><ul><li><p>字符串连接–CONTAT()</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CONCAT(name,<span class="string">&#x27;=&gt;&#x27;</span>,score) <span class="keyword">FROM</span> tb_name</span><br></pre></td></tr></table></figure></li><li><p>数学函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AVG、SUM、MAX、MIN、COUNT</span><br></pre></td></tr></table></figure></li><li><p>文本处理函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TRIM、LOCATE、UPPER、LOWER、SUBSTRING</span><br></pre></td></tr></table></figure></li><li><p>运算符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span>、<span class="operator">-</span>、<span class="operator">*</span>、\</span><br></pre></td></tr></table></figure></li><li><p>时间函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">DATE</span>()、CURTIME()、<span class="keyword">DAY</span>()、<span class="keyword">YEAR</span>()、NOW().....</span><br></pre></td></tr></table></figure></li></ul><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><ul><li><p>分组查询可以按照指定的列进行分组:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> tb_name <span class="keyword">GROUP</span> <span class="keyword">BY</span> score <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>关于GROUP BY: <a class="link"   href="https://www.w3school.com.cn/sql/sql_groupby.asp" >https://www.w3school.com.cn/sql/sql_groupby.asp<i class="fas fa-external-link-alt"></i></a></p></li><li><p>条件使用having</p></li><li><p>ORDER BY排序:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">DESC</span><span class="operator">|</span><span class="keyword">ASC</span>　　　　<span class="operator">=</span><span class="operator">&gt;</span>按数据的降序和升序排列</span><br></pre></td></tr></table></figure></li></ul><h3 id="union规则"><a href="#union规则" class="headerlink" title="union规则"></a>union规则</h3><ul><li><p>可以执行两个语句(可以去除重复行)</p><p>详细参见: <a class="link"   href="https://www.cnblogs.com/ghostwu/p/8544333.html" >https://www.cnblogs.com/ghostwu/p/8544333.html<i class="fas fa-external-link-alt"></i></a></p></li></ul><h2 id="一些面试题"><a href="#一些面试题" class="headerlink" title="一些面试题"></a>一些面试题</h2><p>为什么互联网公司一般选择MySQL而不是Oracle?</p><p><strong>免费、流行、够用</strong></p><p>MySQL有哪些数据类型?</p><p><strong>MySQL支持多种类型，大致可以分为三类: 数值、日期/时间和字符串(字符)类型</strong></p><p>MySQL中varchar与char的区别?</p><p><strong>char是一种固定长度的类型，varchar则是一种可变长度的类型</strong></p><p>varchar(50)中的50代表的含义?</p><p><strong>varchar(50)中50的含义是最多存放50个字符，varchar(50)和varchar(200)存储<code>hello</code>所占空间一样，但后者在排序时会消耗更多内存，因为order by col采用fixe_length计算col长度，所以实际场景下，选择合适的varchar长度还是有必要的</strong></p><p>int(11)中的11代表什么含义?</p><p><strong>int(11)中的11，不影响字段存储的范围，只影响展示效果，比如，int(3)和int(6)，都可以显示6位以上的整数，但是，当数字不足3位或6位时，前面会用0补齐</strong></p><p>金钱相关的数据，应选择什么数据类型?</p><ul><li>方式一: 使用int或者bigint类型，如果需要存储到分的维度，需要 *100 进行放大</li><li>使用decimal类型，避免精度丢失</li></ul><p>一张表，里面有ID自增主键，当insert了17条记录之后，删除了第15、16、17条记录，然后把MySQL重启，再insert一条记录，这条记录的ID是18还是15?</p><p>一般情况下，我们创建的表是InnoDB存储引擎类型，如果新增一条记录(在不重启MySQL的情况下)，这条记录的ID是18；但是如果像以上情况，先删除然后重启再插入一条记录的话，那这条记录的ID是15；因为<strong>InnoDB存储引擎只会把自增主键的最大ID记录到内存中，所以重启数据库或对表进行optimize操作，都会使最大ID丢失</strong></p><p>表中有大字段X(例如: text类型，文本类型)，且字段X不会经常更新，主要以读为主，请问你是选择拆成子表，还是继续放在一起?，答出你这样选择的理由</p><ul><li><p>拆带来的问题: 连接消耗 + 存储拆分空间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果能容忍拆分带来的空间问题，拆的话最好和经常要查询的表的主键在物理结构上放置在一起减少连接消耗,使用一个文本列再加上一个全文索引来尽量抵消连接消耗</span><br></pre></td></tr></table></figure></li><li><p>不拆可能带来的问题: 查询性能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果能容忍不拆分带来的查询性能损失的话，上面的方案在某个极致条件下肯定会出现问题，那么不拆就是最好的选择</span><br></pre></td></tr></table></figure></li></ul><p>MySQL有哪些存储引擎?</p><ul><li><p><strong>InnoDB</strong></p></li><li><p><strong>MyISAM</strong></p></li><li><p><strong>MRG_MYISAM</strong></p></li><li><p><strong>MEMORY</strong></p></li><li><p><strong>BLACKHOLE</strong></p><p>目前<strong>MySQL默认的存储引擎是InnoDB</strong>，并且<strong>也是最主流的选择</strong>，主要原因是:</p></li><li><p>支持事物</p></li><li><p>支持行级锁和表级锁，能支持更多的并发量</p></li><li><p>查询不加锁，完全不影响查询</p></li><li><p>支持奔溃后恢复</p></li></ul><p><strong>在MySQL5.1以及之前的版本，默认的存储引擎是MyISAM</strong>，但是目前已经不再更新，且它有几个关键的缺点:</p><ul><li>不支持事物</li><li>使用表级锁，如果数据量大，一个插入操作锁定表后，其他请求都将阻塞</li></ul><p>请说说InnoDB的4大特性</p><ul><li>插入缓冲(insert buffer)</li><li>二次写(dobule writer)</li><li>自适应哈希索引(ah)</li><li>预读(read ahead)</li></ul><p>为什么select count(*) from table在innoDB比MyISAM慢?</p><p>对于select count(*) from table语句，在没有where条件的情况下，InnoDB比MyISAM可能会慢很多，尤其在大表的情况下，<strong>因为InnoDB是去实时统计结果，会全表扫描</strong>；而<strong>MyISAM内部维持了一个计数器，预存了结果</strong>，所以直接返回即可</p><p><strong>重点</strong>–什么是索引?</p><p>索引，<strong>类似于书籍的目录</strong>，想找到一本书的某个特定主题，需要先找到书的目录，定位对应的页码；MySQL中存储引擎使用类似的方式进行查询，先去索引中查找对应的值，然后根据匹配的索引找到对应的数据行</p><ul><li><p>什么是索引?</p><p>见这里: <a class="link"   href="https://blog.csdn.net/bjweimengshu/article/details/105108585" >https://blog.csdn.net/bjweimengshu/article/details/105108585<i class="fas fa-external-link-alt"></i></a></p></li><li><p>索引有什么好处?</p><ul><li><strong>提高数据的检索速度</strong>，降低数据库IO成本</li><li>降低数据排序成本，降低CPU消耗</li></ul></li><li><p>索引有什么坏处?</p><ul><li>占用存储空间: 索引实际上也是一张表，记录了主键与索引字段，一般以索文件的形式存储在磁盘上</li><li>降低更新表的速度: 表的数据发生了变化，对应索引也需要一起变更，从而降低了更新速度；否则索引指向的物理数据可能不对，这也是索引失效的原因之一</li></ul></li><li><p>索引的使用场景?</p><ul><li>对非常小的表，大部分情况全表扫描效率更高</li><li>对中大型表，索引非常有效</li><li>对特大型表，建立和使用索引的代价随着增长，可以使用分区技术来解决</li></ul></li><li><p>索引的类型?</p><ul><li>普通索引: 最基本的索引，没有任何约束</li><li>唯一索引: 与普通索引类似，但具有唯一性约束</li><li>主键索引: 特殊的唯一索引，不允许有空值</li><li>复合索引: 将多个列组合在一起创建索引，可以覆盖多个列</li><li>外键索引: 只有InnoDB类型的表才可以使用外建索引，保证数据的一致性、完整性和实现级联操作</li><li>全文索引: MySQL 自带的全文索引只能用于 InnoDB、MyISAM ，并且只能对英文进行全文检索，一般使用全文索引引擎</li></ul></li><li><p>索引的使用注意事项</p><ul><li>应尽量避免在 <code>WHERE</code> 子句中使用 <code>!=</code> 或 <code>&lt;&gt;</code> 操作符，否则将引擎放弃使用索引而进行全表扫描。优化器将无法通过索引来确定将要命中的行数,因此需要搜索该表的所有行</li><li>应尽量避免在 <code>WHERE</code> 子句中使用 <code>OR</code> 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：<code>SELECT id FROM t WHERE num = 10 OR num = 20</code></li><li>应尽量避免在 <code>WHERE</code> 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描</li><li>应尽量避免在 <code>WHERE</code> 子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描</li><li>不要在 <code>WHERE</code> 子句中的 <code>=</code> 左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引</li><li><code>LIKE</code> 查询，<code>%</code> 不能在前，因为无法使用索引。如果需要模糊匹配，可以使用全文索引</li></ul></li></ul><h3 id="内连接、左连接、右连接以及全连接查询"><a href="#内连接、左连接、右连接以及全连接查询" class="headerlink" title="内连接、左连接、右连接以及全连接查询"></a>内连接、左连接、右连接以及全连接查询</h3><h4 id="内连接查询"><a href="#内连接查询" class="headerlink" title="内连接查询"></a>内连接查询</h4><p>关键字: <strong>inner join…on</strong></p><p>语句: </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> a_table a <span class="keyword">inner</span> <span class="keyword">join</span> b_table b <span class="keyword">on</span> a.a_id <span class="operator">=</span> b.b_id;</span><br></pre></td></tr></table></figure><p>说明: 组合两个表中的记录，返回关联字段相符的记录，<strong>也就是返回两个表的交集(阴影)部分</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173658980.3n71eo8cs860.webp"                      alt="20181005173658980"                ></p><p>案例: 在boy表和girl表中查出两表hid字段一致的姓名(gname，bname),boy表和girl 表如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173111241.1gg9di3elj1c.webp"                      alt="20181005173111241"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173203764.2a1cfu2vx6zo.webp"                      alt="20181005173203764"                ></p><p>采用内连接查询方式，SQL语句如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> boy.hid,boy.bname,girl.gname <span class="keyword">FROM</span> boy <span class="keyword">INNER</span> <span class="keyword">JOIN</span> girl <span class="keyword">ON</span> girl.hid <span class="operator">=</span> boy.hid;</span><br></pre></td></tr></table></figure><p>查询结果如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173326725.3uo8mmub3b40.webp"                      alt="20181005173326725"                ></p><h4 id="左连接查询"><a href="#左连接查询" class="headerlink" title="左连接查询"></a>左连接查询</h4><p>关键字: <strong>left join on / left outer join on</strong></p><p>语句:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  <span class="operator">*</span> <span class="keyword">FROM</span> a_table a <span class="keyword">left</span> <span class="keyword">join</span> b_table b <span class="keyword">ON</span> a.a_id <span class="operator">=</span> b.b_id;</span><br></pre></td></tr></table></figure><p>说明: <strong>left join 是left outer join的简写，它的全称是左外连接，是外连接中的一种。 左(外)连接，左表(a_table)的记录将会全部表示出来，而右表(b_table)只会显示符合搜索条件的记录。右表记录不足的地方均为NULL</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005211357263.5d61bb9exo00.webp"                      alt="20181005211357263"                ></p><p>案例: 在boy表和girl 表中左连接查询，boy表和girl 表如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/1.3if7wcwes3y0.webp"                      alt="1"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/2.eyt7d9l08rc.webp"                      alt="2"                ></p><p>采用左连接查询方式，SQL语句如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> boy.hid,boy.bname,girl.gname <span class="keyword">FROM</span> boy <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> girl <span class="keyword">ON</span> girl.hid <span class="operator">=</span> boy.hid;</span><br></pre></td></tr></table></figure><p>查询结果如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005213127795.4005998ijic0.webp"                      alt="20181005213127795"                ></p><h4 id="右连接查询"><a href="#右连接查询" class="headerlink" title="右连接查询"></a>右连接查询</h4><p>关键字: <strong>right join on / right outer join on</strong></p><p>语句: <strong>SELECT * FROM a_table a right outer join b_table b on a.a_id = b.b_id;</strong></p><p>说明: <strong>right join是right outer join的简写，它的全称是右外连接，是外连接中的一种。与左(外)连接相反，右(外)连接，左表(a_table)只会显示符合搜索条件的记录，而右表(b_table)的记录将会全部表示出来。左表记录不足的地方均为NULL</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005213457811.4lswjrs1o5m0.webp"                      alt="20181005213457811"                ></p><p>案例解释: 在boy表和girl表中右连接查询，boy表和girl 表如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173111241-(2).4vok0qpf0ik0.webp"                      alt="20181005173111241-(2)"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173203764-(2).1zk4of1jk48w.webp"                      alt="20181005173203764-(2)"                ></p><p>采用内连接查询方式:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> boy.hid,boy.bname,girl.gname <span class="keyword">FROM</span> boy <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> girl <span class="keyword">ON</span> girl.hid <span class="operator">=</span> boy.hid;</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005213611391.53bdafp885g0.webp"                      alt="20181005213611391"                ></p><h4 id="全连接查询"><a href="#全连接查询" class="headerlink" title="全连接查询"></a>全连接查询</h4><p>关键字: <strong>union /union all</strong></p><p>语句: (select colum1,colum2…columN from tableA ) union (select colum1,colum2…columN from tableB );</p><p>或 (select colum1,colum2…columN from tableA ) union all (select colum1,colum2…columN from tableB );</p><p>使用union语句注意事项:</p><ol><li><p><strong>通过union连接的SQL它们分别单独取出的列数必须相同</strong></p></li><li><p><strong>用union 时，完全相等的行，将会被合并，union all则不会，由于合并比较耗时，一般不直接使用 union 进行合并，而是通常采用union all 进行合并</strong></p></li><li><p><strong>被union 连接的sql 子句，单个子句中不用写order by ，因为不会有排序的效果。但可以对最终的结果集进行排序</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> id,name <span class="keyword">from</span> A <span class="keyword">order</span> <span class="keyword">by</span> id) <span class="keyword">union</span> <span class="keyword">all</span> (<span class="keyword">select</span> id,name <span class="keyword">from</span> B <span class="keyword">order</span> <span class="keyword">by</span> id); <span class="operator">/</span><span class="operator">/</span>没有排序效果</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">select</span> id,name <span class="keyword">from</span> A ) <span class="keyword">union</span> <span class="keyword">all</span> (<span class="keyword">select</span> id,name <span class="keyword">from</span> B ) <span class="keyword">order</span> <span class="keyword">by</span> id; <span class="operator">/</span><span class="operator">/</span>有排序效果</span><br></pre></td></tr></table></figure></li></ol><p>案例解释: 将a表和b表合并，表结构如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006095856974.z0992l6jn0g.webp"                      alt="20181006095856974"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006095918725.41oi5sczcww0.webp"                      alt="20181006095918725"                ></p><h5 id="union全连接查询"><a href="#union全连接查询" class="headerlink" title="union全连接查询"></a>union全连接查询</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">select</span> id,num <span class="keyword">from</span> a) <span class="keyword">union</span> (<span class="keyword">select</span> id,num <span class="keyword">from</span> b);</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006100043809.6tcq9p7hvew0.webp"                      alt="20181006100043809"                ></p><p>nuion会自动将完全重复的数据去除掉，a、b表中”c”的值都为15，所以只会显示一行</p><h5 id="union-all全连接查询"><a href="#union-all全连接查询" class="headerlink" title="union all全连接查询"></a>union all全连接查询</h5><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006100254174.6atmwcvn4g40.webp"                      alt="20181006100254174"                ></p><p>union all会保留那些重复的数据</p><h3 id="幻读、脏读、不可重复读"><a href="#幻读、脏读、不可重复读" class="headerlink" title="幻读、脏读、不可重复读"></a>幻读、脏读、不可重复读</h3><h4 id="事物隔离级别"><a href="#事物隔离级别" class="headerlink" title="事物隔离级别"></a>事物隔离级别</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20200919145047911.6w3l5hj97r80.webp"                      alt="20200919145047911"                ></p><h4 id="什么是幻读"><a href="#什么是幻读" class="headerlink" title="什么是幻读"></a>什么是幻读</h4><p>幻读: 当用户读取某一范围的数据行时，另一个事务又在该范围内插入了新行，当用户再读取该范围的数据行时，会发现有新的“幻影” 行</p><h4 id="什么是脏读"><a href="#什么是脏读" class="headerlink" title="什么是脏读"></a>什么是脏读</h4><p>脏读: 读取到了未提交的数据(如果事务这时候回滚了，那么第二个事务就读到了脏数据)</p><h4 id="什么是不可重复读"><a href="#什么是不可重复读" class="headerlink" title="什么是不可重复读"></a>什么是不可重复读</h4><p>同一个事务中，对于同一数据，执行完全相同的select语句时可能看到不一样的结果</p><h4 id="幻读与不可重复读的区别"><a href="#幻读与不可重复读的区别" class="headerlink" title="幻读与不可重复读的区别"></a>幻读与不可重复读的区别</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/Snipaste_2022-03-03_18-46-28.63myylheyc80.webp"                      alt="Snipaste_2022-03-03_18-46-28"                ></p><p>参考自: <a class="link"   href="https://blog.csdn.net/weixin_39762838/article/details/110864382" >https://blog.csdn.net/weixin_39762838/article/details/110864382<i class="fas fa-external-link-alt"></i></a></p><h3 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h3><p>详情见: <a class="link"   href="https://blog.csdn.net/gy99csdn/article/details/114490027" >https://blog.csdn.net/gy99csdn/article/details/114490027<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;关于MySQL&quot;&gt;&lt;a href=&quot;#关于MySQL&quot; class=&quot;headerlink&quot; title=&quot;关于MySQL&quot;&gt;&lt;/a&gt;关于MySQL&lt;/h2&gt;&lt;h3 id=&quot;连接MySQL的指令&quot;&gt;&lt;a href=&quot;#连接MySQL的指令&quot; class=&quot;head</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Go入门指南第二章-安装与运行环境以及与C/C++语言交互</title>
    <link href="http://example.com/2022/03/05/Go%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%AE%89%E8%A3%85%E4%B8%8E%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E4%BB%A5%E5%8F%8A%E4%B8%8ECC++%E8%AF%AD%E8%A8%80%E4%BA%A4%E4%BA%92/"/>
    <id>http://example.com/2022/03/05/Go%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E5%AE%89%E8%A3%85%E4%B8%8E%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%E4%BB%A5%E5%8F%8A%E4%B8%8ECC++%E8%AF%AD%E8%A8%80%E4%BA%A4%E4%BA%92/</id>
    <published>2022-03-05T08:54:30.000Z</published>
    <updated>2022-03-05T10:50:04.921Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h4><p>国情原因 <a class="link"   href="https://golang.org/" >https://golang.org/<i class="fas fa-external-link-alt"></i></a> 偶尔会访问不了，新手要下载 Go 官方的提供的安装包经常会受阻。解决方法是使用可信任的其他镜像进行下载，推荐这两个:</p><ul><li><a class="link"   href="https://golang.google.cn/dl/" >https://golang.google.cn/dl/<i class="fas fa-external-link-alt"></i></a></li><li><a class="link"   href="https://gomirrors.org/" >https://gomirrors.org/<i class="fas fa-external-link-alt"></i></a></li></ul><p>打开给定的链接我们会看到如下图片:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2022-03-05_17-03-55.4yha93wkms40.webp"                      alt="Snipaste_2022-03-05_17-03-55"                ></p><p>然后我们可以点击Download下载go的安装包</p><p>在win下:</p><p>下载后直接双击msi文件安装，默认安装在C:\Program Files\Go，安装完成后默认会在环境变量Path后添加Go安装目录下的bin目录C:\Program Files\Go\bin\，并添加环境变量GOROOT，值为Go安装根目录C:\Program Files\Go\</p><p>验证是否安装成功，在运行中输入 cmd 打开命令行工具，在提示符下输入 go env，出现以下画面就是安装成功:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2022-03-05_17-27-52.yre88dgn9q8.webp"                      alt="Snipaste_2022-03-05_17-27-52"                ></p><h4 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h4><p>添加国内代理，否则很多包无法下载:</p><p>将Go默认的代理替换为以下代理:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go env -w GOPROXY=https://goproxy.cn,direct</span><br></pre></td></tr></table></figure><h4 id="IDE的选择"><a href="#IDE的选择" class="headerlink" title="IDE的选择"></a>IDE的选择</h4><p>目前可选的IDE有很多，如VsCode，goland，subline等，我推荐使用goland，然后去安装一些插件</p><h4 id="安装目录清单"><a href="#安装目录清单" class="headerlink" title="安装目录清单"></a>安装目录清单</h4><p>你的 Go 安装目录（ $GOROOT ）的文件夹结构应该如下所示:</p><p>README.md, AUTHORS, CONTRIBUTORS, LICENSE，然后就是以下的一些文件:</p><ul><li>/bin: 包含可执行文件，如: 编译器，Go 工具</li><li>/doc: 包含示例程序，代码工具，本地文档等</li><li>/lib: 包含文档模版</li><li>/misc: 包含与支持Go编辑器有关的配置文件以及 cgo 的示例</li><li>/os_arch: 包含标准库的包的对象文件（ .a ）</li><li>/src: 包含源代码构建脚本和标准库的包的完整源代码（Go 是一门开源语言）</li><li>/src/cmd: 包含 Go 和 C 的编译器和命令行脚本</li></ul><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><h4 id="Go运行时-runtime"><a href="#Go运行时-runtime" class="headerlink" title="Go运行时(runtime)"></a>Go运行时(runtime)</h4><p>尽管 Go 编译器产生的是本地可执行代码，这些代码仍旧运行在Go的 runtime（这部分的代码可以在<br>runtime包中找到）当中。这个 runtime类似Java和.NET语言所用到的虚拟机，它负责管理包括内存<br>分配、垃圾回收、栈处理、goroutine、channel、切片（slice）、map 和反射<br>（reflection）等等。<br>runtime 主要由 C 语言编写（Go 1.5 开始自举），并且是每个 Go 包的最顶级包。你可以在目录<br>$GOROOT/src/runtime 中找到相关内容。<br>垃圾回收器 Go 拥有简单却高效的标记-清除回收器。它的主要思想来源于 IBM 的可复用垃圾回收器，旨<br>在打造一个高效、低延迟的并发回收器。目前 gccgo 还没有回收器，同时适用 gc 和 gccgo 的新回收器<br>正在研发中。使用一门具有垃圾回收功能的编程语言不代表你可以避免内存分配所带来的问题，分配和回收内容都是消耗 CPU 资源的一种行为</p><p>Go 的可执行文件都比相对应的源代码文件要大很多，这恰恰说明了 Go 的 runtime 嵌入到了每一个可执<br>行文件当中。当然，在部署到数量巨大的集群时，较大的文件体积也是比较头疼的问题。但总得来说，Go<br>的部署工作还是要比 Java 和 Python 轻松得多。因为 Go 不需要依赖任何其它文件，它只需要一个单独的<br>静态文件，这样你也不会像使用其它语言一样在各种不同版本的依赖文件之间混淆。</p><h4 id="Go解释器"><a href="#Go解释器" class="headerlink" title="Go解释器"></a>Go解释器</h4><p>因为 Go 具有像动态语言那样快速编译的能力，自然而然地就有人会问 Go 语言能否在 REPL（read-eval-print loop）编程环境下实现。Sebastien Binet 已经使用这种环境实现了一个 Go 解释器，你可以在这个页面找到：<a class="link"   href="https://github.com/sbinet/igo%E3%80%82" >https://github.com/sbinet/igo。<i class="fas fa-external-link-alt"></i></a></p><p>什么是REPL编程环境: <a class="link"   href="https://blog.csdn.net/qq_39839745/article/details/86499612" >https://blog.csdn.net/qq_39839745/article/details/86499612<i class="fas fa-external-link-alt"></i></a></p><h4 id="格式化代码"><a href="#格式化代码" class="headerlink" title="格式化代码"></a>格式化代码</h4><p>Go 开发团队不想要 Go 语言像许多其它语言那样总是在为代码风格而引发无休止的争论，浪费大量宝贵<br>的开发时间，因此他们制作了一个工具： go fmt （ gofmt ）。这个工具可以将你的源代码格式化成符合<br>官方统一标准的风格，属于语法风格层面上的小型重构。遵循统一的代码风格是 Go 开发中无可撼动的铁<br>律，因此你必须在编译或提交版本管理系统之前使用 gofmt 来格式化你的代码。<br>尽管这种做法也存在一些争论，但使用 gofmt 后你不再需要自成一套代码风格而是和所有人使用相同的<br>规则。这不仅增强了代码的可读性，而且在接手外部 Go 项目时，可以更快地了解其代码的含义。此外，<br>大多数开发工具也都内置了这一功能。<br>Go 对于代码的缩进层级方面使用 tab 还是空格并没有强制规定，一个 tab 可以代表 4 个或 8 个空格。在<br>实际开发中，1 个 tab 应该代表 4 个空格，而在本身的例子当中，每个 tab 代表 8 个空格。至于开发工<br>具方面，一般都是直接使用 tab 而不替换成空格。<br>在命令行输入 gofmt –w program.go 会格式化该源文件的代码然后将格式化后的代码覆盖原始内容<br>（如果不加参数 -w 则只会打印格式化后的结果而不重写文件）； gofmt -w *.go 会格式化并重写所有<br>Go 源文件； gofmt map1 会格式化并重写 map1 目录及其子目录下的所有 Go 源文件。<br>gofmt 也可以通过在参数 -r 后面加入用双引号括起来的替换规则实现代码的简单重构，规则的格式：<br>&lt;原始内容&gt; -&gt; &lt;替换内容&gt; </p><p>实例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gofmt -r “(a) -&gt; a” –w *.go</span><br></pre></td></tr></table></figure><p>上面的代码会将源文件中没有意义的括号去掉</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gofmt -r “a[n:<span class="built_in">len</span>(a)] -&gt; a[n:]” –w *.go</span><br></pre></td></tr></table></figure><p>上面的代码会将源文件中多余的 len(a) 去掉</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gofmt –r ‘A.Func1(a,b) -&gt; A.Func2(b,a)’ –w *.go</span><br></pre></td></tr></table></figure><p>上面的代码会将源文件中符合条件的函数的参数调换位置</p><p>如果想要了解有关 gofmt 的更多信息，请访问该页面：<a class="link"   href="http://golang.org/cmd/gofmt/" >http://golang.org/cmd/gofmt/<i class="fas fa-external-link-alt"></i></a></p><h4 id="生成代码文档"><a href="#生成代码文档" class="headerlink" title="生成代码文档"></a>生成代码文档</h4><p>go doc 工具会从 Go 程序和包文件中提取顶级声明的首行注释以及每个对象的相关注释，并生成相关文<br>档</p><p>它也可以作为一个提供在线文档浏览的 web 服务器，<a class="link"   href="http://golang.org/" >http://golang.org<i class="fas fa-external-link-alt"></i></a> 就是通过这种形式实现的</p><p>一般用法:</p><ul><li>go doc package: </li><li>例如： go doc fmt 会显示使用 godoc 生成的 fmt 包的文档注释</li><li>go doc package/subpackage: 获取子包的文档注释，例如： go doc container/list</li><li>go doc package function: 获取某个函数在某个包中的文档注释，例如： go doc fmt Printf 会显<br>示有关 fmt.Printf() 的使用说明</li></ul><p>这个工具只能获取在 Go 安装目录下 …/go/src 中的注释内容。此外，它还可以作为一个本地文档浏览<br>web 服务器。在命令行输入 godoc -http=:6060 ，然后使用浏览器打开 <a class="link"   href="http://localhost:6060/" >http://localhost:6060<i class="fas fa-external-link-alt"></i></a> 后，你<br>就可以看到本地文档浏览服务器提供的页面。<br>godoc 也可以用于生成非标准库的 Go 源码文件的文档注释，在后面我们会介绍</p><p>如果想要获取更多有关 godoc 的信息，请访问该页面：<a class="link"   href="http://golang.org/cmd/godoc/" >http://golang.org/cmd/godoc/<i class="fas fa-external-link-alt"></i></a></p><h4 id="其他工具"><a href="#其他工具" class="headerlink" title="其他工具"></a>其他工具</h4><ul><li>go install: 是安装 Go 包的工具，类似 Ruby 中的 rubygems。主要用于安装非标准库的包文件，将<br>源代码编译成对象文件</li><li>go fix: 用于将你的 Go 代码从旧的发行版迁移到最新的发行版，它主要负责简单的、重复的、枯燥无<br>味的修改工作，如果像 API 等复杂的函数修改，工具则会给出文件名和代码行数的提示以便让开发人员快速定位并升级代码。Go 开发团队一般也使用这个工具升级 Go 内置工具以及 谷歌内部项目的代码。 go fix 之所以能够正常工作是因为 Go 在标准库就提供生成抽象语法树和通过抽象语法树对代码进行还原的功能。该工具会尝试更新当前目录下的所有 Go 源文件，并在完成代码更新后在控制台输出相关的文件名称</li><li>go test 是一个轻量级的单元测试框架（第 13 章）</li></ul><h4 id="Go性能说明"><a href="#Go性能说明" class="headerlink" title="Go性能说明"></a>Go性能说明</h4><p>根据 Go 开发团队和基本的算法测试，Go 语言与 C 语言的性能差距大概在 10%~20% 之间（ 译者注：<br>由于出版时间限制，该数据应为 2013 年 3 月 28 日之前产生 ）。虽然没有官方的性能标准，但是与其它<br>各个语言相比已经拥有非常出色的表现。<br>如果说 Go 语言的执行效率大约比 C++ 慢 20% 也许更有实际意义。保守估计在相同的环境和执行目标的<br>情况下，Go 程序比 Java 或 Scala 应用程序要快上 2 倍，并比这两门语言使用少占用 70% 的内存。在很<br>多情况下这种比较是没有意义的，因为像谷歌这样拥有成千上万台服务器的公司都抛弃 C++ 而开始将 Go用于生产环境已经足够说明它本身所具有的优势。<br>时下流行的语言大都是运行在虚拟机上，如：Java 和 Scala 使用的 JVM，C# 和 VB.NET 使用的 .NET<br>CLR。尽管虚拟机的性能已经有了很大的提升，但任何使用 JIT 编译器和脚本语言解释器的编程语言<br>（Ruby、Python、Perl 和 JavaScript）在 C 和 C++ 的绝对优势下甚至都无法在性能上望其项背。<br>如果说 Go 比 C++ 要慢 20%，那么 Go 就要比任何非静态和编译型语言快 2 到 10 倍，并且能够更加高<br>效地使用内存。其实比较多门语言之间的性能是一种非常猥琐的行为，因为任何一种语言都有其所擅长和薄弱的方面。例如在处理文本方面，那些只处理纯字节的语言显然要比处理 Unicode 这种更为复杂编码的语言要出色的多。有些人可能认为使用两种不同的语言实现同一个目标能够得出正确的结论，但是很多时候测试者可能对一门语言非常了解而对另一门语言只是大概明白，测试者对程序编写的手法在一定程度也会影响结果的公平性，因此测试程序应该分别由各自语言的擅长者来编写，这样才能得到具有可比性的结果。另外，像在统计学方面，人们很难避免人为因素对结果的影响，所以这在严格意义上并不是科学。还要注意的是，测试结果的可比性还要根据测试目标来区别，例如很多发展十多年的语言已经针对各类问题拥有非常成熟的类库，而作为一门新生语言的 Go 语言，并没有足够的时间来推导各类问题的最佳解决方案。</p><ul><li><p>比较 Go 和 Python 在简单的 web 服务器方面的性能，单位为传输量每秒:</p><p>原生的 Go http 包要比 web.py 快 7 至 8 倍，如果使用 web.go 框架则稍微差点，比 web.py 快 6<br>至 7 倍。在 Python 中被广泛使用的 tornado 异步服务器和框架在 web 环境下要比 web.py 快很<br>多，Go 大概只比它快 1.2 至 1.5 倍</p></li><li><p>Go 和 Python 在一般开发的平均水平测试中，Go 要比 Python 3 快 25 倍左右，少占用三分之二的<br>内存，但比 Python 大概多写一倍的代码</p></li></ul><h4 id="与其他语言进行交互"><a href="#与其他语言进行交互" class="headerlink" title="与其他语言进行交互"></a>与其他语言进行交互</h4><h4 id="与C进行交互"><a href="#与C进行交互" class="headerlink" title="与C进行交互"></a>与C进行交互</h4><p>工具 cgo 提供了对 FFI（外部函数接口）的支持，能够使用 Go 代码安全地调用 C 语言库，你可以访问<br>cgo 文档主页：<a class="link"   href="http://golang.org/cmd/cgo%E3%80%82cgo" >http://golang.org/cmd/cgo。cgo<i class="fas fa-external-link-alt"></i></a> 会替代 Go 编译器来产生可以组合在同一个包中的<br>Go 和 C 代码。在实际开发中一般使用 cgo 创建单独的 C 代码包</p><p>如果你想要在你的 Go 程序中使用 cgo，则必须在单独的一行使用 import “C” 来导入，一般来说你可能<br>还需要 import “unsafe”</p><p>然后，你可以在 import “C” 之前使用注释（单行或多行注释均可）的形式导入 C 语言库（甚至有效的<br>C 语言代码），它们之间没有空行，例如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// <span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line">// <span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;C&quot;</span></span><br></pre></td></tr></table></figure><p>名称 “C” 并不属于标准库的一部分，这只是 cgo 集成的一个特殊名称用于引用 C 的命名空间。在这个命<br>名空间里所包含的 C 类型都可以被使用，例如 C.uint 、 C.long 等等，还有 libc 中的函数，C.random() 等也可以被调用</p><p>当你想要使用某个类型作为 C 中函数的参数时，必须将其转换为 C 中的类型，反之亦然，例如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var i <span class="built_in">int</span></span><br><span class="line">C.uint(i) // 从 Go 中的 <span class="built_in">int</span> 转换为 C 中的无符号 <span class="built_in">int</span></span><br><span class="line"><span class="built_in">int</span>(C.random()) // 从 C 中 random() 函数返回的 long 转换为 Go 中的 <span class="built_in">int</span></span><br></pre></td></tr></table></figure><p>下面的 2 个 Go 函数 Random() 和 Seed() 分别调用了 C 中的 C.random() 和 C.srandom():</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package rand</span><br><span class="line">// <span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">func Random() <span class="built_in">int</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">int</span>(C.random())</span><br><span class="line">&#125;</span><br><span class="line">func Seed(i <span class="built_in">int</span>) &#123;</span><br><span class="line">C.srandom(C.uint(i))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C 当中并没有明确的字符串类型，如果你想要将一个 string 类型的变量从 Go 转换到 C 时，可以使用<br>C.CString(s) ；同样，可以使用 C.GoString(cs) 从 C 转换到 Go 中的 string 类型</p><p>Go 的内存管理机制无法管理通过 C 代码分配的内存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defer C.free(unsafe.Pointer(Cvariable))</span><br></pre></td></tr></table></figure><p>这一行最好紧跟在使用 C 代码创建某个变量之后，这样就不会忘记释放内存了。下面的代码展示了如何使用 cgo 创建变量、使用并释放其内存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">package <span class="built_in">print</span></span><br><span class="line">// <span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line">// <span class="comment">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;unsafe&quot;</span></span><br><span class="line">func Print(s string) &#123;</span><br><span class="line">cs := C.CString(s)</span><br><span class="line">defer C.free(unsafe.Pointer(cs))</span><br><span class="line">C.fputs(cs, (*C.FILE)(C.stdout))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="与C-进行交互"><a href="#与C-进行交互" class="headerlink" title="与C++进行交互"></a>与C++进行交互</h4><p>SWIG（简化封装器和接口生成器）支持在 Linux 系统下使用 Go 代码调用 C 或者 C++ 代码。这里有一<br>些使用 SWIG 的注意事项:</p><ul><li>编写需要封装的库的 SWIG 接口</li><li>SWIG 会产生 C 的存根函数</li><li>这些库可以使用 cgo 来调用</li><li>相关的 Go 文件也可以被自动生成这类接口支持方法重载、多重继承以及使用 Go 代码实现 C++ 的抽象类，目前使用 SWIG 存在的一个问题是它无法支持所有的 C++ 库，比如说它就无法解析TObject.h</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;h4 id=&quot;下载安装包&quot;&gt;&lt;a href=&quot;#下载安装包&quot; class=&quot;headerlink&quot; title=&quot;下载安装包&quot;&gt;&lt;/a&gt;下载安装</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Go入门指南第一章-Go语言的起源</title>
    <link href="http://example.com/2022/03/05/Go%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%E7%AC%AC%E4%B8%80%E7%AB%A0-Go%E8%AF%AD%E8%A8%80%E7%9A%84%E8%B5%B7%E6%BA%90/"/>
    <id>http://example.com/2022/03/05/Go%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%E7%AC%AC%E4%B8%80%E7%AB%A0-Go%E8%AF%AD%E8%A8%80%E7%9A%84%E8%B5%B7%E6%BA%90/</id>
    <published>2022-03-05T08:48:30.000Z</published>
    <updated>2022-03-05T08:51:31.016Z</updated>
    
    <content type="html"><![CDATA[<h3 id="起源与发展"><a href="#起源与发展" class="headerlink" title="起源与发展"></a>起源与发展</h3><p>2007 年 9 月 21 日：雏形设计</p><p>2009 年 11 月 10日：首次公开发布</p><p>2010 年 1 月 8 日：当选 2009 年年度语言</p><p>2010 年 5 月：谷歌投入使用</p><p>2011 年 5 月 5 日：Google App Engine 支持 Go 语言</p><h3 id="语言的主要特性"><a href="#语言的主要特性" class="headerlink" title="语言的主要特性"></a>语言的主要特性</h3><p>因为 Go 语言没有类和继承的概念，所以它和 Java 或 C++ 看起来并不相同。但是它通过接口<br>（interface）的概念来实现多态性。Go 语言有一个清晰易懂的轻量级类型系统，在类型之间也没有层级<br>之说。因此可以说这是一门混合型的语言。<br>在传统的面向对象语言中，使用面向对象编程技术显得非常的臃肿，它们总是通过复杂的模式来构建庞大<br>的类型层级，这违背了编程语言应该提升生产力的宗旨。<br>函数是 Go 语言中的基本构件，它们的使用方法非常灵活。在第六章，我们会看到 Go 语言在函数式编程<br>方面的基本概念。<br>Go 语言使用静态类型，所以它是类型安全的一门语言，加上通过构建到本地代码，程序的执行速度也非<br>常快。<br>作为强类型语言，隐式的类型转换是不被允许的，记住一条原则：让所有的东西都是显式的。<br>Go 语言其实也有一些动态语言的特性（通过关键字 var ），所以它对那些逃离 Java 和 .Net 世界而使用<br>Python、Ruby、PHP 和 JavaScript 的开发者们也具有很大的吸引力。<br>Go 语言支持交叉编译，比如说你可以在运行 Linux 系统的计算机上开发运行下 Windows 下运行的应用<br>程序。这是第一门完全支持 UTF-8 的编程语言，这不仅体现在它可以处理使用 UTF-8 编码的字符串，就<br>连它的源码文件格式都是使用的 UTF-8 编码。Go 语言做到了真正的国际化！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;起源与发展&quot;&gt;&lt;a href=&quot;#起源与发展&quot; class=&quot;headerlink&quot; title=&quot;起源与发展&quot;&gt;&lt;/a&gt;起源与发展&lt;/h3&gt;&lt;p&gt;2007 年 9 月 21 日：雏形设计&lt;/p&gt;
&lt;p&gt;2009 年 11 月 10日：首次公开发布&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>三小时带你入门Django--笔记</title>
    <link href="http://example.com/2022/03/05/%E4%B8%89%E5%B0%8F%E6%97%B6%E5%B8%A6%E4%BD%A0%E5%85%A5%E9%97%A8Django/"/>
    <id>http://example.com/2022/03/05/%E4%B8%89%E5%B0%8F%E6%97%B6%E5%B8%A6%E4%BD%A0%E5%85%A5%E9%97%A8Django/</id>
    <published>2022-03-05T07:36:30.000Z</published>
    <updated>2022-03-05T08:25:32.762Z</updated>
    
    <content type="html"><![CDATA[<h1 id="课程内容所需要的基础"><a href="#课程内容所需要的基础" class="headerlink" title="课程内容所需要的基础"></a>课程内容所需要的基础</h1><p><a href="https://imgtu.com/i/bd9v8A"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bd9v8A.png"                      alt="bd9v8A.png"                ></a></p><ol start="2"><li><p>Django简介</p><p>首先介绍Python web三大框架：</p><p><a href="https://imgtu.com/i/bdC9Df"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdC9Df.png"                      alt="bdC9Df.png"                ></a></p><p>从下图可以看出Django是主角：</p><p><a href="https://imgtu.com/i/bdCV8s"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCV8s.png"                      alt="bdCV8s.png"                ></a></p><p>下面开始介绍主流框架Django：<br><a href="https://imgtu.com/i/bdCnK0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCnK0.png"                      alt="bdCnK0.png"                ></a></p><p><a href="https://imgtu.com/i/bdCurV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCurV.png"                      alt="bdCurV.png"                ></a></p></li><li><p>课程安排</p><p><a href="https://imgtu.com/i/bdCKbT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCKbT.png"                      alt="bdCKbT.png"                ></a></p></li></ol><h1 id="课程准备工作"><a href="#课程准备工作" class="headerlink" title="课程准备工作"></a>课程准备工作</h1><p><a href="https://imgtu.com/i/bdCQVU"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCQVU.png"                      alt="bdCQVU.png"                ></a></p><ol><li>在cmd中键入python提示python版本则安装成功</li><li>在cmd中键入conda提示conda版本则安装成功</li><li>在cmd中键入django-admin出现一长串提示命令则安装成功</li></ol><h1 id="章节导学"><a href="#章节导学" class="headerlink" title="章节导学"></a>章节导学</h1><p>在接下来一章我们将接触：</p><p><a href="https://imgtu.com/i/bdC8PJ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdC8PJ.png"                      alt="bdC8PJ.png"                ></a></p><h1 id="初识Django项目"><a href="#初识Django项目" class="headerlink" title="初识Django项目"></a>初识Django项目</h1><p>本节内容我们将了解：<br><a href="https://imgtu.com/i/bdCBIe"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCBIe.png"                      alt="bdCBIe.png"                ></a></p><ol><li><p>Django的基本命令<br>在终端键入django-admin将显示所有的django命令，如下图所示</p><p><a href="https://imgtu.com/i/bdCgMt"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCgMt.png"                      alt="bdCgMt.png"                ></a></p><p>以上命令中几个常用命令的用途是怎样的呢？我们来解读一下：</p><p><a href="https://imgtu.com/i/bdCTRs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCTRs.png"                      alt="bdCTRs.png"                ></a></p><p><a href="https://imgtu.com/i/bdC7zn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdC7zn.png"                      alt="bdC7zn.png"                ></a></p><p><a href="https://imgtu.com/i/bdCXZT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCXZT.png"                      alt="bdCXZT.png"                ></a></p></li><li><p>创建一个项目</p><p>由以上内容可知，在cmd终端中创建一个djnago项目的命令是：</p><p><a href="https://imgtu.com/i/bdCvoF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCvoF.png"                      alt="bdCvoF.png"                ></a></p><p>其中django_introduction为项目名</p><p>接下来我们用pycharm打开刚刚创建的项目来了解一下项目目录</p></li><li><p>项目目录介绍</p><p><a href="https://imgtu.com/i/bdCzi4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdCzi4.png"                      alt="bdCzi4.png"                ></a></p></li></ol><h1 id="初识Django应用"><a href="#初识Django应用" class="headerlink" title="初识Django应用"></a>初识Django应用</h1><p>本节内容我们将了解：</p><p><a href="https://imgtu.com/i/bdPpW9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdPpW9.png"                      alt="bdPpW9.png"                ></a></p><ol><li><p>Django应用 VS Django项目</p><p><a href="https://imgtu.com/i/bdP9zR"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdP9zR.png"                      alt="bdP9zR.png"                ></a></p><p><a href="https://imgtu.com/i/bdPisx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdPisx.png"                      alt="bdPisx.png"                ></a></p><p><a href="https://imgtu.com/i/bdPFL6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdPFL6.png"                      alt="bdPFL6.png"                ></a></p></li><li><p>Django应用目录介绍</p><p><a href="https://imgtu.com/i/bdPEdO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/04/bdPEdO.png"                      alt="bdPEdO.png"                ></a></p></li></ol><h1 id="Django-HelloWorld"><a href="#Django-HelloWorld" class="headerlink" title="Django HelloWorld"></a>Django HelloWorld</h1><p>本节内容我们将了解：</p><p><a href="https://imgtu.com/i/bd0cL9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bd0cL9.png"                      alt="bd0cL9.png"                ></a></p><ol><li><p>Django视图(What、Why&amp;How)</p><p><a href="https://imgtu.com/i/bd02ZR"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bd02ZR.png"                      alt="bd02ZR.png"                ></a></p><p>我们在刚刚blog这个项目的views.py中编写显示hello world的视图函数：</p><p>其中request参数是http请求的对象</p><p>直接返回是行不通的，必须先导入HttpRsponses模块，把hello world封装成HttpRsponses对象再返回</p><p><a href="https://imgtu.com/i/bd0WIx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bd0WIx.png"                      alt="bd0WIx.png"                ></a></p></li><li><p>Django路由(What、Why&amp;How)</p><p><a href="https://imgtu.com/i/bd0HLd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bd0HLd.png"                      alt="bd0HLd.png"                ></a></p><p>配置路由分为两个层次：项目层次和应用层次</p></li></ol><ul><li><p>应用层次配置</p><p>先在blog应用下创建一个urls.py</p><p>然后编写配置代码：</p><p><a href="https://imgtu.com/i/bd0jFP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bd0jFP.png"                      alt="bd0jFP.png"                ></a></p></li><li><p>再来到项目下的urls.py，完成项目层次等的路由配置：</p><p><a href="https://imgtu.com/i/bdBCLj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdBCLj.png"                      alt="bdBCLj.png"                ></a></p></li></ul><p>最后把blog这个应用添加到配置文件里再启动服务器输入url就可以显示hello world了，如下图所示：</p><p><a href="https://imgtu.com/i/bdBVYV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdBVYV.png"                      alt="bdBVYV.png"                ></a></p><p><a href="https://imgtu.com/i/bdBQm9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdBQm9.png"                      alt="bdBQm9.png"                ></a></p><p>输入url后pycharm控制台也会有相应的log</p><p><a href="https://imgtu.com/i/bdBGY6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdBGY6.png"                      alt="bdBGY6.png"                ></a></p><p>简单回顾一下显示helloworld的原理：</p><p><a href="https://imgtu.com/i/bdDVHA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDVHA.png"                      alt="bdDVHA.png"                ></a></p><h1 id="章节导读"><a href="#章节导读" class="headerlink" title="章节导读"></a>章节导读</h1><p>在接下来一章我们将接触：</p><p><a href="https://imgtu.com/i/bdDC9K"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDC9K.png"                      alt="bdDC9K.png"                ></a></p><p><a href="https://imgtu.com/i/bdDM38"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDM38.png"                      alt="bdDM38.png"                ></a></p><h1 id="模型层简介"><a href="#模型层简介" class="headerlink" title="模型层简介"></a>模型层简介</h1><p>本节内容我们将了解：</p><p><a href="https://imgtu.com/i/bdD8Bj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdD8Bj.png"                      alt="bdD8Bj.png"                ></a></p><ol><li><p>模型层是什么</p><p><a href="https://imgtu.com/i/bdDGHs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDGHs.png"                      alt="bdDGHs.png"                ></a></p></li><li><p>为什么需要模型层</p><p><a href="https://imgtu.com/i/bdDd3T"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDd3T.png"                      alt="bdDd3T.png"                ></a></p><p>上图中的便捷工具指的是：数据库迁移功能，数据库备份功能等等</p></li><li><p>模型层的相关配置</p><p>我们来到项目下的文件settings.py的DATABASE属性</p><p><a href="https://imgtu.com/i/bdD0vF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdD0vF.png"                      alt="bdD0vF.png"                ></a></p><p>其中描述了项目关联的数据库类型和该数据库在项目中的位置以及名称</p></li></ol><h1 id="创建博客文章模型"><a href="#创建博客文章模型" class="headerlink" title="创建博客文章模型"></a>创建博客文章模型</h1><p>本节内容我们将了解：</p><p><a href="https://imgtu.com/i/bdDsb9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDsb9.png"                      alt="bdDsb9.png"                ></a></p><ol><li><p>设计博客模型</p><p><a href="https://imgtu.com/i/bdDg4x"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDg4x.png"                      alt="bdDg4x.png"                ></a></p><p>那么在数据库中对应要赋予什么类型呢？如下所示：<br><a href="https://imgtu.com/i/bdDRC6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDRC6.png"                      alt="bdDRC6.png"                ></a></p><p><a href="https://imgtu.com/i/bdDobd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDobd.png"                      alt="bdDobd.png"                ></a>ng)</p></li><li><p>模型层定义字段</p><p><a href="https://imgtu.com/i/bdDb5t"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDb5t.png"                      alt="bdDb5t.png"                ></a></p><p><a href="https://imgtu.com/i/bdDX28"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdDX28.png"                      alt="bdDX28.png"                ></a></p><p>我们要在应用下的models.py下定义模型类</p><p>这里是定义文章模型</p><p>定义模型的话要继承自moel.Model,具体操作见下图:</p><p>下图中文章的发布日期DataTimeField的参数auto_now=True表示如果没有指示日期的话就以当前日期为准</p><p><a href="https://imgtu.com/i/bdrP5q"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdrP5q.png"                      alt="bdrP5q.png"                ></a></p><p>接下来我们就可以在终端中键入python manage.py makemigrations生成牵引文件，这时就生成了0001.initial.py,如下图所示：</p><p><a href="https://imgtu.com/i/bdrkGV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdrkGV.png"                      alt="bdrkGV.png"                ></a></p><p>然后我们接着在终端中键入python manage.py migrate运行上面生成的牵引文件，把牵引文件的内容同步到数据库里面去</p></li></ol><h1 id="初识Django-Shell"><a href="#初识Django-Shell" class="headerlink" title="初识Django Shell"></a>初识Django Shell</h1><p>本节内容我们将了解：</p><p><a href="https://imgtu.com/i/bdrer4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdrer4.png"                      alt="bdrer4.png"                ></a></p><ol><li><p>Django Shell 是什么</p><p><a href="https://imgtu.com/i/bdruZ9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdruZ9.png"                      alt="bdruZ9.png"                ></a></p></li><li><p>为什么需要Django Shell</p><p><a href="https://imgtu.com/i/bdrlPx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdrlPx.png"                      alt="bdrlPx.png"                ></a></p></li><li><p>Django Shell 的使用</p><p>在pycharm的终端中键入python manage.py shell就进入了Django Shell环境，如下图所示：<br><a href="https://imgtu.com/i/bdr3RK"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bdr3RK.png"                      alt="bdr3RK.png"                ></a></p><p>我们以新建一篇文章的案例来说明Django Shell 的具体使用，首先我们导入文章的模型，如下图所示：<br><a href="https://imgtu.com/i/bwtc0x"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwtc0x.png"                      alt="bwtc0x.png"                ></a></p><p>我们通过Article新建一篇文章对象，命名为a：</p><p><a href="https://imgtu.com/i/bwt51H"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwt51H.png"                      alt="bwt51H.png"                ></a></p><p>接下来我们设置文章的标题、摘要和具体内容</p><p><a href="https://imgtu.com/i/bwNCBq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwNCBq.png"                      alt="bwNCBq.png"                ></a></p><p>这个时候我们可以打印一下a</p><p><a href="https://imgtu.com/i/bwN62Q"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwN62Q.png"                      alt="bwN62Q.png"                ></a></p><p>可以看到a是Article object，因为a是Article模型类创建出来的</p><p>最后我们可以通过a.save()方法把刚刚创建的Article保存到数据库里去，这样子就完成了新建和保存Article</p><p>那么我们怎么才能确定Article被保存到了数据库中呢？</p><p>我们同样可以在终端中键入article = Article.objects.all()把所有文章从数据库中查询出来，在这里我们选择第一篇文章(实际上也只有一篇文章)，然后把第一篇文章的title打印出来，如下图所示：</p><p><a href="https://imgtu.com/i/bwN724"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwN724.png"                      alt="bwN724.png"                ></a></p><p>title成功打印出来说明文章确实被保存到了数据库里面，除此之外还可以打印Article的摘要等等</p><p>总结：<br><a href="https://imgtu.com/i/bwNjVx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwNjVx.png"                      alt="bwNjVx.png"                ></a></p></li></ol><h1 id="初识Django-Admin模块"><a href="#初识Django-Admin模块" class="headerlink" title="初识Django Admin模块"></a>初识Django Admin模块</h1><p>本节内容我们将了解：</p><p><a href="https://imgtu.com/i/bwUCxH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwUCxH.png"                      alt="bwUCxH.png"                ></a></p><ol><li><p>Django Admin模块是什么</p><p><a href="https://imgtu.com/i/bwUEZt"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwUEZt.png"                      alt="bwUEZt.png"                ></a></p></li><li><p>为什么需要Django Admin模块</p><p><a href="https://imgtu.com/i/bwUZIf"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwUZIf.png"                      alt="bwUZIf.png"                ></a></p></li><li><p>Django Admin模块的使用</p><p><a href="https://imgtu.com/i/bwUfQH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwUfQH.png"                      alt="bwUfQH.png"                ></a></p><ul><li><p>创建管理员用户</p><p>来到pycharm终端键入python manage.py createsuperuser，回车并填写用户名，邮箱(邮箱可以不填写)和密码后一个超级管理员就创建成功了，如下图所示：<br><a href="https://imgtu.com/i/bwUHFf"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwUHFf.png"                      alt="bwUHFf.png"                ></a></p><p>接下来启动服务器，来到浏览器，在浏览器地址栏键入127.0.0.1:8000/admin点击回车就进入了admin的登录界面如下图所示：<br><a href="https://imgtu.com/i/bwUOSg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwUOSg.png"                      alt="bwUOSg.png"                ></a></p><p>输入刚刚注册的用户名和密码就进入了admin的管理后台，如下图所示：</p><p>可以看到这里有groups和users两个默认的模型可以管理</p><p><a href="https://imgtu.com/i/bwapT0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwapT0.png"                      alt="bwapT0.png"                ></a></p><p>我们来看一下users，如下图所示：</p><p>这里我们可以看到刚刚创建的超级用户</p><p><a href="https://imgtu.com/i/bwaRA0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwaRA0.png"                      alt="bwaRA0.png"                ></a></p><p>除了这个users之外，还有一个groups模型，因为没有创建groups，所以里面内容是空的；那我们刚刚创建的博客文章模型在哪里呢？这是因为我们没有把博客文章模型注册到admin里面，所以接下来我们进入pycharm进入应用下的admin.py把刚刚所定义的博客文章模型注册到damin里面，如下图所示：<br><a href="https://imgtu.com/i/bwa49U"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwa49U.png"                      alt="bwa49U.png"                ></a></p><p>接下来回到浏览器点击刷新，这时候可以看到多了一个叫blog的应用，并且在blog下面有一个Article模型，如下图所示：</p><p><a href="https://imgtu.com/i/bwaLAx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwaLAx.png"                      alt="bwaLAx.png"                ></a></p><p>单击Article模型我们可以看到有一个Article object，如下图所示：</p><p><a href="https://imgtu.com/i/bwav9O"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwav9O.png"                      alt="bwav9O.png"                ></a></p><p>单击Article object，我们可以看到Title、Brief Content和Content等等一些信息，这里面对应的具体内容就是之前利用Django Shell所新增的一些内容，如下图所示：<br><a href="https://imgtu.com/i/bwdPHI"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwdPHI.png"                      alt="bwdPHI.png"                ></a></p><p>回到前一个页面我们还可以点击右上方的Add Article来新增一篇文章，如下图所示：<br><a href="https://imgtu.com/i/bwduuj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwduuj.png"                      alt="bwduuj.png"                ></a></p><p>输入一些内容，点击保存</p><p><a href="https://imgtu.com/i/bwdGCT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwdGCT.png"                      alt="bwdGCT.png"                ></a></p><p>这样子我们就创建了一篇文章<br><a href="https://imgtu.com/i/bwd0V1"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwd0V1.png"                      alt="bwd0V1.png"                ></a></p><p>但是这里有一个问题，文章列表里面如果文章太多的话，怎样知道哪一个是哪一篇文章呢？我们能不能在列表里面显示每一篇文章的title呢？其实是可以的，需要一定的开发，回到pycharm打开应用下的model.py,编写一个函数，如下图所示：<br><a href="https://imgtu.com/i/bwdD56"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwdD56.png"                      alt="bwdD56.png"                ></a></p><p>重启服务器，回到浏览器点击刷新，可以看到原来的Article object 变成了 Article title，如下图所示：<br><a href="https://imgtu.com/i/bwd4at"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwd4at.png"                      alt="bwd4at.png"                ></a></p></li></ul></li></ol><h1 id="实现博客数据返回页面"><a href="#实现博客数据返回页面" class="headerlink" title="实现博客数据返回页面"></a>实现博客数据返回页面</h1><p>打开pycharm应用下的views.py，在这里面我们要实现一个视图函数article_content()，这个视图函数返回博客的文章内容，如下图所示：</p><ol><li><p>这个视图函数接收一个request对象</p></li><li><p>引入Article模型类(from blog.models import Article)</p></li><li><p>通过Article.object.all()[0] 返回第一篇文章，用article接收</p></li><li><p>依次把title、brief content、content、article_id和publish_date取出来</p></li><li><p>接着把以上5个内容拼成一个字符串</p></li><li><p>最后返回一个HttpResponse，跟前面非常类似，把字符串放到HttpResponse里面，这样子就完成了article_content视图函数的开发，如下图所示：</p><p><a href="https://imgtu.com/i/bwdTG8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwdTG8.png"                      alt="bwdTG8.png"                ></a></p></li><li><p>完成了视图函数后，我们还要配置一下路由，同样的首先配置应用级别的路由，打开blog应用下面的urls.py编写代码，如下图所示：<br><a href="https://imgtu.com/i/bwdqMQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwdqMQ.png"                      alt="bwdqMQ.png"                ></a></p></li><li><p>接下列进行项目级别的路由配置，打开django_introduction项目下面的urls.py编写代码，如下图所示：<br><a href="https://imgtu.com/i/bwwSiV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/03/05/bwwSiV.png"                      alt="bwwSiV.png"                ></a></p></li><li><p>启动服务器，然后在浏览器地址栏输入127.0.0.1/blog/content,点击回车后会发现文章内容成功显示出来了，包括title、brief content、content、article_id、publish_date如下图所示：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-17-56.4hkofpwexpq0.webp"                      alt="Snipaste_2020-12-01_14-17-56"                ></p></li></ol><h1 id="章节导学-1"><a href="#章节导学-1" class="headerlink" title="章节导学"></a>章节导学</h1><p>在接下来一章我们将接触：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-19-59.6upgwbvzwmo0.webp"                      alt="Snipaste_2020-12-01_14-19-59"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-20-36.76pbyxq9n2s0.webp"                      alt="Snipaste_2020-12-01_14-20-36"                ></p><h1 id="使用Bootstrap实现静态博客页面"><a href="#使用Bootstrap实现静态博客页面" class="headerlink" title="使用Bootstrap实现静态博客页面"></a>使用Bootstrap实现静态博客页面</h1><p>本节内容我们将了解：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-22-02.4ddfrrbaghk0.webp"                      alt="Snipaste_2020-12-01_14-22-02"                ></p><ol><li><p>页面布局设计</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-22-46.4iuntaa76ya0.webp"                      alt="Snipaste_2020-12-01_14-22-46"                ></p><ul><li>博客首页主要分成三大块：页面顶部博客的title(用于展示博客的名字、博客的作者)，页面左下方博客的主要内容，页面右下方博客最近的文章以及最热的文章等等</li><li>文章详情页主要分成两大块：页面顶部文章的title(用于展示文章的名字、文章发布的时间等等信息)，下方绝大部分的面积用于摆放文章的具体内容</li></ul></li><li><p>Bootstrap以及Bootstrap的栅格系统</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-53-11.4ww6boonowm0.webp"                      alt="Snipaste_2020-12-01_14-53-11"                ></p><p>Bootstrap来自美国的Twitter，是一个非常受欢迎的前端框架，Bootstrap是基于html、css以及js开发的，非常简单灵活，使得web开发非常敏捷，Bootstrap提供了很多控件，并且每个控件都是附带源码的，我们可以参照源码来进行页面的开发，我们可以登陆Bootstrap官网<a href="http://www.bootstrap.com进入Bootstrap的中文官网，如下图所示：">www.bootstrap.com进入Bootstrap的中文官网，如下图所示：</a><br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-41-13.1g5q3aydrkjk.webp"                      alt="Snipaste_2020-12-01_14-41-13"                ></p><p>点击组件可以查看Bootstrap所提供的组件，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-42-52.45k83gfvuow0.webp"                      alt="Snipaste_2020-12-01_14-42-52"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-43-55.2hsal4hhnvm0.webp"                      alt="Snipaste_2020-12-01_14-43-55"                ></p><p>点击下拉菜单可以看到既显示了菜单的样子还提供了相关的源码，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-45-10.6oqbpwgnjfs0.webp"                      alt="Snipaste_2020-12-01_14-45-10"                ></p><p>以上还有好多类似下拉菜单的组件，这些组件在web开发的时候都是非常受欢迎的</p><p>除了组件Bootstrap还提供了一些全局的css样式，点击全局css样式，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-49-56.4a9hfxf79yg0.webp"                      alt="Snipaste_2020-12-01_14-49-56"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-50-18.6dtnftdphqc0.webp"                      alt="Snipaste_2020-12-01_14-50-18"                ></p><p>里面有排版、代码、表格、表单等等的一些内容，我们可以基于里面提供的代码进行一系列的开发</p></li><li><p>栅格系统把页面均分为12等份</p><p>图示如下：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-55-20.g4yc6734peo.webp"                      alt="Snipaste_2020-12-01_14-55-20"                ></p><ul><li><p>博客首页细化规划图</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_14-56-44.30kxsknvxzs0.webp"                      alt="Snipaste_2020-12-01_14-56-44"                ></p></li><li><p>根据以上规划，完成博客首页的布局</p><p>打开pycharm，在blog目录下面新建一个目录命名为templates，在templates目录下面新建一个index.html,点击确定后系统会自动生成一个html骨架，把title修改为三小时  入门Django web框架，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_15-08-53.218s7s1t3m2o.webp"                      alt="Snipaste_2020-12-01_15-08-53"                ></p><p>然后我们需要引进Bootstrap的一些资源，来到Bootstrap中文官网，点击起步，把下图中的链接(Bootstrap使用的一些静态文件)拷贝到刚刚创建的index.html中，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_15-12-17.1bdwkzmfmu3k.webp"                      alt="Snipaste_2020-12-01_15-12-17"                ></p><p>可以把可选的这一段删掉，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_15-13-06.3j7domu4c2i0.webp"                      alt="Snipaste_2020-12-01_15-13-06"                ></p><p>然后再加入头部，主体，以及右侧的部分，添加完后整体的代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>三小时入门Django web框架<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container page-header&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>三小时入门Django web框架</span><br><span class="line">        <span class="tag">&lt;<span class="name">small</span>&gt;</span> —— by lihoujian<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">page-header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container page-body&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-9&quot;</span> <span class="attr">role</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;body-main&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我的梦想<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　我小时候的梦想是要许许多多的玩具和许许多多的零食可吃；渐渐的长大了一点，我的梦想是要一辆大车还有一栋漂漂亮亮的小房子，可以安居乐业；慢慢的我长大了读上了中学，我又有了新的梦想，就是想考取一所重点学校，这样可以有所未来。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　然而这些梦想渐渐的离我而去，给我展翅高飞，飞向蓝天的梦想的翅膀断了，使我掉落深山<span class="symbol">&amp;amp;</span>而那些给我力量，给我前进，给我目标的梦想也离我而去，是我孤掌难鸣，不得不放弃。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　而那些时候，因为有一点挫折都受不起的我，在困难面前不得不低头。那是因为我小时候爸妈都很惯我，虽然家里不是很富裕，但也是可以吃的饱穿的暖；虽然家具不是很全，但也有收音机、黑白电视、小摩托、立式风扇等等。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　餐桌上虽然没有满汉全席，但也有母亲做出那些十全十美的美味佳肴。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　我就是在这样一个美好的环境，一个温馨的家庭中产生，生活的。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　自从那次挫折之后，我的自信，我的力量，已经魂飞魄散<span class="symbol">&amp;amp;</span>了。而我却沉沉闷闷一天一个样。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　后来，再一次巧遇之后，我认识了一位陌生人<span class="symbol">&amp;amp;</span>他也有过我这样的经历，从而他也在困难中指点了我，是我重新振作，有了信心，有了力量。我始终记得他曾经说过：不要在意其他因素，做好自己就好，不到要做好还要做最棒的。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　听了他的劝言，我试着做了自己一回，自己大胆创新，自己闯关，慢慢的找回了我的自信。从那时梦想的翅膀接上了。我又有了一个梦想就是做最好的自己。在面对事物的时候，我能坚持，因为我知道能坚持就是成功的第一步。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　然后慢慢的，我找回了自信，面对挫折时能压制自己，能冷静对待。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　这双梦想的翅膀有点摇摇晃晃，不稳定，渐渐的这双翅膀又掉落了。因为挫折面前可以抵挡的翅膀然而在别人的非言非语中而丧失。让我有丢失了信心，丢失了面对生活的希望，丧失了面对自己的希望。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　然而在我最无助的时候，是我的朋友，不！是我的兄弟帮助了我，帮我舒散心情，帮我排忧解难，帮我引领前方。他们也带动我去参加各项活动，来提高我的自信。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　从中我认识了一位学长，是他开导了我，是他让我明白什么才是最棒的自己。他曾说过：在别人的讽刺中锻炼自己，在别人的嘲笑中磨炼自己。记得这句话，他又跟我讲了一个故事，这个故事让我更加有信心找回自我了，更有信心做回自己。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　那双折断了的梦想的翅膀又重新长了出来，有了新的生命，从此再也不会被折断了，因为这双新生的翅膀更有力量更有魄力，能飞得更高，飞得更远。因为他想那些材狼匍匐在他的脚下，自己展翅高飞。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我的爸爸<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　你，带着我的爱与崇敬，伴我成长。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　<span class="symbol">&amp;mdash;</span><span class="symbol">&amp;mdash;</span>题记<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　你，也许是世界上最失职<span class="symbol">&amp;amp;</span>的父亲，但却是世界上最称职的医生；你，也许从来没有认同<span class="symbol">&amp;amp;</span>过你的女儿，但却曾为她骄傲；你，也许从来没有关心<span class="symbol">&amp;amp;</span>过你的女儿，但却百度过她<span class="symbol">&amp;hellip;</span><span class="symbol">&amp;hellip;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　狂风暴雨，阻挡不了你前行的脚步；儿女呼唤，挽回不了你救人的决心。多少年来，一切从未变过。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　爸爸，爸爸，你要去哪里呀？夜已静，方圆百里，唯有那户人家映出了微弱的灯光，那是出诊的信号。被人们尊称为王医生的你，因为出夜诊患了那个动不动就咳出血丝的怪病，因为出夜诊摔过很多次，因为出夜诊一夜未合眼过。可是，爸爸，你为何要那么执着，又为何那般地不听劝告？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　爸爸，爸爸，你要快点醒来。血泊中的你，没有了往日的精神，没有了往日的笑容，爸爸，你是那么的虚弱，你是那么的刺眼<span class="symbol">&amp;amp;</span>。爸爸，你为何要去西北工作，为什么那么出色，出色到连饭都来不及吃？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　爸爸，你没有教过我1+1=2<span class="symbol">&amp;amp;</span>，是你忙忘了吗？那你为什么还要教我多看书呢？爸爸，你没有教过我化学方程式<span class="symbol">&amp;amp;</span>，是你忙忘了吗？那你为什么要告诉我化学很重要呢？爸爸，你没有教过我太多太多，那你为什么使我从容、乖巧、阳光而又善良呢？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　我的爸爸，你是我的神话，虽然你没有三头六臂，你不可以刀枪不入，但是你为我撑起了一片天，为我承担了许多许多。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　爸爸，我们都不是不明理的小孩，你没有必要在我们面前一切美好，更不该为了不让我们害怕，不允许我们去看受伤的你，那几道疤痕永远都抹不去你的英俊，你的气质。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　我和弟弟都是坚强的孩子，然而那一天，听到你受伤后，我和他抱头痛哭了。毕竟，这么多年来，你匀给我们的时间真的太少太少了，少得我们从来没有机会去报答你，少得我们只有享受你带来荣耀的资格。如果可以自私一回，我不稀罕别人的敬佩，我不稀罕身边所有的赞赏，我只希望你是一个普普通通的人，我只希望你可以多匀一点时间给我们，我只希望一家可以多吃几顿团圆饭。而现在，我只求一家平平安安、快快乐乐就好。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　爸爸，我爱你！！！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3&quot;</span> <span class="attr">role</span>=<span class="string">&quot;complementary&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3&quot;</span> <span class="attr">role</span>=<span class="string">&quot;complementary&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>最新文章<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章6<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章7<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章8<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>最新文章9<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>页面效果如下：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-10-58.53q4zu9fjr80.webp"                      alt="Snipaste_2020-12-01_22-10-58"                ></p></li><li><p>文章详情页细化规划图</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-13-21.53r7zjkbgb40.webp"                      alt="Snipaste_2020-12-01_22-13-21"                ></p><p>我们再templates中再新建一个detail.html,直接把index.html</p><p>中的代码复制过去修改一下：修改之后的代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>三小时入门Django web框架<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container page-header&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>文章标题1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">page-header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container body-main&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　我小时候的梦想是要许许多多的玩具和许许多多的零食可吃；渐渐的长大了一点，我的梦想是要一辆大车还有一栋漂漂亮亮的小房子，可以安居乐业；慢慢的我长大了读上了中学，我又有了新的梦想，就是想考取一所重点学校，这样可以有所未来。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　然而这些梦想渐渐的离我而去，给我展翅高飞，飞向蓝天的梦想的翅膀断了，使我掉落深山<span class="symbol">&amp;amp;</span>而那些给我力量，给我前进，给我目标的梦想也离我而去，是我孤掌难鸣，不得不放弃。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　而那些时候，因为有一点挫折都受不起的我，在困难面前不得不低头。那是因为我小时候爸妈都很惯我，虽然家里不是很富裕，但也是可以吃的饱穿的暖；虽然家具不是很全，但也有收音机、黑白电视、小摩托、立式风扇等等。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　餐桌上虽然没有满汉全席，但也有母亲做出那些十全十美的美味佳肴。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　我就是在这样一个美好的环境，一个温馨的家庭中产生，生活的。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　自从那次挫折之后，我的自信，我的力量，已经魂飞魄散<span class="symbol">&amp;amp;</span>了。而我却沉沉闷闷一天一个样。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　后来，再一次巧遇之后，我认识了一位陌生人<span class="symbol">&amp;amp;</span>他也有过我这样的经历，从而他也在困难中指点了我，是我重新振作，有了信心，有了力量。我始终记得他曾经说过：不要在意其他因素，做好自己就好，不到要做好还要做最棒的。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　听了他的劝言，我试着做了自己一回，自己大胆创新，自己闯关，慢慢的找回了我的自信。从那时梦想的翅膀接上了。我又有了一个梦想就是做最好的自己。在面对事物的时候，我能坚持，因为我知道能坚持就是成功的第一步。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　然后慢慢的，我找回了自信，面对挫折时能压制自己，能冷静对待。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　这双梦想的翅膀有点摇摇晃晃，不稳定，渐渐的这双翅膀又掉落了。因为挫折面前可以抵挡的翅膀然而在别人的非言非语中而丧失。让我有丢失了信心，丢失了面对生活的希望，丧失了面对自己的希望。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　然而在我最无助的时候，是我的朋友，不！是我的兄弟帮助了我，帮我舒散心情，帮我排忧解难，帮我引领前方。他们也带动我去参加各项活动，来提高我的自信。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　从中我认识了一位学长，是他开导了我，是他让我明白什么才是最棒的自己。他曾说过：在别人的讽刺中锻炼自己，在别人的嘲笑中磨炼自己。记得这句话，他又跟我讲了一个故事，这个故事让我更加有信心找回自我了，更有信心做回自己。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　那双折断了的梦想的翅膀又重新长了出来，有了新的生命，从此再也不会被折断了，因为这双新生的翅膀更有力量更有魄力，能飞得更高，飞得更远。因为他想那些材狼匍匐在他的脚下，自己展翅高飞。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-23-02.5ru3k97q1wo0.webp"                      alt="Snipaste_2020-12-01_22-23-02"                ></p></li></ul></li></ol><h1 id="初识Django的模板系统"><a href="#初识Django的模板系统" class="headerlink" title="初识Django的模板系统"></a>初识Django的模板系统</h1><p>本节内容我们将了解：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-25-18.4pgcq96raly0.webp"                      alt="Snipaste_2020-12-01_22-25-18"                ></p><ol><li><p>模板系统出现的原因(模板系统简介)</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-27-03.5qvmwzete9k0.webp"                      alt="Snipaste_2020-12-01_22-27-03"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-28-54.62c3ojqtnu80.webp"                      alt="Snipaste_2020-12-01_22-28-54"                ></p></li><li><p>基本语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-29-45.37ocr85hcaa0.webp"                      alt="Snipaste_2020-12-01_22-29-45"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-30-39.4wstsyuar2u0.webp"                      alt="Snipaste_2020-12-01_22-30-39"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-31-30.5hludaelkf00.webp"                      alt="Snipaste_2020-12-01_22-31-30"                ></p></li></ol><h1 id="使用模板系统渲染博客页面"><a href="#使用模板系统渲染博客页面" class="headerlink" title="使用模板系统渲染博客页面"></a>使用模板系统渲染博客页面</h1><p>本节内容我们将从以下方面入手：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-01_22-34-32.1fy55du73vsw.webp"                      alt="Snipaste_2020-12-01_22-34-32"                ></p><ol><li><p>渲染博客首页</p><p>来到pycharm，我们首先改造博客的首页，在这里我们将会通过静态系统把原来的静态内容都替换掉，比如原来的文章内容，以及文章标题等等，还有下方的最新文章；</p><ul><li><p>替换文章标题</p>,图下图所示：<p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-02_14-58-10.3pzh07m9t4a0.webp"                      alt="Snipaste_2020-12-02_14-58-10"                ></p></li><li><p>替换文章内容</p><p>去掉title下面的p标签里面的内容，然后替换为，如下如所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-02_15-09-19.6jcfcsuownc.webp"                      alt="Snipaste_2020-12-02_15-09-19"                ></p><p>再用for循环优化一下：</p><p>直接使用一个标签就好了，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-02_15-25-14.2g12vx79o7wg.webp"                      alt="Snipaste_2020-12-02_15-25-14"                ></p></li><li><p>最新文章内容的替换</p><p>只使用一个h4标签,用模板语法的for循环遍历，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-02_15-29-54.6ksfstum0y00.webp"                      alt="Snipaste_2020-12-02_15-29-54"                ></p></li></ul><p>但是article_list的内容哪里来呢？接下来我们就来实现返回article_liest的视图函数，打开views.py文件，定义一个函数</p><p>get_index_page(), Article.objects.all()取出所有函数赋值给all_article然后返回，render()函数把这个模板系统和数据进行渲染然后返回，render()需要接收一个request参数和首页的模板，页面需要的数据要用一个字典进行包裹，完整定义如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-02_15-34-07.9zpdyp9sbf4.webp"                      alt="Snipaste_2020-12-02_15-34-07"                ></p><p>同时templates目录下面要建立blog目录，把刚才实现的index.html和detail.html放在里面，因为我们调用render的时候指定了路径，会自动搜索templates下面的blog目录然后是indexl.html， 然后进行路由的配置，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_18-52-26.3mg98xk2dfa0.webp"                      alt="Snipaste_2020-12-03_18-52-26"                ></p><p>启动浏览器后就可以看到页面：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_18-53-34.w65e6fg2qa8.webp"                      alt="Snipaste_2020-12-03_18-53-34"                ></p></li><li><p>完成文章详情页</p><p>我们先来设计刚刚的detail.html,如图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_20-44-02.lx0aq6v764g.webp"                      alt="Snipaste_2020-12-03_20-44-02"                ></p><p>然后回到views.py定义一个函数get_detail_page(request),如图所示:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_20-45-50.2c8lxd3ocm1w.webp"                      alt="Snipaste_2020-12-03_20-45-50"                ></p><p>配置路由：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_20-54-13.2bw3qz5msdgk.webp"                      alt="Snipaste_2020-12-03_20-54-13"                ></p><p>然后在路由器中输入127.0.0.1:8000/blog/detail，如图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_20-59-02.1946h89fq3a8.webp"                      alt="Snipaste_2020-12-03_20-59-02"                ></p></li></ol><h1 id="实现文章详情页面的跳转"><a href="#实现文章详情页面的跳转" class="headerlink" title="实现文章详情页面的跳转"></a>实现文章详情页面的跳转</h1><p>上一章节的不足之处：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_21-31-49.72gbi0a7xy00.webp"                      alt="Snipaste_2020-12-03_21-31-49"                ></p><p>本节内容我们将从以下方面入手：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_21-32-59.m52yoznhsg0.webp"                      alt="Snipaste_2020-12-03_21-32-59"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_21-33-55.43t3xv3dukm0.webp"                      alt="Snipaste_2020-12-03_21-33-55"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_21-35-08.526ab1qq9sc.webp"                      alt="Snipaste_2020-12-03_21-35-08"                ></p><ol><li><p>设计文章详情页URL</p><p>首先设计应用路由，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_21-37-46.21uci85tk38g.webp"                      alt="Snipaste_2020-12-03_21-37-46"                ></p><p>接下来改造函数视图：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-08-23.4ax7ps4zlta0.webp"                      alt="Snipaste_2020-12-03_22-08-23"                ></p><p>然后在浏览器中就能看到点击标题返回详情页了：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-09-42.4lspgjzawdu0.webp"                      alt="Snipaste_2020-12-03_22-09-42"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-09-47.71ao393zha00.webp"                      alt="Snipaste_2020-12-03_22-09-47"                ></p></li></ol><h1 id="实现上下篇文章跳转"><a href="#实现上下篇文章跳转" class="headerlink" title="实现上下篇文章跳转"></a>实现上下篇文章跳转</h1><p>添加两个按钮，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-12-12.63zh4zi44cc0.webp"                      alt="Snipaste_2020-12-03_22-12-12"                ></p><ol><li><p>首先修改文章详情页的html代码</p><p>去Bootstrap中文网挑选Button</p><p>首先点击组件</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-14-35.3aha2t5al140.webp"                      alt="Snipaste_2020-12-03_22-14-35"                ></p><p>在右侧的分页找到翻页</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-15-42.1oggq2jf2x28.webp"                      alt="Snipaste_2020-12-03_22-15-42"                ></p><p>里面的默认实例中的prebious和next就是我们需要的上一页和下一页需要的按钮</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-16-00.40dxikfkoh40.webp"                      alt="Snipaste_2020-12-03_22-16-00"                ></p><p>直接拷贝里面的代码，来到pycharm中的detail.html,把刚才拷贝的代码放在一个div里面，并改名，如图所示：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-03_22-23-18.4lf0qusnq1i0.webp"                      alt="Snipaste_2020-12-03_22-23-18"                ></p><p>然后修改views.py,如下代码所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_detail_page</span>(<span class="params">request, article_id</span>):</span></span><br><span class="line">    all_article = Article.objects.<span class="built_in">all</span>()</span><br><span class="line">    curr_article = <span class="literal">None</span></span><br><span class="line">    previous_index = <span class="number">0</span></span><br><span class="line">    next_index = <span class="number">0</span></span><br><span class="line">    previous_article = <span class="literal">None</span></span><br><span class="line">    next_article = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> index, article <span class="keyword">in</span> <span class="built_in">enumerate</span>(all_article):</span><br><span class="line">        <span class="keyword">if</span> index == <span class="number">2</span>:</span><br><span class="line">            previous_index = <span class="number">2</span></span><br><span class="line">            next_index = index + <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> index == <span class="built_in">len</span>(all_article) + <span class="number">1</span>:</span><br><span class="line">            previous_index = index</span><br><span class="line">            next_index = index</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            previous_index = index - <span class="number">1</span></span><br><span class="line">            next_index = index + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> article.article_id == article_id:</span><br><span class="line">            curr_article = article</span><br><span class="line">            previous_article = all_article[previous_index]</span><br><span class="line">            next_article = all_article[next_index]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    section_list = curr_article.content.split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;blog/detail.html&#x27;</span>,</span><br><span class="line">                  &#123;</span><br><span class="line">                      <span class="string">&#x27;curr_article&#x27;</span>: curr_article,</span><br><span class="line">                      <span class="string">&#x27;section_list&#x27;</span>: section_list,</span><br><span class="line">                      <span class="string">&#x27;previous_article&#x27;</span>: previous_article,</span><br><span class="line">                      <span class="string">&#x27;next_article&#x27;</span>: next_article</span><br><span class="line">                  &#125;</span><br><span class="line">                )</span><br></pre></td></tr></table></figure><p>然后打开浏览器输入<a class="link"   href="http://127.0.0.1:8000/blog/detail/3%E6%9B%B4%E6%94%B9%E5%90%8E%E9%9D%A2%E7%9A%84%E9%A1%B5%E7%A0%81%E4%BC%9A%E7%9C%8B%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9A%84%E8%AF%A6%E6%83%85%E9%A1%B5%EF%BC%9A" >http://127.0.0.1:8000/blog/detail/3更改后面的页码会看到对应的详情页：<i class="fas fa-external-link-alt"></i></a></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_12-00-57.me8md3bubgg.webp"                      alt="Snipaste_2020-12-04_12-00-57"                ></p></li></ol><h1 id="实现分页功能"><a href="#实现分页功能" class="headerlink" title="实现分页功能"></a>实现分页功能</h1><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_12-01-58.24z36xjnkc5c.webp"                      alt="Snipaste_2020-12-04_12-01-58"                ></p><ol><li><p>Bootstrap实现分页按钮</p><p>打开Bootstrap打开组件点击分页中的默认分页，复制其中的代码到index.html的页脚中，如图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_12-24-20.7ierayai3lg0.webp"                      alt="Snipaste_2020-12-04_12-24-20"                ></p><p>然后在进行编辑使其居中，最终效果是：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_12-25-23.4d1x1gqg02w0.webp"                      alt="Snipaste_2020-12-04_12-25-23"                ></p></li><li><p>设计分页URL</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_12-26-31.cyfuhydpn5s.webp"                      alt="Snipaste_2020-12-04_12-26-31"                ></p><p>进行逻辑代码的编写：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_12-35-52.b7is4hamsp4.webp"                      alt="Snipaste_2020-12-04_12-35-52"                ></p><p>以上代码获取请求参数然后验证是否获取成功，在控制台可以看到刚刚请求的参数：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_12-43-30.73gul2r6ya00.webp"                      alt="Snipaste_2020-12-04_12-43-30"                ></p></li><li><p>使用Django分页组件实现分页功能</p><p>先使用Django shell演示分页组件的使用方法：</p><ul><li><p>第一步导入Django的分页组件：from django.core.paginator import Paginator</p></li><li><p>在定义一个数组l</p></li><li><p>使用分页组件把数组分成几个部分：p = Paginator(l, 2)</p><p>Paginator()接收两个参数，一个是数组另一个是每一页的数目</p><p>可以用num_pages方法打印分页的数量，用count方法打印总的内容的数量，也就是列表的长度，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_13-04-51.17lc2tl59c68.webp"                      alt="Snipaste_2020-12-04_13-04-51"                ></p></li><li><p>接着我们把第一页拿出来</p><p>通过page()方法可以把对应的页提取出来，通过objects_list方法可把对应的页的内容提取出来，每一个page还有两个方法page_next和page_previous来判断此页面是否有上一页或者下一页，如下图所示：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_13-19-07.36h86bxi67c0.webp"                      alt="Snipaste_2020-12-04_13-19-07"                ></p></li></ul><p>接下来把Django分页组件应用到视图文件中去：</p><p>get_index_page函数如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_index_page</span>(<span class="params">request</span>):</span></span><br><span class="line">    page = request.GET.get(<span class="string">&#x27;page&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> page:</span><br><span class="line">        page = <span class="built_in">int</span>(page)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        page = <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;page param:&#x27;</span>, page)</span><br><span class="line"></span><br><span class="line">    all_article = Article.objects.<span class="built_in">all</span>()</span><br><span class="line">    paginator = Paginator.page(all_article, <span class="number">3</span>)</span><br><span class="line">    page_num = paginator.num_pages</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;page_num:&#x27;</span>, page_num)</span><br><span class="line">    page_article_list = paginator.page(page)</span><br><span class="line">    <span class="keyword">if</span> page_article_list.has_next():</span><br><span class="line">        next_page = page + <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        next_page = page</span><br><span class="line">    <span class="keyword">if</span> page_article_list.has_previous():</span><br><span class="line">        previous_page = page - <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        previous_page = page</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;blog/index.html&#x27;</span>,</span><br><span class="line">                  &#123;</span><br><span class="line">                      <span class="string">&#x27;article_list&#x27;</span>: page_article_list,</span><br><span class="line">                      <span class="string">&#x27;page_num&#x27;</span>: <span class="built_in">range</span>(<span class="number">1</span>, page_num + <span class="number">1</span>),</span><br><span class="line">                      <span class="string">&#x27;curr_page&#x27;</span>: page,</span><br><span class="line">                      <span class="string">&#x27;next_page&#x27;</span>: next_page,</span><br><span class="line">                      <span class="string">&#x27;previous&#x27;</span>: previous_page</span><br><span class="line">                  &#125;</span><br><span class="line">                  )</span><br></pre></td></tr></table></figure><p>然后再修改一下index.html:<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_19-48-56.2szwbuj09qm0.webp"                      alt="Snipaste_2020-12-04_19-48-56"                ></p><p>重启一下浏览器就可以发现分页功能的实现：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_19-50-28.7ayn2ozfzqo0.webp"                      alt="Snipaste_2020-12-04_19-50-28"                ></p><h1 id="20-实现最近文章列表"><a href="#20-实现最近文章列表" class="headerlink" title="20. 实现最近文章列表"></a>20. 实现最近文章列表</h1><p>我们可以根据publish_date的逆序来取前5个文章，具体操作如下：</p><p>先修改views.py</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_19-56-53.3mkakwyh0wu0.webp"                      alt="Snipaste_2020-12-04_19-56-53"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_19-57-24.zr4yfcklwjk.webp"                      alt="Snipaste_2020-12-04_19-57-24"                ></p><p>然后修改index.html:<br><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220305/Snipaste_2020-12-04_19-57-48.29uuhmcaei4g.webp"                      alt="Snipaste_2020-12-04_19-57-48"                ></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;课程内容所需要的基础&quot;&gt;&lt;a href=&quot;#课程内容所需要的基础&quot; class=&quot;headerlink&quot; title=&quot;课程内容所需要的基础&quot;&gt;&lt;/a&gt;课程内容所需要的基础&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://imgtu.com/i/bd9v8A&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于MySQL的一些整理</title>
    <link href="http://example.com/2022/03/03/%E5%85%B3%E4%BA%8EMySQL%E7%9A%84%E4%B8%80%E4%BA%9B%E6%95%B4%E7%90%86/"/>
    <id>http://example.com/2022/03/03/%E5%85%B3%E4%BA%8EMySQL%E7%9A%84%E4%B8%80%E4%BA%9B%E6%95%B4%E7%90%86/</id>
    <published>2022-03-03T09:46:30.000Z</published>
    <updated>2022-03-08T01:05:41.673Z</updated>
    
    <content type="html"><![CDATA[<h3 id="内连接、左连接、右连接以及全连接查询"><a href="#内连接、左连接、右连接以及全连接查询" class="headerlink" title="内连接、左连接、右连接以及全连接查询"></a>内连接、左连接、右连接以及全连接查询</h3><h4 id="内连接查询"><a href="#内连接查询" class="headerlink" title="内连接查询"></a>内连接查询</h4><p>关键字: <strong>inner join…on</strong></p><p>语句: </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> a_table a <span class="keyword">inner</span> <span class="keyword">join</span> b_table b <span class="keyword">on</span> a.a_id <span class="operator">=</span> b.b_id;</span><br></pre></td></tr></table></figure><p>说明: 组合两个表中的记录，返回关联字段相符的记录，<strong>也就是返回两个表的交集(阴影)部分</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173658980.3n71eo8cs860.webp"                      alt="20181005173658980"                ></p><p>案例: 在boy表和girl表中查出两表hid字段一致的姓名(gname，bname),boy表和girl 表如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173111241.1gg9di3elj1c.webp"                      alt="20181005173111241"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173203764.2a1cfu2vx6zo.webp"                      alt="20181005173203764"                ></p><p>采用内连接查询方式，SQL语句如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> boy.hid,boy.bname,girl.gname <span class="keyword">FROM</span> boy <span class="keyword">INNER</span> <span class="keyword">JOIN</span> girl <span class="keyword">ON</span> girl.hid <span class="operator">=</span> boy.hid;</span><br></pre></td></tr></table></figure><p>查询结果如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173326725.3uo8mmub3b40.webp"                      alt="20181005173326725"                ></p><h4 id="左连接查询"><a href="#左连接查询" class="headerlink" title="左连接查询"></a>左连接查询</h4><p>关键字: <strong>left join on / left outer join on</strong></p><p>语句:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  <span class="operator">*</span> <span class="keyword">FROM</span> a_table a <span class="keyword">left</span> <span class="keyword">join</span> b_table b <span class="keyword">ON</span> a.a_id <span class="operator">=</span> b.b_id;</span><br></pre></td></tr></table></figure><p>说明: <strong>left join 是left outer join的简写，它的全称是左外连接，是外连接中的一种。 左(外)连接，左表(a_table)的记录将会全部表示出来，而右表(b_table)只会显示符合搜索条件的记录。右表记录不足的地方均为NULL</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005211357263.5d61bb9exo00.webp"                      alt="20181005211357263"                ></p><p>案例: 在boy表和girl 表中左连接查询，boy表和girl 表如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/1.3if7wcwes3y0.webp"                      alt="1"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/2.eyt7d9l08rc.webp"                      alt="2"                ></p><p>采用左连接查询方式，SQL语句如下:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> boy.hid,boy.bname,girl.gname <span class="keyword">FROM</span> boy <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> girl <span class="keyword">ON</span> girl.hid <span class="operator">=</span> boy.hid;</span><br></pre></td></tr></table></figure><p>查询结果如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005213127795.4005998ijic0.webp"                      alt="20181005213127795"                ></p><h4 id="右连接查询"><a href="#右连接查询" class="headerlink" title="右连接查询"></a>右连接查询</h4><p>关键字: <strong>right join on / right outer join on</strong></p><p>语句: <strong>SELECT * FROM a_table a right outer join b_table b on a.a_id = b.b_id;</strong></p><p>说明: <strong>right join是right outer join的简写，它的全称是右外连接，是外连接中的一种。与左(外)连接相反，右(外)连接，左表(a_table)只会显示符合搜索条件的记录，而右表(b_table)的记录将会全部表示出来。左表记录不足的地方均为NULL</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005213457811.4lswjrs1o5m0.webp"                      alt="20181005213457811"                ></p><p>案例解释: 在boy表和girl表中右连接查询，boy表和girl 表如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173111241-(2).4vok0qpf0ik0.webp"                      alt="20181005173111241-(2)"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005173203764-(2).1zk4of1jk48w.webp"                      alt="20181005173203764-(2)"                ></p><p>采用内连接查询方式:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> boy.hid,boy.bname,girl.gname <span class="keyword">FROM</span> boy <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> girl <span class="keyword">ON</span> girl.hid <span class="operator">=</span> boy.hid;</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181005213611391.53bdafp885g0.webp"                      alt="20181005213611391"                ></p><h4 id="全连接查询"><a href="#全连接查询" class="headerlink" title="全连接查询"></a>全连接查询</h4><p>关键字: <strong>union /union all</strong></p><p>语句: (select colum1,colum2…columN from tableA ) union (select colum1,colum2…columN from tableB );</p><p>或 (select colum1,colum2…columN from tableA ) union all (select colum1,colum2…columN from tableB );</p><p>使用union语句注意事项:</p><ol><li><p><strong>通过union连接的SQL它们分别单独取出的列数必须相同</strong></p></li><li><p><strong>用union 时，完全相等的行，将会被合并，union all则不会，由于合并比较耗时，一般不直接使用 union 进行合并，而是通常采用union all 进行合并</strong></p></li><li><p><strong>被union 连接的sql 子句，单个子句中不用写order by ，因为不会有排序的效果。但可以对最终的结果集进行排序</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> id,name <span class="keyword">from</span> A <span class="keyword">order</span> <span class="keyword">by</span> id) <span class="keyword">union</span> <span class="keyword">all</span> (<span class="keyword">select</span> id,name <span class="keyword">from</span> B <span class="keyword">order</span> <span class="keyword">by</span> id); <span class="operator">/</span><span class="operator">/</span>没有排序效果</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">select</span> id,name <span class="keyword">from</span> A ) <span class="keyword">union</span> <span class="keyword">all</span> (<span class="keyword">select</span> id,name <span class="keyword">from</span> B ) <span class="keyword">order</span> <span class="keyword">by</span> id; <span class="operator">/</span><span class="operator">/</span>有排序效果</span><br></pre></td></tr></table></figure></li></ol><p>案例解释: 将a表和b表合并，表结构如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006095856974.z0992l6jn0g.webp"                      alt="20181006095856974"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006095918725.41oi5sczcww0.webp"                      alt="20181006095918725"                ></p><h5 id="union全连接查询"><a href="#union全连接查询" class="headerlink" title="union全连接查询"></a>union全连接查询</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">select</span> id,num <span class="keyword">from</span> a) <span class="keyword">union</span> (<span class="keyword">select</span> id,num <span class="keyword">from</span> b);</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006100043809.6tcq9p7hvew0.webp"                      alt="20181006100043809"                ></p><p>nuion会自动将完全重复的数据去除掉，a、b表中”c”的值都为15，所以只会显示一行</p><h5 id="union-all全连接查询"><a href="#union-all全连接查询" class="headerlink" title="union all全连接查询"></a>union all全连接查询</h5><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20181006100254174.6atmwcvn4g40.webp"                      alt="20181006100254174"                ></p><p>union all会保留那些重复的数据</p><h3 id="幻读、脏读、不可重复读"><a href="#幻读、脏读、不可重复读" class="headerlink" title="幻读、脏读、不可重复读"></a>幻读、脏读、不可重复读</h3><h4 id="事物隔离级别"><a href="#事物隔离级别" class="headerlink" title="事物隔离级别"></a>事物隔离级别</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/20200919145047911.6w3l5hj97r80.webp"                      alt="20200919145047911"                ></p><h4 id="什么是幻读"><a href="#什么是幻读" class="headerlink" title="什么是幻读"></a>什么是幻读</h4><p>幻读: 当用户读取某一范围的数据行时，另一个事务又在该范围内插入了新行，当用户再读取该范围的数据行时，会发现有新的“幻影” 行</p><h4 id="什么是脏读"><a href="#什么是脏读" class="headerlink" title="什么是脏读"></a>什么是脏读</h4><p>脏读: 读取到了未提交的数据(如果事务这时候回滚了，那么第二个事务就读到了脏数据)</p><h4 id="什么是不可重复读"><a href="#什么是不可重复读" class="headerlink" title="什么是不可重复读"></a>什么是不可重复读</h4><p>同一个事务中，对于同一数据，执行完全相同的select语句时可能看到不一样的结果</p><h4 id="幻读与不可重复读的区别"><a href="#幻读与不可重复读的区别" class="headerlink" title="幻读与不可重复读的区别"></a>幻读与不可重复读的区别</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220303/Snipaste_2022-03-03_18-46-28.63myylheyc80.webp"                      alt="Snipaste_2022-03-03_18-46-28"                ></p><h3 id="MySQL如何分页查询"><a href="#MySQL如何分页查询" class="headerlink" title="MySQL如何分页查询"></a>MySQL如何分页查询</h3><p><a class="link"   href="https://blog.csdn.net/weixin_39762838/article/details/110864382" >https://blog.csdn.net/weixin_39762838/article/details/110864382<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;内连接、左连接、右连接以及全连接查询&quot;&gt;&lt;a href=&quot;#内连接、左连接、右连接以及全连接查询&quot; class=&quot;headerlink&quot; title=&quot;内连接、左连接、右连接以及全连接查询&quot;&gt;&lt;/a&gt;内连接、左连接、右连接以及全连接查询&lt;/h3&gt;&lt;h4 id=&quot;内</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>浅谈一下我在我的小服务器上安装GitLab的坎坷历程</title>
    <link href="http://example.com/2022/02/25/%E6%B5%85%E8%B0%88%E4%B8%80%E4%B8%8B%E6%88%91%E5%9C%A8%E6%88%91%E7%9A%84%E5%B0%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E5%AE%89%E8%A3%85GitLab%E7%9A%84%E5%9D%8E%E5%9D%B7%E5%8E%86%E7%A8%8B/"/>
    <id>http://example.com/2022/02/25/%E6%B5%85%E8%B0%88%E4%B8%80%E4%B8%8B%E6%88%91%E5%9C%A8%E6%88%91%E7%9A%84%E5%B0%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E5%AE%89%E8%A3%85GitLab%E7%9A%84%E5%9D%8E%E5%9D%B7%E5%8E%86%E7%A8%8B/</id>
    <published>2022-02-25T07:36:30.000Z</published>
    <updated>2022-02-25T08:51:22.046Z</updated>
    
    <content type="html"><![CDATA[<p>云服务器系统: ubuntu18.04</p><p>云服务器配置:1核2G+50G(建议这个配置的配置下虚拟内存，详情点击<a class="link"   href="http://kest.club/2022/02/25/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B7%BB%E5%8A%A0%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/" >这里<i class="fas fa-external-link-alt"></i></a>查看)</p><p>首先我的服务器之前是安装过Docker的，所以我才决定用Docker来安装GitLab，如果还没安装Docker，请点击<a class="link"   href="https://blog.csdn.net/tlojy/article/details/83653246" >这里<i class="fas fa-external-link-alt"></i></a>跳转，先安装Docker</p><h4 id="关于GitLab版本的介绍"><a href="#关于GitLab版本的介绍" class="headerlink" title="关于GitLab版本的介绍"></a>关于GitLab版本的介绍</h4><p>GitLab有两个版本:</p><ul><li>Community Edition 社区版</li><li>Enterprise Edition 企业版，企业版比社区版功能更丰富，但需要授权码，如果没有授权码的情况下使用企业版相当于使用社区版</li></ul><h4 id="GitLab安装-以企业版为例"><a href="#GitLab安装-以企业版为例" class="headerlink" title="GitLab安装(以企业版为例)"></a>GitLab安装(以企业版为例)</h4><p>我们执行以下代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --detach --hostname gitlab-server --publish <span class="number">9090</span>:<span class="number">9090</span> --publish <span class="number">8022</span>:<span class="number">22</span> --name gitlab --restart always --volume /srv/gitlab/config:/etc/gitlab --volume /srv/gitlab/logs:/var/log/gitlab --volume /srv/gitlab/data:/var/opt/gitlab gitlab/gitlab-ee:latest</span><br></pre></td></tr></table></figure><p>如果你的终端显示没有权限，那就在命令的最开头加一个sudo，或者直接使用su命令然后输入root用户密码直接切换成root用户，如果你想以普通用户运行docker命令，那就需要将此普通用户加入到docker组中，使用以下命令将普通用户加入到docker组:(这里以test用户为例)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpasswd -a test docker</span><br></pre></td></tr></table></figure><p>然后我们来看看上面这一长串命令的各参数以及对应的值是啥意思:</p><p><a href="https://imgtu.com/i/bA4mQg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/02/25/bA4mQg.png"                      alt="bA4mQg.png"                ></a></p><p>这里有两个<code>--publish</code>参数，第一个是配置http的访问端口，这里我两个都配置的是9090端口，前一个9090代表云服务器的端口，后一个9090代表docker容器的端口，这两个端口是对接的，也就是说我们访问云服务的9090端口，就会跳进docker容器中的9090端口进行访问http服务，如果这个端口被占用了，那也可以设定其他的，总之就是设置你想以哪个端口访问docker容器中的GitLab，这两个端口都可随意设置，只要端口不被其他服务占用即可<br>第二个<code>--publish</code>参数那就是设置ssh的</p><p>然后我们还要配置下gitlab.rb这个配置文件，用以下命令进入:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /srv/gitlab/config/gitlab.rb</span><br></pre></td></tr></table></figure><ul><li><p>设置external_url</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## GitLab URL</span></span><br><span class="line"><span class="comment">##! URL on which GitLab will be reachable.</span></span><br><span class="line"><span class="comment">##! For more details on configuring external_url see:</span></span><br><span class="line"><span class="comment">##! https://docs.gitlab.com/omnibus/settings/configuration.html#configuring-the-external-url-for-gitlab</span></span><br><span class="line">external_url <span class="string">&#x27;http://192.168.199.175:9090&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>设置ssh_port</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### GitLab Shell settings for GitLab</span></span><br><span class="line">gitlab_rails[<span class="string">&#x27;gitlab_shell_ssh_port&#x27;</span>] = <span class="number">8022</span></span><br></pre></td></tr></table></figure></li></ul><p>以上external_url和ssh_port可能不好定位，如果一个个找那就是考验我们的眼睛，我们可以用vi或者vim的查看功能，输入<code>:</code>，然后跟上一个<code>/</code>再跟上你要搜索的字符串，如果有很多个的话使用<code>n</code>键定位到下一个，只有一个的话vim会提示已经到底了并且再继续按<code>n</code>键还是定位的同一个</p><p><strong>插一句</strong>: 我之前在docker上尝试了好多次然后到后面使用<code>docker ps</code>命令后面都提示<code>unhealthy</code>，这令我很苦恼，要不我为啥说坎坷呢，我查阅资料说在gitlab.rb这个配置文件中要把<code>worker_process = 2</code>这个配置项解除注释，或者改为<code>worker_process = 1</code>，后面我发现容器状态变为<code>healthy</code>了，可能是因为我改了这个叭</p><p>然后我们就可以重启GitLab容器使得设置生效了，使用以下命令:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker restart gitlab</span><br></pre></td></tr></table></figure><p>这个重启的过程稍微有点漫长，我们可以使用<code>docker ps</code>命令来查看容器的状态，如果显示<code>starting</code>那就是还在启动中，显示<code>healthy</code>那就是启动成功，若启动成功，我们就可以在浏览器中以<code>http://云服务器地址:9090</code>来访问GitLab了，这个时候就会要我们输入用户名和密码，在一个空的GitLab中，有一个初始用户叫<code>root</code>，但是我不知道密码啊，下面我们来看看如何设置密码</p><h4 id="设置默认密码"><a href="#设置默认密码" class="headerlink" title="设置默认密码"></a>设置默认密码</h4><ul><li><p>查看容器名称，其实容器名称我们在刚开始的一大段命令中就以<code>--name</code>指定了，如果记不住的话那就用以下命令查看下也行:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure></li><li><p>进入GitLab容器(这里以gitlab容器为例)，这个命令其实就是进入到了对应的主机，这里就是进入了gitlab-server这个主机，因为上面指定了主机名，输入<code>exit</code>便可返回宿主机</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it gitlab bash</span><br></pre></td></tr></table></figure></li><li><p>启动Ruby on Rails控制台(这个过程要稍微等一下)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rails console -e production</span><br></pre></td></tr></table></figure></li><li><p>搜索用户</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user = User.where(<span class="built_in">id</span>: <span class="number">1</span>).first</span><br></pre></td></tr></table></figure><p>这个id:1是从哪儿来的呢，这里有有个小技巧，我们访问这个形式的链接就会返回以下结果:</p><p>链接示例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">175.24</span><span class="number">.172</span><span class="number">.64</span>:<span class="number">9090</span>/api/v4/users?username=root</span><br></pre></td></tr></table></figure><p>返回结果示例:</p><p><a href="https://imgtu.com/i/bAbm4A"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s4.ax1x.com/2022/02/25/bAbm4A.png"                      alt="bAbm4A.png"                ></a></p><p>从上图中我们就得到了root用户的id</p></li><li><p>更换密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.password = <span class="string">&#x27;xxxxxx&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>确认更换密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.password_confirmation = <span class="string">&#x27;xxxxxx&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>保存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user.save!</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;云服务器系统: ubuntu18.04&lt;/p&gt;
&lt;p&gt;云服务器配置:1核2G+50G(建议这个配置的配置下虚拟内存，详情点击&lt;a class=&quot;link&quot;   href=&quot;http://kest.club/2022/02/25/%E8%85%BE%E8%AE%AF%E4%B</summary>
      
    
    
    
    
  </entry>
  
</feed>
