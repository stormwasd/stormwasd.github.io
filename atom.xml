<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-04-11T08:03:44.496Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MongoDB数据库莫名其妙没了被黑客勒索(要开启验证)</title>
    <link href="http://example.com/2022/04/11/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93%E8%8E%AB%E5%90%8D%E5%85%B6%E5%A6%99%E6%B2%A1%E4%BA%86%E8%A2%AB%E9%BB%91%E5%AE%A2%E5%8B%92%E7%B4%A2/"/>
    <id>http://example.com/2022/04/11/MongoDB%E6%95%B0%E6%8D%AE%E5%BA%93%E8%8E%AB%E5%90%8D%E5%85%B6%E5%A6%99%E6%B2%A1%E4%BA%86%E8%A2%AB%E9%BB%91%E5%AE%A2%E5%8B%92%E7%B4%A2/</id>
    <published>2022-04-11T08:02:30.000Z</published>
    <updated>2022-04-11T08:03:44.496Z</updated>
    
    <content type="html"><![CDATA[<p>参考自1: <a class="link"   href="https://blog.csdn.net/u013513053/article/details/105785980?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-2-105785980.pc_agg_new_rank&amp;utm_term=read_me_to_recover_database&amp;spm=1000.2123.3001.4430" >https://blog.csdn.net/u013513053/article/details/105785980?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-2-105785980.pc_agg_new_rank&amp;utm_term=read_me_to_recover_database&amp;spm=1000.2123.3001.4430<i class="fas fa-external-link-alt"></i></a></p><p>参考自2: <a class="link"   href="https://segmentfault.com/a/1190000011554055" >https://segmentfault.com/a/1190000011554055<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考自1: &lt;a class=&quot;link&quot;   href=&quot;https://blog.csdn.net/u013513053/article/details/105785980?utm_medium=distribute.pc_aggpage_search_result.n</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Python重试机制之自带模块tenacity</title>
    <link href="http://example.com/2022/04/11/Python%E9%87%8D%E8%AF%95%E6%9C%BA%E5%88%B6%E4%B9%8B%E8%87%AA%E5%B8%A6%E6%A8%A1%E5%9D%97tenacity/"/>
    <id>http://example.com/2022/04/11/Python%E9%87%8D%E8%AF%95%E6%9C%BA%E5%88%B6%E4%B9%8B%E8%87%AA%E5%B8%A6%E6%A8%A1%E5%9D%97tenacity/</id>
    <published>2022-04-11T07:59:30.000Z</published>
    <updated>2022-04-11T08:00:11.409Z</updated>
    
    <content type="html"><![CDATA[<p>参考自: <a class="link"   href="https://blog.csdn.net/hhs_1996/article/details/114590778" >https://blog.csdn.net/hhs_1996/article/details/114590778<i class="fas fa-external-link-alt"></i></a></p><p>官方文档: <a class="link"   href="https://pypi.org/project/retry/" >https://pypi.org/project/retry/<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考自: &lt;a class=&quot;link&quot;   href=&quot;https://blog.csdn.net/hhs_1996/article/details/114590778&quot; &gt;https://blog.csdn.net/hhs_1996/article/details/11</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>删除mongodb中存在的用户</title>
    <link href="http://example.com/2022/04/11/%E5%88%A0%E9%99%A4mongodb%E4%B8%AD%E5%AD%98%E5%9C%A8%E7%9A%84%E7%94%A8%E6%88%B7/"/>
    <id>http://example.com/2022/04/11/%E5%88%A0%E9%99%A4mongodb%E4%B8%AD%E5%AD%98%E5%9C%A8%E7%9A%84%E7%94%A8%E6%88%B7/</id>
    <published>2022-04-11T07:55:30.000Z</published>
    <updated>2022-04-11T07:55:40.408Z</updated>
    
    <content type="html"><![CDATA[<p>参考自: <a class="link"   href="https://blog.csdn.net/K_520_W/article/details/108309862?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=mongodb%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-3-108309862.nonecase&amp;spm=1018.2226.3001.4187" >https://blog.csdn.net/K_520_W/article/details/108309862?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=mongodb%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-3-108309862.nonecase&amp;spm=1018.2226.3001.4187<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考自: &lt;a class=&quot;link&quot;   href=&quot;https://blog.csdn.net/K_520_W/article/details/108309862?ops_request_misc=&amp;amp;request_id=&amp;amp;biz_id=102&amp;amp</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于使用WinSCP上传文件报permission denied的解决</title>
    <link href="http://example.com/2022/04/08/%E5%85%B3%E4%BA%8E%E4%BD%BF%E7%94%A8WinSCP%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%8A%A5permission%20denied%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    <id>http://example.com/2022/04/08/%E5%85%B3%E4%BA%8E%E4%BD%BF%E7%94%A8WinSCP%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%8A%A5permission%20denied%E7%9A%84%E8%A7%A3%E5%86%B3/</id>
    <published>2022-04-08T10:55:30.000Z</published>
    <updated>2022-04-08T10:56:11.216Z</updated>
    
    <content type="html"><![CDATA[<p>详见: <a class="link"   href="https://www.likecs.com/show-204385837.html" >https://www.likecs.com/show-204385837.html<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;详见: &lt;a class=&quot;link&quot;   href=&quot;https://www.likecs.com/show-204385837.html&quot; &gt;https://www.likecs.com/show-204385837.html&lt;i class=&quot;fas fa-exter</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Flask写接口的一个案例</title>
    <link href="http://example.com/2022/04/06/Flask%E5%86%99%E6%8E%A5%E5%8F%A3%E7%9A%84%E4%B8%80%E4%B8%AA%E6%A1%88%E4%BE%8B/"/>
    <id>http://example.com/2022/04/06/Flask%E5%86%99%E6%8E%A5%E5%8F%A3%E7%9A%84%E4%B8%80%E4%B8%AA%E6%A1%88%E4%BE%8B/</id>
    <published>2022-04-06T08:55:30.000Z</published>
    <updated>2022-04-06T10:53:50.600Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面向的人群"><a href="#面向的人群" class="headerlink" title="面向的人群"></a>面向的人群</h2><p>具有Python基础知识</p><p>只写接口，想好好学做接口的</p><h2 id="Flask是什么"><a href="#Flask是什么" class="headerlink" title="Flask是什么"></a>Flask是什么</h2><p>以下来自百度百科:</p><p>Flask是一个使用 <a class="link"   href="https://baike.baidu.com/item/Python" >Python<i class="fas fa-external-link-alt"></i></a> 编写的轻量级 Web 应用框架。其 <a class="link"   href="https://baike.baidu.com/item/WSGI" >WSGI<i class="fas fa-external-link-alt"></i></a> 工具箱采用 Werkzeug ，<a class="link"   href="https://baike.baidu.com/item/%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E/907667" >模板引擎<i class="fas fa-external-link-alt"></i></a>则使用 Jinja2 。Flask使用 BSD 授权。</p><p>Flask也被称为 “microframework” ，因为它使用简单的核心，用 extension 增加其他功能。Flask没有默认使用的数据库、窗体验证工具</p><h2 id="推荐使用虚拟环境"><a href="#推荐使用虚拟环境" class="headerlink" title="推荐使用虚拟环境"></a>推荐使用虚拟环境</h2><p>关于环境可以参考:</p><p><a class="link"   href="http://kest.club/2022/03/19/Python%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%AD%A5%E9%AA%A4/" >http://kest.club/2022/03/19/Python%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%AD%A5%E9%AA%A4/<i class="fas fa-external-link-alt"></i></a></p><p>以下所写的项目是没有用虚拟环境的，这个见仁见智</p><h2 id="初体验"><a href="#初体验" class="headerlink" title="初体验"></a>初体验</h2><p>app.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span>  <span class="comment"># put application&#x27;s code here</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">app.run()</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/06/yc4NCBEdqgAP3Sl.png"                      alt="image.png"                ></p><h2 id="路由加入变量"><a href="#路由加入变量" class="headerlink" title="路由加入变量"></a>路由加入变量</h2><p>app.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span>  <span class="comment"># put application&#x27;s code here</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hey/&lt;username&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hey_lihoujian</span>(<span class="params">username</span>):</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;hey, &#123;&#125;&quot;</span>.<span class="built_in">format</span>(username)  <span class="comment"># 要注意这里传入的username会转化为字符串，比如我们如果返回&quot;hey,&#123;&#125;&quot;.format(username + username)，当路由中的username我们传入的是1，那么实际上会返回hey, 11</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">app.run()</span><br></pre></td></tr></table></figure><p>那如果我们就是不想它默认转化为字符串呢，这里有四个选择:</p><ul><li>int 接受正整数</li><li>float 接受正浮点数</li><li>path 类似<code>string</code>但可以包含斜杠</li><li>uuid 接受UUID字符串</li><li><strong>String</strong> (缺省值)接受任何不包含斜杠的文本<code>&lt;&gt;</code></li></ul><p>app.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/test/&lt;int:number&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_number</span>(<span class="params">number</span>):</span>  <span class="comment"># put application&#x27;s code here</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;test &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(number + number)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">app.run()</span><br></pre></td></tr></table></figure><p>这个路由一定要注意，我们路由一定要匹配特别是路由的末尾不要多一个反斜杠，如果在浏览器的路径中多了个反斜杠，那么相应的在flask的代码中也要在路由末尾加个反斜杠，如果是路由中有反斜杠而我们在浏览器中忘了在最末尾加上一个反斜杠，这是可以的，因为浏览器会帮我们加反斜杠，如果在路由中没有斜杆而我们在浏览器中添加了斜杠，这就会报错</p><h2 id="URL的重定向行为"><a href="#URL的重定向行为" class="headerlink" title="URL的重定向行为"></a>URL的重定向行为</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/06/TtWEJCXHNjlRS5n.png"                      alt="image.png"                ></p><h2 id="FlaskHTTP方法"><a href="#FlaskHTTP方法" class="headerlink" title="FlaskHTTP方法"></a>FlaskHTTP方法</h2><p>以下引用自菜鸟教程:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/06/PfJsFdLZRpUozqM.png"                      alt="image.png"                ></p><h2 id="Json格式的API"><a href="#Json格式的API" class="headerlink" title="Json格式的API"></a>Json格式的API</h2><p>这里以post为例，常见的提交格式有:</p><ul><li>json</li><li>form</li><li>xml</li></ul><p>获取前端过来的数据:</p><p>app.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/test/my/first&#x27;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">first_post</span>():</span></span><br><span class="line">my_json = request.get_json()</span><br><span class="line"><span class="built_in">print</span>(my_json)</span><br><span class="line"><span class="keyword">return</span> my_json.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">app.run()</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/06/APaDvSVZMY4RfyO.png"                      alt="image.png"                ></p><p>返回json格式的数据:</p><p>app.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/test/my/first&#x27;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">first_post</span>():</span></span><br><span class="line">my_json = request.get_json()</span><br><span class="line"><span class="built_in">print</span>(my_json)</span><br><span class="line">get_name = my_json.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">get_age = my_json.get(<span class="string">&#x27;age&#x27;</span>)</span><br><span class="line">get_age += <span class="number">10</span></span><br><span class="line"><span class="keyword">return</span> jsonify(name=get_name, age=get_age)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">app.run()</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/06/XgPdGBvHTlobKFn.png"                      alt="image.png"                ></p><p>然后我们还可以加一些异常处理:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/test/my/first&#x27;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">first_post</span>():</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">my_json = request.get_json()</span><br><span class="line"><span class="built_in">print</span>(my_json)</span><br><span class="line">get_name = my_json.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">get_age = my_json.get(<span class="string">&#x27;age&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">all</span>([get_age, get_name]):</span><br><span class="line"><span class="keyword">return</span> jsonify(msg=<span class="string">&quot;缺少参数!&quot;</span>)</span><br><span class="line">get_age += <span class="number">10</span></span><br><span class="line"><span class="keyword">return</span> jsonify(name=get_name, age=get_age)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">return</span> jsonify(msg=<span class="string">&quot;请查看是否正确访问!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">app.run()</span><br></pre></td></tr></table></figure><h2 id="Cookie和Session"><a href="#Cookie和Session" class="headerlink" title="Cookie和Session"></a>Cookie和Session</h2><p>具体参见: <a class="link"   href="https://dormousehole.readthedocs.io/en/latest/" >https://dormousehole.readthedocs.io/en/latest/<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;面向的人群&quot;&gt;&lt;a href=&quot;#面向的人群&quot; class=&quot;headerlink&quot; title=&quot;面向的人群&quot;&gt;&lt;/a&gt;面向的人群&lt;/h2&gt;&lt;p&gt;具有Python基础知识&lt;/p&gt;
&lt;p&gt;只写接口，想好好学做接口的&lt;/p&gt;
&lt;h2 id=&quot;Flask是什么&quot;&gt;&lt;a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>权力的游戏第三季第四集对话片段</title>
    <link href="http://example.com/2022/04/04/%E6%9D%83%E5%8A%9B%E7%9A%84%E6%B8%B8%E6%88%8F%E7%AC%AC%E4%B8%89%E5%AD%A3%E7%AC%AC%E4%B8%89%E9%9B%86%E5%AF%B9%E8%AF%9D%E7%89%87%E6%AE%B5/"/>
    <id>http://example.com/2022/04/04/%E6%9D%83%E5%8A%9B%E7%9A%84%E6%B8%B8%E6%88%8F%E7%AC%AC%E4%B8%89%E5%AD%A3%E7%AC%AC%E4%B8%89%E9%9B%86%E5%AF%B9%E8%AF%9D%E7%89%87%E6%AE%B5/</id>
    <published>2022-04-04T12:59:39.000Z</published>
    <updated>2022-04-06T09:08:14.912Z</updated>
    
    <content type="html"><![CDATA[<p>T: you`re still here 还不走啊</p><p>S: yes 对</p><p>T: why 为什么</p><p>S: dit lt ever occur to you that I might be the one who deserves your confidence and your trust, not your sons ? 你有没有想过，也许我是最值得你信任的人，而不是你的儿子们？</p><p>S: Not Jaime or Tyrion, but me. 不是詹姆也不是提利昂，是我</p><p>S: Years and Years of lectures on family and <strong>legacy</strong>–the same lacture, really; just with tiny, tedious variations, did it ever occur to you that your daughter living by them年复一年的教诲，有关家族和祖传家业，千篇一律；只有乏味而微小的改变，不知你是否意识到你的女儿可能是唯一以此为信念的人</p><p><strong>legacy</strong>: 遗产</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/05/HkVDnz9UrglIf6h.png"                      alt="image.png"                ></p><p>S: That she might have the most to contribute to your legacy that you love so much more than your actual children? 您把祖训(遗产)看得比自己的孩子们要重要得多，而她也许最能帮助你去完成</p><p>T: All right. Contribute. 好吧，来帮助我</p><p>S: The Tyrells are a problem. 提利尔家族是个问题</p><p>T: The Tyrells helped us defeat Stannis Baratheon. 提利尔家族帮我们打败了史坦尼丝拜拉席恩</p><p>T: The Tyrells saved your life, your childen`s lives. 提利尔家族救了你的命，救了你孩子们的命</p><p>S: Margaery has her claws in Joffrey. 玛格丽将魔爪伸向了乔佛里</p><p>S: She konws how to <strong>manipulate</strong> him. 她懂得如何操控他</p><p><strong>manipulate</strong>: 操控</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/05/XogV6LqSr1CmNpB.png"                      alt="image.png"                ></p><p>T: Good. I wish you knew how to manipulate him. 不错，我真希望你也懂得如何操控他</p><p>T: I don`t distrust you because you are a woman. I distrust you because you are not as smart as you think you are. You have allowed that boy to ride <strong>roughshod</strong> over you and everyone else in this city. 我不信任你，不是因为你是女人，而是因为你自以为是；你让儿子骑在你头上，还任凭他欺压城里的所有人</p><p><strong>roughshod</strong>: 为所欲为，横行霸道</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/05/NhVBwE3ojunKTLX.png"                      alt="image.png"                ></p><p>S: Perhaps… you should try stopping him from doing what he likes. 也许… 您应该阻止他为所欲为</p><p>T: I will. 我会的</p><p>S: Do you like lt, Nana? 您喜欢吗？奶奶</p><p>N: Aonther golden rose. How original. 又一朵金玫瑰，真没劲</p><p>N: I eat from plates stamped with roses. 我吃饭的盘子里刻着玫瑰</p><p>N: I sleep in sheets embroidered with roses. 我睡觉的被单上绣着玫瑰</p><p>N: I have a golden rose painted on my <strong>chamber pot</strong>, as if that makes it smell any better. 我的夜壶上也有一个金玫瑰，难道这样就能好闻点</p><p><strong>chamber pot</strong>: 夜壶</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/05/Wto9rbgNjq2cZkT.png"                      alt="image.png"                ></p><p>N: rose are boring, dear. 亲爱的，玫瑰很无趣</p><p>N: “Growing strong” “生生不息”</p><p>N: Ha! The dullest words of any house. 所有家族中最无趣的族语</p><p>N: “Winter is coming” “凛冬将至”</p><p>N: Now that`s memorable. 这才让人过目不忘</p><p>N: “We do not sow.” Strong. Strong. “抢取胜于苦耕” 多么强大</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;T: you`re still here 还不走啊&lt;/p&gt;
&lt;p&gt;S: yes 对&lt;/p&gt;
&lt;p&gt;T: why 为什么&lt;/p&gt;
&lt;p&gt;S: dit lt ever occur to you that I might be the one who deserves your </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于vim的几种使用</title>
    <link href="http://example.com/2022/04/01/%E5%85%B3%E4%BA%8Evim%E7%9A%84%E5%87%A0%E7%A7%8D%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2022/04/01/%E5%85%B3%E4%BA%8Evim%E7%9A%84%E5%87%A0%E7%A7%8D%E4%BD%BF%E7%94%A8/</id>
    <published>2022-04-01T03:43:30.000Z</published>
    <updated>2022-04-01T10:48:34.655Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>清空全部内容</p><p>例如我们在打开一个.txt文件时，想清除这个.txt文件，可以发现<code>Ctrl+A</code>是无法使用的，这时候我们可以先按<code>Esc</code>键然后输入冒号，键入<strong>0,$d</strong>即可清除全部内容</p></li><li><p>显示或不显示行号</p><p>使用命令<code>set number</code>为显示行号，使用命令<code>set nonumber</code>为不显示行号</p></li><li><p>删除字符</p><p>要删除一个字符，只需要将光标移动到该字符上按下<code>x</code></p></li><li><p>删除一行</p><p>删除一整行内容使用<code>dd</code>命令，删除后后面的行会移动上来填补空缺</p></li><li><p>撤销</p><p>如果你误删了过多的内容。显然你可以再输入一遍，但是命令<code>u</code>更简便，它可以撤消上一次的操作</p></li><li><p>追加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;i&quot;命令可以在当前光标之前插入文本。</span><br><span class="line">  &quot;a&quot;命令可以在当前光标之后插入文本。</span><br><span class="line">  &quot;o&quot;命令可以在当前行的下面另起一行，并使当前模式转为Insert模式。</span><br><span class="line">  &quot;O&quot;命令(注意是大写的字母O)将在当前行的上面另起一行</span><br></pre></td></tr></table></figure></li><li><p>退出</p><p>要退出Vim，用命令<code>ZZ</code>。该命令保存当前文件并退出Vim</p></li></ol><p>以上内容参考自: <a class="link"   href="https://www.cnblogs.com/cy0628/p/13888577.html" >https://www.cnblogs.com/cy0628/p/13888577.html<i class="fas fa-external-link-alt"></i></a></p><p>内容还不完整，如需了解更多请点击链接，给定的这个链接还是比较全面的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;清空全部内容&lt;/p&gt;
&lt;p&gt;例如我们在打开一个.txt文件时，想清除这个.txt文件，可以发现&lt;code&gt;Ctrl+A&lt;/code&gt;是无法使用的，这时候我们可以先按&lt;code&gt;Esc&lt;/code&gt;键然后输入冒号，键入&lt;strong&gt;0,$d&lt;/strong</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于修改Jenkins默认端口(8080)</title>
    <link href="http://example.com/2022/04/01/%E5%85%B3%E4%BA%8E%E4%BF%AE%E6%94%B9Jenkins%E9%BB%98%E8%AE%A4%E7%AB%AF%E5%8F%A3(8080)/"/>
    <id>http://example.com/2022/04/01/%E5%85%B3%E4%BA%8E%E4%BF%AE%E6%94%B9Jenkins%E9%BB%98%E8%AE%A4%E7%AB%AF%E5%8F%A3(8080)/</id>
    <published>2022-04-01T03:15:30.000Z</published>
    <updated>2022-04-01T03:23:12.215Z</updated>
    
    <content type="html"><![CDATA[<p>Jenkins的安装请移步: <a class="link"   href="http://kest.club/2022/02/23/ubuntu16%E5%AE%89%E8%A3%85Jenkins/" >http://kest.club/2022/02/23/ubuntu16%E5%AE%89%E8%A3%85Jenkins/<i class="fas fa-external-link-alt"></i></a></p><p>然后下面我们来看看如何修改Jenkins这个默认的端口，主要是我安装爬虫可视化工具CrawLab遇到点问题，所以想着修改下</p><p>总体来说就两步</p><ol><li>使用<code>vim /etc/init.d/jenkins</code>命令，修改<code>do_start</code>函数中的<code>check_tcp_port</code>命令，端口号从8080换成8082或者其他</li><li>使用<code>vim /etc/default/jenkins</code>命令，将断口8080改成8082</li></ol><p>本文参考自: <a class="link"   href="https://www.qieseo.com/217847.html" >https://www.qieseo.com/217847.html<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Jenkins的安装请移步: &lt;a class=&quot;link&quot;   href=&quot;http://kest.club/2022/02/23/ubuntu16%E5%AE%89%E8%A3%85Jenkins/&quot; &gt;http://kest.club/2022/02/23/ubunt</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>17年星火英语六级2000高频词汇</title>
    <link href="http://example.com/2022/04/01/17%E5%B9%B4%E6%98%9F%E7%81%AB%E8%8B%B1%E8%AF%AD%E5%85%AD%E7%BA%A72000%E9%AB%98%E9%A2%91%E8%AF%8D%E6%B1%87/"/>
    <id>http://example.com/2022/04/01/17%E5%B9%B4%E6%98%9F%E7%81%AB%E8%8B%B1%E8%AF%AD%E5%85%AD%E7%BA%A72000%E9%AB%98%E9%A2%91%E8%AF%8D%E6%B1%87/</id>
    <published>2022-04-01T01:22:30.000Z</published>
    <updated>2022-04-01T01:23:06.126Z</updated>
    
    <content type="html"><![CDATA[<p>转载自原创力文档: <a class="link"   href="https://max.book118.com/html/2017/0911/133268071.shtm" >https://max.book118.com/html/2017/0911/133268071.shtm<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;转载自原创力文档: &lt;a class=&quot;link&quot;   href=&quot;https://max.book118.com/html/2017/0911/133268071.shtm&quot; &gt;https://max.book118.com/html/2017/0911/13326807</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于Docker</title>
    <link href="http://example.com/2022/04/01/%E5%85%B3%E4%BA%8EDocker/"/>
    <id>http://example.com/2022/04/01/%E5%85%B3%E4%BA%8EDocker/</id>
    <published>2022-04-01T01:12:30.000Z</published>
    <updated>2022-04-01T01:14:07.991Z</updated>
    
    <content type="html"><![CDATA[<p>转载自csdn: <a class="link"   href="https://blog.csdn.net/javahelpyou/article/details/104587242" >https://blog.csdn.net/javahelpyou/article/details/104587242<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;转载自csdn: &lt;a class=&quot;link&quot;   href=&quot;https://blog.csdn.net/javahelpyou/article/details/104587242&quot; &gt;https://blog.csdn.net/javahelpyou/article/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>100句英语口语-1</title>
    <link href="http://example.com/2022/03/30/100%E5%8F%A5%E8%8B%B1%E8%AF%AD%E5%8F%A3%E8%AF%AD-1/"/>
    <id>http://example.com/2022/03/30/100%E5%8F%A5%E8%8B%B1%E8%AF%AD%E5%8F%A3%E8%AF%AD-1/</id>
    <published>2022-03-30T06:35:30.000Z</published>
    <updated>2022-03-30T07:32:56.931Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>That’s  quite possible</p><p>非常有可能</p></li><li><p>I’m always very nervous</p><p>我总是很紧张</p></li><li><p>Up to you</p><p>你决定</p></li><li><p> Hurry up</p></li></ol><p>   快点</p><ol start="5"><li><p>Let me handle this</p><p>让我来处理</p></li><li><p>it’s obvious</p><p>很明显</p></li><li><p>You’ve done it!</p><p>你做到了</p></li><li><p>I’m leaving</p><p>我要走了</p></li><li><p>I am a housewife</p><p>我是个家庭主妇</p></li><li><p>You’re important</p><p>你非常重要</p></li><li><p>That was fantastic</p><p>那真了不起</p></li><li><p>It’s nothing</p><p>没什么</p></li><li><p>I’m starved</p><p>我饿死了</p></li><li><p>You must be kidding</p><p>你一定是在开玩笑</p></li><li><p>The problem perplexed him</p><p>这个问题使他扩惑不解</p></li><li><p>It isn’t mine</p><p>不是我的</p></li><li><p>What do you think?</p><p>你认为怎样?</p></li><li><p>I have allergies</p><p>我是过敏体质</p></li><li><p>Come with me</p><p>跟我来</p></li><li><p>It’s impossible</p><p>那是不可能的</p></li><li><p>What’s the date today?</p><p>今天几号?</p></li><li><p>Thanks for your explanation</p><p>谢谢你的解释</p></li><li><p>Look out!</p><p>当心!</p></li><li><p>We arrived first</p><p>我们先到的</p></li><li><p>Good grief!</p><p>我的天哪!</p></li><li><p>It’s a bad idea</p><p>这不是个好主意</p></li><li><p>It only costs $10.00</p><p>只要10美元</p></li><li><p>No comment!</p><p>无可奉告</p></li><li><p>Hello, how’s  business?</p><p>你好， 生意怎么样?</p></li><li><p>Either is fine</p><p>哪一个都行</p></li><li><p>Take your time</p><p>慢慢来</p></li><li><p>Nobody understands me</p><p>没有人理解我</p></li><li><p>We’re all for it</p><p>我们全都同意</p></li><li><p>I am very slim</p><p>我很苗条</p></li><li><p>Let’s split it</p><p>我们把它分了吧</p></li><li><p>Have you eaten?</p><p>你吃过饭了嘛?</p></li><li><p>Who owns this house?</p><p>这间房子的主人是谁?</p></li><li><p>What a beautiful picture!</p><p>多漂亮的一幅画啊!</p></li><li><p>It seems all right</p><p>看来这没问题</p></li><li><p>You can do it</p><p>你能做到的 </p></li><li><p>For sure</p><p>肯定的</p></li><li><p>Is Paris far away?</p><p>巴黎远嘛?</p></li><li><p>Please put it away</p><p>请把它收起来</p></li><li><p>I swear!</p><p>我发誓!</p></li><li><p>Don’t leave it open</p><p>别让它开着</p></li><li><p>Please do it quickly</p><p>请快一点</p></li><li><p>My eyelid feels hot</p><p>我的眼皮很热</p></li><li><p>Waiter, three coffees, please</p><p>服务员，请来三杯咖啡</p></li><li><p>I am naturally optimistic</p><p>我天性乐观</p></li><li><p>It’s so boring</p><p>好无聊啊</p></li><li><p>What’s your wish?</p><p>你的愿望是什么?</p></li><li><p>You can’t miss it</p><p>你一定能找到的</p></li><li><p>Whose book is  this?</p><p>这是谁的书?</p></li><li><p>Teaching is learning</p><p>教学相长</p></li><li><p>Count me in</p><p>算上我</p></li><li><p> I think so</p></li></ol><pre><code>我也这么想</code></pre><ol start="57"><li><p>School begins tomorrow</p><p>学校明天开学</p></li><li><p>Don’t be bothered</p><p>别为此烦恼</p></li><li><p>please unlock the door</p><p>请把门打开</p></li><li><p>The aurora was truly remarkable</p><p>极光真的是美轮美奂</p></li><li><p>The view is great</p><p>景色多么漂亮</p></li><li><p>It’s merely a joke </p><p>这只是个玩笑</p></li><li><p>The brake stopped working</p><p>刹车失灵了</p></li><li><p>I’m in need of money</p><p>我确实需要钱</p></li><li><p>For what?</p><p>为了什么?</p></li><li><p>Don’t take chances</p><p>不要冒险</p></li><li><p>Keep in Touch</p><p>保持联络</p></li><li><p>How have you been?</p><p>这些日子过得怎么样?</p></li><li><p>Let me out here</p><p>让我在这下车</p></li><li><p>Have you finished it?</p><p>你完成了嘛</p></li><li><p>This watch is shock-proof</p><p>这只表防震</p></li><li><p>I’m exhausted</p><p>我累坏了</p></li><li><p>Do as you want</p><p>按你想的去做</p></li><li><p>You’re my type</p><p>你是我喜欢的类型</p></li><li><p>Dont’t run risks</p><p>不要冒险</p></li><li><p>So what?</p><p>那又怎样?</p></li><li><p>I adopted it</p><p>它是我领养的</p></li><li><p>I strongly trust it</p><p>我坚信不移</p></li><li><p>Anything new?</p><p>有什么新鲜事嘛?</p></li><li><p>Just do it</p><p>想做就做</p></li><li><p>Please help yourself</p><p>请自便</p></li><li><p>Come along</p><p>过来</p></li><li><p>Summer is gone</p><p>夏天一去不复返了</p></li><li><p>Let it hang</p><p>就让它挂那儿吧</p></li><li><p>Summer has come</p><p>夏天来了</p></li><li><p>This is final</p><p>这事我说了算</p></li><li><p>I love trips</p><p>我爱旅行</p></li><li><p>The house is fireproof</p><p>这房子防火</p></li><li><p>I dislike being alone</p><p>我不喜欢一个人</p></li><li><p>I’m about to leave</p><p>我要走了</p></li><li><p>Have you finished yet?</p><p>你做完了嘛?</p></li><li><p>Lemon is sour</p><p>柠檬很酸</p></li><li><p>My pleasure!</p><p>我的荣幸</p></li><li><p>Are you exhausted?</p><p>你透支了嘛?</p></li><li><p>You can make it!</p><p>你能做到!</p></li><li><p>How moving!</p><p>太感动了!</p></li><li><p>I did it!</p><p>我成功了!</p></li><li><p>Brilliant!</p><p>太棒了!</p></li><li><p>Right over there</p><p>就在那儿</p></li><li><p>You’re looking sharp!</p><p>你看上去真精神!</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;That’s  quite possible&lt;/p&gt;
&lt;p&gt;非常有可能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I’m always very nervous&lt;/p&gt;
&lt;p&gt;我总是很紧张&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Up to you&lt;/p&gt;
&lt;p&gt;你决定</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>完美世界逆向分析</title>
    <link href="http://example.com/2022/03/30/%E5%AE%8C%E7%BE%8E%E4%B8%96%E7%95%8C%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2022/03/30/%E5%AE%8C%E7%BE%8E%E4%B8%96%E7%95%8C%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/</id>
    <published>2022-03-30T04:04:30.000Z</published>
    <updated>2022-03-30T10:50:02.057Z</updated>
    
    <content type="html"><![CDATA[<p>url: <a class="link"   href="https://passport.wanmei.com/login?location=L3NhZmUv" >https://passport.wanmei.com/login?location=L3NhZmUv<i class="fas fa-external-link-alt"></i></a></p><p>分析:</p><p>在输入框中输入用户名和密码后，会发现这样一个加密:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/f8m4CDvA9sKSEoc.png"                      alt="图片.png"                ></p><p>然后我们就开始找加密，我们同样是通过搜索，然后定位疑似加密的代码，从上往下一个个点开，然后我们发现有一个中出现了<code>encrypt</code>的字样:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/2GV6FWRNhHBIuCL.png"                      alt="图片.png"                ></p><p>然后通过打断点我们也确定了有加密后密码的存在，然后我们发现，<code>e</code>是个加密对象，是<code>JSEncrypt</code>的一个对象，我们可以跳转到<code>JSEncrypt</code>里面去看看:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/iXvPYrOUT9Sd3sx.png"                      alt="图片.png"                ></p><p>可以看到这里就把<code>JSEncrypt</code>给暴露出去了，所以外界就能使用它</p><p>我们索性就把这个<code>jsencrypt.min.js</code>全部拿下来，然后我们可能要进行一个补环境，然后按照前面的一个逻辑，先构建e对象，然后我们根据页面上给的<code>#e</code>这个css选择器，确切点说是id选择器，拿到它的值，传给<code>e.setPbulicKey()方法</code>进行设置公钥，最后用<code>e.encrypt()</code>获取加密后的密码，测试代码如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br><span class="line">2219</span><br><span class="line">2220</span><br><span class="line">2221</span><br><span class="line">2222</span><br><span class="line">2223</span><br><span class="line">2224</span><br><span class="line">2225</span><br><span class="line">2226</span><br><span class="line">2227</span><br><span class="line">2228</span><br><span class="line">2229</span><br><span class="line">2230</span><br><span class="line">2231</span><br><span class="line">2232</span><br><span class="line">2233</span><br><span class="line">2234</span><br><span class="line">2235</span><br><span class="line">2236</span><br><span class="line">2237</span><br><span class="line">2238</span><br><span class="line">2239</span><br><span class="line">2240</span><br><span class="line">2241</span><br><span class="line">2242</span><br><span class="line">2243</span><br><span class="line">2244</span><br><span class="line">2245</span><br><span class="line">2246</span><br><span class="line">2247</span><br><span class="line">2248</span><br><span class="line">2249</span><br><span class="line">2250</span><br><span class="line">2251</span><br><span class="line">2252</span><br><span class="line">2253</span><br><span class="line">2254</span><br><span class="line">2255</span><br><span class="line">2256</span><br><span class="line">2257</span><br><span class="line">2258</span><br><span class="line">2259</span><br><span class="line">2260</span><br><span class="line">2261</span><br><span class="line">2262</span><br><span class="line">2263</span><br><span class="line">2264</span><br><span class="line">2265</span><br><span class="line">2266</span><br><span class="line">2267</span><br><span class="line">2268</span><br><span class="line">2269</span><br><span class="line">2270</span><br><span class="line">2271</span><br><span class="line">2272</span><br><span class="line">2273</span><br><span class="line">2274</span><br><span class="line">2275</span><br><span class="line">2276</span><br><span class="line">2277</span><br><span class="line">2278</span><br><span class="line">2279</span><br><span class="line">2280</span><br><span class="line">2281</span><br><span class="line">2282</span><br><span class="line">2283</span><br><span class="line">2284</span><br><span class="line">2285</span><br><span class="line">2286</span><br><span class="line">2287</span><br><span class="line">2288</span><br><span class="line">2289</span><br><span class="line">2290</span><br><span class="line">2291</span><br><span class="line">2292</span><br><span class="line">2293</span><br><span class="line">2294</span><br><span class="line">2295</span><br><span class="line">2296</span><br><span class="line">2297</span><br><span class="line">2298</span><br><span class="line">2299</span><br><span class="line">2300</span><br><span class="line">2301</span><br><span class="line">2302</span><br><span class="line">2303</span><br><span class="line">2304</span><br><span class="line">2305</span><br><span class="line">2306</span><br><span class="line">2307</span><br><span class="line">2308</span><br><span class="line">2309</span><br><span class="line">2310</span><br><span class="line">2311</span><br><span class="line">2312</span><br><span class="line">2313</span><br><span class="line">2314</span><br><span class="line">2315</span><br><span class="line">2316</span><br><span class="line">2317</span><br><span class="line">2318</span><br><span class="line">2319</span><br><span class="line">2320</span><br><span class="line">2321</span><br><span class="line">2322</span><br><span class="line">2323</span><br><span class="line">2324</span><br><span class="line">2325</span><br><span class="line">2326</span><br><span class="line">2327</span><br><span class="line">2328</span><br><span class="line">2329</span><br><span class="line">2330</span><br><span class="line">2331</span><br><span class="line">2332</span><br><span class="line">2333</span><br><span class="line">2334</span><br><span class="line">2335</span><br><span class="line">2336</span><br><span class="line">2337</span><br><span class="line">2338</span><br><span class="line">2339</span><br><span class="line">2340</span><br><span class="line">2341</span><br><span class="line">2342</span><br><span class="line">2343</span><br><span class="line">2344</span><br><span class="line">2345</span><br><span class="line">2346</span><br><span class="line">2347</span><br><span class="line">2348</span><br><span class="line">2349</span><br><span class="line">2350</span><br><span class="line">2351</span><br><span class="line">2352</span><br><span class="line">2353</span><br><span class="line">2354</span><br><span class="line">2355</span><br><span class="line">2356</span><br><span class="line">2357</span><br><span class="line">2358</span><br><span class="line">2359</span><br><span class="line">2360</span><br><span class="line">2361</span><br><span class="line">2362</span><br><span class="line">2363</span><br><span class="line">2364</span><br><span class="line">2365</span><br><span class="line">2366</span><br><span class="line">2367</span><br><span class="line">2368</span><br><span class="line">2369</span><br><span class="line">2370</span><br><span class="line">2371</span><br><span class="line">2372</span><br><span class="line">2373</span><br><span class="line">2374</span><br><span class="line">2375</span><br><span class="line">2376</span><br><span class="line">2377</span><br><span class="line">2378</span><br><span class="line">2379</span><br><span class="line">2380</span><br><span class="line">2381</span><br><span class="line">2382</span><br><span class="line">2383</span><br><span class="line">2384</span><br><span class="line">2385</span><br><span class="line">2386</span><br><span class="line">2387</span><br><span class="line">2388</span><br><span class="line">2389</span><br><span class="line">2390</span><br><span class="line">2391</span><br><span class="line">2392</span><br><span class="line">2393</span><br><span class="line">2394</span><br><span class="line">2395</span><br><span class="line">2396</span><br><span class="line">2397</span><br><span class="line">2398</span><br><span class="line">2399</span><br><span class="line">2400</span><br><span class="line">2401</span><br><span class="line">2402</span><br><span class="line">2403</span><br><span class="line">2404</span><br><span class="line">2405</span><br><span class="line">2406</span><br><span class="line">2407</span><br><span class="line">2408</span><br><span class="line">2409</span><br><span class="line">2410</span><br><span class="line">2411</span><br><span class="line">2412</span><br><span class="line">2413</span><br><span class="line">2414</span><br><span class="line">2415</span><br><span class="line">2416</span><br><span class="line">2417</span><br><span class="line">2418</span><br><span class="line">2419</span><br><span class="line">2420</span><br><span class="line">2421</span><br><span class="line">2422</span><br><span class="line">2423</span><br><span class="line">2424</span><br><span class="line">2425</span><br><span class="line">2426</span><br><span class="line">2427</span><br><span class="line">2428</span><br><span class="line">2429</span><br><span class="line">2430</span><br><span class="line">2431</span><br><span class="line">2432</span><br><span class="line">2433</span><br><span class="line">2434</span><br><span class="line">2435</span><br><span class="line">2436</span><br><span class="line">2437</span><br><span class="line">2438</span><br><span class="line">2439</span><br><span class="line">2440</span><br><span class="line">2441</span><br><span class="line">2442</span><br><span class="line">2443</span><br><span class="line">2444</span><br><span class="line">2445</span><br><span class="line">2446</span><br><span class="line">2447</span><br><span class="line">2448</span><br><span class="line">2449</span><br><span class="line">2450</span><br><span class="line">2451</span><br><span class="line">2452</span><br><span class="line">2453</span><br><span class="line">2454</span><br><span class="line">2455</span><br><span class="line">2456</span><br><span class="line">2457</span><br><span class="line">2458</span><br><span class="line">2459</span><br><span class="line">2460</span><br><span class="line">2461</span><br><span class="line">2462</span><br><span class="line">2463</span><br><span class="line">2464</span><br><span class="line">2465</span><br><span class="line">2466</span><br><span class="line">2467</span><br><span class="line">2468</span><br><span class="line">2469</span><br><span class="line">2470</span><br><span class="line">2471</span><br><span class="line">2472</span><br><span class="line">2473</span><br><span class="line">2474</span><br><span class="line">2475</span><br><span class="line">2476</span><br><span class="line">2477</span><br><span class="line">2478</span><br><span class="line">2479</span><br><span class="line">2480</span><br><span class="line">2481</span><br><span class="line">2482</span><br><span class="line">2483</span><br><span class="line">2484</span><br><span class="line">2485</span><br><span class="line">2486</span><br><span class="line">2487</span><br><span class="line">2488</span><br><span class="line">2489</span><br><span class="line">2490</span><br><span class="line">2491</span><br><span class="line">2492</span><br><span class="line">2493</span><br><span class="line">2494</span><br><span class="line">2495</span><br><span class="line">2496</span><br><span class="line">2497</span><br><span class="line">2498</span><br><span class="line">2499</span><br><span class="line">2500</span><br><span class="line">2501</span><br><span class="line">2502</span><br><span class="line">2503</span><br><span class="line">2504</span><br><span class="line">2505</span><br><span class="line">2506</span><br><span class="line">2507</span><br><span class="line">2508</span><br><span class="line">2509</span><br><span class="line">2510</span><br><span class="line">2511</span><br><span class="line">2512</span><br><span class="line">2513</span><br><span class="line">2514</span><br><span class="line">2515</span><br><span class="line">2516</span><br><span class="line">2517</span><br><span class="line">2518</span><br><span class="line">2519</span><br><span class="line">2520</span><br><span class="line">2521</span><br><span class="line">2522</span><br><span class="line">2523</span><br><span class="line">2524</span><br><span class="line">2525</span><br><span class="line">2526</span><br><span class="line">2527</span><br><span class="line">2528</span><br><span class="line">2529</span><br><span class="line">2530</span><br><span class="line">2531</span><br><span class="line">2532</span><br><span class="line">2533</span><br><span class="line">2534</span><br><span class="line">2535</span><br><span class="line">2536</span><br><span class="line">2537</span><br><span class="line">2538</span><br><span class="line">2539</span><br><span class="line">2540</span><br><span class="line">2541</span><br><span class="line">2542</span><br><span class="line">2543</span><br><span class="line">2544</span><br><span class="line">2545</span><br><span class="line">2546</span><br><span class="line">2547</span><br><span class="line">2548</span><br><span class="line">2549</span><br><span class="line">2550</span><br><span class="line">2551</span><br><span class="line">2552</span><br><span class="line">2553</span><br><span class="line">2554</span><br><span class="line">2555</span><br><span class="line">2556</span><br><span class="line">2557</span><br><span class="line">2558</span><br><span class="line">2559</span><br><span class="line">2560</span><br><span class="line">2561</span><br><span class="line">2562</span><br><span class="line">2563</span><br><span class="line">2564</span><br><span class="line">2565</span><br><span class="line">2566</span><br><span class="line">2567</span><br><span class="line">2568</span><br><span class="line">2569</span><br><span class="line">2570</span><br><span class="line">2571</span><br><span class="line">2572</span><br><span class="line">2573</span><br><span class="line">2574</span><br><span class="line">2575</span><br><span class="line">2576</span><br><span class="line">2577</span><br><span class="line">2578</span><br><span class="line">2579</span><br><span class="line">2580</span><br><span class="line">2581</span><br><span class="line">2582</span><br><span class="line">2583</span><br><span class="line">2584</span><br><span class="line">2585</span><br><span class="line">2586</span><br><span class="line">2587</span><br><span class="line">2588</span><br><span class="line">2589</span><br><span class="line">2590</span><br><span class="line">2591</span><br><span class="line">2592</span><br><span class="line">2593</span><br><span class="line">2594</span><br><span class="line">2595</span><br><span class="line">2596</span><br><span class="line">2597</span><br><span class="line">2598</span><br><span class="line">2599</span><br><span class="line">2600</span><br><span class="line">2601</span><br><span class="line">2602</span><br><span class="line">2603</span><br><span class="line">2604</span><br><span class="line">2605</span><br><span class="line">2606</span><br><span class="line">2607</span><br><span class="line">2608</span><br><span class="line">2609</span><br><span class="line">2610</span><br><span class="line">2611</span><br><span class="line">2612</span><br><span class="line">2613</span><br><span class="line">2614</span><br><span class="line">2615</span><br><span class="line">2616</span><br><span class="line">2617</span><br><span class="line">2618</span><br><span class="line">2619</span><br><span class="line">2620</span><br><span class="line">2621</span><br><span class="line">2622</span><br><span class="line">2623</span><br><span class="line">2624</span><br><span class="line">2625</span><br><span class="line">2626</span><br><span class="line">2627</span><br><span class="line">2628</span><br><span class="line">2629</span><br><span class="line">2630</span><br><span class="line">2631</span><br><span class="line">2632</span><br><span class="line">2633</span><br><span class="line">2634</span><br><span class="line">2635</span><br><span class="line">2636</span><br><span class="line">2637</span><br><span class="line">2638</span><br><span class="line">2639</span><br><span class="line">2640</span><br><span class="line">2641</span><br><span class="line">2642</span><br><span class="line">2643</span><br><span class="line">2644</span><br><span class="line">2645</span><br><span class="line">2646</span><br><span class="line">2647</span><br><span class="line">2648</span><br><span class="line">2649</span><br><span class="line">2650</span><br><span class="line">2651</span><br><span class="line">2652</span><br><span class="line">2653</span><br><span class="line">2654</span><br><span class="line">2655</span><br><span class="line">2656</span><br><span class="line">2657</span><br><span class="line">2658</span><br><span class="line">2659</span><br><span class="line">2660</span><br><span class="line">2661</span><br><span class="line">2662</span><br><span class="line">2663</span><br><span class="line">2664</span><br><span class="line">2665</span><br><span class="line">2666</span><br><span class="line">2667</span><br><span class="line">2668</span><br><span class="line">2669</span><br><span class="line">2670</span><br><span class="line">2671</span><br><span class="line">2672</span><br><span class="line">2673</span><br><span class="line">2674</span><br><span class="line">2675</span><br><span class="line">2676</span><br><span class="line">2677</span><br><span class="line">2678</span><br><span class="line">2679</span><br><span class="line">2680</span><br><span class="line">2681</span><br><span class="line">2682</span><br><span class="line">2683</span><br><span class="line">2684</span><br><span class="line">2685</span><br><span class="line">2686</span><br><span class="line">2687</span><br><span class="line">2688</span><br><span class="line">2689</span><br><span class="line">2690</span><br><span class="line">2691</span><br><span class="line">2692</span><br><span class="line">2693</span><br><span class="line">2694</span><br><span class="line">2695</span><br><span class="line">2696</span><br><span class="line">2697</span><br><span class="line">2698</span><br><span class="line">2699</span><br><span class="line">2700</span><br><span class="line">2701</span><br><span class="line">2702</span><br><span class="line">2703</span><br><span class="line">2704</span><br><span class="line">2705</span><br><span class="line">2706</span><br><span class="line">2707</span><br><span class="line">2708</span><br><span class="line">2709</span><br><span class="line">2710</span><br><span class="line">2711</span><br><span class="line">2712</span><br><span class="line">2713</span><br><span class="line">2714</span><br><span class="line">2715</span><br><span class="line">2716</span><br><span class="line">2717</span><br><span class="line">2718</span><br><span class="line">2719</span><br><span class="line">2720</span><br><span class="line">2721</span><br><span class="line">2722</span><br><span class="line">2723</span><br><span class="line">2724</span><br><span class="line">2725</span><br><span class="line">2726</span><br><span class="line">2727</span><br><span class="line">2728</span><br><span class="line">2729</span><br><span class="line">2730</span><br><span class="line">2731</span><br><span class="line">2732</span><br><span class="line">2733</span><br><span class="line">2734</span><br><span class="line">2735</span><br><span class="line">2736</span><br><span class="line">2737</span><br><span class="line">2738</span><br><span class="line">2739</span><br><span class="line">2740</span><br><span class="line">2741</span><br><span class="line">2742</span><br><span class="line">2743</span><br><span class="line">2744</span><br><span class="line">2745</span><br><span class="line">2746</span><br><span class="line">2747</span><br><span class="line">2748</span><br><span class="line">2749</span><br><span class="line">2750</span><br><span class="line">2751</span><br><span class="line">2752</span><br><span class="line">2753</span><br><span class="line">2754</span><br><span class="line">2755</span><br><span class="line">2756</span><br><span class="line">2757</span><br><span class="line">2758</span><br><span class="line">2759</span><br><span class="line">2760</span><br><span class="line">2761</span><br><span class="line">2762</span><br><span class="line">2763</span><br><span class="line">2764</span><br><span class="line">2765</span><br><span class="line">2766</span><br><span class="line">2767</span><br><span class="line">2768</span><br><span class="line">2769</span><br><span class="line">2770</span><br><span class="line">2771</span><br><span class="line">2772</span><br><span class="line">2773</span><br><span class="line">2774</span><br><span class="line">2775</span><br><span class="line">2776</span><br><span class="line">2777</span><br><span class="line">2778</span><br><span class="line">2779</span><br><span class="line">2780</span><br><span class="line">2781</span><br><span class="line">2782</span><br><span class="line">2783</span><br><span class="line">2784</span><br><span class="line">2785</span><br><span class="line">2786</span><br><span class="line">2787</span><br><span class="line">2788</span><br><span class="line">2789</span><br><span class="line">2790</span><br><span class="line">2791</span><br><span class="line">2792</span><br><span class="line">2793</span><br><span class="line">2794</span><br><span class="line">2795</span><br><span class="line">2796</span><br><span class="line">2797</span><br><span class="line">2798</span><br><span class="line">2799</span><br><span class="line">2800</span><br><span class="line">2801</span><br><span class="line">2802</span><br><span class="line">2803</span><br><span class="line">2804</span><br><span class="line">2805</span><br><span class="line">2806</span><br><span class="line">2807</span><br><span class="line">2808</span><br><span class="line">2809</span><br><span class="line">2810</span><br><span class="line">2811</span><br><span class="line">2812</span><br><span class="line">2813</span><br><span class="line">2814</span><br><span class="line">2815</span><br><span class="line">2816</span><br><span class="line">2817</span><br><span class="line">2818</span><br><span class="line">2819</span><br><span class="line">2820</span><br><span class="line">2821</span><br><span class="line">2822</span><br><span class="line">2823</span><br><span class="line">2824</span><br><span class="line">2825</span><br><span class="line">2826</span><br><span class="line">2827</span><br><span class="line">2828</span><br><span class="line">2829</span><br><span class="line">2830</span><br><span class="line">2831</span><br><span class="line">2832</span><br><span class="line">2833</span><br><span class="line">2834</span><br><span class="line">2835</span><br><span class="line">2836</span><br><span class="line">2837</span><br><span class="line">2838</span><br><span class="line">2839</span><br><span class="line">2840</span><br><span class="line">2841</span><br><span class="line">2842</span><br><span class="line">2843</span><br><span class="line">2844</span><br><span class="line">2845</span><br><span class="line">2846</span><br><span class="line">2847</span><br><span class="line">2848</span><br><span class="line">2849</span><br><span class="line">2850</span><br><span class="line">2851</span><br><span class="line">2852</span><br><span class="line">2853</span><br><span class="line">2854</span><br><span class="line">2855</span><br><span class="line">2856</span><br><span class="line">2857</span><br><span class="line">2858</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> navigator = <span class="built_in">this</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="built_in">window</span> = <span class="built_in">this</span>;</span><br><span class="line"><span class="comment">// 以下是加密的所有操作</span></span><br><span class="line">! <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">    <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> define &amp;&amp; define.amd ? define([<span class="string">&quot;exports&quot;</span>], e) : e(<span class="string">&quot;object&quot;</span> == <span class="keyword">typeof</span> <span class="built_in">exports</span> &amp;&amp; <span class="string">&quot;string&quot;</span> != <span class="keyword">typeof</span> <span class="built_in">exports</span>.nodeName ? <span class="built_in">module</span>.exports : t)</span><br><span class="line">&#125;(<span class="built_in">this</span>, <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params">t, e, i</span>) </span>&#123;</span><br><span class="line">        <span class="literal">null</span> != t &amp;&amp; (<span class="string">&quot;number&quot;</span> == <span class="keyword">typeof</span> t ? <span class="built_in">this</span>.fromNumber(t, e, i) : <span class="literal">null</span> == e &amp;&amp; <span class="string">&quot;string&quot;</span> != <span class="keyword">typeof</span> t ? <span class="built_in">this</span>.fromString(t, <span class="number">256</span>) : <span class="built_in">this</span>.fromString(t, e))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> e(<span class="literal">null</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params">t, e, i, r, s, n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (; --n &gt;= <span class="number">0</span>;) &#123;</span><br><span class="line">            <span class="keyword">var</span> o = e * <span class="built_in">this</span>[t++] + i[r] + s;</span><br><span class="line">            s = <span class="built_in">Math</span>.floor(o / <span class="number">67108864</span>),</span><br><span class="line">                i[r++] = <span class="number">67108863</span> &amp; o</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params">t, e, i, r, s, n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> o = <span class="number">32767</span> &amp; e, h = e &gt;&gt; <span class="number">15</span>; --n &gt;= <span class="number">0</span>;) &#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="number">32767</span> &amp; <span class="built_in">this</span>[t],</span><br><span class="line">                u = <span class="built_in">this</span>[t++] &gt;&gt; <span class="number">15</span>,</span><br><span class="line">                c = h * a + u * o;</span><br><span class="line">            a = o * a + ((<span class="number">32767</span> &amp; c) &lt;&lt; <span class="number">15</span>) + i[r] + (<span class="number">1073741823</span> &amp; s),</span><br><span class="line">                s = (a &gt;&gt;&gt; <span class="number">30</span>) + (c &gt;&gt;&gt; <span class="number">15</span>) + h * u + (s &gt;&gt;&gt; <span class="number">30</span>),</span><br><span class="line">                i[r++] = <span class="number">1073741823</span> &amp; a</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params">t, e, i, r, s, n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> o = <span class="number">16383</span> &amp; e, h = e &gt;&gt; <span class="number">14</span>; --n &gt;= <span class="number">0</span>;) &#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="number">16383</span> &amp; <span class="built_in">this</span>[t],</span><br><span class="line">                u = <span class="built_in">this</span>[t++] &gt;&gt; <span class="number">14</span>,</span><br><span class="line">                c = h * a + u * o;</span><br><span class="line">            a = o * a + ((<span class="number">16383</span> &amp; c) &lt;&lt; <span class="number">14</span>) + i[r] + s,</span><br><span class="line">                s = (a &gt;&gt; <span class="number">28</span>) + (c &gt;&gt; <span class="number">14</span>) + h * u,</span><br><span class="line">                i[r++] = <span class="number">268435455</span> &amp; a</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Be.charAt(t)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">h</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> i = Ke[t.charCodeAt(e)];</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span> == i ? -<span class="number">1</span> : i</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="built_in">this</span>.t - <span class="number">1</span>; e &gt;= <span class="number">0</span>; --e)</span><br><span class="line">            t[e] = <span class="built_in">this</span>[e];</span><br><span class="line">        t.t = <span class="built_in">this</span>.t,</span><br><span class="line">            t.s = <span class="built_in">this</span>.s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">u</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.t = <span class="number">1</span>,</span><br><span class="line">            <span class="built_in">this</span>.s = <span class="number">0</span> &gt; t ? -<span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">            t &gt; <span class="number">0</span> ? <span class="built_in">this</span>[<span class="number">0</span>] = t : -<span class="number">1</span> &gt; t ? <span class="built_in">this</span>[<span class="number">0</span>] = t + <span class="built_in">this</span>.DV : <span class="built_in">this</span>.t = <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = i();</span><br><span class="line">        <span class="keyword">return</span> e.fromInt(t),</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">t, i</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> r;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">16</span> == i)</span><br><span class="line">            r = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">8</span> == i)</span><br><span class="line">            r = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">256</span> == i)</span><br><span class="line">            r = <span class="number">8</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">2</span> == i)</span><br><span class="line">            r = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">32</span> == i)</span><br><span class="line">            r = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">4</span> != i)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">void</span> <span class="built_in">this</span>.fromRadix(t, i);</span><br><span class="line">            r = <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.t = <span class="number">0</span>,</span><br><span class="line">            <span class="built_in">this</span>.s = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> s = t.length, n = !<span class="number">1</span>, o = <span class="number">0</span>; --s &gt;= <span class="number">0</span>;) &#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="number">8</span> == r ? <span class="number">255</span> &amp; t[s] : h(t, s);</span><br><span class="line">            <span class="number">0</span> &gt; a ? <span class="string">&quot;-&quot;</span> == t.charAt(s) &amp;&amp; (n = !<span class="number">0</span>) : (n = !<span class="number">1</span>,</span><br><span class="line">                <span class="number">0</span> == o ? <span class="built_in">this</span>[<span class="built_in">this</span>.t++] = a : o + r &gt; <span class="built_in">this</span>.DB ? (<span class="built_in">this</span>[<span class="built_in">this</span>.t - <span class="number">1</span>] |= (a &amp; (<span class="number">1</span> &lt;&lt; <span class="built_in">this</span>.DB - o) - <span class="number">1</span>) &lt;&lt; o,</span><br><span class="line">                    <span class="built_in">this</span>[<span class="built_in">this</span>.t++] = a &gt;&gt; <span class="built_in">this</span>.DB - o) : <span class="built_in">this</span>[<span class="built_in">this</span>.t - <span class="number">1</span>] |= a &lt;&lt; o,</span><br><span class="line">                o += r,</span><br><span class="line">                o &gt;= <span class="built_in">this</span>.DB &amp;&amp; (o -= <span class="built_in">this</span>.DB))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="number">8</span> == r &amp;&amp; <span class="number">0</span> != (<span class="number">128</span> &amp; t[<span class="number">0</span>]) &amp;&amp; (<span class="built_in">this</span>.s = -<span class="number">1</span>,</span><br><span class="line">                o &gt; <span class="number">0</span> &amp;&amp; (<span class="built_in">this</span>[<span class="built_in">this</span>.t - <span class="number">1</span>] |= (<span class="number">1</span> &lt;&lt; <span class="built_in">this</span>.DB - o) - <span class="number">1</span> &lt;&lt; o)),</span><br><span class="line">            <span class="built_in">this</span>.clamp(),</span><br><span class="line">            n &amp;&amp; e.ZERO.subTo(<span class="built_in">this</span>, <span class="built_in">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">p</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="built_in">this</span>.s &amp; <span class="built_in">this</span>.DM; <span class="built_in">this</span>.t &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">this</span>[<span class="built_in">this</span>.t - <span class="number">1</span>] == t;)</span><br><span class="line">        --<span class="built_in">this</span>.t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">l</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.s &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;-&quot;</span> + <span class="built_in">this</span>.negate().toString(t);</span><br><span class="line">        <span class="keyword">var</span> e;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">16</span> == t)</span><br><span class="line">            e = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">8</span> == t)</span><br><span class="line">            e = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">2</span> == t)</span><br><span class="line">            e = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">32</span> == t)</span><br><span class="line">            e = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">4</span> != t)</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span>.toRadix(t);</span><br><span class="line">            e = <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> i, r = (<span class="number">1</span> &lt;&lt; e) - <span class="number">1</span>,</span><br><span class="line">            s = !<span class="number">1</span>,</span><br><span class="line">            n = <span class="string">&quot;&quot;</span>,</span><br><span class="line">            h = <span class="built_in">this</span>.t,</span><br><span class="line">            a = <span class="built_in">this</span>.DB - h * <span class="built_in">this</span>.DB % e;</span><br><span class="line">        <span class="keyword">if</span> (h-- &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">for</span> (a &lt; <span class="built_in">this</span>.DB &amp;&amp; (i = <span class="built_in">this</span>[h] &gt;&gt; a) &gt; <span class="number">0</span> &amp;&amp; (s = !<span class="number">0</span>,</span><br><span class="line">                n = o(i)); h &gt;= <span class="number">0</span>;)</span><br><span class="line">                e &gt; a ? (i = (<span class="built_in">this</span>[h] &amp; (<span class="number">1</span> &lt;&lt; a) - <span class="number">1</span>) &lt;&lt; e - a,</span><br><span class="line">                    i |= <span class="built_in">this</span>[--h] &gt;&gt; (a += <span class="built_in">this</span>.DB - e)) : (i = <span class="built_in">this</span>[h] &gt;&gt; (a -= e) &amp; r,</span><br><span class="line">                    <span class="number">0</span> &gt;= a &amp;&amp; (a += <span class="built_in">this</span>.DB,</span><br><span class="line">                        --h)),</span><br><span class="line">                i &gt; <span class="number">0</span> &amp;&amp; (s = !<span class="number">0</span>),</span><br><span class="line">                s &amp;&amp; (n += o(i));</span><br><span class="line">        <span class="keyword">return</span> s ? n : <span class="string">&quot;0&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">d</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> t = i();</span><br><span class="line">        <span class="keyword">return</span> e.ZERO.subTo(<span class="built_in">this</span>, t),</span><br><span class="line">            t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">g</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.s &lt; <span class="number">0</span> ? <span class="built_in">this</span>.negate() : <span class="built_in">this</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">m</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="built_in">this</span>.s - t.s;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> != e)</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="built_in">this</span>.t;</span><br><span class="line">        <span class="keyword">if</span> (e = i - t.t,</span><br><span class="line">            <span class="number">0</span> != e)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.s &lt; <span class="number">0</span> ? -e : e;</span><br><span class="line">        <span class="keyword">for</span> (; --i &gt;= <span class="number">0</span>;)</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> != (e = <span class="built_in">this</span>[i] - t[i]))</span><br><span class="line">                <span class="keyword">return</span> e;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">y</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e, i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> != (e = t &gt;&gt;&gt; <span class="number">16</span>) &amp;&amp; (t = e,</span><br><span class="line">                i += <span class="number">16</span>),</span><br><span class="line">            <span class="number">0</span> != (e = t &gt;&gt; <span class="number">8</span>) &amp;&amp; (t = e,</span><br><span class="line">                i += <span class="number">8</span>),</span><br><span class="line">            <span class="number">0</span> != (e = t &gt;&gt; <span class="number">4</span>) &amp;&amp; (t = e,</span><br><span class="line">                i += <span class="number">4</span>),</span><br><span class="line">            <span class="number">0</span> != (e = t &gt;&gt; <span class="number">2</span>) &amp;&amp; (t = e,</span><br><span class="line">                i += <span class="number">2</span>),</span><br><span class="line">            <span class="number">0</span> != (e = t &gt;&gt; <span class="number">1</span>) &amp;&amp; (t = e,</span><br><span class="line">                i += <span class="number">1</span>),</span><br><span class="line">            i</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.t &lt;= <span class="number">0</span> ? <span class="number">0</span> : <span class="built_in">this</span>.DB * (<span class="built_in">this</span>.t - <span class="number">1</span>) + y(<span class="built_in">this</span>[<span class="built_in">this</span>.t - <span class="number">1</span>] ^ <span class="built_in">this</span>.s &amp; <span class="built_in">this</span>.DM)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">T</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="built_in">this</span>.t - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">            e[i + t] = <span class="built_in">this</span>[i];</span><br><span class="line">        <span class="keyword">for</span> (i = t - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">            e[i] = <span class="number">0</span>;</span><br><span class="line">        e.t = <span class="built_in">this</span>.t + t,</span><br><span class="line">            e.s = <span class="built_in">this</span>.s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">S</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = t; i &lt; <span class="built_in">this</span>.t; ++i)</span><br><span class="line">            e[i - t] = <span class="built_in">this</span>[i];</span><br><span class="line">        e.t = <span class="built_in">Math</span>.max(<span class="built_in">this</span>.t - t, <span class="number">0</span>),</span><br><span class="line">            e.s = <span class="built_in">this</span>.s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">R</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> i, r = t % <span class="built_in">this</span>.DB,</span><br><span class="line">            s = <span class="built_in">this</span>.DB - r,</span><br><span class="line">            n = (<span class="number">1</span> &lt;&lt; s) - <span class="number">1</span>,</span><br><span class="line">            o = <span class="built_in">Math</span>.floor(t / <span class="built_in">this</span>.DB),</span><br><span class="line">            h = <span class="built_in">this</span>.s &lt;&lt; r &amp; <span class="built_in">this</span>.DM;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="built_in">this</span>.t - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">            e[i + o + <span class="number">1</span>] = <span class="built_in">this</span>[i] &gt;&gt; s | h,</span><br><span class="line">            h = (<span class="built_in">this</span>[i] &amp; n) &lt;&lt; r;</span><br><span class="line">        <span class="keyword">for</span> (i = o - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">            e[i] = <span class="number">0</span>;</span><br><span class="line">        e[o] = h,</span><br><span class="line">            e.t = <span class="built_in">this</span>.t + o + <span class="number">1</span>,</span><br><span class="line">            e.s = <span class="built_in">this</span>.s,</span><br><span class="line">            e.clamp()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">E</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        e.s = <span class="built_in">this</span>.s;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="built_in">Math</span>.floor(t / <span class="built_in">this</span>.DB);</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= <span class="built_in">this</span>.t)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">void</span>(e.t = <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">var</span> r = t % <span class="built_in">this</span>.DB,</span><br><span class="line">            s = <span class="built_in">this</span>.DB - r,</span><br><span class="line">            n = (<span class="number">1</span> &lt;&lt; r) - <span class="number">1</span>;</span><br><span class="line">        e[<span class="number">0</span>] = <span class="built_in">this</span>[i] &gt;&gt; r;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> o = i + <span class="number">1</span>; o &lt; <span class="built_in">this</span>.t; ++o)</span><br><span class="line">            e[o - i - <span class="number">1</span>] |= (<span class="built_in">this</span>[o] &amp; n) &lt;&lt; s,</span><br><span class="line">            e[o - i] = <span class="built_in">this</span>[o] &gt;&gt; r;</span><br><span class="line">        r &gt; <span class="number">0</span> &amp;&amp; (e[<span class="built_in">this</span>.t - i - <span class="number">1</span>] |= (<span class="built_in">this</span>.s &amp; n) &lt;&lt; s),</span><br><span class="line">            e.t = <span class="built_in">this</span>.t - i,</span><br><span class="line">            e.clamp()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">D</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, r = <span class="number">0</span>, s = <span class="built_in">Math</span>.min(t.t, <span class="built_in">this</span>.t); s &gt; i;)</span><br><span class="line">            r += <span class="built_in">this</span>[i] - t[i],</span><br><span class="line">            e[i++] = r &amp; <span class="built_in">this</span>.DM,</span><br><span class="line">            r &gt;&gt;= <span class="built_in">this</span>.DB;</span><br><span class="line">        <span class="keyword">if</span> (t.t &lt; <span class="built_in">this</span>.t) &#123;</span><br><span class="line">            <span class="keyword">for</span> (r -= t.s; i &lt; <span class="built_in">this</span>.t;)</span><br><span class="line">                r += <span class="built_in">this</span>[i],</span><br><span class="line">                e[i++] = r &amp; <span class="built_in">this</span>.DM,</span><br><span class="line">                r &gt;&gt;= <span class="built_in">this</span>.DB;</span><br><span class="line">            r += <span class="built_in">this</span>.s</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (r += <span class="built_in">this</span>.s; i &lt; t.t;)</span><br><span class="line">                r -= t[i],</span><br><span class="line">                e[i++] = r &amp; <span class="built_in">this</span>.DM,</span><br><span class="line">                r &gt;&gt;= <span class="built_in">this</span>.DB;</span><br><span class="line">            r -= t.s</span><br><span class="line">        &#125;</span><br><span class="line">        e.s = <span class="number">0</span> &gt; r ? -<span class="number">1</span> : <span class="number">0</span>, -<span class="number">1</span> &gt; r ? e[i++] = <span class="built_in">this</span>.DV + r : r &gt; <span class="number">0</span> &amp;&amp; (e[i++] = r),</span><br><span class="line">            e.t = i,</span><br><span class="line">            e.clamp()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">w</span>(<span class="params">t, i</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> r = <span class="built_in">this</span>.abs(),</span><br><span class="line">            s = t.abs(),</span><br><span class="line">            n = r.t;</span><br><span class="line">        <span class="keyword">for</span> (i.t = n + s.t; --n &gt;= <span class="number">0</span>;)</span><br><span class="line">            i[n] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (n = <span class="number">0</span>; n &lt; s.t; ++n)</span><br><span class="line">            i[n + r.t] = r.am(<span class="number">0</span>, s[n], i, n, <span class="number">0</span>, r.t);</span><br><span class="line">        i.s = <span class="number">0</span>,</span><br><span class="line">            i.clamp(),</span><br><span class="line">            <span class="built_in">this</span>.s != t.s &amp;&amp; e.ZERO.subTo(i, i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="built_in">this</span>.abs(), i = t.t = <span class="number">2</span> * e.t; --i &gt;= <span class="number">0</span>;)</span><br><span class="line">            t[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; e.t - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">            <span class="keyword">var</span> r = e.am(i, e[i], t, <span class="number">2</span> * i, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            (t[i + e.t] += e.am(i + <span class="number">1</span>, <span class="number">2</span> * e[i], t, <span class="number">2</span> * i + <span class="number">1</span>, r, e.t - i - <span class="number">1</span>)) &gt;= e.DV &amp;&amp; (t[i + e.t] -= e.DV,</span><br><span class="line">                t[i + e.t + <span class="number">1</span>] = <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        t.t &gt; <span class="number">0</span> &amp;&amp; (t[t.t - <span class="number">1</span>] += e.am(i, e[i], t, <span class="number">2</span> * i, <span class="number">0</span>, <span class="number">1</span>)),</span><br><span class="line">            t.s = <span class="number">0</span>,</span><br><span class="line">            t.clamp()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params">t, r, s</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> n = t.abs();</span><br><span class="line">        <span class="keyword">if</span> (!(n.t &lt;= <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">var</span> o = <span class="built_in">this</span>.abs();</span><br><span class="line">            <span class="keyword">if</span> (o.t &lt; n.t)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span> != r &amp;&amp; r.fromInt(<span class="number">0</span>),</span><br><span class="line">                    <span class="keyword">void</span>(<span class="literal">null</span> != s &amp;&amp; <span class="built_in">this</span>.copyTo(s));</span><br><span class="line">            <span class="literal">null</span> == s &amp;&amp; (s = i());</span><br><span class="line">            <span class="keyword">var</span> h = i(),</span><br><span class="line">                a = <span class="built_in">this</span>.s,</span><br><span class="line">                u = t.s,</span><br><span class="line">                c = <span class="built_in">this</span>.DB - y(n[n.t - <span class="number">1</span>]);</span><br><span class="line">            c &gt; <span class="number">0</span> ? (n.lShiftTo(c, h),</span><br><span class="line">                o.lShiftTo(c, s)) : (n.copyTo(h),</span><br><span class="line">                o.copyTo(s));</span><br><span class="line">            <span class="keyword">var</span> f = h.t,</span><br><span class="line">                p = h[f - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> != p) &#123;</span><br><span class="line">                <span class="keyword">var</span> l = p * (<span class="number">1</span> &lt;&lt; <span class="built_in">this</span>.F1) + (f &gt; <span class="number">1</span> ? h[f - <span class="number">2</span>] &gt;&gt; <span class="built_in">this</span>.F2 : <span class="number">0</span>),</span><br><span class="line">                    d = <span class="built_in">this</span>.FV / l,</span><br><span class="line">                    g = (<span class="number">1</span> &lt;&lt; <span class="built_in">this</span>.F1) / l,</span><br><span class="line">                    m = <span class="number">1</span> &lt;&lt; <span class="built_in">this</span>.F2,</span><br><span class="line">                    v = s.t,</span><br><span class="line">                    b = v - f,</span><br><span class="line">                    T = <span class="literal">null</span> == r ? i() : r;</span><br><span class="line">                <span class="keyword">for</span> (h.dlShiftTo(b, T),</span><br><span class="line">                    s.compareTo(T) &gt;= <span class="number">0</span> &amp;&amp; (s[s.t++] = <span class="number">1</span>,</span><br><span class="line">                        s.subTo(T, s)),</span><br><span class="line">                    e.ONE.dlShiftTo(f, T),</span><br><span class="line">                    T.subTo(h, h); h.t &lt; f;)</span><br><span class="line">                    h[h.t++] = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (; --b &gt;= <span class="number">0</span>;) &#123;</span><br><span class="line">                    <span class="keyword">var</span> S = s[--v] == p ? <span class="built_in">this</span>.DM : <span class="built_in">Math</span>.floor(s[v] * d + (s[v - <span class="number">1</span>] + m) * g);</span><br><span class="line">                    <span class="keyword">if</span> ((s[v] += h.am(<span class="number">0</span>, S, s, b, <span class="number">0</span>, f)) &lt; S)</span><br><span class="line">                        <span class="keyword">for</span> (h.dlShiftTo(b, T),</span><br><span class="line">                            s.subTo(T, s); s[v] &lt; --S;)</span><br><span class="line">                            s.subTo(T, s)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="literal">null</span> != r &amp;&amp; (s.drShiftTo(f, r),</span><br><span class="line">                        a != u &amp;&amp; e.ZERO.subTo(r, r)),</span><br><span class="line">                    s.t = f,</span><br><span class="line">                    s.clamp(),</span><br><span class="line">                    c &gt; <span class="number">0</span> &amp;&amp; s.rShiftTo(c, s),</span><br><span class="line">                    <span class="number">0</span> &gt; a &amp;&amp; e.ZERO.subTo(s, s)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">K</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> r = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.abs().divRemTo(t, <span class="literal">null</span>, r),</span><br><span class="line">            <span class="built_in">this</span>.s &lt; <span class="number">0</span> &amp;&amp; r.compareTo(e.ZERO) &gt; <span class="number">0</span> &amp;&amp; t.subTo(r, r),</span><br><span class="line">            r</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.m = t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">U</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t.s &lt; <span class="number">0</span> || t.compareTo(<span class="built_in">this</span>.m) &gt;= <span class="number">0</span> ? t.mod(<span class="built_in">this</span>.m) : t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">O</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">V</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        t.divRemTo(<span class="built_in">this</span>.m, <span class="literal">null</span>, t)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">N</span>(<span class="params">t, e, i</span>) </span>&#123;</span><br><span class="line">        t.multiplyTo(e, i),</span><br><span class="line">            <span class="built_in">this</span>.reduce(i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">J</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        t.squareTo(e),</span><br><span class="line">            <span class="built_in">this</span>.reduce(e)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">I</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.t &lt; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> t = <span class="built_in">this</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == (<span class="number">1</span> &amp; t))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="number">3</span> &amp; t;</span><br><span class="line">        <span class="keyword">return</span> e = e * (<span class="number">2</span> - (<span class="number">15</span> &amp; t) * e) &amp; <span class="number">15</span>,</span><br><span class="line">            e = e * (<span class="number">2</span> - (<span class="number">255</span> &amp; t) * e) &amp; <span class="number">255</span>,</span><br><span class="line">            e = e * (<span class="number">2</span> - ((<span class="number">65535</span> &amp; t) * e &amp; <span class="number">65535</span>)) &amp; <span class="number">65535</span>,</span><br><span class="line">            e = e * (<span class="number">2</span> - t * e % <span class="built_in">this</span>.DV) % <span class="built_in">this</span>.DV,</span><br><span class="line">            e &gt; <span class="number">0</span> ? <span class="built_in">this</span>.DV - e : -e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">P</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.m = t,</span><br><span class="line">            <span class="built_in">this</span>.mp = t.invDigit(),</span><br><span class="line">            <span class="built_in">this</span>.mpl = <span class="number">32767</span> &amp; <span class="built_in">this</span>.mp,</span><br><span class="line">            <span class="built_in">this</span>.mph = <span class="built_in">this</span>.mp &gt;&gt; <span class="number">15</span>,</span><br><span class="line">            <span class="built_in">this</span>.um = (<span class="number">1</span> &lt;&lt; t.DB - <span class="number">15</span>) - <span class="number">1</span>,</span><br><span class="line">            <span class="built_in">this</span>.mt2 = <span class="number">2</span> * t.t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">M</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> r = i();</span><br><span class="line">        <span class="keyword">return</span> t.abs().dlShiftTo(<span class="built_in">this</span>.m.t, r),</span><br><span class="line">            r.divRemTo(<span class="built_in">this</span>.m, <span class="literal">null</span>, r),</span><br><span class="line">            t.s &lt; <span class="number">0</span> &amp;&amp; r.compareTo(e.ZERO) &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">this</span>.m.subTo(r, r),</span><br><span class="line">            r</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">L</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = i();</span><br><span class="line">        <span class="keyword">return</span> t.copyTo(e),</span><br><span class="line">            <span class="built_in">this</span>.reduce(e),</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">q</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (; t.t &lt;= <span class="built_in">this</span>.mt2;)</span><br><span class="line">            t[t.t++] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; <span class="built_in">this</span>.m.t; ++e) &#123;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="number">32767</span> &amp; t[e],</span><br><span class="line">                r = i * <span class="built_in">this</span>.mpl + ((i * <span class="built_in">this</span>.mph + (t[e] &gt;&gt; <span class="number">15</span>) * <span class="built_in">this</span>.mpl &amp; <span class="built_in">this</span>.um) &lt;&lt; <span class="number">15</span>) &amp; t.DM;</span><br><span class="line">            <span class="keyword">for</span> (i = e + <span class="built_in">this</span>.m.t,</span><br><span class="line">                t[i] += <span class="built_in">this</span>.m.am(<span class="number">0</span>, r, t, e, <span class="number">0</span>, <span class="built_in">this</span>.m.t); t[i] &gt;= t.DV;)</span><br><span class="line">                t[i] -= t.DV,</span><br><span class="line">                t[++i]++</span><br><span class="line">        &#125;</span><br><span class="line">        t.clamp(),</span><br><span class="line">            t.drShiftTo(<span class="built_in">this</span>.m.t, t),</span><br><span class="line">            t.compareTo(<span class="built_in">this</span>.m) &gt;= <span class="number">0</span> &amp;&amp; t.subTo(<span class="built_in">this</span>.m, t)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">C</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        t.squareTo(e),</span><br><span class="line">            <span class="built_in">this</span>.reduce(e)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">H</span>(<span class="params">t, e, i</span>) </span>&#123;</span><br><span class="line">        t.multiplyTo(e, i),</span><br><span class="line">            <span class="built_in">this</span>.reduce(i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">j</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> == (<span class="built_in">this</span>.t &gt; <span class="number">0</span> ? <span class="number">1</span> &amp; <span class="built_in">this</span>[<span class="number">0</span>] : <span class="built_in">this</span>.s)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">k</span>(<span class="params">t, r</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (t &gt; <span class="number">4294967295</span> || <span class="number">1</span> &gt; t)</span><br><span class="line">            <span class="keyword">return</span> e.ONE;</span><br><span class="line">        <span class="keyword">var</span> s = i(),</span><br><span class="line">            n = i(),</span><br><span class="line">            o = r.convert(<span class="built_in">this</span>),</span><br><span class="line">            h = y(t) - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (o.copyTo(s); --h &gt;= <span class="number">0</span>;)</span><br><span class="line">            <span class="keyword">if</span> (r.sqrTo(s, n), (t &amp; <span class="number">1</span> &lt;&lt; h) &gt; <span class="number">0</span>)</span><br><span class="line">                r.mulTo(n, o, s);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> a = s;</span><br><span class="line">                s = n,</span><br><span class="line">                    n = a</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> r.revert(s)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">F</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> i;</span><br><span class="line">            <span class="keyword">return</span> i = <span class="number">256</span> &gt; t || e.isEven() ? <span class="keyword">new</span> A(e) : <span class="keyword">new</span> P(e),</span><br><span class="line">                <span class="built_in">this</span>.exp(t, i)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Copyright (c) 2005-2009  Tom Wu</span></span><br><span class="line">        <span class="comment">// All Rights Reserved.</span></span><br><span class="line">        <span class="comment">// See &quot;LICENSE&quot; for details.</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> t = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.copyTo(t),</span><br><span class="line">            t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">z</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.s &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">1</span> == <span class="built_in">this</span>.t)</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span>[<span class="number">0</span>] - <span class="built_in">this</span>.DV;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> == <span class="built_in">this</span>.t)</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">1</span> == <span class="built_in">this</span>.t)</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span>[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> == <span class="built_in">this</span>.t)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">this</span>[<span class="number">1</span>] &amp; (<span class="number">1</span> &lt;&lt; <span class="number">32</span> - <span class="built_in">this</span>.DB) - <span class="number">1</span>) &lt;&lt; <span class="built_in">this</span>.DB | <span class="built_in">this</span>[<span class="number">0</span>]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Z</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> == <span class="built_in">this</span>.t ? <span class="built_in">this</span>.s : <span class="built_in">this</span>[<span class="number">0</span>] &lt;&lt; <span class="number">24</span> &gt;&gt; <span class="number">24</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">G</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> == <span class="built_in">this</span>.t ? <span class="built_in">this</span>.s : <span class="built_in">this</span>[<span class="number">0</span>] &lt;&lt; <span class="number">16</span> &gt;&gt; <span class="number">16</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.LN2 * <span class="built_in">this</span>.DB / <span class="built_in">Math</span>.log(t))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Y</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.s &lt; <span class="number">0</span> ? -<span class="number">1</span> : <span class="built_in">this</span>.t &lt;= <span class="number">0</span> || <span class="number">1</span> == <span class="built_in">this</span>.t &amp;&amp; <span class="built_in">this</span>[<span class="number">0</span>] &lt;= <span class="number">0</span> ? <span class="number">0</span> : <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">W</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == t &amp;&amp; (t = <span class="number">10</span>),</span><br><span class="line">            <span class="number">0</span> == <span class="built_in">this</span>.signum() || <span class="number">2</span> &gt; t || t &gt; <span class="number">36</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;0&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="built_in">this</span>.chunkSize(t),</span><br><span class="line">            r = <span class="built_in">Math</span>.pow(t, e),</span><br><span class="line">            s = c(r),</span><br><span class="line">            n = i(),</span><br><span class="line">            o = i(),</span><br><span class="line">            h = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">this</span>.divRemTo(s, n, o); n.signum() &gt; <span class="number">0</span>;)</span><br><span class="line">            h = (r + o.intValue()).toString(t).substr(<span class="number">1</span>) + h,</span><br><span class="line">            n.divRemTo(s, n, o);</span><br><span class="line">        <span class="keyword">return</span> o.intValue().toString(t) + h</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Q</span>(<span class="params">t, i</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.fromInt(<span class="number">0</span>),</span><br><span class="line">            <span class="literal">null</span> == i &amp;&amp; (i = <span class="number">10</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> r = <span class="built_in">this</span>.chunkSize(i), s = <span class="built_in">Math</span>.pow(i, r), n = !<span class="number">1</span>, o = <span class="number">0</span>, a = <span class="number">0</span>, u = <span class="number">0</span>; u &lt; t.length; ++u) &#123;</span><br><span class="line">            <span class="keyword">var</span> c = h(t, u);</span><br><span class="line">            <span class="number">0</span> &gt; c ? <span class="string">&quot;-&quot;</span> == t.charAt(u) &amp;&amp; <span class="number">0</span> == <span class="built_in">this</span>.signum() &amp;&amp; (n = !<span class="number">0</span>) : (a = i * a + c,</span><br><span class="line">                ++o &gt;= r &amp;&amp; (<span class="built_in">this</span>.dMultiply(s),</span><br><span class="line">                    <span class="built_in">this</span>.dAddOffset(a, <span class="number">0</span>),</span><br><span class="line">                    o = <span class="number">0</span>,</span><br><span class="line">                    a = <span class="number">0</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        o &gt; <span class="number">0</span> &amp;&amp; (<span class="built_in">this</span>.dMultiply(<span class="built_in">Math</span>.pow(i, o)),</span><br><span class="line">                <span class="built_in">this</span>.dAddOffset(a, <span class="number">0</span>)),</span><br><span class="line">            n &amp;&amp; e.ZERO.subTo(<span class="built_in">this</span>, <span class="built_in">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">X</span>(<span class="params">t, i, r</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;number&quot;</span> == <span class="keyword">typeof</span> i)</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">2</span> &gt; t)</span><br><span class="line">                <span class="built_in">this</span>.fromInt(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">this</span>.fromNumber(t, r),</span><br><span class="line">                    <span class="built_in">this</span>.testBit(t - <span class="number">1</span>) || <span class="built_in">this</span>.bitwiseTo(e.ONE.shiftLeft(t - <span class="number">1</span>), ht, <span class="built_in">this</span>),</span><br><span class="line">                    <span class="built_in">this</span>.isEven() &amp;&amp; <span class="built_in">this</span>.dAddOffset(<span class="number">1</span>, <span class="number">0</span>); !<span class="built_in">this</span>.isProbablePrime(i);)</span><br><span class="line">                    <span class="built_in">this</span>.dAddOffset(<span class="number">2</span>, <span class="number">0</span>),</span><br><span class="line">                    <span class="built_in">this</span>.bitLength() &gt; t &amp;&amp; <span class="built_in">this</span>.subTo(e.ONE.shiftLeft(t - <span class="number">1</span>), <span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> s = <span class="keyword">new</span> <span class="built_in">Array</span>,</span><br><span class="line">                n = <span class="number">7</span> &amp; t;</span><br><span class="line">            s.length = (t &gt;&gt; <span class="number">3</span>) + <span class="number">1</span>,</span><br><span class="line">                i.nextBytes(s),</span><br><span class="line">                n &gt; <span class="number">0</span> ? s[<span class="number">0</span>] &amp;= (<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span> : s[<span class="number">0</span>] = <span class="number">0</span>,</span><br><span class="line">                <span class="built_in">this</span>.fromString(s, <span class="number">256</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">tt</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> t = <span class="built_in">this</span>.t,</span><br><span class="line">            e = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line">        e[<span class="number">0</span>] = <span class="built_in">this</span>.s;</span><br><span class="line">        <span class="keyword">var</span> i, r = <span class="built_in">this</span>.DB - t * <span class="built_in">this</span>.DB % <span class="number">8</span>,</span><br><span class="line">            s = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (t-- &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">for</span> (r &lt; <span class="built_in">this</span>.DB &amp;&amp; (i = <span class="built_in">this</span>[t] &gt;&gt; r) != (<span class="built_in">this</span>.s &amp; <span class="built_in">this</span>.DM) &gt;&gt; r &amp;&amp; (e[s++] = i | <span class="built_in">this</span>.s &lt;&lt; <span class="built_in">this</span>.DB - r); t &gt;= <span class="number">0</span>;)</span><br><span class="line">                <span class="number">8</span> &gt; r ? (i = (<span class="built_in">this</span>[t] &amp; (<span class="number">1</span> &lt;&lt; r) - <span class="number">1</span>) &lt;&lt; <span class="number">8</span> - r,</span><br><span class="line">                    i |= <span class="built_in">this</span>[--t] &gt;&gt; (r += <span class="built_in">this</span>.DB - <span class="number">8</span>)) : (i = <span class="built_in">this</span>[t] &gt;&gt; (r -= <span class="number">8</span>) &amp; <span class="number">255</span>,</span><br><span class="line">                    <span class="number">0</span> &gt;= r &amp;&amp; (r += <span class="built_in">this</span>.DB,</span><br><span class="line">                        --t)),</span><br><span class="line">                <span class="number">0</span> != (<span class="number">128</span> &amp; i) &amp;&amp; (i |= -<span class="number">256</span>),</span><br><span class="line">                <span class="number">0</span> == s &amp;&amp; (<span class="number">128</span> &amp; <span class="built_in">this</span>.s) != (<span class="number">128</span> &amp; i) &amp;&amp; ++s, (s &gt; <span class="number">0</span> || i != <span class="built_in">this</span>.s) &amp;&amp; (e[s++] = i);</span><br><span class="line">        <span class="keyword">return</span> e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">et</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> == <span class="built_in">this</span>.compareTo(t)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">it</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.compareTo(t) &lt; <span class="number">0</span> ? <span class="built_in">this</span> : t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">rt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.compareTo(t) &gt; <span class="number">0</span> ? <span class="built_in">this</span> : t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">st</span>(<span class="params">t, e, i</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> r, s, n = <span class="built_in">Math</span>.min(t.t, <span class="built_in">this</span>.t);</span><br><span class="line">        <span class="keyword">for</span> (r = <span class="number">0</span>; n &gt; r; ++r)</span><br><span class="line">            i[r] = e(<span class="built_in">this</span>[r], t[r]);</span><br><span class="line">        <span class="keyword">if</span> (t.t &lt; <span class="built_in">this</span>.t) &#123;</span><br><span class="line">            <span class="keyword">for</span> (s = t.s &amp; <span class="built_in">this</span>.DM,</span><br><span class="line">                r = n; r &lt; <span class="built_in">this</span>.t; ++r)</span><br><span class="line">                i[r] = e(<span class="built_in">this</span>[r], s);</span><br><span class="line">            i.t = <span class="built_in">this</span>.t</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (s = <span class="built_in">this</span>.s &amp; <span class="built_in">this</span>.DM,</span><br><span class="line">                r = n; r &lt; t.t; ++r)</span><br><span class="line">                i[r] = e(s, t[r]);</span><br><span class="line">            i.t = t.t</span><br><span class="line">        &#125;</span><br><span class="line">        i.s = e(<span class="built_in">this</span>.s, t.s),</span><br><span class="line">            i.clamp()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">nt</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t &amp; e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ot</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.bitwiseTo(t, nt, e),</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ht</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t | e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">at</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.bitwiseTo(t, ht, e),</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ut</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t ^ e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ct</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.bitwiseTo(t, ut, e),</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ft</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t &amp; ~e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">pt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.bitwiseTo(t, ft, e),</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">lt</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> t = i(), e = <span class="number">0</span>; e &lt; <span class="built_in">this</span>.t; ++e)</span><br><span class="line">            t[e] = <span class="built_in">this</span>.DM &amp; ~<span class="built_in">this</span>[e];</span><br><span class="line">        <span class="keyword">return</span> t.t = <span class="built_in">this</span>.t,</span><br><span class="line">            t.s = ~<span class="built_in">this</span>.s,</span><br><span class="line">            t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">dt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> &gt; t ? <span class="built_in">this</span>.rShiftTo(-t, e) : <span class="built_in">this</span>.lShiftTo(t, e),</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> &gt; t ? <span class="built_in">this</span>.lShiftTo(-t, e) : <span class="built_in">this</span>.rShiftTo(t, e),</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">mt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> == t)</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> == (<span class="number">65535</span> &amp; t) &amp;&amp; (t &gt;&gt;= <span class="number">16</span>,</span><br><span class="line">                e += <span class="number">16</span>),</span><br><span class="line">            <span class="number">0</span> == (<span class="number">255</span> &amp; t) &amp;&amp; (t &gt;&gt;= <span class="number">8</span>,</span><br><span class="line">                e += <span class="number">8</span>),</span><br><span class="line">            <span class="number">0</span> == (<span class="number">15</span> &amp; t) &amp;&amp; (t &gt;&gt;= <span class="number">4</span>,</span><br><span class="line">                e += <span class="number">4</span>),</span><br><span class="line">            <span class="number">0</span> == (<span class="number">3</span> &amp; t) &amp;&amp; (t &gt;&gt;= <span class="number">2</span>,</span><br><span class="line">                e += <span class="number">2</span>),</span><br><span class="line">            <span class="number">0</span> == (<span class="number">1</span> &amp; t) &amp;&amp; ++e,</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">yt</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; <span class="built_in">this</span>.t; ++t)</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> != <span class="built_in">this</span>[t])</span><br><span class="line">                <span class="keyword">return</span> t * <span class="built_in">this</span>.DB + mt(<span class="built_in">this</span>[t]);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.s &lt; <span class="number">0</span> ? <span class="built_in">this</span>.t * <span class="built_in">this</span>.DB : -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">vt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; <span class="number">0</span> != t;)</span><br><span class="line">            t &amp;= t - <span class="number">1</span>,</span><br><span class="line">            ++e;</span><br><span class="line">        <span class="keyword">return</span> e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">bt</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>, e = <span class="built_in">this</span>.s &amp; <span class="built_in">this</span>.DM, i = <span class="number">0</span>; i &lt; <span class="built_in">this</span>.t; ++i)</span><br><span class="line">            t += vt(<span class="built_in">this</span>[i] ^ e);</span><br><span class="line">        <span class="keyword">return</span> t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Tt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="built_in">Math</span>.floor(t / <span class="built_in">this</span>.DB);</span><br><span class="line">        <span class="keyword">return</span> e &gt;= <span class="built_in">this</span>.t ? <span class="number">0</span> != <span class="built_in">this</span>.s : <span class="number">0</span> != (<span class="built_in">this</span>[e] &amp; <span class="number">1</span> &lt;&lt; t % <span class="built_in">this</span>.DB)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">St</span>(<span class="params">t, i</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> r = e.ONE.shiftLeft(t);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.bitwiseTo(r, i, r),</span><br><span class="line">            r</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Rt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.changeBit(t, ht)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Et</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.changeBit(t, ft)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Dt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.changeBit(t, ut)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">wt</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, r = <span class="number">0</span>, s = <span class="built_in">Math</span>.min(t.t, <span class="built_in">this</span>.t); s &gt; i;)</span><br><span class="line">            r += <span class="built_in">this</span>[i] + t[i],</span><br><span class="line">            e[i++] = r &amp; <span class="built_in">this</span>.DM,</span><br><span class="line">            r &gt;&gt;= <span class="built_in">this</span>.DB;</span><br><span class="line">        <span class="keyword">if</span> (t.t &lt; <span class="built_in">this</span>.t) &#123;</span><br><span class="line">            <span class="keyword">for</span> (r += t.s; i &lt; <span class="built_in">this</span>.t;)</span><br><span class="line">                r += <span class="built_in">this</span>[i],</span><br><span class="line">                e[i++] = r &amp; <span class="built_in">this</span>.DM,</span><br><span class="line">                r &gt;&gt;= <span class="built_in">this</span>.DB;</span><br><span class="line">            r += <span class="built_in">this</span>.s</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (r += <span class="built_in">this</span>.s; i &lt; t.t;)</span><br><span class="line">                r += t[i],</span><br><span class="line">                e[i++] = r &amp; <span class="built_in">this</span>.DM,</span><br><span class="line">                r &gt;&gt;= <span class="built_in">this</span>.DB;</span><br><span class="line">            r += t.s</span><br><span class="line">        &#125;</span><br><span class="line">        e.s = <span class="number">0</span> &gt; r ? -<span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">            r &gt; <span class="number">0</span> ? e[i++] = r : -<span class="number">1</span> &gt; r &amp;&amp; (e[i++] = <span class="built_in">this</span>.DV + r),</span><br><span class="line">            e.t = i,</span><br><span class="line">            e.clamp()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">xt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.addTo(t, e),</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Bt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.subTo(t, e),</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Kt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.multiplyTo(t, e),</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">At</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> t = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.squareTo(t),</span><br><span class="line">            t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Ut</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.divRemTo(t, e, <span class="literal">null</span>),</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Ot</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.divRemTo(t, <span class="literal">null</span>, e),</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Vt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = i(),</span><br><span class="line">            r = i();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.divRemTo(t, e, r),</span><br><span class="line">            <span class="keyword">new</span> <span class="built_in">Array</span>(e, r)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Nt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>[<span class="built_in">this</span>.t] = <span class="built_in">this</span>.am(<span class="number">0</span>, t - <span class="number">1</span>, <span class="built_in">this</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.t),</span><br><span class="line">            ++<span class="built_in">this</span>.t,</span><br><span class="line">            <span class="built_in">this</span>.clamp()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Jt</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> != t) &#123;</span><br><span class="line">            <span class="keyword">for</span> (; <span class="built_in">this</span>.t &lt;= e;)</span><br><span class="line">                <span class="built_in">this</span>[<span class="built_in">this</span>.t++] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">this</span>[e] += t; <span class="built_in">this</span>[e] &gt;= <span class="built_in">this</span>.DV;)</span><br><span class="line">                <span class="built_in">this</span>[e] -= <span class="built_in">this</span>.DV,</span><br><span class="line">                ++e &gt;= <span class="built_in">this</span>.t &amp;&amp; (<span class="built_in">this</span>[<span class="built_in">this</span>.t++] = <span class="number">0</span>),</span><br><span class="line">                ++<span class="built_in">this</span>[e]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">It</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Pt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Mt</span>(<span class="params">t, e, i</span>) </span>&#123;</span><br><span class="line">        t.multiplyTo(e, i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Lt</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        t.squareTo(e)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">qt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.exp(t, <span class="keyword">new</span> It)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Ct</span>(<span class="params">t, e, i</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> r = <span class="built_in">Math</span>.min(<span class="built_in">this</span>.t + t.t, e);</span><br><span class="line">        <span class="keyword">for</span> (i.s = <span class="number">0</span>,</span><br><span class="line">            i.t = r; r &gt; <span class="number">0</span>;)</span><br><span class="line">            i[--r] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> s;</span><br><span class="line">        <span class="keyword">for</span> (s = i.t - <span class="built_in">this</span>.t; s &gt; r; ++r)</span><br><span class="line">            i[r + <span class="built_in">this</span>.t] = <span class="built_in">this</span>.am(<span class="number">0</span>, t[r], i, r, <span class="number">0</span>, <span class="built_in">this</span>.t);</span><br><span class="line">        <span class="keyword">for</span> (s = <span class="built_in">Math</span>.min(t.t, e); s &gt; r; ++r)</span><br><span class="line">            <span class="built_in">this</span>.am(<span class="number">0</span>, t[r], i, r, <span class="number">0</span>, e - r);</span><br><span class="line">        i.clamp()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Ht</span>(<span class="params">t, e, i</span>) </span>&#123;</span><br><span class="line">        --e;</span><br><span class="line">        <span class="keyword">var</span> r = i.t = <span class="built_in">this</span>.t + t.t - e;</span><br><span class="line">        <span class="keyword">for</span> (i.s = <span class="number">0</span>; --r &gt;= <span class="number">0</span>;)</span><br><span class="line">            i[r] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (r = <span class="built_in">Math</span>.max(e - <span class="built_in">this</span>.t, <span class="number">0</span>); r &lt; t.t; ++r)</span><br><span class="line">            i[<span class="built_in">this</span>.t + r - e] = <span class="built_in">this</span>.am(e - r, t[r], i, <span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.t + r - e);</span><br><span class="line">        i.clamp(),</span><br><span class="line">            i.drShiftTo(<span class="number">1</span>, i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">jt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.r2 = i(),</span><br><span class="line">            <span class="built_in">this</span>.q3 = i(),</span><br><span class="line">            e.ONE.dlShiftTo(<span class="number">2</span> * t.t, <span class="built_in">this</span>.r2),</span><br><span class="line">            <span class="built_in">this</span>.mu = <span class="built_in">this</span>.r2.divide(t),</span><br><span class="line">            <span class="built_in">this</span>.m = t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">kt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (t.s &lt; <span class="number">0</span> || t.t &gt; <span class="number">2</span> * <span class="built_in">this</span>.m.t)</span><br><span class="line">            <span class="keyword">return</span> t.mod(<span class="built_in">this</span>.m);</span><br><span class="line">        <span class="keyword">if</span> (t.compareTo(<span class="built_in">this</span>.m) &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> t;</span><br><span class="line">        <span class="keyword">var</span> e = i();</span><br><span class="line">        <span class="keyword">return</span> t.copyTo(e),</span><br><span class="line">            <span class="built_in">this</span>.reduce(e),</span><br><span class="line">            e</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Ft</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_t</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (t.drShiftTo(<span class="built_in">this</span>.m.t - <span class="number">1</span>, <span class="built_in">this</span>.r2),</span><br><span class="line">            t.t &gt; <span class="built_in">this</span>.m.t + <span class="number">1</span> &amp;&amp; (t.t = <span class="built_in">this</span>.m.t + <span class="number">1</span>,</span><br><span class="line">                t.clamp()),</span><br><span class="line">            <span class="built_in">this</span>.mu.multiplyUpperTo(<span class="built_in">this</span>.r2, <span class="built_in">this</span>.m.t + <span class="number">1</span>, <span class="built_in">this</span>.q3),</span><br><span class="line">            <span class="built_in">this</span>.m.multiplyLowerTo(<span class="built_in">this</span>.q3, <span class="built_in">this</span>.m.t + <span class="number">1</span>, <span class="built_in">this</span>.r2); t.compareTo(<span class="built_in">this</span>.r2) &lt; <span class="number">0</span>;)</span><br><span class="line">            t.dAddOffset(<span class="number">1</span>, <span class="built_in">this</span>.m.t + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (t.subTo(<span class="built_in">this</span>.r2, t); t.compareTo(<span class="built_in">this</span>.m) &gt;= <span class="number">0</span>;)</span><br><span class="line">            t.subTo(<span class="built_in">this</span>.m, t)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">zt</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        t.squareTo(e),</span><br><span class="line">            <span class="built_in">this</span>.reduce(e)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Zt</span>(<span class="params">t, e, i</span>) </span>&#123;</span><br><span class="line">        t.multiplyTo(e, i),</span><br><span class="line">            <span class="built_in">this</span>.reduce(i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Gt</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> r, s, n = t.bitLength(),</span><br><span class="line">            o = c(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> &gt;= n)</span><br><span class="line">            <span class="keyword">return</span> o;</span><br><span class="line">        r = <span class="number">18</span> &gt; n ? <span class="number">1</span> : <span class="number">48</span> &gt; n ? <span class="number">3</span> : <span class="number">144</span> &gt; n ? <span class="number">4</span> : <span class="number">768</span> &gt; n ? <span class="number">5</span> : <span class="number">6</span>,</span><br><span class="line">            s = <span class="number">8</span> &gt; n ? <span class="keyword">new</span> A(e) : e.isEven() ? <span class="keyword">new</span> jt(e) : <span class="keyword">new</span> P(e);</span><br><span class="line">        <span class="keyword">var</span> h = <span class="keyword">new</span> <span class="built_in">Array</span>,</span><br><span class="line">            a = <span class="number">3</span>,</span><br><span class="line">            u = r - <span class="number">1</span>,</span><br><span class="line">            f = (<span class="number">1</span> &lt;&lt; r) - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (h[<span class="number">1</span>] = s.convert(<span class="built_in">this</span>),</span><br><span class="line">            r &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> p = i();</span><br><span class="line">            <span class="keyword">for</span> (s.sqrTo(h[<span class="number">1</span>], p); f &gt;= a;)</span><br><span class="line">                h[a] = i(),</span><br><span class="line">                s.mulTo(p, h[a - <span class="number">2</span>], h[a]),</span><br><span class="line">                a += <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> l, d, g = t.t - <span class="number">1</span>,</span><br><span class="line">            m = !<span class="number">0</span>,</span><br><span class="line">            v = i();</span><br><span class="line">        <span class="keyword">for</span> (n = y(t[g]) - <span class="number">1</span>; g &gt;= <span class="number">0</span>;) &#123;</span><br><span class="line">            <span class="keyword">for</span> (n &gt;= u ? l = t[g] &gt;&gt; n - u &amp; f : (l = (t[g] &amp; (<span class="number">1</span> &lt;&lt; n + <span class="number">1</span>) - <span class="number">1</span>) &lt;&lt; u - n,</span><br><span class="line">                    g &gt; <span class="number">0</span> &amp;&amp; (l |= t[g - <span class="number">1</span>] &gt;&gt; <span class="built_in">this</span>.DB + n - u)),</span><br><span class="line">                a = r; <span class="number">0</span> == (<span class="number">1</span> &amp; l);)</span><br><span class="line">                l &gt;&gt;= <span class="number">1</span>,</span><br><span class="line">                --a;</span><br><span class="line">            <span class="keyword">if</span> ((n -= a) &lt; <span class="number">0</span> &amp;&amp; (n += <span class="built_in">this</span>.DB,</span><br><span class="line">                    --g),</span><br><span class="line">                m)</span><br><span class="line">                h[l].copyTo(o),</span><br><span class="line">                m = !<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (; a &gt; <span class="number">1</span>;)</span><br><span class="line">                    s.sqrTo(o, v),</span><br><span class="line">                    s.sqrTo(v, o),</span><br><span class="line">                    a -= <span class="number">2</span>;</span><br><span class="line">                a &gt; <span class="number">0</span> ? s.sqrTo(o, v) : (d = o,</span><br><span class="line">                        o = v,</span><br><span class="line">                        v = d),</span><br><span class="line">                    s.mulTo(v, h[l], o)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (; g &gt;= <span class="number">0</span> &amp;&amp; <span class="number">0</span> == (t[g] &amp; <span class="number">1</span> &lt;&lt; n);)</span><br><span class="line">                s.sqrTo(o, v),</span><br><span class="line">                d = o,</span><br><span class="line">                o = v,</span><br><span class="line">                v = d,</span><br><span class="line">                --n &lt; <span class="number">0</span> &amp;&amp; (n = <span class="built_in">this</span>.DB - <span class="number">1</span>,</span><br><span class="line">                    --g)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.revert(o)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">$t</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="built_in">this</span>.s &lt; <span class="number">0</span> ? <span class="built_in">this</span>.negate() : <span class="built_in">this</span>.clone(),</span><br><span class="line">            i = t.s &lt; <span class="number">0</span> ? t.negate() : t.clone();</span><br><span class="line">        <span class="keyword">if</span> (e.compareTo(i) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> r = e;</span><br><span class="line">            e = i,</span><br><span class="line">                i = r</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> s = e.getLowestSetBit(),</span><br><span class="line">            n = i.getLowestSetBit();</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> &gt; n)</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line">        <span class="keyword">for</span> (n &gt; s &amp;&amp; (n = s),</span><br><span class="line">            n &gt; <span class="number">0</span> &amp;&amp; (e.rShiftTo(n, e),</span><br><span class="line">                i.rShiftTo(n, i)); e.signum() &gt; <span class="number">0</span>;)</span><br><span class="line">            (s = e.getLowestSetBit()) &gt; <span class="number">0</span> &amp;&amp; e.rShiftTo(s, e), (s = i.getLowestSetBit()) &gt; <span class="number">0</span> &amp;&amp; i.rShiftTo(s, i),</span><br><span class="line">            e.compareTo(i) &gt;= <span class="number">0</span> ? (e.subTo(i, e),</span><br><span class="line">                e.rShiftTo(<span class="number">1</span>, e)) : (i.subTo(e, i),</span><br><span class="line">                i.rShiftTo(<span class="number">1</span>, i));</span><br><span class="line">        <span class="keyword">return</span> n &gt; <span class="number">0</span> &amp;&amp; i.lShiftTo(n, i),</span><br><span class="line">            i</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Yt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> &gt;= t)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="built_in">this</span>.DV % t,</span><br><span class="line">            i = <span class="built_in">this</span>.s &lt; <span class="number">0</span> ? t - <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.t &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> == e)</span><br><span class="line">                i = <span class="built_in">this</span>[<span class="number">0</span>] % t;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> r = <span class="built_in">this</span>.t - <span class="number">1</span>; r &gt;= <span class="number">0</span>; --r)</span><br><span class="line">                    i = (e * i + <span class="built_in">this</span>[r]) % t;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Wt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> i = t.isEven();</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.isEven() &amp;&amp; i || <span class="number">0</span> == t.signum())</span><br><span class="line">            <span class="keyword">return</span> e.ZERO;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> r = t.clone(), s = <span class="built_in">this</span>.clone(), n = c(<span class="number">1</span>), o = c(<span class="number">0</span>), h = c(<span class="number">0</span>), a = c(<span class="number">1</span>); <span class="number">0</span> != r.signum();) &#123;</span><br><span class="line">            <span class="keyword">for</span> (; r.isEven();)</span><br><span class="line">                r.rShiftTo(<span class="number">1</span>, r),</span><br><span class="line">                i ? (n.isEven() &amp;&amp; o.isEven() || (n.addTo(<span class="built_in">this</span>, n),</span><br><span class="line">                        o.subTo(t, o)),</span><br><span class="line">                    n.rShiftTo(<span class="number">1</span>, n)) : o.isEven() || o.subTo(t, o),</span><br><span class="line">                o.rShiftTo(<span class="number">1</span>, o);</span><br><span class="line">            <span class="keyword">for</span> (; s.isEven();)</span><br><span class="line">                s.rShiftTo(<span class="number">1</span>, s),</span><br><span class="line">                i ? (h.isEven() &amp;&amp; a.isEven() || (h.addTo(<span class="built_in">this</span>, h),</span><br><span class="line">                        a.subTo(t, a)),</span><br><span class="line">                    h.rShiftTo(<span class="number">1</span>, h)) : a.isEven() || a.subTo(t, a),</span><br><span class="line">                a.rShiftTo(<span class="number">1</span>, a);</span><br><span class="line">            r.compareTo(s) &gt;= <span class="number">0</span> ? (r.subTo(s, r),</span><br><span class="line">                i &amp;&amp; n.subTo(h, n),</span><br><span class="line">                o.subTo(a, o)) : (s.subTo(r, s),</span><br><span class="line">                i &amp;&amp; h.subTo(n, h),</span><br><span class="line">                a.subTo(o, a))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> != s.compareTo(e.ONE) ? e.ZERO : a.compareTo(t) &gt;= <span class="number">0</span> ? a.subtract(t) : a.signum() &lt; <span class="number">0</span> ? (a.addTo(t, a),</span><br><span class="line">            a.signum() &lt; <span class="number">0</span> ? a.add(t) : a) : a</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Qt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e, i = <span class="built_in">this</span>.abs();</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">1</span> == i.t &amp;&amp; i[<span class="number">0</span>] &lt;= Ae[Ae.length - <span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">for</span> (e = <span class="number">0</span>; e &lt; Ae.length; ++e)</span><br><span class="line">                <span class="keyword">if</span> (i[<span class="number">0</span>] == Ae[e])</span><br><span class="line">                    <span class="keyword">return</span> !<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i.isEven())</span><br><span class="line">            <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (e = <span class="number">1</span>; e &lt; Ae.length;) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> r = Ae[e], s = e + <span class="number">1</span>; s &lt; Ae.length &amp;&amp; Ue &gt; r;)</span><br><span class="line">                r *= Ae[s++];</span><br><span class="line">            <span class="keyword">for</span> (r = i.modInt(r); s &gt; e;)</span><br><span class="line">                <span class="keyword">if</span> (r % Ae[e++] == <span class="number">0</span>)</span><br><span class="line">                    <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i.millerRabin(t)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Xt</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> r = <span class="built_in">this</span>.subtract(e.ONE),</span><br><span class="line">            s = r.getLowestSetBit();</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> &gt;= s)</span><br><span class="line">            <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> n = r.shiftRight(s);</span><br><span class="line">        t = t + <span class="number">1</span> &gt;&gt; <span class="number">1</span>,</span><br><span class="line">            t &gt; Ae.length &amp;&amp; (t = Ae.length);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> o = i(), h = <span class="number">0</span>; t &gt; h; ++h) &#123;</span><br><span class="line">            o.fromInt(Ae[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * Ae.length)]);</span><br><span class="line">            <span class="keyword">var</span> a = o.modPow(n, <span class="built_in">this</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> != a.compareTo(e.ONE) &amp;&amp; <span class="number">0</span> != a.compareTo(r)) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> u = <span class="number">1</span>; u++ &lt; s &amp;&amp; <span class="number">0</span> != a.compareTo(r);)</span><br><span class="line">                    <span class="keyword">if</span> (a = a.modPowInt(<span class="number">2</span>, <span class="built_in">this</span>),</span><br><span class="line">                        <span class="number">0</span> == a.compareTo(e.ONE))</span><br><span class="line">                        <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">0</span> != a.compareTo(r))</span><br><span class="line">                    <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> !<span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">te</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.i = <span class="number">0</span>,</span><br><span class="line">            <span class="built_in">this</span>.j = <span class="number">0</span>,</span><br><span class="line">            <span class="built_in">this</span>.S = <span class="keyword">new</span> <span class="built_in">Array</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ee</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e, i, r;</span><br><span class="line">        <span class="keyword">for</span> (e = <span class="number">0</span>; <span class="number">256</span> &gt; e; ++e)</span><br><span class="line">            <span class="built_in">this</span>.S[e] = e;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>,</span><br><span class="line">            e = <span class="number">0</span>; <span class="number">256</span> &gt; e; ++e)</span><br><span class="line">            i = i + <span class="built_in">this</span>.S[e] + t[e % t.length] &amp; <span class="number">255</span>,</span><br><span class="line">            r = <span class="built_in">this</span>.S[e],</span><br><span class="line">            <span class="built_in">this</span>.S[e] = <span class="built_in">this</span>.S[i],</span><br><span class="line">            <span class="built_in">this</span>.S[i] = r;</span><br><span class="line">        <span class="built_in">this</span>.i = <span class="number">0</span>,</span><br><span class="line">            <span class="built_in">this</span>.j = <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ie</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> t;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.i = <span class="built_in">this</span>.i + <span class="number">1</span> &amp; <span class="number">255</span>,</span><br><span class="line">            <span class="built_in">this</span>.j = <span class="built_in">this</span>.j + <span class="built_in">this</span>.S[<span class="built_in">this</span>.i] &amp; <span class="number">255</span>,</span><br><span class="line">            t = <span class="built_in">this</span>.S[<span class="built_in">this</span>.i],</span><br><span class="line">            <span class="built_in">this</span>.S[<span class="built_in">this</span>.i] = <span class="built_in">this</span>.S[<span class="built_in">this</span>.j],</span><br><span class="line">            <span class="built_in">this</span>.S[<span class="built_in">this</span>.j] = t,</span><br><span class="line">            <span class="built_in">this</span>.S[t + <span class="built_in">this</span>.S[<span class="built_in">this</span>.i] &amp; <span class="number">255</span>]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">re</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> te</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">se</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == Oe) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Oe = re(); Je &gt; Ne;) &#123;</span><br><span class="line">                <span class="keyword">var</span> t = <span class="built_in">Math</span>.floor(<span class="number">65536</span> * <span class="built_in">Math</span>.random());</span><br><span class="line">                Ve[Ne++] = <span class="number">255</span> &amp; t</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (Oe.init(Ve),</span><br><span class="line">                Ne = <span class="number">0</span>; Ne &lt; Ve.length; ++Ne)</span><br><span class="line">                Ve[Ne] = <span class="number">0</span>;</span><br><span class="line">            Ne = <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Oe.next()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ne</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e;</span><br><span class="line">        <span class="keyword">for</span> (e = <span class="number">0</span>; e &lt; t.length; ++e)</span><br><span class="line">            t[e] = se()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">oe</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">he</span>(<span class="params">t, i</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> e(t, i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ae</span>(<span class="params">t, i</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; t.length + <span class="number">11</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">console</span>.error(<span class="string">&quot;Message too long for RSA&quot;</span>),</span><br><span class="line">                <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> r = <span class="keyword">new</span> <span class="built_in">Array</span>, s = t.length - <span class="number">1</span>; s &gt;= <span class="number">0</span> &amp;&amp; i &gt; <span class="number">0</span>;) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = t.charCodeAt(s--);</span><br><span class="line">            <span class="number">128</span> &gt; n ? r[--i] = n : n &gt; <span class="number">127</span> &amp;&amp; <span class="number">2048</span> &gt; n ? (r[--i] = <span class="number">63</span> &amp; n | <span class="number">128</span>,</span><br><span class="line">                r[--i] = n &gt;&gt; <span class="number">6</span> | <span class="number">192</span>) : (r[--i] = <span class="number">63</span> &amp; n | <span class="number">128</span>,</span><br><span class="line">                r[--i] = n &gt;&gt; <span class="number">6</span> &amp; <span class="number">63</span> | <span class="number">128</span>,</span><br><span class="line">                r[--i] = n &gt;&gt; <span class="number">12</span> | <span class="number">224</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        r[--i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> o = <span class="keyword">new</span> oe, h = <span class="keyword">new</span> <span class="built_in">Array</span>; i &gt; <span class="number">2</span>;) &#123;</span><br><span class="line">            <span class="keyword">for</span> (h[<span class="number">0</span>] = <span class="number">0</span>; <span class="number">0</span> == h[<span class="number">0</span>];)</span><br><span class="line">                o.nextBytes(h);</span><br><span class="line">            r[--i] = h[<span class="number">0</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> r[--i] = <span class="number">2</span>,</span><br><span class="line">            r[--i] = <span class="number">0</span>,</span><br><span class="line">            <span class="keyword">new</span> e(r)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ue</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.n = <span class="literal">null</span>,</span><br><span class="line">            <span class="built_in">this</span>.e = <span class="number">0</span>,</span><br><span class="line">            <span class="built_in">this</span>.d = <span class="literal">null</span>,</span><br><span class="line">            <span class="built_in">this</span>.p = <span class="literal">null</span>,</span><br><span class="line">            <span class="built_in">this</span>.q = <span class="literal">null</span>,</span><br><span class="line">            <span class="built_in">this</span>.dmp1 = <span class="literal">null</span>,</span><br><span class="line">            <span class="built_in">this</span>.dmq1 = <span class="literal">null</span>,</span><br><span class="line">            <span class="built_in">this</span>.coeff = <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ce</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="literal">null</span> != t &amp;&amp; <span class="literal">null</span> != e &amp;&amp; t.length &gt; <span class="number">0</span> &amp;&amp; e.length &gt; <span class="number">0</span> ? (<span class="built_in">this</span>.n = he(t, <span class="number">16</span>),</span><br><span class="line">            <span class="built_in">this</span>.e = <span class="built_in">parseInt</span>(e, <span class="number">16</span>)) : <span class="built_in">console</span>.error(<span class="string">&quot;Invalid RSA public key&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fe</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t.modPowInt(<span class="built_in">this</span>.e, <span class="built_in">this</span>.n)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">pe</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = ae(t, <span class="built_in">this</span>.n.bitLength() + <span class="number">7</span> &gt;&gt; <span class="number">3</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == e)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="built_in">this</span>.doPublic(e);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == i)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">var</span> r = i.toString(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> == (<span class="number">1</span> &amp; r.length) ? r : <span class="string">&quot;0&quot;</span> + r</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">le</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = t.toByteArray(), r = <span class="number">0</span>; r &lt; i.length &amp;&amp; <span class="number">0</span> == i[r];)</span><br><span class="line">        ++r;</span><br><span class="line">        <span class="keyword">if</span> (i.length - r != e - <span class="number">1</span> || <span class="number">2</span> != i[r])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (++r; <span class="number">0</span> != i[r];)</span><br><span class="line">            <span class="keyword">if</span> (++r &gt;= i.length)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> s = <span class="string">&quot;&quot;</span>; ++r &lt; i.length;) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = <span class="number">255</span> &amp; i[r];</span><br><span class="line">            <span class="number">128</span> &gt; n ? s += <span class="built_in">String</span>.fromCharCode(n) : n &gt; <span class="number">191</span> &amp;&amp; <span class="number">224</span> &gt; n ? (s += <span class="built_in">String</span>.fromCharCode((<span class="number">31</span> &amp; n) &lt;&lt; <span class="number">6</span> | <span class="number">63</span> &amp; i[r + <span class="number">1</span>]),</span><br><span class="line">                ++r) : (s += <span class="built_in">String</span>.fromCharCode((<span class="number">15</span> &amp; n) &lt;&lt; <span class="number">12</span> | (<span class="number">63</span> &amp; i[r + <span class="number">1</span>]) &lt;&lt; <span class="number">6</span> | <span class="number">63</span> &amp; i[r + <span class="number">2</span>]),</span><br><span class="line">                r += <span class="number">2</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">de</span>(<span class="params">t, e, i</span>) </span>&#123;</span><br><span class="line">        <span class="literal">null</span> != t &amp;&amp; <span class="literal">null</span> != e &amp;&amp; t.length &gt; <span class="number">0</span> &amp;&amp; e.length &gt; <span class="number">0</span> ? (<span class="built_in">this</span>.n = he(t, <span class="number">16</span>),</span><br><span class="line">            <span class="built_in">this</span>.e = <span class="built_in">parseInt</span>(e, <span class="number">16</span>),</span><br><span class="line">            <span class="built_in">this</span>.d = he(i, <span class="number">16</span>)) : <span class="built_in">console</span>.error(<span class="string">&quot;Invalid RSA private key&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ge</span>(<span class="params">t, e, i, r, s, n, o, h</span>) </span>&#123;</span><br><span class="line">        <span class="literal">null</span> != t &amp;&amp; <span class="literal">null</span> != e &amp;&amp; t.length &gt; <span class="number">0</span> &amp;&amp; e.length &gt; <span class="number">0</span> ? (<span class="built_in">this</span>.n = he(t, <span class="number">16</span>),</span><br><span class="line">            <span class="built_in">this</span>.e = <span class="built_in">parseInt</span>(e, <span class="number">16</span>),</span><br><span class="line">            <span class="built_in">this</span>.d = he(i, <span class="number">16</span>),</span><br><span class="line">            <span class="built_in">this</span>.p = he(r, <span class="number">16</span>),</span><br><span class="line">            <span class="built_in">this</span>.q = he(s, <span class="number">16</span>),</span><br><span class="line">            <span class="built_in">this</span>.dmp1 = he(n, <span class="number">16</span>),</span><br><span class="line">            <span class="built_in">this</span>.dmq1 = he(o, <span class="number">16</span>),</span><br><span class="line">            <span class="built_in">this</span>.coeff = he(h, <span class="number">16</span>)) : <span class="built_in">console</span>.error(<span class="string">&quot;Invalid RSA private key&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">me</span>(<span class="params">t, i</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> r = <span class="keyword">new</span> oe,</span><br><span class="line">            s = t &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">this</span>.e = <span class="built_in">parseInt</span>(i, <span class="number">16</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="keyword">new</span> e(i, <span class="number">16</span>);;) &#123;</span><br><span class="line">            <span class="keyword">for</span> (; <span class="built_in">this</span>.p = <span class="keyword">new</span> e(t - s, <span class="number">1</span>, r),</span><br><span class="line">                <span class="number">0</span> != <span class="built_in">this</span>.p.subtract(e.ONE).gcd(n).compareTo(e.ONE) || !<span class="built_in">this</span>.p.isProbablePrime(<span class="number">10</span>);)</span><br><span class="line">            ;</span><br><span class="line">            <span class="keyword">for</span> (; <span class="built_in">this</span>.q = <span class="keyword">new</span> e(s, <span class="number">1</span>, r),</span><br><span class="line">                <span class="number">0</span> != <span class="built_in">this</span>.q.subtract(e.ONE).gcd(n).compareTo(e.ONE) || !<span class="built_in">this</span>.q.isProbablePrime(<span class="number">10</span>);)</span><br><span class="line">            ;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.p.compareTo(<span class="built_in">this</span>.q) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> o = <span class="built_in">this</span>.p;</span><br><span class="line">                <span class="built_in">this</span>.p = <span class="built_in">this</span>.q,</span><br><span class="line">                    <span class="built_in">this</span>.q = o</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> h = <span class="built_in">this</span>.p.subtract(e.ONE),</span><br><span class="line">                a = <span class="built_in">this</span>.q.subtract(e.ONE),</span><br><span class="line">                u = h.multiply(a);</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> == u.gcd(n).compareTo(e.ONE)) &#123;</span><br><span class="line">                <span class="built_in">this</span>.n = <span class="built_in">this</span>.p.multiply(<span class="built_in">this</span>.q),</span><br><span class="line">                    <span class="built_in">this</span>.d = n.modInverse(u),</span><br><span class="line">                    <span class="built_in">this</span>.dmp1 = <span class="built_in">this</span>.d.mod(h),</span><br><span class="line">                    <span class="built_in">this</span>.dmq1 = <span class="built_in">this</span>.d.mod(a),</span><br><span class="line">                    <span class="built_in">this</span>.coeff = <span class="built_in">this</span>.q.modInverse(<span class="built_in">this</span>.p);</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ye</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == <span class="built_in">this</span>.p || <span class="literal">null</span> == <span class="built_in">this</span>.q)</span><br><span class="line">            <span class="keyword">return</span> t.modPow(<span class="built_in">this</span>.d, <span class="built_in">this</span>.n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> e = t.mod(<span class="built_in">this</span>.p).modPow(<span class="built_in">this</span>.dmp1, <span class="built_in">this</span>.p), i = t.mod(<span class="built_in">this</span>.q).modPow(<span class="built_in">this</span>.dmq1, <span class="built_in">this</span>.q); e.compareTo(i) &lt; <span class="number">0</span>;)</span><br><span class="line">            e = e.add(<span class="built_in">this</span>.p);</span><br><span class="line">        <span class="keyword">return</span> e.subtract(i).multiply(<span class="built_in">this</span>.coeff).mod(<span class="built_in">this</span>.p).multiply(<span class="built_in">this</span>.q).add(i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ve</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = he(t, <span class="number">16</span>),</span><br><span class="line">            i = <span class="built_in">this</span>.doPrivate(e);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span> == i ? <span class="literal">null</span> : le(i, <span class="built_in">this</span>.n.bitLength() + <span class="number">7</span> &gt;&gt; <span class="number">3</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">be</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e, i, r = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (e = <span class="number">0</span>; e + <span class="number">3</span> &lt;= t.length; e += <span class="number">3</span>)</span><br><span class="line">            i = <span class="built_in">parseInt</span>(t.substring(e, e + <span class="number">3</span>), <span class="number">16</span>),</span><br><span class="line">            r += Le.charAt(i &gt;&gt; <span class="number">6</span>) + Le.charAt(<span class="number">63</span> &amp; i);</span><br><span class="line">        <span class="keyword">for</span> (e + <span class="number">1</span> == t.length ? (i = <span class="built_in">parseInt</span>(t.substring(e, e + <span class="number">1</span>), <span class="number">16</span>),</span><br><span class="line">                r += Le.charAt(i &lt;&lt; <span class="number">2</span>)) : e + <span class="number">2</span> == t.length &amp;&amp; (i = <span class="built_in">parseInt</span>(t.substring(e, e + <span class="number">2</span>), <span class="number">16</span>),</span><br><span class="line">                r += Le.charAt(i &gt;&gt; <span class="number">2</span>) + Le.charAt((<span class="number">3</span> &amp; i) &lt;&lt; <span class="number">4</span>));</span><br><span class="line">            (<span class="number">3</span> &amp; r.length) &gt; <span class="number">0</span>;)</span><br><span class="line">            r += qe;</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Te</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> e, i, r = <span class="string">&quot;&quot;</span>,</span><br><span class="line">                s = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (e = <span class="number">0</span>; e &lt; t.length &amp;&amp; t.charAt(e) != qe; ++e)</span><br><span class="line">                v = Le.indexOf(t.charAt(e)),</span><br><span class="line">                v &lt; <span class="number">0</span> || (<span class="number">0</span> == s ? (r += o(v &gt;&gt; <span class="number">2</span>),</span><br><span class="line">                    i = <span class="number">3</span> &amp; v,</span><br><span class="line">                    s = <span class="number">1</span>) : <span class="number">1</span> == s ? (r += o(i &lt;&lt; <span class="number">2</span> | v &gt;&gt; <span class="number">4</span>),</span><br><span class="line">                    i = <span class="number">15</span> &amp; v,</span><br><span class="line">                    s = <span class="number">2</span>) : <span class="number">2</span> == s ? (r += o(i),</span><br><span class="line">                    r += o(v &gt;&gt; <span class="number">2</span>),</span><br><span class="line">                    i = <span class="number">3</span> &amp; v,</span><br><span class="line">                    s = <span class="number">3</span>) : (r += o(i &lt;&lt; <span class="number">2</span> | v &gt;&gt; <span class="number">4</span>),</span><br><span class="line">                    r += o(<span class="number">15</span> &amp; v),</span><br><span class="line">                    s = <span class="number">0</span>));</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span> == s &amp;&amp; (r += o(i &lt;&lt; <span class="number">2</span>)),</span><br><span class="line">                r</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Copyright (c) 2005  Tom Wu</span></span><br><span class="line">        <span class="comment">// All Rights Reserved.</span></span><br><span class="line">        <span class="comment">// See &quot;LICENSE&quot; for details.</span></span><br><span class="line">    <span class="keyword">var</span> Se, Re = <span class="number">0xdeadbeefcafe</span>,</span><br><span class="line">        Ee = <span class="number">15715070</span> == (<span class="number">16777215</span> &amp; Re);</span><br><span class="line">    Ee &amp;&amp; <span class="string">&quot;Microsoft Internet Explorer&quot;</span> == navigator.appName ? (e.prototype.am = s,</span><br><span class="line">            Se = <span class="number">30</span>) : Ee &amp;&amp; <span class="string">&quot;Netscape&quot;</span> != navigator.appName ? (e.prototype.am = r,</span><br><span class="line">            Se = <span class="number">26</span>) : (e.prototype.am = n,</span><br><span class="line">            Se = <span class="number">28</span>),</span><br><span class="line">        e.prototype.DB = Se,</span><br><span class="line">        e.prototype.DM = (<span class="number">1</span> &lt;&lt; Se) - <span class="number">1</span>,</span><br><span class="line">        e.prototype.DV = <span class="number">1</span> &lt;&lt; Se;</span><br><span class="line">    <span class="keyword">var</span> De = <span class="number">52</span>;</span><br><span class="line">    e.prototype.FV = <span class="built_in">Math</span>.pow(<span class="number">2</span>, De),</span><br><span class="line">        e.prototype.F1 = De - Se,</span><br><span class="line">        e.prototype.F2 = <span class="number">2</span> * Se - De;</span><br><span class="line">    <span class="keyword">var</span> we, xe, Be = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz&quot;</span>,</span><br><span class="line">        Ke = <span class="keyword">new</span> <span class="built_in">Array</span>;</span><br><span class="line">    <span class="keyword">for</span> (we = <span class="string">&quot;0&quot;</span>.charCodeAt(<span class="number">0</span>),</span><br><span class="line">        xe = <span class="number">0</span>; <span class="number">9</span> &gt;= xe; ++xe)</span><br><span class="line">        Ke[we++] = xe;</span><br><span class="line">    <span class="keyword">for</span> (we = <span class="string">&quot;a&quot;</span>.charCodeAt(<span class="number">0</span>),</span><br><span class="line">        xe = <span class="number">10</span>; <span class="number">36</span> &gt; xe; ++xe)</span><br><span class="line">        Ke[we++] = xe;</span><br><span class="line">    <span class="keyword">for</span> (we = <span class="string">&quot;A&quot;</span>.charCodeAt(<span class="number">0</span>),</span><br><span class="line">        xe = <span class="number">10</span>; <span class="number">36</span> &gt; xe; ++xe)</span><br><span class="line">        Ke[we++] = xe;</span><br><span class="line">    A.prototype.convert = U,</span><br><span class="line">        A.prototype.revert = O,</span><br><span class="line">        A.prototype.reduce = V,</span><br><span class="line">        A.prototype.mulTo = N,</span><br><span class="line">        A.prototype.sqrTo = J,</span><br><span class="line">        P.prototype.convert = M,</span><br><span class="line">        P.prototype.revert = L,</span><br><span class="line">        P.prototype.reduce = q,</span><br><span class="line">        P.prototype.mulTo = H,</span><br><span class="line">        P.prototype.sqrTo = C,</span><br><span class="line">        e.prototype.copyTo = a,</span><br><span class="line">        e.prototype.fromInt = u,</span><br><span class="line">        e.prototype.fromString = f,</span><br><span class="line">        e.prototype.clamp = p,</span><br><span class="line">        e.prototype.dlShiftTo = T,</span><br><span class="line">        e.prototype.drShiftTo = S,</span><br><span class="line">        e.prototype.lShiftTo = R,</span><br><span class="line">        e.prototype.rShiftTo = E,</span><br><span class="line">        e.prototype.subTo = D,</span><br><span class="line">        e.prototype.multiplyTo = w,</span><br><span class="line">        e.prototype.squareTo = x,</span><br><span class="line">        e.prototype.divRemTo = B,</span><br><span class="line">        e.prototype.invDigit = I,</span><br><span class="line">        e.prototype.isEven = j,</span><br><span class="line">        e.prototype.exp = k,</span><br><span class="line">        e.prototype.toString = l,</span><br><span class="line">        e.prototype.negate = d,</span><br><span class="line">        e.prototype.abs = g,</span><br><span class="line">        e.prototype.compareTo = m,</span><br><span class="line">        e.prototype.bitLength = b,</span><br><span class="line">        e.prototype.mod = K,</span><br><span class="line">        e.prototype.modPowInt = F,</span><br><span class="line">        e.ZERO = c(<span class="number">0</span>),</span><br><span class="line">        e.ONE = c(<span class="number">1</span>),</span><br><span class="line">        It.prototype.convert = Pt,</span><br><span class="line">        It.prototype.revert = Pt,</span><br><span class="line">        It.prototype.mulTo = Mt,</span><br><span class="line">        It.prototype.sqrTo = Lt,</span><br><span class="line">        jt.prototype.convert = kt,</span><br><span class="line">        jt.prototype.revert = Ft,</span><br><span class="line">        jt.prototype.reduce = _t,</span><br><span class="line">        jt.prototype.mulTo = Zt,</span><br><span class="line">        jt.prototype.sqrTo = zt;</span><br><span class="line">    <span class="keyword">var</span> Ae = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">23</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">37</span>, <span class="number">41</span>, <span class="number">43</span>, <span class="number">47</span>, <span class="number">53</span>, <span class="number">59</span>, <span class="number">61</span>, <span class="number">67</span>, <span class="number">71</span>, <span class="number">73</span>, <span class="number">79</span>, <span class="number">83</span>, <span class="number">89</span>, <span class="number">97</span>, <span class="number">101</span>, <span class="number">103</span>, <span class="number">107</span>, <span class="number">109</span>, <span class="number">113</span>, <span class="number">127</span>, <span class="number">131</span>, <span class="number">137</span>, <span class="number">139</span>, <span class="number">149</span>, <span class="number">151</span>, <span class="number">157</span>, <span class="number">163</span>, <span class="number">167</span>, <span class="number">173</span>, <span class="number">179</span>, <span class="number">181</span>, <span class="number">191</span>, <span class="number">193</span>, <span class="number">197</span>, <span class="number">199</span>, <span class="number">211</span>, <span class="number">223</span>, <span class="number">227</span>, <span class="number">229</span>, <span class="number">233</span>, <span class="number">239</span>, <span class="number">241</span>, <span class="number">251</span>, <span class="number">257</span>, <span class="number">263</span>, <span class="number">269</span>, <span class="number">271</span>, <span class="number">277</span>, <span class="number">281</span>, <span class="number">283</span>, <span class="number">293</span>, <span class="number">307</span>, <span class="number">311</span>, <span class="number">313</span>, <span class="number">317</span>, <span class="number">331</span>, <span class="number">337</span>, <span class="number">347</span>, <span class="number">349</span>, <span class="number">353</span>, <span class="number">359</span>, <span class="number">367</span>, <span class="number">373</span>, <span class="number">379</span>, <span class="number">383</span>, <span class="number">389</span>, <span class="number">397</span>, <span class="number">401</span>, <span class="number">409</span>, <span class="number">419</span>, <span class="number">421</span>, <span class="number">431</span>, <span class="number">433</span>, <span class="number">439</span>, <span class="number">443</span>, <span class="number">449</span>, <span class="number">457</span>, <span class="number">461</span>, <span class="number">463</span>, <span class="number">467</span>, <span class="number">479</span>, <span class="number">487</span>, <span class="number">491</span>, <span class="number">499</span>, <span class="number">503</span>, <span class="number">509</span>, <span class="number">521</span>, <span class="number">523</span>, <span class="number">541</span>, <span class="number">547</span>, <span class="number">557</span>, <span class="number">563</span>, <span class="number">569</span>, <span class="number">571</span>, <span class="number">577</span>, <span class="number">587</span>, <span class="number">593</span>, <span class="number">599</span>, <span class="number">601</span>, <span class="number">607</span>, <span class="number">613</span>, <span class="number">617</span>, <span class="number">619</span>, <span class="number">631</span>, <span class="number">641</span>, <span class="number">643</span>, <span class="number">647</span>, <span class="number">653</span>, <span class="number">659</span>, <span class="number">661</span>, <span class="number">673</span>, <span class="number">677</span>, <span class="number">683</span>, <span class="number">691</span>, <span class="number">701</span>, <span class="number">709</span>, <span class="number">719</span>, <span class="number">727</span>, <span class="number">733</span>, <span class="number">739</span>, <span class="number">743</span>, <span class="number">751</span>, <span class="number">757</span>, <span class="number">761</span>, <span class="number">769</span>, <span class="number">773</span>, <span class="number">787</span>, <span class="number">797</span>, <span class="number">809</span>, <span class="number">811</span>, <span class="number">821</span>, <span class="number">823</span>, <span class="number">827</span>, <span class="number">829</span>, <span class="number">839</span>, <span class="number">853</span>, <span class="number">857</span>, <span class="number">859</span>, <span class="number">863</span>, <span class="number">877</span>, <span class="number">881</span>, <span class="number">883</span>, <span class="number">887</span>, <span class="number">907</span>, <span class="number">911</span>, <span class="number">919</span>, <span class="number">929</span>, <span class="number">937</span>, <span class="number">941</span>, <span class="number">947</span>, <span class="number">953</span>, <span class="number">967</span>, <span class="number">971</span>, <span class="number">977</span>, <span class="number">983</span>, <span class="number">991</span>, <span class="number">997</span>],</span><br><span class="line">        Ue = (<span class="number">1</span> &lt;&lt; <span class="number">26</span>) / Ae[Ae.length - <span class="number">1</span>];</span><br><span class="line">    e.prototype.chunkSize = $,</span><br><span class="line">        e.prototype.toRadix = W,</span><br><span class="line">        e.prototype.fromRadix = Q,</span><br><span class="line">        e.prototype.fromNumber = X,</span><br><span class="line">        e.prototype.bitwiseTo = st,</span><br><span class="line">        e.prototype.changeBit = St,</span><br><span class="line">        e.prototype.addTo = wt,</span><br><span class="line">        e.prototype.dMultiply = Nt,</span><br><span class="line">        e.prototype.dAddOffset = Jt,</span><br><span class="line">        e.prototype.multiplyLowerTo = Ct,</span><br><span class="line">        e.prototype.multiplyUpperTo = Ht,</span><br><span class="line">        e.prototype.modInt = Yt,</span><br><span class="line">        e.prototype.millerRabin = Xt,</span><br><span class="line">        e.prototype.clone = _,</span><br><span class="line">        e.prototype.intValue = z,</span><br><span class="line">        e.prototype.byteValue = Z,</span><br><span class="line">        e.prototype.shortValue = G,</span><br><span class="line">        e.prototype.signum = Y,</span><br><span class="line">        e.prototype.toByteArray = tt,</span><br><span class="line">        e.prototype.equals = et,</span><br><span class="line">        e.prototype.min = it,</span><br><span class="line">        e.prototype.max = rt,</span><br><span class="line">        e.prototype.and = ot,</span><br><span class="line">        e.prototype.or = at,</span><br><span class="line">        e.prototype.xor = ct,</span><br><span class="line">        e.prototype.andNot = pt,</span><br><span class="line">        e.prototype.not = lt,</span><br><span class="line">        e.prototype.shiftLeft = dt,</span><br><span class="line">        e.prototype.shiftRight = gt,</span><br><span class="line">        e.prototype.getLowestSetBit = yt,</span><br><span class="line">        e.prototype.bitCount = bt,</span><br><span class="line">        e.prototype.testBit = Tt,</span><br><span class="line">        e.prototype.setBit = Rt,</span><br><span class="line">        e.prototype.clearBit = Et,</span><br><span class="line">        e.prototype.flipBit = Dt,</span><br><span class="line">        e.prototype.add = xt,</span><br><span class="line">        e.prototype.subtract = Bt,</span><br><span class="line">        e.prototype.multiply = Kt,</span><br><span class="line">        e.prototype.divide = Ut,</span><br><span class="line">        e.prototype.remainder = Ot,</span><br><span class="line">        e.prototype.divideAndRemainder = Vt,</span><br><span class="line">        e.prototype.modPow = Gt,</span><br><span class="line">        e.prototype.modInverse = Wt,</span><br><span class="line">        e.prototype.pow = qt,</span><br><span class="line">        e.prototype.gcd = $t,</span><br><span class="line">        e.prototype.isProbablePrime = Qt,</span><br><span class="line">        e.prototype.square = At,</span><br><span class="line">        te.prototype.init = ee,</span><br><span class="line">        te.prototype.next = ie;</span><br><span class="line">    <span class="keyword">var</span> Oe, Ve, Ne, Je = <span class="number">256</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> == Ve) &#123;</span><br><span class="line">        Ve = <span class="keyword">new</span> <span class="built_in">Array</span>,</span><br><span class="line">            Ne = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">var</span> Ie;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.crypto &amp;&amp; <span class="built_in">window</span>.crypto.getRandomValues) &#123;</span><br><span class="line">            <span class="keyword">var</span> Pe = <span class="keyword">new</span> <span class="built_in">Uint32Array</span>(<span class="number">256</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">window</span>.crypto.getRandomValues(Pe),</span><br><span class="line">                Ie = <span class="number">0</span>; Ie &lt; Pe.length; ++Ie)</span><br><span class="line">                Ve[Ne++] = <span class="number">255</span> &amp; Pe[Ie]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> Me = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.count = <span class="built_in">this</span>.count || <span class="number">0</span>,</span><br><span class="line">                <span class="built_in">this</span>.count &gt;= <span class="number">256</span> || Ne &gt;= Je)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">void</span>(<span class="built_in">window</span>.removeEventListener ? <span class="built_in">window</span>.removeEventListener(<span class="string">&quot;mousemove&quot;</span>, Me, !<span class="number">1</span>) : <span class="built_in">window</span>.detachEvent &amp;&amp; <span class="built_in">window</span>.detachEvent(<span class="string">&quot;onmousemove&quot;</span>, Me));</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> e = t.x + t.y;</span><br><span class="line">                Ve[Ne++] = <span class="number">255</span> &amp; e,</span><br><span class="line">                    <span class="built_in">this</span>.count += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (i) &#123;&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="built_in">window</span>.addEventListener ? <span class="built_in">window</span>.addEventListener(<span class="string">&quot;mousemove&quot;</span>, Me, !<span class="number">1</span>) : <span class="built_in">window</span>.attachEvent &amp;&amp; <span class="built_in">window</span>.attachEvent(<span class="string">&quot;onmousemove&quot;</span>, Me)</span><br><span class="line">    &#125;</span><br><span class="line">    oe.prototype.nextBytes = ne,</span><br><span class="line">        ue.prototype.doPublic = fe,</span><br><span class="line">        ue.prototype.setPublic = ce,</span><br><span class="line">        ue.prototype.encrypt = pe,</span><br><span class="line">        ue.prototype.doPrivate = ye,</span><br><span class="line">        ue.prototype.setPrivate = de,</span><br><span class="line">        ue.prototype.setPrivateEx = ge,</span><br><span class="line">        ue.prototype.generate = me,</span><br><span class="line">        ue.prototype.decrypt = ve,</span><br><span class="line">        <span class="comment">// Copyright (c) 2011  Kevin M Burns Jr.</span></span><br><span class="line">        <span class="comment">// All Rights Reserved.</span></span><br><span class="line">        <span class="comment">// See &quot;LICENSE&quot; for details.</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// Extension to jsbn which adds facilities for asynchronous RSA key generation</span></span><br><span class="line">        <span class="comment">// Primarily created to avoid execution timeout on mobile devices</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// http://www-cs-students.stanford.edu/~tjw/jsbn/</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// ---</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="function"><span class="keyword">function</span> (<span class="params">t, r, s</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> n = <span class="keyword">new</span> oe,</span><br><span class="line">                    o = t &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">this</span>.e = <span class="built_in">parseInt</span>(r, <span class="number">16</span>);</span><br><span class="line">                <span class="keyword">var</span> h = <span class="keyword">new</span> e(r, <span class="number">16</span>),</span><br><span class="line">                    a = <span class="built_in">this</span>,</span><br><span class="line">                    u = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">var</span> r = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                <span class="keyword">if</span> (a.p.compareTo(a.q) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> t = a.p;</span><br><span class="line">                                    a.p = a.q,</span><br><span class="line">                                        a.q = t</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">var</span> i = a.p.subtract(e.ONE),</span><br><span class="line">                                    r = a.q.subtract(e.ONE),</span><br><span class="line">                                    n = i.multiply(r);</span><br><span class="line">                                <span class="number">0</span> == n.gcd(h).compareTo(e.ONE) ? (a.n = a.p.multiply(a.q),</span><br><span class="line">                                    a.d = h.modInverse(n),</span><br><span class="line">                                    a.dmp1 = a.d.mod(i),</span><br><span class="line">                                    a.dmq1 = a.d.mod(r),</span><br><span class="line">                                    a.coeff = a.q.modInverse(a.p),</span><br><span class="line">                                    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                        s()</span><br><span class="line">                                    &#125;, <span class="number">0</span>)) : <span class="built_in">setTimeout</span>(u, <span class="number">0</span>)</span><br><span class="line">                            &#125;,</span><br><span class="line">                            c = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                a.q = i(),</span><br><span class="line">                                    a.q.fromNumberAsync(o, <span class="number">1</span>, n, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                        a.q.subtract(e.ONE).gcda(h, <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                                            <span class="number">0</span> == t.compareTo(e.ONE) &amp;&amp; a.q.isProbablePrime(<span class="number">10</span>) ? <span class="built_in">setTimeout</span>(r, <span class="number">0</span>) : <span class="built_in">setTimeout</span>(c, <span class="number">0</span>)</span><br><span class="line">                                        &#125;)</span><br><span class="line">                                    &#125;)</span><br><span class="line">                            &#125;,</span><br><span class="line">                            f = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                a.p = i(),</span><br><span class="line">                                    a.p.fromNumberAsync(t - o, <span class="number">1</span>, n, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                        a.p.subtract(e.ONE).gcda(h, <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                                            <span class="number">0</span> == t.compareTo(e.ONE) &amp;&amp; a.p.isProbablePrime(<span class="number">10</span>) ? <span class="built_in">setTimeout</span>(c, <span class="number">0</span>) : <span class="built_in">setTimeout</span>(f, <span class="number">0</span>)</span><br><span class="line">                                        &#125;)</span><br><span class="line">                                    &#125;)</span><br><span class="line">                            &#125;;</span><br><span class="line">                        <span class="built_in">setTimeout</span>(f, <span class="number">0</span>)</span><br><span class="line">                    &#125;;</span><br><span class="line">                <span class="built_in">setTimeout</span>(u, <span class="number">0</span>)</span><br><span class="line">            &#125;;</span><br><span class="line">            ue.prototype.generateAsync = t;</span><br><span class="line">            <span class="keyword">var</span> r = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> i = <span class="built_in">this</span>.s &lt; <span class="number">0</span> ? <span class="built_in">this</span>.negate() : <span class="built_in">this</span>.clone(),</span><br><span class="line">                    r = t.s &lt; <span class="number">0</span> ? t.negate() : t.clone();</span><br><span class="line">                <span class="keyword">if</span> (i.compareTo(r) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> s = i;</span><br><span class="line">                    i = r,</span><br><span class="line">                        r = s</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> n = i.getLowestSetBit(),</span><br><span class="line">                    o = r.getLowestSetBit();</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">0</span> &gt; o)</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">void</span> e(i);</span><br><span class="line">                o &gt; n &amp;&amp; (o = n),</span><br><span class="line">                    o &gt; <span class="number">0</span> &amp;&amp; (i.rShiftTo(o, i),</span><br><span class="line">                        r.rShiftTo(o, r));</span><br><span class="line">                <span class="keyword">var</span> h = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    (n = i.getLowestSetBit()) &gt; <span class="number">0</span> &amp;&amp; i.rShiftTo(n, i), (n = r.getLowestSetBit()) &gt; <span class="number">0</span> &amp;&amp; r.rShiftTo(n, r),</span><br><span class="line">                        i.compareTo(r) &gt;= <span class="number">0</span> ? (i.subTo(r, i),</span><br><span class="line">                            i.rShiftTo(<span class="number">1</span>, i)) : (r.subTo(i, r),</span><br><span class="line">                            r.rShiftTo(<span class="number">1</span>, r)),</span><br><span class="line">                        i.signum() &gt; <span class="number">0</span> ? <span class="built_in">setTimeout</span>(h, <span class="number">0</span>) : (o &gt; <span class="number">0</span> &amp;&amp; r.lShiftTo(o, r),</span><br><span class="line">                            <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                e(r)</span><br><span class="line">                            &#125;, <span class="number">0</span>))</span><br><span class="line">                &#125;;</span><br><span class="line">                <span class="built_in">setTimeout</span>(h, <span class="number">10</span>)</span><br><span class="line">            &#125;;</span><br><span class="line">            e.prototype.gcda = r;</span><br><span class="line">            <span class="keyword">var</span> s = <span class="function"><span class="keyword">function</span> (<span class="params">t, i, r, s</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;number&quot;</span> == <span class="keyword">typeof</span> i)</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">2</span> &gt; t)</span><br><span class="line">                        <span class="built_in">this</span>.fromInt(<span class="number">1</span>);</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">this</span>.fromNumber(t, r),</span><br><span class="line">                            <span class="built_in">this</span>.testBit(t - <span class="number">1</span>) || <span class="built_in">this</span>.bitwiseTo(e.ONE.shiftLeft(t - <span class="number">1</span>), ht, <span class="built_in">this</span>),</span><br><span class="line">                            <span class="built_in">this</span>.isEven() &amp;&amp; <span class="built_in">this</span>.dAddOffset(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">                        <span class="keyword">var</span> n = <span class="built_in">this</span>,</span><br><span class="line">                            o = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                n.dAddOffset(<span class="number">2</span>, <span class="number">0</span>),</span><br><span class="line">                                    n.bitLength() &gt; t &amp;&amp; n.subTo(e.ONE.shiftLeft(t - <span class="number">1</span>), n),</span><br><span class="line">                                    n.isProbablePrime(i) ? <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                        s()</span><br><span class="line">                                    &#125;, <span class="number">0</span>) : <span class="built_in">setTimeout</span>(o, <span class="number">0</span>)</span><br><span class="line">                            &#125;;</span><br><span class="line">                        <span class="built_in">setTimeout</span>(o, <span class="number">0</span>)</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">var</span> h = <span class="keyword">new</span> <span class="built_in">Array</span>,</span><br><span class="line">                        a = <span class="number">7</span> &amp; t;</span><br><span class="line">                    h.length = (t &gt;&gt; <span class="number">3</span>) + <span class="number">1</span>,</span><br><span class="line">                        i.nextBytes(h),</span><br><span class="line">                        a &gt; <span class="number">0</span> ? h[<span class="number">0</span>] &amp;= (<span class="number">1</span> &lt;&lt; a) - <span class="number">1</span> : h[<span class="number">0</span>] = <span class="number">0</span>,</span><br><span class="line">                        <span class="built_in">this</span>.fromString(h, <span class="number">256</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            e.prototype.fromNumberAsync = s</span><br><span class="line">        &#125;();</span><br><span class="line">    <span class="keyword">var</span> Le = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>,</span><br><span class="line">        qe = <span class="string">&quot;=&quot;</span>,</span><br><span class="line">        Ce = Ce || &#123;&#125;;</span><br><span class="line">    Ce.env = Ce.env || &#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> He = Ce,</span><br><span class="line">        je = <span class="built_in">Object</span>.prototype,</span><br><span class="line">        ke = <span class="string">&quot;[object Function]&quot;</span>,</span><br><span class="line">        Fe = [<span class="string">&quot;toString&quot;</span>, <span class="string">&quot;valueOf&quot;</span>];</span><br><span class="line">    Ce.env.parseUA = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> e, i = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> e = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">parseFloat</span>(t.replace(<span class="regexp">/\./g</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">1</span> == e++ ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;.&quot;</span></span><br><span class="line">                    &#125;))</span><br><span class="line">                &#125;,</span><br><span class="line">                r = navigator,</span><br><span class="line">                s = &#123;</span><br><span class="line">                    <span class="attr">ie</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">opera</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">gecko</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">webkit</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">chrome</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">mobile</span>: <span class="literal">null</span>,</span><br><span class="line">                    <span class="attr">air</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">ipad</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">iphone</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">ipod</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">ios</span>: <span class="literal">null</span>,</span><br><span class="line">                    <span class="attr">android</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">webos</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">caja</span>: r &amp;&amp; r.cajaVersion,</span><br><span class="line">                    <span class="attr">secure</span>: !<span class="number">1</span>,</span><br><span class="line">                    <span class="attr">os</span>: <span class="literal">null</span></span><br><span class="line">                &#125;,</span><br><span class="line">                n = t || navigator &amp;&amp; navigator.userAgent,</span><br><span class="line">                o = <span class="built_in">window</span> &amp;&amp; <span class="built_in">window</span>.location,</span><br><span class="line">                h = o &amp;&amp; o.href;</span><br><span class="line">            <span class="keyword">return</span> s.secure = h &amp;&amp; <span class="number">0</span> === h.toLowerCase().indexOf(<span class="string">&quot;https&quot;</span>),</span><br><span class="line">                n &amp;&amp; (<span class="regexp">/windows|win32/i</span>.test(n) ? s.os = <span class="string">&quot;windows&quot;</span> : <span class="regexp">/macintosh/i</span>.test(n) ? s.os = <span class="string">&quot;macintosh&quot;</span> : <span class="regexp">/rhino/i</span>.test(n) &amp;&amp; (s.os = <span class="string">&quot;rhino&quot;</span>),</span><br><span class="line">                    <span class="regexp">/KHTML/</span>.test(n) &amp;&amp; (s.webkit = <span class="number">1</span>),</span><br><span class="line">                    e = n.match(<span class="regexp">/AppleWebKit\/([^\s]*)/</span>),</span><br><span class="line">                    e &amp;&amp; e[<span class="number">1</span>] &amp;&amp; (s.webkit = i(e[<span class="number">1</span>]),</span><br><span class="line">                        <span class="regexp">/ Mobile\//</span>.test(n) ? (s.mobile = <span class="string">&quot;Apple&quot;</span>,</span><br><span class="line">                            e = n.match(<span class="regexp">/OS ([^\s]*)/</span>),</span><br><span class="line">                            e &amp;&amp; e[<span class="number">1</span>] &amp;&amp; (e = i(e[<span class="number">1</span>].replace(<span class="string">&quot;_&quot;</span>, <span class="string">&quot;.&quot;</span>))),</span><br><span class="line">                            s.ios = e,</span><br><span class="line">                            s.ipad = s.ipod = s.iphone = <span class="number">0</span>,</span><br><span class="line">                            e = n.match(<span class="regexp">/iPad|iPod|iPhone/</span>),</span><br><span class="line">                            e &amp;&amp; e[<span class="number">0</span>] &amp;&amp; (s[e[<span class="number">0</span>].toLowerCase()] = s.ios)) : (e = n.match(<span class="regexp">/NokiaN[^\/]*|Android \d\.\d|webOS\/\d\.\d/</span>),</span><br><span class="line">                            e &amp;&amp; (s.mobile = e[<span class="number">0</span>]),</span><br><span class="line">                            <span class="regexp">/webOS/</span>.test(n) &amp;&amp; (s.mobile = <span class="string">&quot;WebOS&quot;</span>,</span><br><span class="line">                                e = n.match(<span class="regexp">/webOS\/([^\s]*);/</span>),</span><br><span class="line">                                e &amp;&amp; e[<span class="number">1</span>] &amp;&amp; (s.webos = i(e[<span class="number">1</span>]))),</span><br><span class="line">                            <span class="regexp">/ Android/</span>.test(n) &amp;&amp; (s.mobile = <span class="string">&quot;Android&quot;</span>,</span><br><span class="line">                                e = n.match(<span class="regexp">/Android ([^\s]*);/</span>),</span><br><span class="line">                                e &amp;&amp; e[<span class="number">1</span>] &amp;&amp; (s.android = i(e[<span class="number">1</span>])))),</span><br><span class="line">                        e = n.match(<span class="regexp">/Chrome\/([^\s]*)/</span>),</span><br><span class="line">                        e &amp;&amp; e[<span class="number">1</span>] ? s.chrome = i(e[<span class="number">1</span>]) : (e = n.match(<span class="regexp">/AdobeAIR\/([^\s]*)/</span>),</span><br><span class="line">                            e &amp;&amp; (s.air = e[<span class="number">0</span>]))),</span><br><span class="line">                    s.webkit || (e = n.match(<span class="regexp">/Opera[\s\/]([^\s]*)/</span>),</span><br><span class="line">                        e &amp;&amp; e[<span class="number">1</span>] ? (s.opera = i(e[<span class="number">1</span>]),</span><br><span class="line">                            e = n.match(<span class="regexp">/Version\/([^\s]*)/</span>),</span><br><span class="line">                            e &amp;&amp; e[<span class="number">1</span>] &amp;&amp; (s.opera = i(e[<span class="number">1</span>])),</span><br><span class="line">                            e = n.match(<span class="regexp">/Opera Mini[^;]*/</span>),</span><br><span class="line">                            e &amp;&amp; (s.mobile = e[<span class="number">0</span>])) : (e = n.match(<span class="regexp">/MSIE\s([^;]*)/</span>),</span><br><span class="line">                            e &amp;&amp; e[<span class="number">1</span>] ? s.ie = i(e[<span class="number">1</span>]) : (e = n.match(<span class="regexp">/Gecko\/([^\s]*)/</span>),</span><br><span class="line">                                e &amp;&amp; (s.gecko = <span class="number">1</span>,</span><br><span class="line">                                    e = n.match(<span class="regexp">/rv:([^\s\)]*)/</span>),</span><br><span class="line">                                    e &amp;&amp; e[<span class="number">1</span>] &amp;&amp; (s.gecko = i(e[<span class="number">1</span>]))))))),</span><br><span class="line">                s</span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.env.ua = Ce.env.parseUA(),</span><br><span class="line">        Ce.isFunction = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> t || je.toString.apply(t) === ke</span><br><span class="line">        &#125;,</span><br><span class="line">        Ce._IEEnumFix = Ce.env.ua.ie ? <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> i, r, s;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Fe.length; i += <span class="number">1</span>)</span><br><span class="line">                r = Fe[i],</span><br><span class="line">                s = e[r],</span><br><span class="line">                He.isFunction(s) &amp;&amp; s != je[r] &amp;&amp; (t[r] = s)</span><br><span class="line">        &#125; : <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">        Ce.extend = <span class="function"><span class="keyword">function</span> (<span class="params">t, e, i</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!e || !t)</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;extend failed, please check that all dependencies are included.&quot;</span>);</span><br><span class="line">            <span class="keyword">var</span> r, s = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line">            <span class="keyword">if</span> (s.prototype = e.prototype,</span><br><span class="line">                t.prototype = <span class="keyword">new</span> s,</span><br><span class="line">                t.prototype.constructor = t,</span><br><span class="line">                t.superclass = e.prototype,</span><br><span class="line">                e.prototype.constructor == je.constructor &amp;&amp; (e.prototype.constructor = e),</span><br><span class="line">                i) &#123;</span><br><span class="line">                <span class="keyword">for</span> (r <span class="keyword">in</span> i)</span><br><span class="line">                    He.hasOwnProperty(i, r) &amp;&amp; (t.prototype[r] = i[r]);</span><br><span class="line">                He._IEEnumFix(t.prototype, i)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * asn1.js - ASN.1 DER encoder classes</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * Copyright (c) 2013 Kenji Urushima (kenji.urushima@gmail.com)</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * This software is licensed under the terms of the MIT License.</span></span><br><span class="line"><span class="comment">         * http://kjur.github.com/jsrsasign/license</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * The above copyright and license notice shall be</span></span><br><span class="line"><span class="comment">         * included in all copies or substantial portions of the Software.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@fileOverview</span></span></span><br><span class="line"><span class="comment">         * <span class="doctag">@name <span class="variable">asn1</span></span>-1.0.js</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@author </span>Kenji Urushima kenji.urushima<span class="doctag">@gmail</span>.com</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@version </span>1.0.2 (2013-May-30)</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@since </span>2.1</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@license </span>&lt;a href=&quot;http://kjur.github.io/jsrsasign/license/&quot;&gt;MIT License&lt;/a&gt;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> KJUR &amp;&amp; KJUR || (KJUR = &#123;&#125;),</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> KJUR.asn1 &amp;&amp; KJUR.asn1 || (KJUR.asn1 = &#123;&#125;),</span><br><span class="line">        KJUR.asn1.ASN1Util = <span class="keyword">new</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.integerToByteHex = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> e = t.toString(<span class="number">16</span>);</span><br><span class="line">                    <span class="keyword">return</span> e.length % <span class="number">2</span> == <span class="number">1</span> &amp;&amp; (e = <span class="string">&quot;0&quot;</span> + e),</span><br><span class="line">                        e</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.bigIntToMinTwosComplementsHex = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> i = t.toString(<span class="number">16</span>);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="string">&quot;-&quot;</span> != i.substr(<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">                        i.length % <span class="number">2</span> == <span class="number">1</span> ? i = <span class="string">&quot;0&quot;</span> + i : i.match(<span class="regexp">/^[0-7]/</span>) || (i = <span class="string">&quot;00&quot;</span> + i);</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">var</span> r = i.substr(<span class="number">1</span>),</span><br><span class="line">                            s = r.length;</span><br><span class="line">                        s % <span class="number">2</span> == <span class="number">1</span> ? s += <span class="number">1</span> : i.match(<span class="regexp">/^[0-7]/</span>) || (s += <span class="number">2</span>);</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="string">&quot;&quot;</span>, o = <span class="number">0</span>; s &gt; o; o++)</span><br><span class="line">                            n += <span class="string">&quot;f&quot;</span>;</span><br><span class="line">                        <span class="keyword">var</span> h = <span class="keyword">new</span> e(n, <span class="number">16</span>),</span><br><span class="line">                            a = h.xor(t).add(e.ONE);</span><br><span class="line">                        i = a.toString(<span class="number">16</span>).replace(<span class="regexp">/^-/</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> i</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.getPEMStringFromHex = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> i = CryptoJS.enc.Hex.parse(t),</span><br><span class="line">                        r = CryptoJS.enc.Base64.stringify(i),</span><br><span class="line">                        s = r.replace(<span class="regexp">/(.&#123;64&#125;)/g</span>, <span class="string">&quot;$1\r\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span> s = s.replace(<span class="regexp">/\r\n$/</span>, <span class="string">&quot;&quot;</span>),</span><br><span class="line">                        <span class="string">&quot;-----BEGIN &quot;</span> + e + <span class="string">&quot;-----\r\n&quot;</span> + s + <span class="string">&quot;\r\n-----END &quot;</span> + e + <span class="string">&quot;-----\r\n&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        KJUR.asn1.ASN1Object = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="built_in">this</span>.getLengthHexFromValue = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="string">&quot;undefined&quot;</span> == <span class="keyword">typeof</span> <span class="built_in">this</span>.hV || <span class="literal">null</span> == <span class="built_in">this</span>.hV)</span><br><span class="line">                        <span class="keyword">throw</span> <span class="string">&quot;this.hV is null or undefined.&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">this</span>.hV.length % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">                        <span class="keyword">throw</span> <span class="string">&quot;value hex must be even length: n=&quot;</span> + t.length + <span class="string">&quot;,v=&quot;</span> + <span class="built_in">this</span>.hV;</span><br><span class="line">                    <span class="keyword">var</span> e = <span class="built_in">this</span>.hV.length / <span class="number">2</span>,</span><br><span class="line">                        i = e.toString(<span class="number">16</span>);</span><br><span class="line">                    <span class="keyword">if</span> (i.length % <span class="number">2</span> == <span class="number">1</span> &amp;&amp; (i = <span class="string">&quot;0&quot;</span> + i),</span><br><span class="line">                        <span class="number">128</span> &gt; e)</span><br><span class="line">                        <span class="keyword">return</span> i;</span><br><span class="line">                    <span class="keyword">var</span> r = i.length / <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">if</span> (r &gt; <span class="number">15</span>)</span><br><span class="line">                        <span class="keyword">throw</span> <span class="string">&quot;ASN.1 length too long to represent by 8x: n = &quot;</span> + e.toString(<span class="number">16</span>);</span><br><span class="line">                    <span class="keyword">var</span> s = <span class="number">128</span> + r;</span><br><span class="line">                    <span class="keyword">return</span> s.toString(<span class="number">16</span>) + i</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.getEncodedHex = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> (<span class="literal">null</span> == <span class="built_in">this</span>.hTLV || <span class="built_in">this</span>.isModified) &amp;&amp; (<span class="built_in">this</span>.hV = <span class="built_in">this</span>.getFreshValueHex(),</span><br><span class="line">                            <span class="built_in">this</span>.hL = <span class="built_in">this</span>.getLengthHexFromValue(),</span><br><span class="line">                            <span class="built_in">this</span>.hTLV = <span class="built_in">this</span>.hT + <span class="built_in">this</span>.hL + <span class="built_in">this</span>.hV,</span><br><span class="line">                            <span class="built_in">this</span>.isModified = !<span class="number">1</span>),</span><br><span class="line">                        <span class="built_in">this</span>.hTLV</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.getValueHex = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.getEncodedHex(),</span><br><span class="line">                        <span class="built_in">this</span>.hV</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.getFreshValueHex = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        KJUR.asn1.DERAbstractString = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERAbstractString.superclass.constructor.call(<span class="built_in">this</span>);</span><br><span class="line">            <span class="built_in">this</span>.getString = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.s</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.setString = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.hTLV = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.isModified = !<span class="number">0</span>,</span><br><span class="line">                        <span class="built_in">this</span>.s = t,</span><br><span class="line">                        <span class="built_in">this</span>.hV = stohex(<span class="built_in">this</span>.s)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.setStringHex = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.hTLV = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.isModified = !<span class="number">0</span>,</span><br><span class="line">                        <span class="built_in">this</span>.s = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.hV = t</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.getFreshValueHex = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.hV</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t &amp;&amp; (<span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.str ? <span class="built_in">this</span>.setString(t.str) : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.hex &amp;&amp; <span class="built_in">this</span>.setStringHex(t.hex))</span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERAbstractString, KJUR.asn1.ASN1Object),</span><br><span class="line">        KJUR.asn1.DERAbstractTime = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERAbstractTime.superclass.constructor.call(<span class="built_in">this</span>);</span><br><span class="line">            <span class="built_in">this</span>.localDateToUTC = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    utc = t.getTime() + <span class="number">6e4</span> * t.getTimezoneOffset();</span><br><span class="line">                    <span class="keyword">var</span> e = <span class="keyword">new</span> <span class="built_in">Date</span>(utc);</span><br><span class="line">                    <span class="keyword">return</span> e</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.formatDate = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> i = <span class="built_in">this</span>.zeroPadding,</span><br><span class="line">                        r = <span class="built_in">this</span>.localDateToUTC(t),</span><br><span class="line">                        s = <span class="built_in">String</span>(r.getFullYear());</span><br><span class="line">                    <span class="string">&quot;utc&quot;</span> == e &amp;&amp; (s = s.substr(<span class="number">2</span>, <span class="number">2</span>));</span><br><span class="line">                    <span class="keyword">var</span> n = i(<span class="built_in">String</span>(r.getMonth() + <span class="number">1</span>), <span class="number">2</span>),</span><br><span class="line">                        o = i(<span class="built_in">String</span>(r.getDate()), <span class="number">2</span>),</span><br><span class="line">                        h = i(<span class="built_in">String</span>(r.getHours()), <span class="number">2</span>),</span><br><span class="line">                        a = i(<span class="built_in">String</span>(r.getMinutes()), <span class="number">2</span>),</span><br><span class="line">                        u = i(<span class="built_in">String</span>(r.getSeconds()), <span class="number">2</span>);</span><br><span class="line">                    <span class="keyword">return</span> s + n + o + h + a + u + <span class="string">&quot;Z&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.zeroPadding = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> t.length &gt;= e ? t : <span class="keyword">new</span> <span class="built_in">Array</span>(e - t.length + <span class="number">1</span>).join(<span class="string">&quot;0&quot;</span>) + t</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.getString = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.s</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.setString = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.hTLV = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.isModified = !<span class="number">0</span>,</span><br><span class="line">                        <span class="built_in">this</span>.s = t,</span><br><span class="line">                        <span class="built_in">this</span>.hV = stohex(<span class="built_in">this</span>.s)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.setByDateValue = <span class="function"><span class="keyword">function</span> (<span class="params">t, e, i, r, s, n</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">Date</span>.UTC(t, e - <span class="number">1</span>, i, r, s, n, <span class="number">0</span>));</span><br><span class="line">                    <span class="built_in">this</span>.setByDate(o)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.getFreshValueHex = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.hV</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERAbstractTime, KJUR.asn1.ASN1Object),</span><br><span class="line">        KJUR.asn1.DERAbstractStructured = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERAbstractString.superclass.constructor.call(<span class="built_in">this</span>);</span><br><span class="line">            <span class="built_in">this</span>.setByASN1ObjectArray = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.hTLV = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.isModified = !<span class="number">0</span>,</span><br><span class="line">                        <span class="built_in">this</span>.asn1Array = t</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.appendASN1Object = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.hTLV = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.isModified = !<span class="number">0</span>,</span><br><span class="line">                        <span class="built_in">this</span>.asn1Array.push(t)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.asn1Array = <span class="keyword">new</span> <span class="built_in">Array</span>,</span><br><span class="line">                <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t &amp;&amp; <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.array &amp;&amp; (<span class="built_in">this</span>.asn1Array = t.array)</span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERAbstractStructured, KJUR.asn1.ASN1Object),</span><br><span class="line">        KJUR.asn1.DERBoolean = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERBoolean.superclass.constructor.call(<span class="built_in">this</span>),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;01&quot;</span>,</span><br><span class="line">                <span class="built_in">this</span>.hTLV = <span class="string">&quot;0101ff&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERBoolean, KJUR.asn1.ASN1Object),</span><br><span class="line">        KJUR.asn1.DERInteger = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERInteger.superclass.constructor.call(<span class="built_in">this</span>),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;02&quot;</span>,</span><br><span class="line">                <span class="built_in">this</span>.setByBigInteger = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.hTLV = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.isModified = !<span class="number">0</span>,</span><br><span class="line">                        <span class="built_in">this</span>.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(t)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.setByInteger = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> i = <span class="keyword">new</span> e(<span class="built_in">String</span>(t), <span class="number">10</span>);</span><br><span class="line">                    <span class="built_in">this</span>.setByBigInteger(i)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.setValueHex = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.hV = t</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.getFreshValueHex = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.hV</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t &amp;&amp; (<span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.bigint ? <span class="built_in">this</span>.setByBigInteger(t.bigint) : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t[<span class="string">&quot;int&quot;</span>] ? <span class="built_in">this</span>.setByInteger(t[<span class="string">&quot;int&quot;</span>]) : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.hex &amp;&amp; <span class="built_in">this</span>.setValueHex(t.hex))</span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERInteger, KJUR.asn1.ASN1Object),</span><br><span class="line">        KJUR.asn1.DERBitString = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERBitString.superclass.constructor.call(<span class="built_in">this</span>),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;03&quot;</span>,</span><br><span class="line">                <span class="built_in">this</span>.setHexValueIncludingUnusedBits = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.hTLV = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.isModified = !<span class="number">0</span>,</span><br><span class="line">                        <span class="built_in">this</span>.hV = t</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.setUnusedBitsAndHexValue = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">0</span> &gt; t || t &gt; <span class="number">7</span>)</span><br><span class="line">                        <span class="keyword">throw</span> <span class="string">&quot;unused bits shall be from 0 to 7: u = &quot;</span> + t;</span><br><span class="line">                    <span class="keyword">var</span> i = <span class="string">&quot;0&quot;</span> + t;</span><br><span class="line">                    <span class="built_in">this</span>.hTLV = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.isModified = !<span class="number">0</span>,</span><br><span class="line">                        <span class="built_in">this</span>.hV = i + e</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.setByBinaryString = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    t = t.replace(<span class="regexp">/0+$/</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                    <span class="keyword">var</span> e = <span class="number">8</span> - t.length % <span class="number">8</span>;</span><br><span class="line">                    <span class="number">8</span> == e &amp;&amp; (e = <span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; e &gt;= i; i++)</span><br><span class="line">                        t += <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> r = <span class="string">&quot;&quot;</span>, i = <span class="number">0</span>; i &lt; t.length - <span class="number">1</span>; i += <span class="number">8</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> s = t.substr(i, <span class="number">8</span>),</span><br><span class="line">                            n = <span class="built_in">parseInt</span>(s, <span class="number">2</span>).toString(<span class="number">16</span>);</span><br><span class="line">                        <span class="number">1</span> == n.length &amp;&amp; (n = <span class="string">&quot;0&quot;</span> + n),</span><br><span class="line">                            r += n</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">this</span>.hTLV = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.isModified = !<span class="number">0</span>,</span><br><span class="line">                        <span class="built_in">this</span>.hV = <span class="string">&quot;0&quot;</span> + e + r</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.setByBooleanArray = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="string">&quot;&quot;</span>, i = <span class="number">0</span>; i &lt; t.length; i++)</span><br><span class="line">                        e += <span class="number">1</span> == t[i] ? <span class="string">&quot;1&quot;</span> : <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                    <span class="built_in">this</span>.setByBinaryString(e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.newFalseArray = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="keyword">new</span> <span class="built_in">Array</span>(t), i = <span class="number">0</span>; t &gt; i; i++)</span><br><span class="line">                        e[i] = !<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">return</span> e</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.getFreshValueHex = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.hV</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t &amp;&amp; (<span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.hex ? <span class="built_in">this</span>.setHexValueIncludingUnusedBits(t.hex) : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.bin ? <span class="built_in">this</span>.setByBinaryString(t.bin) : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.array &amp;&amp; <span class="built_in">this</span>.setByBooleanArray(t.array))</span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERBitString, KJUR.asn1.ASN1Object),</span><br><span class="line">        KJUR.asn1.DEROctetString = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DEROctetString.superclass.constructor.call(<span class="built_in">this</span>, t),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;04&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DEROctetString, KJUR.asn1.DERAbstractString),</span><br><span class="line">        KJUR.asn1.DERNull = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERNull.superclass.constructor.call(<span class="built_in">this</span>),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;05&quot;</span>,</span><br><span class="line">                <span class="built_in">this</span>.hTLV = <span class="string">&quot;0500&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERNull, KJUR.asn1.ASN1Object),</span><br><span class="line">        KJUR.asn1.DERObjectIdentifier = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> e = t.toString(<span class="number">16</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span> == e.length &amp;&amp; (e = <span class="string">&quot;0&quot;</span> + e),</span><br><span class="line">                        e</span><br><span class="line">                &#125;,</span><br><span class="line">                r = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> r = <span class="string">&quot;&quot;</span>,</span><br><span class="line">                        s = <span class="keyword">new</span> e(t, <span class="number">10</span>),</span><br><span class="line">                        n = s.toString(<span class="number">2</span>),</span><br><span class="line">                        o = <span class="number">7</span> - n.length % <span class="number">7</span>;</span><br><span class="line">                    <span class="number">7</span> == o &amp;&amp; (o = <span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> h = <span class="string">&quot;&quot;</span>, a = <span class="number">0</span>; o &gt; a; a++)</span><br><span class="line">                        h += <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                    n = h + n;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">0</span>; a &lt; n.length - <span class="number">1</span>; a += <span class="number">7</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> u = n.substr(a, <span class="number">7</span>);</span><br><span class="line">                        a != n.length - <span class="number">7</span> &amp;&amp; (u = <span class="string">&quot;1&quot;</span> + u),</span><br><span class="line">                            r += i(<span class="built_in">parseInt</span>(u, <span class="number">2</span>))</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> r</span><br><span class="line">                &#125;;</span><br><span class="line">            KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(<span class="built_in">this</span>),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;06&quot;</span>,</span><br><span class="line">                <span class="built_in">this</span>.setValueHex = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.hTLV = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.isModified = !<span class="number">0</span>,</span><br><span class="line">                        <span class="built_in">this</span>.s = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.hV = t</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.setValueOidString = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (!t.match(<span class="regexp">/^[0-9.]+$/</span>))</span><br><span class="line">                        <span class="keyword">throw</span> <span class="string">&quot;malformed oid string: &quot;</span> + t;</span><br><span class="line">                    <span class="keyword">var</span> e = <span class="string">&quot;&quot;</span>,</span><br><span class="line">                        s = t.split(<span class="string">&quot;.&quot;</span>),</span><br><span class="line">                        n = <span class="number">40</span> * <span class="built_in">parseInt</span>(s[<span class="number">0</span>]) + <span class="built_in">parseInt</span>(s[<span class="number">1</span>]);</span><br><span class="line">                    e += i(n),</span><br><span class="line">                        s.splice(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> o = <span class="number">0</span>; o &lt; s.length; o++)</span><br><span class="line">                        e += r(s[o]);</span><br><span class="line">                    <span class="built_in">this</span>.hTLV = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.isModified = !<span class="number">0</span>,</span><br><span class="line">                        <span class="built_in">this</span>.s = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.hV = e</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.setValueName = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="string">&quot;undefined&quot;</span> == <span class="keyword">typeof</span> KJUR.asn1.x509.OID.name2oidList[t])</span><br><span class="line">                        <span class="keyword">throw</span> <span class="string">&quot;DERObjectIdentifier oidName undefined: &quot;</span> + t;</span><br><span class="line">                    <span class="keyword">var</span> e = KJUR.asn1.x509.OID.name2oidList[t];</span><br><span class="line">                    <span class="built_in">this</span>.setValueOidString(e)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.getFreshValueHex = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.hV</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t &amp;&amp; (<span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.oid ? <span class="built_in">this</span>.setValueOidString(t.oid) : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.hex ? <span class="built_in">this</span>.setValueHex(t.hex) : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.name &amp;&amp; <span class="built_in">this</span>.setValueName(t.name))</span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERObjectIdentifier, KJUR.asn1.ASN1Object),</span><br><span class="line">        KJUR.asn1.DERUTF8String = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERUTF8String.superclass.constructor.call(<span class="built_in">this</span>, t),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;0c&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERUTF8String, KJUR.asn1.DERAbstractString),</span><br><span class="line">        KJUR.asn1.DERNumericString = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERNumericString.superclass.constructor.call(<span class="built_in">this</span>, t),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;12&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERNumericString, KJUR.asn1.DERAbstractString),</span><br><span class="line">        KJUR.asn1.DERPrintableString = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERPrintableString.superclass.constructor.call(<span class="built_in">this</span>, t),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;13&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERPrintableString, KJUR.asn1.DERAbstractString),</span><br><span class="line">        KJUR.asn1.DERTeletexString = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERTeletexString.superclass.constructor.call(<span class="built_in">this</span>, t),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;14&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERTeletexString, KJUR.asn1.DERAbstractString),</span><br><span class="line">        KJUR.asn1.DERIA5String = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERIA5String.superclass.constructor.call(<span class="built_in">this</span>, t),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;16&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERIA5String, KJUR.asn1.DERAbstractString),</span><br><span class="line">        KJUR.asn1.DERUTCTime = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERUTCTime.superclass.constructor.call(<span class="built_in">this</span>, t),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;17&quot;</span>,</span><br><span class="line">                <span class="built_in">this</span>.setByDate = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.hTLV = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.isModified = !<span class="number">0</span>,</span><br><span class="line">                        <span class="built_in">this</span>.date = t,</span><br><span class="line">                        <span class="built_in">this</span>.s = <span class="built_in">this</span>.formatDate(<span class="built_in">this</span>.date, <span class="string">&quot;utc&quot;</span>),</span><br><span class="line">                        <span class="built_in">this</span>.hV = stohex(<span class="built_in">this</span>.s)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t &amp;&amp; (<span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.str ? <span class="built_in">this</span>.setString(t.str) : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.hex ? <span class="built_in">this</span>.setStringHex(t.hex) : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.date &amp;&amp; <span class="built_in">this</span>.setByDate(t.date))</span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERUTCTime, KJUR.asn1.DERAbstractTime),</span><br><span class="line">        KJUR.asn1.DERGeneralizedTime = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(<span class="built_in">this</span>, t),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;18&quot;</span>,</span><br><span class="line">                <span class="built_in">this</span>.setByDate = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.hTLV = <span class="literal">null</span>,</span><br><span class="line">                        <span class="built_in">this</span>.isModified = !<span class="number">0</span>,</span><br><span class="line">                        <span class="built_in">this</span>.date = t,</span><br><span class="line">                        <span class="built_in">this</span>.s = <span class="built_in">this</span>.formatDate(<span class="built_in">this</span>.date, <span class="string">&quot;gen&quot;</span>),</span><br><span class="line">                        <span class="built_in">this</span>.hV = stohex(<span class="built_in">this</span>.s)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t &amp;&amp; (<span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.str ? <span class="built_in">this</span>.setString(t.str) : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.hex ? <span class="built_in">this</span>.setStringHex(t.hex) : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.date &amp;&amp; <span class="built_in">this</span>.setByDate(t.date))</span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERGeneralizedTime, KJUR.asn1.DERAbstractTime),</span><br><span class="line">        KJUR.asn1.DERSequence = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERSequence.superclass.constructor.call(<span class="built_in">this</span>, t),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;30&quot;</span>,</span><br><span class="line">                <span class="built_in">this</span>.getFreshValueHex = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="string">&quot;&quot;</span>, e = <span class="number">0</span>; e &lt; <span class="built_in">this</span>.asn1Array.length; e++) &#123;</span><br><span class="line">                        <span class="keyword">var</span> i = <span class="built_in">this</span>.asn1Array[e];</span><br><span class="line">                        t += i.getEncodedHex()</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.hV = t,</span><br><span class="line">                        <span class="built_in">this</span>.hV</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERSequence, KJUR.asn1.DERAbstractStructured),</span><br><span class="line">        KJUR.asn1.DERSet = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERSet.superclass.constructor.call(<span class="built_in">this</span>, t),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;31&quot;</span>,</span><br><span class="line">                <span class="built_in">this</span>.getFreshValueHex = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="keyword">new</span> <span class="built_in">Array</span>, e = <span class="number">0</span>; e &lt; <span class="built_in">this</span>.asn1Array.length; e++) &#123;</span><br><span class="line">                        <span class="keyword">var</span> i = <span class="built_in">this</span>.asn1Array[e];</span><br><span class="line">                        t.push(i.getEncodedHex())</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> t.sort(),</span><br><span class="line">                        <span class="built_in">this</span>.hV = t.join(<span class="string">&quot;&quot;</span>),</span><br><span class="line">                        <span class="built_in">this</span>.hV</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERSet, KJUR.asn1.DERAbstractStructured),</span><br><span class="line">        KJUR.asn1.DERTaggedObject = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            KJUR.asn1.DERTaggedObject.superclass.constructor.call(<span class="built_in">this</span>),</span><br><span class="line">                <span class="built_in">this</span>.hT = <span class="string">&quot;a0&quot;</span>,</span><br><span class="line">                <span class="built_in">this</span>.hV = <span class="string">&quot;&quot;</span>,</span><br><span class="line">                <span class="built_in">this</span>.isExplicit = !<span class="number">0</span>,</span><br><span class="line">                <span class="built_in">this</span>.asn1Object = <span class="literal">null</span>,</span><br><span class="line">                <span class="built_in">this</span>.setASN1Object = <span class="function"><span class="keyword">function</span> (<span class="params">t, e, i</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.hT = e,</span><br><span class="line">                        <span class="built_in">this</span>.isExplicit = t,</span><br><span class="line">                        <span class="built_in">this</span>.asn1Object = i,</span><br><span class="line">                        <span class="built_in">this</span>.isExplicit ? (<span class="built_in">this</span>.hV = <span class="built_in">this</span>.asn1Object.getEncodedHex(),</span><br><span class="line">                            <span class="built_in">this</span>.hTLV = <span class="literal">null</span>,</span><br><span class="line">                            <span class="built_in">this</span>.isModified = !<span class="number">0</span>) : (<span class="built_in">this</span>.hV = <span class="literal">null</span>,</span><br><span class="line">                            <span class="built_in">this</span>.hTLV = i.getEncodedHex(),</span><br><span class="line">                            <span class="built_in">this</span>.hTLV = <span class="built_in">this</span>.hTLV.replace(<span class="regexp">/^../</span>, e),</span><br><span class="line">                            <span class="built_in">this</span>.isModified = !<span class="number">1</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">this</span>.getFreshValueHex = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.hV</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t &amp;&amp; (<span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.tag &amp;&amp; (<span class="built_in">this</span>.hT = t.tag),</span><br><span class="line">                    <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.explicit &amp;&amp; (<span class="built_in">this</span>.isExplicit = t.explicit),</span><br><span class="line">                    <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> t.obj &amp;&amp; (<span class="built_in">this</span>.asn1Object = t.obj,</span><br><span class="line">                        <span class="built_in">this</span>.setASN1Object(<span class="built_in">this</span>.isExplicit, <span class="built_in">this</span>.hT, <span class="built_in">this</span>.asn1Object)))</span><br><span class="line">        &#125;,</span><br><span class="line">        Ce.extend(KJUR.asn1.DERTaggedObject, KJUR.asn1.ASN1Object),</span><br><span class="line">        <span class="comment">// Copyright (c) 2008-2013 Lapo Luchini &lt;lapo@lapo.it&gt;</span></span><br><span class="line">        <span class="comment">// copyright notice and this permission notice appear in all copies.</span></span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        <span class="comment">// THE SOFTWARE IS PROVIDED &quot;AS IS&quot; AND THE AUTHOR DISCLAIMS ALL WARRANTIES</span></span><br><span class="line">        <span class="comment">// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF</span></span><br><span class="line">        <span class="comment">// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR</span></span><br><span class="line">        <span class="comment">// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES</span></span><br><span class="line">        <span class="comment">// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN</span></span><br><span class="line">        <span class="comment">// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF</span></span><br><span class="line">        <span class="comment">// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line"><span class="meta">            &quot;use strict&quot;</span>;</span><br><span class="line">            <span class="keyword">var</span> e, i = &#123;&#125;;</span><br><span class="line">            i.decode = <span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> r;</span><br><span class="line">                    <span class="keyword">if</span> (e === t) &#123;</span><br><span class="line">                        <span class="keyword">var</span> s = <span class="string">&quot;0123456789ABCDEF&quot;</span>,</span><br><span class="line">                            n = <span class="string">&quot; \f\n\r?\u2028\u2029&quot;</span>;</span><br><span class="line">                        <span class="keyword">for</span> (e = [],</span><br><span class="line">                            r = <span class="number">0</span>; <span class="number">16</span> &gt; r; ++r)</span><br><span class="line">                            e[s.charAt(r)] = r;</span><br><span class="line">                        <span class="keyword">for</span> (s = s.toLowerCase(),</span><br><span class="line">                            r = <span class="number">10</span>; <span class="number">16</span> &gt; r; ++r)</span><br><span class="line">                            e[s.charAt(r)] = r;</span><br><span class="line">                        <span class="keyword">for</span> (r = <span class="number">0</span>; r &lt; n.length; ++r)</span><br><span class="line">                            e[n.charAt(r)] = -<span class="number">1</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">var</span> o = [],</span><br><span class="line">                        h = <span class="number">0</span>,</span><br><span class="line">                        a = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span> (r = <span class="number">0</span>; r &lt; i.length; ++r) &#123;</span><br><span class="line">                        <span class="keyword">var</span> u = i.charAt(r);</span><br><span class="line">                        <span class="keyword">if</span> (<span class="string">&quot;=&quot;</span> == u)</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">if</span> (u = e[u], -<span class="number">1</span> != u) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (u === t)</span><br><span class="line">                                <span class="keyword">throw</span> <span class="string">&quot;Illegal character at offset &quot;</span> + r;</span><br><span class="line">                            h |= u,</span><br><span class="line">                                ++a &gt;= <span class="number">2</span> ? (o[o.length] = h,</span><br><span class="line">                                    h = <span class="number">0</span>,</span><br><span class="line">                                    a = <span class="number">0</span>) : h &lt;&lt;= <span class="number">4</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (a)</span><br><span class="line">                        <span class="keyword">throw</span> <span class="string">&quot;Hex encoding incomplete: 4 bits missing&quot;</span>;</span><br><span class="line">                    <span class="keyword">return</span> o</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">window</span>.Hex = i</span><br><span class="line">        &#125;(),</span><br><span class="line">        <span class="comment">// Copyright (c) 2008-2013 Lapo Luchini &lt;lapo@lapo.it&gt;</span></span><br><span class="line">        <span class="comment">// copyright notice and this permission notice appear in all copies.</span></span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        <span class="comment">// THE SOFTWARE IS PROVIDED &quot;AS IS&quot; AND THE AUTHOR DISCLAIMS ALL WARRANTIES</span></span><br><span class="line">        <span class="comment">// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF</span></span><br><span class="line">        <span class="comment">// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR</span></span><br><span class="line">        <span class="comment">// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES</span></span><br><span class="line">        <span class="comment">// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN</span></span><br><span class="line">        <span class="comment">// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF</span></span><br><span class="line">        <span class="comment">// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line"><span class="meta">            &quot;use strict&quot;</span>;</span><br><span class="line">            <span class="keyword">var</span> e, i = &#123;&#125;;</span><br><span class="line">            i.decode = <span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> r;</span><br><span class="line">                    <span class="keyword">if</span> (e === t) &#123;</span><br><span class="line">                        <span class="keyword">var</span> s = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>,</span><br><span class="line">                            n = <span class="string">&quot;= \f\n\r?\u2028\u2029&quot;</span>;</span><br><span class="line">                        <span class="keyword">for</span> (e = [],</span><br><span class="line">                            r = <span class="number">0</span>; <span class="number">64</span> &gt; r; ++r)</span><br><span class="line">                            e[s.charAt(r)] = r;</span><br><span class="line">                        <span class="keyword">for</span> (r = <span class="number">0</span>; r &lt; n.length; ++r)</span><br><span class="line">                            e[n.charAt(r)] = -<span class="number">1</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">var</span> o = [],</span><br><span class="line">                        h = <span class="number">0</span>,</span><br><span class="line">                        a = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span> (r = <span class="number">0</span>; r &lt; i.length; ++r) &#123;</span><br><span class="line">                        <span class="keyword">var</span> u = i.charAt(r);</span><br><span class="line">                        <span class="keyword">if</span> (<span class="string">&quot;=&quot;</span> == u)</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">if</span> (u = e[u], -<span class="number">1</span> != u) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (u === t)</span><br><span class="line">                                <span class="keyword">throw</span> <span class="string">&quot;Illegal character at offset &quot;</span> + r;</span><br><span class="line">                            h |= u,</span><br><span class="line">                                ++a &gt;= <span class="number">4</span> ? (o[o.length] = h &gt;&gt; <span class="number">16</span>,</span><br><span class="line">                                    o[o.length] = h &gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>,</span><br><span class="line">                                    o[o.length] = <span class="number">255</span> &amp; h,</span><br><span class="line">                                    h = <span class="number">0</span>,</span><br><span class="line">                                    a = <span class="number">0</span>) : h &lt;&lt;= <span class="number">6</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">switch</span> (a) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        <span class="keyword">throw</span> <span class="string">&quot;Base64 encoding incomplete: at least 2 bits missing&quot;</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        o[o.length] = h &gt;&gt; <span class="number">10</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        o[o.length] = h &gt;&gt; <span class="number">16</span>,</span><br><span class="line">                            o[o.length] = h &gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> o</span><br><span class="line">                &#125;,</span><br><span class="line">                i.re = <span class="regexp">/-----BEGIN [^-]+-----([A-Za-z0-9+\/=\s]+)-----END [^-]+-----|begin-base64[^\n]+\n([A-Za-z0-9+\/=\s]+)====/</span>,</span><br><span class="line">                i.unarmor = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> e = i.re.exec(t);</span><br><span class="line">                    <span class="keyword">if</span> (e)</span><br><span class="line">                        <span class="keyword">if</span> (e[<span class="number">1</span>])</span><br><span class="line">                            t = e[<span class="number">1</span>];</span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (!e[<span class="number">2</span>])</span><br><span class="line">                                <span class="keyword">throw</span> <span class="string">&quot;RegExp out of sync&quot;</span>;</span><br><span class="line">                            t = e[<span class="number">2</span>]</span><br><span class="line">                        &#125;</span><br><span class="line">                    <span class="keyword">return</span> i.decode(t)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">window</span>.Base64 = i</span><br><span class="line">        &#125;(),</span><br><span class="line">        <span class="comment">// Copyright (c) 2008-2013 Lapo Luchini &lt;lapo@lapo.it&gt;</span></span><br><span class="line">        <span class="comment">// copyright notice and this permission notice appear in all copies.</span></span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        <span class="comment">// THE SOFTWARE IS PROVIDED &quot;AS IS&quot; AND THE AUTHOR DISCLAIMS ALL WARRANTIES</span></span><br><span class="line">        <span class="comment">// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF</span></span><br><span class="line">        <span class="comment">// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR</span></span><br><span class="line">        <span class="comment">// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES</span></span><br><span class="line">        <span class="comment">// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN</span></span><br><span class="line">        <span class="comment">// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF</span></span><br><span class="line">        <span class="comment">// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line"><span class="meta">            &quot;use strict&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params">t, i</span>) </span>&#123;</span><br><span class="line">                t <span class="keyword">instanceof</span> e ? (<span class="built_in">this</span>.enc = t.enc,</span><br><span class="line">                    <span class="built_in">this</span>.pos = t.pos) : (<span class="built_in">this</span>.enc = t,</span><br><span class="line">                    <span class="built_in">this</span>.pos = i)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">t, e, i, r, s</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.stream = t,</span><br><span class="line">                    <span class="built_in">this</span>.header = e,</span><br><span class="line">                    <span class="built_in">this</span>.length = i,</span><br><span class="line">                    <span class="built_in">this</span>.tag = r,</span><br><span class="line">                    <span class="built_in">this</span>.sub = s</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> r = <span class="number">100</span>,</span><br><span class="line">                s = <span class="string">&quot;…&quot;</span>,</span><br><span class="line">                n = &#123;</span><br><span class="line">                    <span class="attr">tag</span>: <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">var</span> i = <span class="built_in">document</span>.createElement(t);</span><br><span class="line">                            <span class="keyword">return</span> i.className = e,</span><br><span class="line">                                i</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">text</span>: <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="built_in">document</span>.createTextNode(t)</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;;</span><br><span class="line">            e.prototype.get = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (e === t &amp;&amp; (e = <span class="built_in">this</span>.pos++),</span><br><span class="line">                        e &gt;= <span class="built_in">this</span>.enc.length)</span><br><span class="line">                        <span class="keyword">throw</span> <span class="string">&quot;Requesting byte offset &quot;</span> + e + <span class="string">&quot; on a stream of length &quot;</span> + <span class="built_in">this</span>.enc.length;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.enc[e]</span><br><span class="line">                &#125;,</span><br><span class="line">                e.prototype.hexDigits = <span class="string">&quot;0123456789ABCDEF&quot;</span>,</span><br><span class="line">                e.prototype.hexByte = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.hexDigits.charAt(t &gt;&gt; <span class="number">4</span> &amp; <span class="number">15</span>) + <span class="built_in">this</span>.hexDigits.charAt(<span class="number">15</span> &amp; t)</span><br><span class="line">                &#125;,</span><br><span class="line">                e.prototype.hexDump = <span class="function"><span class="keyword">function</span> (<span class="params">t, e, i</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> r = <span class="string">&quot;&quot;</span>, s = t; e &gt; s; ++s)</span><br><span class="line">                        <span class="keyword">if</span> (r += <span class="built_in">this</span>.hexByte(<span class="built_in">this</span>.get(s)),</span><br><span class="line">                            i !== !<span class="number">0</span>)</span><br><span class="line">                            <span class="keyword">switch</span> (<span class="number">15</span> &amp; s) &#123;</span><br><span class="line">                            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                                r += <span class="string">&quot;  &quot;</span>;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> <span class="number">15</span>:</span><br><span class="line">                                r += <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">default</span>:</span><br><span class="line">                                r += <span class="string">&quot; &quot;</span></span><br><span class="line">                            &#125;</span><br><span class="line">                    <span class="keyword">return</span> r</span><br><span class="line">                &#125;,</span><br><span class="line">                e.prototype.parseStringISO = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="string">&quot;&quot;</span>, r = t; e &gt; r; ++r)</span><br><span class="line">                        i += <span class="built_in">String</span>.fromCharCode(<span class="built_in">this</span>.get(r));</span><br><span class="line">                    <span class="keyword">return</span> i</span><br><span class="line">                &#125;,</span><br><span class="line">                e.prototype.parseStringUTF = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="string">&quot;&quot;</span>, r = t; e &gt; r;) &#123;</span><br><span class="line">                        <span class="keyword">var</span> s = <span class="built_in">this</span>.get(r++);</span><br><span class="line">                        i += <span class="number">128</span> &gt; s ? <span class="built_in">String</span>.fromCharCode(s) : s &gt; <span class="number">191</span> &amp;&amp; <span class="number">224</span> &gt; s ? <span class="built_in">String</span>.fromCharCode((<span class="number">31</span> &amp; s) &lt;&lt; <span class="number">6</span> | <span class="number">63</span> &amp; <span class="built_in">this</span>.get(r++)) : <span class="built_in">String</span>.fromCharCode((<span class="number">15</span> &amp; s) &lt;&lt; <span class="number">12</span> | (<span class="number">63</span> &amp; <span class="built_in">this</span>.get(r++)) &lt;&lt; <span class="number">6</span> | <span class="number">63</span> &amp; <span class="built_in">this</span>.get(r++))</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> i</span><br><span class="line">                &#125;,</span><br><span class="line">                e.prototype.parseStringBMP = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="string">&quot;&quot;</span>, r = t; e &gt; r; r += <span class="number">2</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> s = <span class="built_in">this</span>.get(r),</span><br><span class="line">                            n = <span class="built_in">this</span>.get(r + <span class="number">1</span>);</span><br><span class="line">                        i += <span class="built_in">String</span>.fromCharCode((s &lt;&lt; <span class="number">8</span>) + n)</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> i</span><br><span class="line">                &#125;,</span><br><span class="line">                e.prototype.reTime = <span class="regexp">/^((?:1[89]|2\d)?\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d&#123;1,3&#125;))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/</span>,</span><br><span class="line">                e.prototype.parseTime = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> i = <span class="built_in">this</span>.parseStringISO(t, e),</span><br><span class="line">                        r = <span class="built_in">this</span>.reTime.exec(i);</span><br><span class="line">                    <span class="keyword">return</span> r ? (i = r[<span class="number">1</span>] + <span class="string">&quot;-&quot;</span> + r[<span class="number">2</span>] + <span class="string">&quot;-&quot;</span> + r[<span class="number">3</span>] + <span class="string">&quot; &quot;</span> + r[<span class="number">4</span>],</span><br><span class="line">                        r[<span class="number">5</span>] &amp;&amp; (i += <span class="string">&quot;:&quot;</span> + r[<span class="number">5</span>],</span><br><span class="line">                            r[<span class="number">6</span>] &amp;&amp; (i += <span class="string">&quot;:&quot;</span> + r[<span class="number">6</span>],</span><br><span class="line">                                r[<span class="number">7</span>] &amp;&amp; (i += <span class="string">&quot;.&quot;</span> + r[<span class="number">7</span>]))),</span><br><span class="line">                        r[<span class="number">8</span>] &amp;&amp; (i += <span class="string">&quot; UTC&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Z&quot;</span> != r[<span class="number">8</span>] &amp;&amp; (i += r[<span class="number">8</span>],</span><br><span class="line">                                r[<span class="number">9</span>] &amp;&amp; (i += <span class="string">&quot;:&quot;</span> + r[<span class="number">9</span>]))),</span><br><span class="line">                        i) : <span class="string">&quot;Unrecognized time: &quot;</span> + i</span><br><span class="line">                &#125;,</span><br><span class="line">                e.prototype.parseInteger = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> i = e - t;</span><br><span class="line">                    <span class="keyword">if</span> (i &gt; <span class="number">4</span>) &#123;</span><br><span class="line">                        i &lt;&lt;= <span class="number">3</span>;</span><br><span class="line">                        <span class="keyword">var</span> r = <span class="built_in">this</span>.get(t);</span><br><span class="line">                        <span class="keyword">if</span> (<span class="number">0</span> === r)</span><br><span class="line">                            i -= <span class="number">8</span>;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                            <span class="keyword">for</span> (; <span class="number">128</span> &gt; r;)</span><br><span class="line">                                r &lt;&lt;= <span class="number">1</span>,</span><br><span class="line">                                --i;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">&quot;(&quot;</span> + i + <span class="string">&quot; bit)&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> s = <span class="number">0</span>, n = t; e &gt; n; ++n)</span><br><span class="line">                        s = s &lt;&lt; <span class="number">8</span> | <span class="built_in">this</span>.get(n);</span><br><span class="line">                    <span class="keyword">return</span> s</span><br><span class="line">                &#125;,</span><br><span class="line">                e.prototype.parseBitString = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> i = <span class="built_in">this</span>.get(t),</span><br><span class="line">                        r = (e - t - <span class="number">1</span> &lt;&lt; <span class="number">3</span>) - i,</span><br><span class="line">                        s = <span class="string">&quot;(&quot;</span> + r + <span class="string">&quot; bit)&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">20</span> &gt;= r) &#123;</span><br><span class="line">                        <span class="keyword">var</span> n = i;</span><br><span class="line">                        s += <span class="string">&quot; &quot;</span>;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> o = e - <span class="number">1</span>; o &gt; t; --o) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> h = <span class="built_in">this</span>.get(o), a = n; <span class="number">8</span> &gt; a; ++a)</span><br><span class="line">                                s += h &gt;&gt; a &amp; <span class="number">1</span> ? <span class="string">&quot;1&quot;</span> : <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                            n = <span class="number">0</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> s</span><br><span class="line">                &#125;,</span><br><span class="line">                e.prototype.parseOctetString = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> i = e - t,</span><br><span class="line">                        n = <span class="string">&quot;(&quot;</span> + i + <span class="string">&quot; byte) &quot;</span>;</span><br><span class="line">                    i &gt; r &amp;&amp; (e = t + r);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> o = t; e &gt; o; ++o)</span><br><span class="line">                        n += <span class="built_in">this</span>.hexByte(<span class="built_in">this</span>.get(o));</span><br><span class="line">                    <span class="keyword">return</span> i &gt; r &amp;&amp; (n += s),</span><br><span class="line">                        n</span><br><span class="line">                &#125;,</span><br><span class="line">                e.prototype.parseOID = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="string">&quot;&quot;</span>, r = <span class="number">0</span>, s = <span class="number">0</span>, n = t; e &gt; n; ++n) &#123;</span><br><span class="line">                        <span class="keyword">var</span> o = <span class="built_in">this</span>.get(n);</span><br><span class="line">                        <span class="keyword">if</span> (r = r &lt;&lt; <span class="number">7</span> | <span class="number">127</span> &amp; o,</span><br><span class="line">                            s += <span class="number">7</span>, !(<span class="number">128</span> &amp; o)) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (<span class="string">&quot;&quot;</span> === i) &#123;</span><br><span class="line">                                <span class="keyword">var</span> h = <span class="number">80</span> &gt; r ? <span class="number">40</span> &gt; r ? <span class="number">0</span> : <span class="number">1</span> : <span class="number">2</span>;</span><br><span class="line">                                i = h + <span class="string">&quot;.&quot;</span> + (r - <span class="number">40</span> * h)</span><br><span class="line">                            &#125; <span class="keyword">else</span></span><br><span class="line">                                i += <span class="string">&quot;.&quot;</span> + (s &gt;= <span class="number">31</span> ? <span class="string">&quot;bigint&quot;</span> : r);</span><br><span class="line">                            r = s = <span class="number">0</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> i</span><br><span class="line">                &#125;,</span><br><span class="line">                i.prototype.typeName = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">this</span>.tag === t)</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">&quot;unknown&quot;</span>;</span><br><span class="line">                    <span class="keyword">var</span> e = <span class="built_in">this</span>.tag &gt;&gt; <span class="number">6</span>,</span><br><span class="line">                        i = (<span class="built_in">this</span>.tag &gt;&gt; <span class="number">5</span> &amp; <span class="number">1</span>,</span><br><span class="line">                            <span class="number">31</span> &amp; <span class="built_in">this</span>.tag);</span><br><span class="line">                    <span class="keyword">switch</span> (e) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">switch</span> (i) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;EOC&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;BOOLEAN&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;INTEGER&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;BIT_STRING&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;OCTET_STRING&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;OBJECT_IDENTIFIER&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;ObjectDescriptor&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;EXTERNAL&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;REAL&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;ENUMERATED&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;EMBEDDED_PDV&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;UTF8String&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;SEQUENCE&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">17</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;SET&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">18</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;NumericString&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">19</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;PrintableString&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">20</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;TeletexString&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">21</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;VideotexString&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">22</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;IA5String&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">23</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;UTCTime&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">24</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;GeneralizedTime&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">25</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;GraphicString&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">26</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;VisibleString&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">27</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;GeneralString&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">28</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;UniversalString&quot;</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">30</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;BMPString&quot;</span>;</span><br><span class="line">                        <span class="keyword">default</span>:</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;Universal_&quot;</span> + i.toString(<span class="number">16</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">&quot;Application_&quot;</span> + i.toString(<span class="number">16</span>);</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">&quot;[&quot;</span> + i + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">&quot;Private_&quot;</span> + i.toString(<span class="number">16</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                i.prototype.reSeemsASCII = <span class="regexp">/^[ -~]+$/</span>,</span><br><span class="line">                i.prototype.content = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">this</span>.tag === t)</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                    <span class="keyword">var</span> e = <span class="built_in">this</span>.tag &gt;&gt; <span class="number">6</span>,</span><br><span class="line">                        i = <span class="number">31</span> &amp; <span class="built_in">this</span>.tag,</span><br><span class="line">                        n = <span class="built_in">this</span>.posContent(),</span><br><span class="line">                        o = <span class="built_in">Math</span>.abs(<span class="built_in">this</span>.length);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">0</span> !== e) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="literal">null</span> !== <span class="built_in">this</span>.sub)</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;(&quot;</span> + <span class="built_in">this</span>.sub.length + <span class="string">&quot; elem)&quot;</span>;</span><br><span class="line">                        <span class="keyword">var</span> h = <span class="built_in">this</span>.stream.parseStringISO(n, n + <span class="built_in">Math</span>.min(o, r));</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">this</span>.reSeemsASCII.test(h) ? h.substring(<span class="number">0</span>, <span class="number">2</span> * r) + (h.length &gt; <span class="number">2</span> * r ? s : <span class="string">&quot;&quot;</span>) : <span class="built_in">this</span>.stream.parseOctetString(n, n + o)</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">switch</span> (i) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span> === <span class="built_in">this</span>.stream.get(n) ? <span class="string">&quot;false&quot;</span> : <span class="string">&quot;true&quot;</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">this</span>.stream.parseInteger(n, n + o);</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">this</span>.sub ? <span class="string">&quot;(&quot;</span> + <span class="built_in">this</span>.sub.length + <span class="string">&quot; elem)&quot;</span> : <span class="built_in">this</span>.stream.parseBitString(n, n + o);</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">this</span>.sub ? <span class="string">&quot;(&quot;</span> + <span class="built_in">this</span>.sub.length + <span class="string">&quot; elem)&quot;</span> : <span class="built_in">this</span>.stream.parseOctetString(n, n + o);</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">this</span>.stream.parseOID(n, n + o);</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">17</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">&quot;(&quot;</span> + <span class="built_in">this</span>.sub.length + <span class="string">&quot; elem)&quot;</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">this</span>.stream.parseStringUTF(n, n + o);</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">18</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">19</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">20</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">21</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">22</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">26</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">this</span>.stream.parseStringISO(n, n + o);</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">30</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">this</span>.stream.parseStringBMP(n, n + o);</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">23</span>:</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">24</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">this</span>.stream.parseTime(n, n + o)</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">                &#125;,</span><br><span class="line">                i.prototype.toString = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.typeName() + <span class="string">&quot;@&quot;</span> + <span class="built_in">this</span>.stream.pos + <span class="string">&quot;[header:&quot;</span> + <span class="built_in">this</span>.header + <span class="string">&quot;,length:&quot;</span> + <span class="built_in">this</span>.length + <span class="string">&quot;,sub:&quot;</span> + (<span class="literal">null</span> === <span class="built_in">this</span>.sub ? <span class="string">&quot;null&quot;</span> : <span class="built_in">this</span>.sub.length) + <span class="string">&quot;]&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                i.prototype.print = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (e === t &amp;&amp; (e = <span class="string">&quot;&quot;</span>),</span><br><span class="line">                        <span class="built_in">document</span>.writeln(e + <span class="built_in">this</span>),</span><br><span class="line">                        <span class="literal">null</span> !== <span class="built_in">this</span>.sub) &#123;</span><br><span class="line">                        e += <span class="string">&quot;  &quot;</span>;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, r = <span class="built_in">this</span>.sub.length; r &gt; i; ++i)</span><br><span class="line">                            <span class="built_in">this</span>.sub[i].print(e)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                i.prototype.toPrettyString = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                    e === t &amp;&amp; (e = <span class="string">&quot;&quot;</span>);</span><br><span class="line">                    <span class="keyword">var</span> i = e + <span class="built_in">this</span>.typeName() + <span class="string">&quot; @&quot;</span> + <span class="built_in">this</span>.stream.pos;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">this</span>.length &gt;= <span class="number">0</span> &amp;&amp; (i += <span class="string">&quot;+&quot;</span>),</span><br><span class="line">                        i += <span class="built_in">this</span>.length,</span><br><span class="line">                        <span class="number">32</span> &amp; <span class="built_in">this</span>.tag ? i += <span class="string">&quot; (constructed)&quot;</span> : <span class="number">3</span> != <span class="built_in">this</span>.tag &amp;&amp; <span class="number">4</span> != <span class="built_in">this</span>.tag || <span class="literal">null</span> === <span class="built_in">this</span>.sub || (i += <span class="string">&quot; (encapsulates)&quot;</span>),</span><br><span class="line">                        i += <span class="string">&quot;\n&quot;</span>,</span><br><span class="line">                        <span class="literal">null</span> !== <span class="built_in">this</span>.sub) &#123;</span><br><span class="line">                        e += <span class="string">&quot;  &quot;</span>;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> r = <span class="number">0</span>, s = <span class="built_in">this</span>.sub.length; s &gt; r; ++r)</span><br><span class="line">                            i += <span class="built_in">this</span>.sub[r].toPrettyString(e)</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> i</span><br><span class="line">                &#125;,</span><br><span class="line">                i.prototype.toDOM = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> t = n.tag(<span class="string">&quot;div&quot;</span>, <span class="string">&quot;node&quot;</span>);</span><br><span class="line">                    t.asn1 = <span class="built_in">this</span>;</span><br><span class="line">                    <span class="keyword">var</span> e = n.tag(<span class="string">&quot;div&quot;</span>, <span class="string">&quot;head&quot;</span>),</span><br><span class="line">                        i = <span class="built_in">this</span>.typeName().replace(<span class="regexp">/_/g</span>, <span class="string">&quot; &quot;</span>);</span><br><span class="line">                    e.innerHTML = i;</span><br><span class="line">                    <span class="keyword">var</span> r = <span class="built_in">this</span>.content();</span><br><span class="line">                    <span class="keyword">if</span> (<span class="literal">null</span> !== r) &#123;</span><br><span class="line">                        r = <span class="built_in">String</span>(r).replace(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&amp;lt;&quot;</span>);</span><br><span class="line">                        <span class="keyword">var</span> s = n.tag(<span class="string">&quot;span&quot;</span>, <span class="string">&quot;preview&quot;</span>);</span><br><span class="line">                        s.appendChild(n.text(r)),</span><br><span class="line">                            e.appendChild(s)</span><br><span class="line">                    &#125;</span><br><span class="line">                    t.appendChild(e),</span><br><span class="line">                        <span class="built_in">this</span>.node = t,</span><br><span class="line">                        <span class="built_in">this</span>.head = e;</span><br><span class="line">                    <span class="keyword">var</span> o = n.tag(<span class="string">&quot;div&quot;</span>, <span class="string">&quot;value&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (i = <span class="string">&quot;Offset: &quot;</span> + <span class="built_in">this</span>.stream.pos + <span class="string">&quot;&lt;br/&gt;&quot;</span>,</span><br><span class="line">                        i += <span class="string">&quot;Length: &quot;</span> + <span class="built_in">this</span>.header + <span class="string">&quot;+&quot;</span>,</span><br><span class="line">                        i += <span class="built_in">this</span>.length &gt;= <span class="number">0</span> ? <span class="built_in">this</span>.length : -<span class="built_in">this</span>.length + <span class="string">&quot; (undefined)&quot;</span>,</span><br><span class="line">                        <span class="number">32</span> &amp; <span class="built_in">this</span>.tag ? i += <span class="string">&quot;&lt;br/&gt;(constructed)&quot;</span> : <span class="number">3</span> != <span class="built_in">this</span>.tag &amp;&amp; <span class="number">4</span> != <span class="built_in">this</span>.tag || <span class="literal">null</span> === <span class="built_in">this</span>.sub || (i += <span class="string">&quot;&lt;br/&gt;(encapsulates)&quot;</span>),</span><br><span class="line">                        <span class="literal">null</span> !== r &amp;&amp; (i += <span class="string">&quot;&lt;br/&gt;Value:&lt;br/&gt;&lt;b&gt;&quot;</span> + r + <span class="string">&quot;&lt;/b&gt;&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;object&quot;</span> == <span class="keyword">typeof</span> oids &amp;&amp; <span class="number">6</span> == <span class="built_in">this</span>.tag)) &#123;</span><br><span class="line">                        <span class="keyword">var</span> h = oids[r];</span><br><span class="line">                        h &amp;&amp; (h.d &amp;&amp; (i += <span class="string">&quot;&lt;br/&gt;&quot;</span> + h.d),</span><br><span class="line">                            h.c &amp;&amp; (i += <span class="string">&quot;&lt;br/&gt;&quot;</span> + h.c),</span><br><span class="line">                            h.w &amp;&amp; (i += <span class="string">&quot;&lt;br/&gt;(warning!)&quot;</span>))</span><br><span class="line">                    &#125;</span><br><span class="line">                    o.innerHTML = i,</span><br><span class="line">                        t.appendChild(o);</span><br><span class="line">                    <span class="keyword">var</span> a = n.tag(<span class="string">&quot;div&quot;</span>, <span class="string">&quot;sub&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="literal">null</span> !== <span class="built_in">this</span>.sub)</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> u = <span class="number">0</span>, c = <span class="built_in">this</span>.sub.length; c &gt; u; ++u)</span><br><span class="line">                            a.appendChild(<span class="built_in">this</span>.sub[u].toDOM());</span><br><span class="line">                    <span class="keyword">return</span> t.appendChild(a),</span><br><span class="line">                        e.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            t.className = <span class="string">&quot;node collapsed&quot;</span> == t.className ? <span class="string">&quot;node&quot;</span> : <span class="string">&quot;node collapsed&quot;</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        t</span><br><span class="line">                &#125;,</span><br><span class="line">                i.prototype.posStart = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.stream.pos</span><br><span class="line">                &#125;,</span><br><span class="line">                i.prototype.posContent = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.stream.pos + <span class="built_in">this</span>.header</span><br><span class="line">                &#125;,</span><br><span class="line">                i.prototype.posEnd = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.stream.pos + <span class="built_in">this</span>.header + <span class="built_in">Math</span>.abs(<span class="built_in">this</span>.length)</span><br><span class="line">                &#125;,</span><br><span class="line">                i.prototype.fakeHover = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.node.className += <span class="string">&quot; hover&quot;</span>,</span><br><span class="line">                        t &amp;&amp; (<span class="built_in">this</span>.head.className += <span class="string">&quot; hover&quot;</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                i.prototype.fakeOut = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> e = <span class="regexp">/ ?hover/</span>;</span><br><span class="line">                    <span class="built_in">this</span>.node.className = <span class="built_in">this</span>.node.className.replace(e, <span class="string">&quot;&quot;</span>),</span><br><span class="line">                        t &amp;&amp; (<span class="built_in">this</span>.head.className = <span class="built_in">this</span>.head.className.replace(e, <span class="string">&quot;&quot;</span>))</span><br><span class="line">                &#125;,</span><br><span class="line">                i.prototype.toHexDOM_sub = <span class="function"><span class="keyword">function</span> (<span class="params">t, e, i, r, s</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (!(r &gt;= s)) &#123;</span><br><span class="line">                        <span class="keyword">var</span> o = n.tag(<span class="string">&quot;span&quot;</span>, e);</span><br><span class="line">                        o.appendChild(n.text(i.hexDump(r, s))),</span><br><span class="line">                            t.appendChild(o)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                i.prototype.toHexDOM = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> i = n.tag(<span class="string">&quot;span&quot;</span>, <span class="string">&quot;hex&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (e === t &amp;&amp; (e = i),</span><br><span class="line">                        <span class="built_in">this</span>.head.hexNode = i,</span><br><span class="line">                        <span class="built_in">this</span>.head.onmouseover = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            <span class="built_in">this</span>.hexNode.className = <span class="string">&quot;hexCurrent&quot;</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="built_in">this</span>.head.onmouseout = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            <span class="built_in">this</span>.hexNode.className = <span class="string">&quot;hex&quot;</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        i.asn1 = <span class="built_in">this</span>,</span><br><span class="line">                        i.onmouseover = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">var</span> t = !e.selected;</span><br><span class="line">                            t &amp;&amp; (e.selected = <span class="built_in">this</span>.asn1,</span><br><span class="line">                                    <span class="built_in">this</span>.className = <span class="string">&quot;hexCurrent&quot;</span>),</span><br><span class="line">                                <span class="built_in">this</span>.asn1.fakeHover(t)</span><br><span class="line">                        &#125;,</span><br><span class="line">                        i.onmouseout = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">var</span> t = e.selected == <span class="built_in">this</span>.asn1;</span><br><span class="line">                            <span class="built_in">this</span>.asn1.fakeOut(t),</span><br><span class="line">                                t &amp;&amp; (e.selected = <span class="literal">null</span>,</span><br><span class="line">                                    <span class="built_in">this</span>.className = <span class="string">&quot;hex&quot;</span>)</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="built_in">this</span>.toHexDOM_sub(i, <span class="string">&quot;tag&quot;</span>, <span class="built_in">this</span>.stream, <span class="built_in">this</span>.posStart(), <span class="built_in">this</span>.posStart() + <span class="number">1</span>),</span><br><span class="line">                        <span class="built_in">this</span>.toHexDOM_sub(i, <span class="built_in">this</span>.length &gt;= <span class="number">0</span> ? <span class="string">&quot;dlen&quot;</span> : <span class="string">&quot;ulen&quot;</span>, <span class="built_in">this</span>.stream, <span class="built_in">this</span>.posStart() + <span class="number">1</span>, <span class="built_in">this</span>.posContent()),</span><br><span class="line">                        <span class="literal">null</span> === <span class="built_in">this</span>.sub)</span><br><span class="line">                        i.appendChild(n.text(<span class="built_in">this</span>.stream.hexDump(<span class="built_in">this</span>.posContent(), <span class="built_in">this</span>.posEnd())));</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.sub.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> r = <span class="built_in">this</span>.sub[<span class="number">0</span>],</span><br><span class="line">                            s = <span class="built_in">this</span>.sub[<span class="built_in">this</span>.sub.length - <span class="number">1</span>];</span><br><span class="line">                        <span class="built_in">this</span>.toHexDOM_sub(i, <span class="string">&quot;intro&quot;</span>, <span class="built_in">this</span>.stream, <span class="built_in">this</span>.posContent(), r.posStart());</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> o = <span class="number">0</span>, h = <span class="built_in">this</span>.sub.length; h &gt; o; ++o)</span><br><span class="line">                            i.appendChild(<span class="built_in">this</span>.sub[o].toHexDOM(e));</span><br><span class="line">                        <span class="built_in">this</span>.toHexDOM_sub(i, <span class="string">&quot;outro&quot;</span>, <span class="built_in">this</span>.stream, s.posEnd(), <span class="built_in">this</span>.posEnd())</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> i</span><br><span class="line">                &#125;,</span><br><span class="line">                i.prototype.toHexString = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.stream.hexDump(<span class="built_in">this</span>.posStart(), <span class="built_in">this</span>.posEnd(), !<span class="number">0</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                i.decodeLength = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> e = t.get(),</span><br><span class="line">                        i = <span class="number">127</span> &amp; e;</span><br><span class="line">                    <span class="keyword">if</span> (i == e)</span><br><span class="line">                        <span class="keyword">return</span> i;</span><br><span class="line">                    <span class="keyword">if</span> (i &gt; <span class="number">3</span>)</span><br><span class="line">                        <span class="keyword">throw</span> <span class="string">&quot;Length over 24 bits not supported at position &quot;</span> + (t.pos - <span class="number">1</span>);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">0</span> === i)</span><br><span class="line">                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                    e = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> r = <span class="number">0</span>; i &gt; r; ++r)</span><br><span class="line">                        e = e &lt;&lt; <span class="number">8</span> | t.get();</span><br><span class="line">                    <span class="keyword">return</span> e</span><br><span class="line">                &#125;,</span><br><span class="line">                i.hasContent = <span class="function"><span class="keyword">function</span> (<span class="params">t, r, s</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">32</span> &amp; t)</span><br><span class="line">                        <span class="keyword">return</span> !<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">3</span> &gt; t || t &gt; <span class="number">4</span>)</span><br><span class="line">                        <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">var</span> n = <span class="keyword">new</span> e(s);</span><br><span class="line">                    <span class="number">3</span> == t &amp;&amp; n.get();</span><br><span class="line">                    <span class="keyword">var</span> o = n.get();</span><br><span class="line">                    <span class="keyword">if</span> (o &gt;&gt; <span class="number">6</span> &amp; <span class="number">1</span>)</span><br><span class="line">                        <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">var</span> h = i.decodeLength(n);</span><br><span class="line">                        <span class="keyword">return</span> n.pos - s.pos + h == r</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (a) &#123;</span><br><span class="line">                        <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                i.decode = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    t <span class="keyword">instanceof</span> e || (t = <span class="keyword">new</span> e(t, <span class="number">0</span>));</span><br><span class="line">                    <span class="keyword">var</span> r = <span class="keyword">new</span> e(t),</span><br><span class="line">                        s = t.get(),</span><br><span class="line">                        n = i.decodeLength(t),</span><br><span class="line">                        o = t.pos - r.pos,</span><br><span class="line">                        h = <span class="literal">null</span>;</span><br><span class="line">                    <span class="keyword">if</span> (i.hasContent(s, n, t)) &#123;</span><br><span class="line">                        <span class="keyword">var</span> a = t.pos;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="number">3</span> == s &amp;&amp; t.get(),</span><br><span class="line">                            h = [],</span><br><span class="line">                            n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> u = a + n; t.pos &lt; u;)</span><br><span class="line">                                h[h.length] = i.decode(t);</span><br><span class="line">                            <span class="keyword">if</span> (t.pos != u)</span><br><span class="line">                                <span class="keyword">throw</span> <span class="string">&quot;Content size is not correct for container starting at offset &quot;</span> + a</span><br><span class="line">                        &#125; <span class="keyword">else</span></span><br><span class="line">                            <span class="keyword">try</span> &#123;</span><br><span class="line">                                <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> c = i.decode(t);</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="number">0</span> === c.tag)</span><br><span class="line">                                        <span class="keyword">break</span>;</span><br><span class="line">                                    h[h.length] = c</span><br><span class="line">                                &#125;</span><br><span class="line">                                n = a - t.pos</span><br><span class="line">                            &#125; <span class="keyword">catch</span> (f) &#123;</span><br><span class="line">                                <span class="keyword">throw</span> <span class="string">&quot;Exception while decoding undefined length content: &quot;</span> + f</span><br><span class="line">                            &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span></span><br><span class="line">                        t.pos += n;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> i(r, o, n, s, h)</span><br><span class="line">                &#125;,</span><br><span class="line">                i.test = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> t = [&#123;</span><br><span class="line">                        <span class="attr">value</span>: [<span class="number">39</span>],</span><br><span class="line">                        <span class="attr">expected</span>: <span class="number">39</span></span><br><span class="line">                    &#125;, &#123;</span><br><span class="line">                        <span class="attr">value</span>: [<span class="number">129</span>, <span class="number">201</span>],</span><br><span class="line">                        <span class="attr">expected</span>: <span class="number">201</span></span><br><span class="line">                    &#125;, &#123;</span><br><span class="line">                        <span class="attr">value</span>: [<span class="number">131</span>, <span class="number">254</span>, <span class="number">220</span>, <span class="number">186</span>],</span><br><span class="line">                        <span class="attr">expected</span>: <span class="number">16702650</span></span><br><span class="line">                    &#125;], r = <span class="number">0</span>, s = t.length; s &gt; r; ++r) &#123;</span><br><span class="line">                        <span class="keyword">var</span> n = <span class="keyword">new</span> e(t[r].value, <span class="number">0</span>),</span><br><span class="line">                            o = i.decodeLength(n);</span><br><span class="line">                        o != t[r].expected &amp;&amp; <span class="built_in">document</span>.write(<span class="string">&quot;In test[&quot;</span> + r + <span class="string">&quot;] expected &quot;</span> + t[r].expected + <span class="string">&quot; got &quot;</span> + o + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="built_in">window</span>.ASN1 = i</span><br><span class="line">        &#125;(),</span><br><span class="line">        ASN1.prototype.getHexStringValue = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="built_in">this</span>.toHexString(),</span><br><span class="line">                e = <span class="number">2</span> * <span class="built_in">this</span>.header,</span><br><span class="line">                i = <span class="number">2</span> * <span class="built_in">this</span>.length;</span><br><span class="line">            <span class="keyword">return</span> t.substr(e, i)</span><br><span class="line">        &#125;,</span><br><span class="line">        ue.prototype.parseKey = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> e = <span class="number">0</span>,</span><br><span class="line">                    i = <span class="number">0</span>,</span><br><span class="line">                    r = <span class="regexp">/^\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\s*)+$/</span>,</span><br><span class="line">                    s = r.test(t) ? Hex.decode(t) : Base64.unarmor(t),</span><br><span class="line">                    n = ASN1.decode(s);</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">3</span> === n.sub.length &amp;&amp; (n = n.sub[<span class="number">2</span>].sub[<span class="number">0</span>]),</span><br><span class="line">                    <span class="number">9</span> === n.sub.length) &#123;</span><br><span class="line">                    e = n.sub[<span class="number">1</span>].getHexStringValue(),</span><br><span class="line">                        <span class="built_in">this</span>.n = he(e, <span class="number">16</span>),</span><br><span class="line">                        i = n.sub[<span class="number">2</span>].getHexStringValue(),</span><br><span class="line">                        <span class="built_in">this</span>.e = <span class="built_in">parseInt</span>(i, <span class="number">16</span>);</span><br><span class="line">                    <span class="keyword">var</span> o = n.sub[<span class="number">3</span>].getHexStringValue();</span><br><span class="line">                    <span class="built_in">this</span>.d = he(o, <span class="number">16</span>);</span><br><span class="line">                    <span class="keyword">var</span> h = n.sub[<span class="number">4</span>].getHexStringValue();</span><br><span class="line">                    <span class="built_in">this</span>.p = he(h, <span class="number">16</span>);</span><br><span class="line">                    <span class="keyword">var</span> a = n.sub[<span class="number">5</span>].getHexStringValue();</span><br><span class="line">                    <span class="built_in">this</span>.q = he(a, <span class="number">16</span>);</span><br><span class="line">                    <span class="keyword">var</span> u = n.sub[<span class="number">6</span>].getHexStringValue();</span><br><span class="line">                    <span class="built_in">this</span>.dmp1 = he(u, <span class="number">16</span>);</span><br><span class="line">                    <span class="keyword">var</span> c = n.sub[<span class="number">7</span>].getHexStringValue();</span><br><span class="line">                    <span class="built_in">this</span>.dmq1 = he(c, <span class="number">16</span>);</span><br><span class="line">                    <span class="keyword">var</span> f = n.sub[<span class="number">8</span>].getHexStringValue();</span><br><span class="line">                    <span class="built_in">this</span>.coeff = he(f, <span class="number">16</span>)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">2</span> !== n.sub.length)</span><br><span class="line">                        <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">var</span> p = n.sub[<span class="number">1</span>],</span><br><span class="line">                        l = p.sub[<span class="number">0</span>];</span><br><span class="line">                    e = l.sub[<span class="number">0</span>].getHexStringValue(),</span><br><span class="line">                        <span class="built_in">this</span>.n = he(e, <span class="number">16</span>),</span><br><span class="line">                        i = l.sub[<span class="number">1</span>].getHexStringValue(),</span><br><span class="line">                        <span class="built_in">this</span>.e = <span class="built_in">parseInt</span>(i, <span class="number">16</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> !<span class="number">0</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (d) &#123;</span><br><span class="line">                <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        ue.prototype.getPrivateBaseKey = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> t = &#123;</span><br><span class="line">                    <span class="attr">array</span>: [<span class="keyword">new</span> KJUR.asn1.DERInteger(&#123;</span><br><span class="line">                        <span class="string">&quot;int&quot;</span>: <span class="number">0</span></span><br><span class="line">                    &#125;), <span class="keyword">new</span> KJUR.asn1.DERInteger(&#123;</span><br><span class="line">                        <span class="attr">bigint</span>: <span class="built_in">this</span>.n</span><br><span class="line">                    &#125;), <span class="keyword">new</span> KJUR.asn1.DERInteger(&#123;</span><br><span class="line">                        <span class="string">&quot;int&quot;</span>: <span class="built_in">this</span>.e</span><br><span class="line">                    &#125;), <span class="keyword">new</span> KJUR.asn1.DERInteger(&#123;</span><br><span class="line">                        <span class="attr">bigint</span>: <span class="built_in">this</span>.d</span><br><span class="line">                    &#125;), <span class="keyword">new</span> KJUR.asn1.DERInteger(&#123;</span><br><span class="line">                        <span class="attr">bigint</span>: <span class="built_in">this</span>.p</span><br><span class="line">                    &#125;), <span class="keyword">new</span> KJUR.asn1.DERInteger(&#123;</span><br><span class="line">                        <span class="attr">bigint</span>: <span class="built_in">this</span>.q</span><br><span class="line">                    &#125;), <span class="keyword">new</span> KJUR.asn1.DERInteger(&#123;</span><br><span class="line">                        <span class="attr">bigint</span>: <span class="built_in">this</span>.dmp1</span><br><span class="line">                    &#125;), <span class="keyword">new</span> KJUR.asn1.DERInteger(&#123;</span><br><span class="line">                        <span class="attr">bigint</span>: <span class="built_in">this</span>.dmq1</span><br><span class="line">                    &#125;), <span class="keyword">new</span> KJUR.asn1.DERInteger(&#123;</span><br><span class="line">                        <span class="attr">bigint</span>: <span class="built_in">this</span>.coeff</span><br><span class="line">                    &#125;)]</span><br><span class="line">                &#125;,</span><br><span class="line">                e = <span class="keyword">new</span> KJUR.asn1.DERSequence(t);</span><br><span class="line">            <span class="keyword">return</span> e.getEncodedHex()</span><br><span class="line">        &#125;,</span><br><span class="line">        ue.prototype.getPrivateBaseKeyB64 = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> be(<span class="built_in">this</span>.getPrivateBaseKey())</span><br><span class="line">        &#125;,</span><br><span class="line">        ue.prototype.getPublicBaseKey = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> t = &#123;</span><br><span class="line">                    <span class="attr">array</span>: [<span class="keyword">new</span> KJUR.asn1.DERObjectIdentifier(&#123;</span><br><span class="line">                        <span class="attr">oid</span>: <span class="string">&quot;1.2.840.113549.1.1.1&quot;</span></span><br><span class="line">                    &#125;), <span class="keyword">new</span> KJUR.asn1.DERNull]</span><br><span class="line">                &#125;,</span><br><span class="line">                e = <span class="keyword">new</span> KJUR.asn1.DERSequence(t);</span><br><span class="line">            t = &#123;</span><br><span class="line">                <span class="attr">array</span>: [<span class="keyword">new</span> KJUR.asn1.DERInteger(&#123;</span><br><span class="line">                    <span class="attr">bigint</span>: <span class="built_in">this</span>.n</span><br><span class="line">                &#125;), <span class="keyword">new</span> KJUR.asn1.DERInteger(&#123;</span><br><span class="line">                    <span class="string">&quot;int&quot;</span>: <span class="built_in">this</span>.e</span><br><span class="line">                &#125;)]</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="keyword">new</span> KJUR.asn1.DERSequence(t);</span><br><span class="line">            t = &#123;</span><br><span class="line">                <span class="attr">hex</span>: <span class="string">&quot;00&quot;</span> + i.getEncodedHex()</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">var</span> r = <span class="keyword">new</span> KJUR.asn1.DERBitString(t);</span><br><span class="line">            t = &#123;</span><br><span class="line">                <span class="attr">array</span>: [e, r]</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">var</span> s = <span class="keyword">new</span> KJUR.asn1.DERSequence(t);</span><br><span class="line">            <span class="keyword">return</span> s.getEncodedHex()</span><br><span class="line">        &#125;,</span><br><span class="line">        ue.prototype.getPublicBaseKeyB64 = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> be(<span class="built_in">this</span>.getPublicBaseKey())</span><br><span class="line">        &#125;,</span><br><span class="line">        ue.prototype.wordwrap = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (e = e || <span class="number">64</span>, !t)</span><br><span class="line">                <span class="keyword">return</span> t;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="string">&quot;(.&#123;1,&quot;</span> + e + <span class="string">&quot;&#125;)( +|$\n?)|(.&#123;1,&quot;</span> + e + <span class="string">&quot;&#125;)&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> t.match(<span class="built_in">RegExp</span>(i, <span class="string">&quot;g&quot;</span>)).join(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        ue.prototype.getPrivateKey = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="string">&quot;-----BEGIN RSA PRIVATE KEY-----\n&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> t += <span class="built_in">this</span>.wordwrap(<span class="built_in">this</span>.getPrivateBaseKeyB64()) + <span class="string">&quot;\n&quot;</span>,</span><br><span class="line">                t += <span class="string">&quot;-----END RSA PRIVATE KEY-----&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        ue.prototype.getPublicKey = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="string">&quot;-----BEGIN PUBLIC KEY-----\n&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> t += <span class="built_in">this</span>.wordwrap(<span class="built_in">this</span>.getPublicBaseKeyB64()) + <span class="string">&quot;\n&quot;</span>,</span><br><span class="line">                t += <span class="string">&quot;-----END PUBLIC KEY-----&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        ue.prototype.hasPublicKeyProperty = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> t = t || &#123;&#125;,</span><br><span class="line">                t.hasOwnProperty(<span class="string">&quot;n&quot;</span>) &amp;&amp; t.hasOwnProperty(<span class="string">&quot;e&quot;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        ue.prototype.hasPrivateKeyProperty = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> t = t || &#123;&#125;,</span><br><span class="line">                t.hasOwnProperty(<span class="string">&quot;n&quot;</span>) &amp;&amp; t.hasOwnProperty(<span class="string">&quot;e&quot;</span>) &amp;&amp; t.hasOwnProperty(<span class="string">&quot;d&quot;</span>) &amp;&amp; t.hasOwnProperty(<span class="string">&quot;p&quot;</span>) &amp;&amp; t.hasOwnProperty(<span class="string">&quot;q&quot;</span>) &amp;&amp; t.hasOwnProperty(<span class="string">&quot;dmp1&quot;</span>) &amp;&amp; t.hasOwnProperty(<span class="string">&quot;dmq1&quot;</span>) &amp;&amp; t.hasOwnProperty(<span class="string">&quot;coeff&quot;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        ue.prototype.parsePropertiesFrom = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.n = t.n,</span><br><span class="line">                <span class="built_in">this</span>.e = t.e,</span><br><span class="line">                t.hasOwnProperty(<span class="string">&quot;d&quot;</span>) &amp;&amp; (<span class="built_in">this</span>.d = t.d,</span><br><span class="line">                    <span class="built_in">this</span>.p = t.p,</span><br><span class="line">                    <span class="built_in">this</span>.q = t.q,</span><br><span class="line">                    <span class="built_in">this</span>.dmp1 = t.dmp1,</span><br><span class="line">                    <span class="built_in">this</span>.dmq1 = t.dmq1,</span><br><span class="line">                    <span class="built_in">this</span>.coeff = t.coeff)</span><br><span class="line">        &#125;;</span><br><span class="line">    <span class="keyword">var</span> _e = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">        ue.call(<span class="built_in">this</span>),</span><br><span class="line">            t &amp;&amp; (<span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t ? <span class="built_in">this</span>.parseKey(t) : (<span class="built_in">this</span>.hasPrivateKeyProperty(t) || <span class="built_in">this</span>.hasPublicKeyProperty(t)) &amp;&amp; <span class="built_in">this</span>.parsePropertiesFrom(t))</span><br><span class="line">    &#125;;</span><br><span class="line">    _e.prototype = <span class="keyword">new</span> ue,</span><br><span class="line">        _e.prototype.constructor = _e;</span><br><span class="line">    <span class="keyword">var</span> ze = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">        t = t || &#123;&#125;,</span><br><span class="line">            <span class="built_in">this</span>.default_key_size = <span class="built_in">parseInt</span>(t.default_key_size) || <span class="number">1024</span>,</span><br><span class="line">            <span class="built_in">this</span>.default_public_exponent = t.default_public_exponent || <span class="string">&quot;010001&quot;</span>,</span><br><span class="line">            <span class="built_in">this</span>.log = t.log || !<span class="number">1</span>,</span><br><span class="line">            <span class="built_in">this</span>.key = <span class="literal">null</span></span><br><span class="line">    &#125;;</span><br><span class="line">    ze.prototype.setKey = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.log &amp;&amp; <span class="built_in">this</span>.key &amp;&amp; <span class="built_in">console</span>.warn(<span class="string">&quot;A key was already set, overriding existing.&quot;</span>),</span><br><span class="line">                <span class="built_in">this</span>.key = <span class="keyword">new</span> _e(t)</span><br><span class="line">        &#125;,</span><br><span class="line">        ze.prototype.setPrivateKey = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.setKey(t)</span><br><span class="line">        &#125;,</span><br><span class="line">        ze.prototype.setPublicKey = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.setKey(t)</span><br><span class="line">        &#125;,</span><br><span class="line">        ze.prototype.decrypt = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span>.getKey().decrypt(Te(t))</span><br><span class="line">            &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        ze.prototype.encrypt = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> be(<span class="built_in">this</span>.getKey().encrypt(t))</span><br><span class="line">            &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        ze.prototype.getKey = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">this</span>.key) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.key = <span class="keyword">new</span> _e,</span><br><span class="line">                    t &amp;&amp; <span class="string">&quot;[object Function]&quot;</span> === &#123;&#125;.toString.call(t))</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">void</span> <span class="built_in">this</span>.key.generateAsync(<span class="built_in">this</span>.default_key_size, <span class="built_in">this</span>.default_public_exponent, t);</span><br><span class="line">                <span class="built_in">this</span>.key.generate(<span class="built_in">this</span>.default_key_size, <span class="built_in">this</span>.default_public_exponent)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.key</span><br><span class="line">        &#125;,</span><br><span class="line">        ze.prototype.getPrivateKey = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.getKey().getPrivateKey()</span><br><span class="line">        &#125;,</span><br><span class="line">        ze.prototype.getPrivateKeyB64 = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.getKey().getPrivateBaseKeyB64()</span><br><span class="line">        &#125;,</span><br><span class="line">        ze.prototype.getPublicKey = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.getKey().getPublicKey()</span><br><span class="line">        &#125;,</span><br><span class="line">        ze.prototype.getPublicKeyB64 = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.getKey().getPublicBaseKeyB64()</span><br><span class="line">        &#125;,</span><br><span class="line">        ze.version = <span class="string">&quot;2.3.1&quot;</span>,</span><br><span class="line">        t.JSEncrypt = ze</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 对代码的加密操作</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPwd</span>(<span class="params">pwd</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e = <span class="keyword">new</span> JSEncrypt();  <span class="comment">// 对象的实例化</span></span><br><span class="line">    <span class="comment">// 实际的公钥需要解析login页面，以下数据只用于本次测试</span></span><br><span class="line">    <span class="keyword">var</span> key = <span class="string">&quot;MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCjfeE0MIYsZes/HwV06/kvRw34Hmhn9WPt0feLPp1PVqdqZz1/xFvPPEAJ/lAvfqt5kyn+A06bvYXIhizTjlOzPgLE4897ihuSYXgfwcUshPZvydRLbftU6Exj5SLbv5tw4GInbgQv7RWLWOKyQA81q6lWae2Kcgd1XpDRsQNXVwIDAQAB&quot;</span>;</span><br><span class="line">    e.setPublicKey(key);</span><br><span class="line">    <span class="keyword">var</span> p = e.encrypt(pwd);</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/a6bBtsqp1zGxljk.png"                      alt="图片.png"                ></p><p>下面我们就结合Python来综合实现下，上面用的是测试数据，我们可以用Python的`requests库然后结合一些提取库来拿到key值，然后完成一个连贯的构建加密后代码的动作:</p><p>代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">@Description :</span></span><br><span class="line"><span class="string">@File        : Perfect_world</span></span><br><span class="line"><span class="string">@Project     : test</span></span><br><span class="line"><span class="string">@Time        : 2022/3/30 17:26</span></span><br><span class="line"><span class="string">@Author      : LiHouJian</span></span><br><span class="line"><span class="string">@Software    : PyCharm</span></span><br><span class="line"><span class="string">@issue       :</span></span><br><span class="line"><span class="string">@change      :</span></span><br><span class="line"><span class="string">@reason      :</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> execjs</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拿到key值</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:98.0) Gecko/20100101 Firefox/98.0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">url = <span class="string">&#x27;https://passport.wanmei.com/sso/login?service=passport&amp;isiframe=1&amp;location=2f736166652f&#x27;</span></span><br><span class="line">res = requests.get(url, headers=headers).text</span><br><span class="line"><span class="comment"># tree = etree.HTML(res)</span></span><br><span class="line"><span class="comment"># value = tree.xpath(&quot;&quot;)</span></span><br><span class="line">key = re.search(<span class="string">&#x27;&lt;input id=&quot;e&quot; type=&quot;hidden&quot; value=&quot;(.*?)&quot; /&gt;&#x27;</span>, res, re.DOTALL).group(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">node = execjs.get()</span><br><span class="line"><span class="comment"># ctx.call(&quot;getPwd&quot;, &#x27;123456&#x27;, key)</span></span><br><span class="line">ctx = node.<span class="built_in">compile</span>(<span class="built_in">open</span>(<span class="string">&#x27;./Perfect_world.js&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>).read())</span><br><span class="line">funcName = <span class="string">&#x27;getPwd(&quot;&#123;0&#125;&quot;, &quot;&#123;1&#125;&quot;)&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;123456&#x27;</span>, key)</span><br><span class="line">pwd = ctx.<span class="built_in">eval</span>(funcName)</span><br><span class="line"><span class="built_in">print</span>(pwd)</span><br></pre></td></tr></table></figure><p>关于补环境，这里做个记录，看到别人写的一个博客:</p><p><a class="link"   href="https://www.cnblogs.com/huchong/p/11044238.html" >https://www.cnblogs.com/huchong/p/11044238.html<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;url: &lt;a class=&quot;link&quot;   href=&quot;https://passport.wanmei.com/login?location=L3NhZmUv&quot; &gt;https://passport.wanmei.com/login?location=L3NhZmUv&lt;i </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>空中网逆向分析</title>
    <link href="http://example.com/2022/03/30/%E7%A9%BA%E4%B8%AD%E7%BD%91%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2022/03/30/%E7%A9%BA%E4%B8%AD%E7%BD%91%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/</id>
    <published>2022-03-29T17:20:52.000Z</published>
    <updated>2022-03-30T03:33:20.705Z</updated>
    
    <content type="html"><![CDATA[<p>url: <a class="link"   href="https://passport.kongzhong.com/" >https://passport.kongzhong.com/<i class="fas fa-external-link-alt"></i></a></p><p>分析:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/AxDOSN3UTp1iv4u.png"                      alt="image.png"                ></p><p>如上图所示，输入用户名和密码之后会看到对登录时对密码的一个加密，咋一看不是16位的也不是32位的</p><p>我们先搜索下，搜password关键字:</p><p>搜索结果如下，搜索结果很多，但可以看到有一条搜索结果是很可疑的:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/aUi4o13kt5NufgD.png"                      alt="image.png"                ></p><p>根据经验来说，这个部分的代码很可能经过加密，不然代码是不会写成这样的，那么加密的代码怎么还原呢，我们有两种选择:</p><ul><li>选择在线解密网站</li><li>打开浏览器自带的解密工具</li></ul><p>在线的解密网站不是很全面，但不排除会有很好的解密站点，但这个案例我们使用第二种，打开浏览器自带的解密工具，下面我们来说说打开的步骤:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/sMBftOYA2kzWrx7.png"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/XB2nqeKIuxPidcG.png"                      alt="image.png"                ></p><p>然后我们再回到刚刚的搜索页面，点击刷新按钮，就会发现代码被还原了:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/lb9Mtc1jTVCxYBg.png"                      alt="image.png"                ></p><p>我们注意到，被还原之后的文件名前面多个了个<code>VM</code>字样</p><p>我们再次点进去搜索后会发现有4个带有<code>password</code>字样的语句，其中有两个是带有<code>encrypt</code>字样的，我们就在这两个带有<code>encrypt</code>的代码处打上断点，然后观察:</p><p>点击登录后断点断到了第97行，我们发现encryp函数返回的就是加密后的密码，所以我们只需要抽离出这个函数即可，我们来看看这个函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params">pwd, data[<span class="string">&quot;dc&quot;</span>]</span>)</span></span><br></pre></td></tr></table></figure><ul><li>pwd: 经过调试之后我们会发现pwd就是我们输入的密码明文</li><li>data[“dc”]: 这好像是个密钥，这里先留着</li></ul><p>搞清楚参数之后我们就要进入<code>encrypt</code>函数看看函数的具体定义了:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/gKnDMSk8uR5W2E3.png"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/EDP68awf5Ctr47B.png"                      alt="image.png"                ></p><p>再接着滑到顶部，我们会发现这是一个对象，然后对象里面定义了个函数，我们就直接把这个对象给抠出来:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> KZLoginHandler = &#123;</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;kongzhong-login-agent&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;loginServer&#x27;</span>: <span class="string">&#x27;http://sso.kongzhong.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;service&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;targetService&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;j_data&#x27;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&#x27;f_call_back&#x27;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&#x27;timestamp&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;completed&#x27;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&#x27;renew&#x27;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&#x27;init&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.j_data = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">this</span>.f_call_back = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">this</span>.timestamp = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.completed = <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;check&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">call_back</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.init();</span><br><span class="line">        <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">        <span class="keyword">var</span> param = <span class="string">&quot;jsonp=j&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.service != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.service) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.service)</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.targetService) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">            param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;exec_login&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">param</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.completed == <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.j_data[<span class="string">&quot;state&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> data = &#123;&#125;;</span><br><span class="line">            data[<span class="string">&quot;user&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;user&quot;</span>];</span><br><span class="line">            data[<span class="string">&quot;service&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;service&quot;</span>];</span><br><span class="line">            data[<span class="string">&quot;logged&quot;</span>] = <span class="literal">true</span>;</span><br><span class="line">            data[<span class="string">&quot;dc&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;dc&quot;</span>];</span><br><span class="line">            <span class="built_in">this</span>.f_call_back(data);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> url = <span class="built_in">this</span>.loginServer + <span class="string">&quot;/ajaxLogin&quot;</span>;</span><br><span class="line">        jQuery.ajax(&#123;</span><br><span class="line">            <span class="attr">async</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">url</span>: url,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">            <span class="attr">dataType</span>: <span class="string">&#x27;jsonp&#x27;</span>,</span><br><span class="line">            <span class="attr">jsonp</span>: <span class="string">&#x27;j&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: param,</span><br><span class="line">            <span class="attr">jsonpCallback</span>: <span class="string">&quot;j&quot;</span>,</span><br><span class="line">            <span class="attr">timeout</span>: <span class="number">5000</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">json</span>) </span>&#123;&#125;,</span><br><span class="line">            <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>&#123;&#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;jsonpCallbackKongZ&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">vData</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.j_data = vData;</span><br><span class="line">        <span class="built_in">this</span>.timestamp = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.f_call_back != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> data = &#123;&#125;;</span><br><span class="line">            <span class="keyword">if</span> (vData[<span class="string">&quot;state&quot;</span>] == <span class="string">&quot;0&quot;</span>) &#123;</span><br><span class="line">                data[<span class="string">&quot;service&quot;</span>] = vData[<span class="string">&quot;service&quot;</span>];</span><br><span class="line">                data[<span class="string">&quot;logged&quot;</span>] = <span class="literal">false</span>;</span><br><span class="line">                data[<span class="string">&quot;errors&quot;</span>] = vData[<span class="string">&quot;kzmsg&quot;</span>];</span><br><span class="line">                <span class="keyword">if</span> (vData[<span class="string">&quot;requirevcode&quot;</span>] != <span class="literal">null</span> &amp;&amp; vData[<span class="string">&quot;requirevcode&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                    data[<span class="string">&quot;requirevcode&quot;</span>] = <span class="literal">true</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    data[<span class="string">&quot;requirevcode&quot;</span>] = <span class="literal">false</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (vData[<span class="string">&quot;state&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                data[<span class="string">&quot;user&quot;</span>] = vData[<span class="string">&quot;user&quot;</span>];</span><br><span class="line">                data[<span class="string">&quot;service&quot;</span>] = vData[<span class="string">&quot;service&quot;</span>];</span><br><span class="line">                data[<span class="string">&quot;logged&quot;</span>] = <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;data[<span class="string">&quot;dc&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;dc&quot;</span>];</span><br><span class="line">            <span class="built_in">this</span>.f_call_back(data)</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="built_in">this</span>.completed = <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;login&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">user, pwd, to_save, vcode, call_back</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tempTime = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>()) - <span class="built_in">this</span>.timestamp;</span><br><span class="line">        <span class="keyword">if</span> ((tempTime / <span class="number">1000</span>) &gt;= <span class="number">180</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.j_data = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data == <span class="literal">null</span> || <span class="built_in">this</span>.j_data == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.check(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">                <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;type=1&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.service != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.service) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.service)</span><br><span class="line">                &#125;</span><br><span class="line">                ;param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">                param += <span class="string">&quot;&amp;password=&quot;</span> + <span class="built_in">this</span>.encrypt(pwd, data[<span class="string">&quot;dc&quot;</span>]);</span><br><span class="line">                param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">                <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.targetService) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">            <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;type=1&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.service != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.service) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.service)</span><br><span class="line">            &#125;</span><br><span class="line">            ;param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">            param += <span class="string">&quot;&amp;password=&quot;</span> + <span class="built_in">this</span>.encrypt(pwd, <span class="built_in">this</span>.j_data[<span class="string">&quot;dc&quot;</span>]);</span><br><span class="line">            param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">            <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.targetService) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;login_sms&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">user, smscode, to_save, vcode, call_back</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tempTime = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>()) - <span class="built_in">this</span>.timestamp;</span><br><span class="line">        <span class="keyword">if</span> ((tempTime / <span class="number">1000</span>) &gt;= <span class="number">180</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.j_data = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data == <span class="literal">null</span> || <span class="built_in">this</span>.j_data == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.check(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">                <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;type=2&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">                param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">                param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">                param += <span class="string">&quot;&amp;smscode=&quot;</span> + smscode;</span><br><span class="line">                <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span>) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">            <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;type=2&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">            param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">            param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">            param += <span class="string">&quot;&amp;smscode=&quot;</span> + smscode;</span><br><span class="line">            <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span>) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;login_reg&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">user, pwd, to_save, call_back</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tempTime = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>()) - <span class="built_in">this</span>.timestamp;</span><br><span class="line">        <span class="keyword">if</span> ((tempTime / <span class="number">1000</span>) &gt;= <span class="number">180</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.j_data = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data == <span class="literal">null</span> || <span class="built_in">this</span>.j_data == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.check(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">                <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;type=101&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">                param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">                param += <span class="string">&quot;&amp;password=&quot;</span> + pwd;</span><br><span class="line">                <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">            <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;type=101&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">            param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">            param += <span class="string">&quot;&amp;password=&quot;</span> + pwd;</span><br><span class="line">            <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;encrypt&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">str, pwd</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (pwd == <span class="literal">null</span> || pwd.length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> prand = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pwd.length; i++) &#123;</span><br><span class="line">            prand += pwd.charCodeAt(i).toString()</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> sPos = <span class="built_in">Math</span>.floor(prand.length / <span class="number">5</span>);</span><br><span class="line">        <span class="keyword">var</span> mult = <span class="built_in">parseInt</span>(prand.charAt(sPos) + prand.charAt(sPos * <span class="number">2</span>) + prand.charAt(sPos * <span class="number">3</span>) + prand.charAt(sPos * <span class="number">4</span>) + prand.charAt(sPos * <span class="number">5</span>));</span><br><span class="line">        <span class="keyword">var</span> incr = <span class="built_in">Math</span>.ceil(pwd.length / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> modu = <span class="built_in">Math</span>.pow(<span class="number">2</span>, <span class="number">31</span>) - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (mult &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> salt = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * <span class="number">1000000000</span>) % <span class="number">100000000</span>;</span><br><span class="line">        prand += salt;</span><br><span class="line">        <span class="keyword">while</span> (prand.length &gt; <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> a = prand.substring(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">var</span> b = prand.substring(<span class="number">10</span>, prand.length);</span><br><span class="line">            <span class="keyword">if</span> (b.length &gt; <span class="number">10</span>) &#123;</span><br><span class="line">                prand = b</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                prand = (<span class="built_in">parseInt</span>(a) + <span class="built_in">parseInt</span>(b)).toString()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ;prand = (mult * prand + incr) % modu;</span><br><span class="line">        <span class="keyword">var</span> enc_chr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> enc_str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">            enc_chr = <span class="built_in">parseInt</span>(str.charCodeAt(i) ^ <span class="built_in">Math</span>.floor((prand / modu) * <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">if</span> (enc_chr &lt; <span class="number">16</span>) &#123;</span><br><span class="line">                enc_str += <span class="string">&quot;0&quot;</span> + enc_chr.toString(<span class="number">16</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">                enc_str += enc_chr.toString(<span class="number">16</span>);</span><br><span class="line">            prand = (mult * prand + incr) % modu</span><br><span class="line">        &#125;</span><br><span class="line">        ;salt = salt.toString(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">while</span> (salt.length &lt; <span class="number">8</span>)</span><br><span class="line">            salt = <span class="string">&quot;0&quot;</span> + salt;</span><br><span class="line">        enc_str += salt;</span><br><span class="line">        <span class="keyword">return</span> enc_str</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>然后再进行调用, 我们可以自己写个函数:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPwd</span>(<span class="params">p</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> dc = <span class="string">&#x27;993623221C8865DE42216D7EB9630527&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> KZLoginHandler.encrypt(p, dc)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是这里还有个未知的是<code>data[&quot;dc&quot;]</code>，我们可以在加密的哪个文件中搜索下是否有data这个列表啥的，发现是没有的，也没有看出什么端倪；然后我们再全局搜索下<code>data[&quot;dc&quot;]</code>发现一个也没有，这时候根据经验，我们可以猜测，应该是在登录包前还有个包是提供参数的，我们可以在登录包前面一个个去看看，果然是这样的:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/5HOB1vPie3SIDfr.png"                      alt="image.png"                ></p><p>到这里也就分析结束了，我们来看看构造结果:</p><p>首先放一个完整的代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> KZLoginHandler = &#123;</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>: <span class="string">&#x27;kongzhong-login-agent&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;loginServer&#x27;</span>: <span class="string">&#x27;http://sso.kongzhong.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;service&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;targetService&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;j_data&#x27;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&#x27;f_call_back&#x27;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&#x27;timestamp&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;completed&#x27;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&#x27;renew&#x27;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&#x27;init&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.j_data = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">this</span>.f_call_back = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">this</span>.timestamp = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.completed = <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;check&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">call_back</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.init();</span><br><span class="line">        <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">        <span class="keyword">var</span> param = <span class="string">&quot;jsonp=j&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.service != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.service) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.service)</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.targetService) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">            param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;exec_login&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">param</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.completed == <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data != <span class="literal">null</span> &amp;&amp; <span class="built_in">this</span>.j_data[<span class="string">&quot;state&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> data = &#123;&#125;;</span><br><span class="line">            data[<span class="string">&quot;user&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;user&quot;</span>];</span><br><span class="line">            data[<span class="string">&quot;service&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;service&quot;</span>];</span><br><span class="line">            data[<span class="string">&quot;logged&quot;</span>] = <span class="literal">true</span>;</span><br><span class="line">            data[<span class="string">&quot;dc&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;dc&quot;</span>];</span><br><span class="line">            <span class="built_in">this</span>.f_call_back(data);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> url = <span class="built_in">this</span>.loginServer + <span class="string">&quot;/ajaxLogin&quot;</span>;</span><br><span class="line">        jQuery.ajax(&#123;</span><br><span class="line">            <span class="attr">async</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">url</span>: url,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">            <span class="attr">dataType</span>: <span class="string">&#x27;jsonp&#x27;</span>,</span><br><span class="line">            <span class="attr">jsonp</span>: <span class="string">&#x27;j&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: param,</span><br><span class="line">            <span class="attr">jsonpCallback</span>: <span class="string">&quot;j&quot;</span>,</span><br><span class="line">            <span class="attr">timeout</span>: <span class="number">5000</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">json</span>) </span>&#123;&#125;,</span><br><span class="line">            <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>&#123;&#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;jsonpCallbackKongZ&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">vData</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.j_data = vData;</span><br><span class="line">        <span class="built_in">this</span>.timestamp = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.f_call_back != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> data = &#123;&#125;;</span><br><span class="line">            <span class="keyword">if</span> (vData[<span class="string">&quot;state&quot;</span>] == <span class="string">&quot;0&quot;</span>) &#123;</span><br><span class="line">                data[<span class="string">&quot;service&quot;</span>] = vData[<span class="string">&quot;service&quot;</span>];</span><br><span class="line">                data[<span class="string">&quot;logged&quot;</span>] = <span class="literal">false</span>;</span><br><span class="line">                data[<span class="string">&quot;errors&quot;</span>] = vData[<span class="string">&quot;kzmsg&quot;</span>];</span><br><span class="line">                <span class="keyword">if</span> (vData[<span class="string">&quot;requirevcode&quot;</span>] != <span class="literal">null</span> &amp;&amp; vData[<span class="string">&quot;requirevcode&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                    data[<span class="string">&quot;requirevcode&quot;</span>] = <span class="literal">true</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    data[<span class="string">&quot;requirevcode&quot;</span>] = <span class="literal">false</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (vData[<span class="string">&quot;state&quot;</span>] == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">                data[<span class="string">&quot;user&quot;</span>] = vData[<span class="string">&quot;user&quot;</span>];</span><br><span class="line">                data[<span class="string">&quot;service&quot;</span>] = vData[<span class="string">&quot;service&quot;</span>];</span><br><span class="line">                data[<span class="string">&quot;logged&quot;</span>] = <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;data[<span class="string">&quot;dc&quot;</span>] = <span class="built_in">this</span>.j_data[<span class="string">&quot;dc&quot;</span>];</span><br><span class="line">            <span class="built_in">this</span>.f_call_back(data)</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="built_in">this</span>.completed = <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;login&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">user, pwd, to_save, vcode, call_back</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tempTime = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>()) - <span class="built_in">this</span>.timestamp;</span><br><span class="line">        <span class="keyword">if</span> ((tempTime / <span class="number">1000</span>) &gt;= <span class="number">180</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.j_data = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data == <span class="literal">null</span> || <span class="built_in">this</span>.j_data == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.check(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">                <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;type=1&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.service != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.service) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.service)</span><br><span class="line">                &#125;</span><br><span class="line">                ;param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">                param += <span class="string">&quot;&amp;password=&quot;</span> + <span class="built_in">this</span>.encrypt(pwd, data[<span class="string">&quot;dc&quot;</span>]);</span><br><span class="line">                param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">                <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.targetService) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">            <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;type=1&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.service != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.service) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.service)</span><br><span class="line">            &#125;</span><br><span class="line">            ;param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">            param += <span class="string">&quot;&amp;password=&quot;</span> + <span class="built_in">this</span>.encrypt(pwd, <span class="built_in">this</span>.j_data[<span class="string">&quot;dc&quot;</span>]);</span><br><span class="line">            param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">            <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span> &amp;&amp; jQuery.trim(<span class="built_in">this</span>.targetService) != <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;login_sms&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">user, smscode, to_save, vcode, call_back</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tempTime = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>()) - <span class="built_in">this</span>.timestamp;</span><br><span class="line">        <span class="keyword">if</span> ((tempTime / <span class="number">1000</span>) &gt;= <span class="number">180</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.j_data = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data == <span class="literal">null</span> || <span class="built_in">this</span>.j_data == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.check(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">                <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;type=2&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">                param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">                param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">                param += <span class="string">&quot;&amp;smscode=&quot;</span> + smscode;</span><br><span class="line">                <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span>) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">            <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;type=2&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">            param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">            param += <span class="string">&quot;&amp;vcode=&quot;</span> + vcode;</span><br><span class="line">            param += <span class="string">&quot;&amp;smscode=&quot;</span> + smscode;</span><br><span class="line">            <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.targetService != <span class="literal">null</span>) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;targetService=&quot;</span> + <span class="built_in">decodeURIComponent</span>(<span class="built_in">this</span>.targetService)</span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;login_reg&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">user, pwd, to_save, call_back</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tempTime = <span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>()) - <span class="built_in">this</span>.timestamp;</span><br><span class="line">        <span class="keyword">if</span> ((tempTime / <span class="number">1000</span>) &gt;= <span class="number">180</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.j_data = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">if</span> (<span class="built_in">this</span>.j_data == <span class="literal">null</span> || <span class="built_in">this</span>.j_data == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.check(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">                <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;type=101&quot;</span>;</span><br><span class="line">                param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">                param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">                param += <span class="string">&quot;&amp;password=&quot;</span> + pwd;</span><br><span class="line">                <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                    param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">                ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.f_call_back = call_back;</span><br><span class="line">            <span class="keyword">var</span> param = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;type=101&quot;</span>;</span><br><span class="line">            param += <span class="string">&quot;&amp;service=&quot;</span> + <span class="built_in">this</span>.service;</span><br><span class="line">            param += <span class="string">&quot;&amp;username=&quot;</span> + user;</span><br><span class="line">            param += <span class="string">&quot;&amp;password=&quot;</span> + pwd;</span><br><span class="line">            <span class="keyword">if</span> (to_save) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=1&quot;</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;toSave=0&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="keyword">if</span> (<span class="built_in">this</span>.renew) &#123;</span><br><span class="line">                param += <span class="string">&quot;&amp;renew=1&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">            ;<span class="built_in">this</span>.exec_login(param)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;encrypt&#x27;</span>: <span class="function"><span class="keyword">function</span>(<span class="params">str, pwd</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (pwd == <span class="literal">null</span> || pwd.length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> prand = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; pwd.length; i++) &#123;</span><br><span class="line">            prand += pwd.charCodeAt(i).toString()</span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> sPos = <span class="built_in">Math</span>.floor(prand.length / <span class="number">5</span>);</span><br><span class="line">        <span class="keyword">var</span> mult = <span class="built_in">parseInt</span>(prand.charAt(sPos) + prand.charAt(sPos * <span class="number">2</span>) + prand.charAt(sPos * <span class="number">3</span>) + prand.charAt(sPos * <span class="number">4</span>) + prand.charAt(sPos * <span class="number">5</span>));</span><br><span class="line">        <span class="keyword">var</span> incr = <span class="built_in">Math</span>.ceil(pwd.length / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> modu = <span class="built_in">Math</span>.pow(<span class="number">2</span>, <span class="number">31</span>) - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (mult &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line">        ;<span class="keyword">var</span> salt = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * <span class="number">1000000000</span>) % <span class="number">100000000</span>;</span><br><span class="line">        prand += salt;</span><br><span class="line">        <span class="keyword">while</span> (prand.length &gt; <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> a = prand.substring(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">var</span> b = prand.substring(<span class="number">10</span>, prand.length);</span><br><span class="line">            <span class="keyword">if</span> (b.length &gt; <span class="number">10</span>) &#123;</span><br><span class="line">                prand = b</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                prand = (<span class="built_in">parseInt</span>(a) + <span class="built_in">parseInt</span>(b)).toString()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ;prand = (mult * prand + incr) % modu;</span><br><span class="line">        <span class="keyword">var</span> enc_chr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> enc_str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">            enc_chr = <span class="built_in">parseInt</span>(str.charCodeAt(i) ^ <span class="built_in">Math</span>.floor((prand / modu) * <span class="number">255</span>));</span><br><span class="line">            <span class="keyword">if</span> (enc_chr &lt; <span class="number">16</span>) &#123;</span><br><span class="line">                enc_str += <span class="string">&quot;0&quot;</span> + enc_chr.toString(<span class="number">16</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">                enc_str += enc_chr.toString(<span class="number">16</span>);</span><br><span class="line">            prand = (mult * prand + incr) % modu</span><br><span class="line">        &#125;</span><br><span class="line">        ;salt = salt.toString(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">while</span> (salt.length &lt; <span class="number">8</span>)</span><br><span class="line">            salt = <span class="string">&quot;0&quot;</span> + salt;</span><br><span class="line">        enc_str += salt;</span><br><span class="line">        <span class="keyword">return</span> enc_str</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPwd</span>(<span class="params">p</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> dc = <span class="string">&#x27;993623221C8865DE42216D7EB9630527&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> KZLoginHandler.encrypt(p, dc)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/30/u6igftBl3sYOowA.png"                      alt="image.png"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;url: &lt;a class=&quot;link&quot;   href=&quot;https://passport.kongzhong.com/&quot; &gt;https://passport.kongzhong.com/&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Node笔记</title>
    <link href="http://example.com/2022/03/23/Node%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2022/03/23/Node%E7%AC%94%E8%AE%B0/</id>
    <published>2022-03-23T09:51:30.000Z</published>
    <updated>2022-03-30T03:39:34.945Z</updated>
    
    <content type="html"><![CDATA[<h4 id="初识Node，什么是Node-js"><a href="#初识Node，什么是Node-js" class="headerlink" title="初识Node，什么是Node.js"></a>初识Node，什么是Node.js</h4><p>Node.js是一个基于<strong>ChromeV8引擎</strong>的<strong>JavaScript运行环境</strong></p><p>剖析Node.js，下面给上一个图:</p><p><a href="https://imgtu.com/i/q1jIht"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/23/q1jIht.png"                      alt="q1jIht.png"                ></a></p><p>浏览器是JavaScript的前端运行环境</p><p>Node.js是JavaScript的后端运行环境</p><p>Node.js中无法调用DOM、BOM和Ajax等浏览器内置的API</p><h4 id="Node-js能做什么"><a href="#Node-js能做什么" class="headerlink" title="Node.js能做什么"></a>Node.js能做什么</h4><p>Node.js作为一个JavaScript的运行环境，仅仅提供了基础的功能和API，然而，基于Node.js提供的这些基础功能，很多强大的工具和框架如雨后春笋，层出不穷，所以学会了Node.js，可以让前端程序员胜任更多的工作和岗位</p><ul><li>基于Express框架(<a class="link"   href="http://www.expressjs.com.cn/)%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BAweb%E5%BA%94%E7%94%A8" >http://www.expressjs.com.cn/)，可以快速构建web应用<i class="fas fa-external-link-alt"></i></a></li><li>基于Electron框架(<a class="link"   href="https://electronjs.org/)%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%9E%84%E5%BB%BA%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8" >https://electronjs.org/)，可以构建跨平台的桌面应用<i class="fas fa-external-link-alt"></i></a></li><li>基于restify框架(<a class="link"   href="http://restify.com/)%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BAAPI%E6%8E%A5%E5%8F%A3%E9%A1%B9%E7%9B%AE" >http://restify.com/)，可以快速构建API接口项目<i class="fas fa-external-link-alt"></i></a></li><li>读写和操作数据库，创建实用的命令行工具辅助前端开发，等等等等</li></ul><h4 id="如何学Node-js"><a href="#如何学Node-js" class="headerlink" title="如何学Node.js"></a>如何学Node.js</h4><p>首先需要有一定的JavaScript基础，然后先学习Node.js内置API模块(fs、path、http等)，然后再学习第三方模块(express、mysql等)</p><h4 id="Node-js的安装"><a href="#Node-js的安装" class="headerlink" title="Node.js的安装"></a>Node.js的安装</h4><p>官网安装: <a class="link"   href="https://nodejs.org/en/%EF%BC%8C%E7%84%B6%E5%90%8E%E5%8F%8C%E5%87%BB%E7%9B%B4%E6%8E%A5%E5%AE%89%E8%A3%85%E5%8D%B3%E5%8F%AF" >https://nodejs.org/en/，然后双击直接安装即可<i class="fas fa-external-link-alt"></i></a></p><p>之后使用<code>node -v</code>来检测node.js是否安装成功</p><h4 id="Node-js的运行"><a href="#Node-js的运行" class="headerlink" title="Node.js的运行"></a>Node.js的运行</h4><ol><li>打开终端</li><li>输入node 要执行的js文件的路径</li><li>便捷方法: 按住shift键，然后右键点击在此处打开powershell窗口，或者直接在文件路径栏清空再输入pwd</li></ol><h4 id="fs-读取文件内容"><a href="#fs-读取文件内容" class="headerlink" title="fs-读取文件内容"></a>fs-读取文件内容</h4><p>fs模块是Node.js官方提供的(安装后自带)、用来操作文件的模块，它提供了一系列的方法和属性，用来满足用户对文件的操作需求，例如:</p><ul><li>fs.readFile()方法，用来读取指定文件中的内容</li><li>fs.writeFile()方法，用来向指定的文件中写入内容</li></ul><p>如果要在JavaScript代码中，使用fs模块来操作文件，则需要使用如下的方式先导入它:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)  <span class="comment">//require函数会导入fs这个模块，然后使用const定义一个常量来接收即可</span></span><br></pre></td></tr></table></figure><h5 id="fs-readFile-的语法格式"><a href="#fs-readFile-的语法格式" class="headerlink" title="fs.readFile()的语法格式"></a>fs.readFile()的语法格式</h5><p>使用fs.readFile()方法，可以读取指定文件中的内容，语法格式如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(path[, options], callback)  <span class="comment">//被中括号包裹的是可选参数，其他没有被中括号包裹的是必选参数，所以这里的必选参数是path和callback</span></span><br></pre></td></tr></table></figure><p>参数解读:</p><ul><li>path: 必选参数，字符串，表示文件的路径</li><li><code>[, options]</code>: 可选参数，表示以什么<code>编码格式</code>来读取文件</li><li>callback: 必选参数，文件读取完成后，通过回调函数拿到读取的结果</li></ul><h5 id="fs-readFile-的示例代码"><a href="#fs-readFile-的示例代码" class="headerlink" title="fs.readFile()的示例代码"></a>fs.readFile()的示例代码</h5><p>以utf8的编码格式，读取指定文件的内容，并打印err和dataStr的值:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line">fs.readFile(<span class="string">&#x27;./files/11.txt&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, dataStr</span>) </span>&#123;  <span class="comment">//err为读取失败后的结果，dataStr为读取成功后的结果，无论成功或者失败都会执行function</span></span><br><span class="line">    <span class="built_in">console</span>.log(err)  <span class="comment">// 如果读取成功，则err的值为null，如果读取失败，则err的值为错误对象，dataStr的值为undefined</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;-----&#x27;</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(dataStr)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="判断文件是否读取成功"><a href="#判断文件是否读取成功" class="headerlink" title="判断文件是否读取成功"></a>判断文件是否读取成功</h5><p>可以判断err对象是否为null，从而直知晓文件读取的结果:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line">fs.readFile(<span class="string">&#x27;./files/11.txt&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, result</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">&#x27;文件读取失败:&#x27;</span> + err.,message)  <span class="comment">//失败就打印错误的消息</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;文件读取成功，内容是:&#x27;</span> + result)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="fs-写入文件内容"><a href="#fs-写入文件内容" class="headerlink" title="fs-写入文件内容"></a>fs-写入文件内容</h4><h5 id="fs-writeFile-的语法格式"><a href="#fs-writeFile-的语法格式" class="headerlink" title="fs-writeFile()的语法格式"></a>fs-writeFile()的语法格式</h5><p>使用fs.writeFile()方法，可以向指定的文件中写入内容，语法格式如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fs.writeFile(file, data[, options], callback)</span><br></pre></td></tr></table></figure><ul><li>file: 必选参数，需要指定一个<strong>文件路径的字符串</strong>，表示文件的存放路径</li><li>data: 必选参数，表示要写入的内容</li><li>[, options]，可选参数，表示以什么格式写入文件内容，默认值是utf8</li><li>callback: 必选参数，文件写入完成后的回调函数，无论失败或成功都会被调用</li></ul><h5 id="fs-writeFile-的示例代码"><a href="#fs-writeFile-的示例代码" class="headerlink" title="fs.writeFile()的示例代码"></a>fs.writeFile()的示例代码</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line">fs.writeFile(<span class="string">&#x27;./file/2.txt&#x27;</span>, <span class="string">&quot;hello node.js&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;err&#x27;</span>)  <span class="comment">//如果文件写入成功，则err的值为null，如果文件写入失败，则err的值为一个错误对象</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="判断文件是否写入成功"><a href="#判断文件是否写入成功" class="headerlink" title="判断文件是否写入成功"></a>判断文件是否写入成功</h5><p>可以判断err对象是否为null，从而知晓文件写入的结果:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line">fs.writeFile(<span class="string">&#x27;./file/2.txt&#x27;</span>, <span class="string">&quot;hello node.js&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(err) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">&quot;文件写入失败:&quot;</span> + err.message)  <span class="comment">// 写入失败err为一个错误对象</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;文件写入成功!&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="fs-处理路径问题"><a href="#fs-处理路径问题" class="headerlink" title="fs-处理路径问题"></a>fs-处理路径问题</h4><p>在使用fs模块操作文件时，如果提供的操作路径是以<code>./</code>或<code>../</code>开头的相对路径时，很容易出现动态拼接错误的问题；</p><p>原因: 代码在运行的时候，<strong>会以执行node命令时所处的目录</strong>，动态拼接出被操作文件的完整路径</p><p>如果要解决这个问题，可以直接提供一个完整的文件存放路径就行</p><h4 id="path-使用path模块处理路径"><a href="#path-使用path模块处理路径" class="headerlink" title="path-使用path模块处理路径"></a>path-使用path模块处理路径</h4><p>path模块是Node.js官方提供的、用来处理路径的模块，它提供了一系列的方法可属性，用来满足用户对路径的处理需求</p><ul><li>path.join()方法，用来将多个路径片段拼接成一个完整的路径字符串，之前使用<code>+</code>也可以进行路径的拼接，但是用<code>+</code>毕竟不太正规</li><li>path.basename()方法，用来从路径字符串中，将文件名解析出来</li></ul><p>要使用先导入:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br></pre></td></tr></table></figure><ol><li><p>path.join()的语法格式</p><p>使用path.join()方法，可以把多个路径片段拼接为完整的路径字符串，语法格式如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path.join([...paths])</span><br></pre></td></tr></table></figure><p>参数解读:</p><ul><li>…paths: 路径片段的序列</li><li>返回值: string</li></ul></li><li><p>path.join()的代码示例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pathStr1 = path.join(<span class="string">&#x27;/a&#x27;</span>, <span class="string">&#x27;/b/c&#x27;</span>, <span class="string">&#x27;../&#x27;</span>, <span class="string">&#x27;./d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>)  <span class="comment">// 这里注意../会抵消一层路径</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pathStr2 = path.join(__dirname, <span class="string">&#x27;./files/1.txt&#x27;</span>)  <span class="comment">// 输出，当前文件所在目录\files\1.txt</span></span><br></pre></td></tr></table></figure><p>使用加号处理路径时，可能会出现一些问题，用path.jion会更好一点，比如下面就体现出加号的一些弊端:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fs.readFile(__dirname + <span class="string">&#x27;./files/1.txt&#x27;</span>...)</span><br></pre></td></tr></table></figure><p>上面在拼接路径的时候就会把<code>.</code>也给带上，这样就会得到一个错误的路径</p></li><li><p>path.basename()的语法格式</p><p>使用path.basename()方法，可以获取路径中的最后一部分，经常通过这个方法获取路径中的文件名，语法格式如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path.basename(path[, ext])</span><br></pre></td></tr></table></figure><p>参数解读:</p><ul><li>path: 必选参数，表示一个路径的字符串</li><li>ext: 可选参数，表示文件扩展名</li><li>返回一个字符串，表示路径中的最后一部分</li></ul></li><li><p>path.basename()的代码示例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fpath = <span class="string">&#x27;/a/b/c/index.html&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fullName = path.basename(fpath)</span><br><span class="line"><span class="built_in">console</span>.log(fullname) <span class="comment">// 输出inde.htl</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> namewithoutExt = path.basename(fpath, <span class="string">&#x27;.html&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(namewithoutExt)  <span class="comment">// 输出index</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="综合案例-时钟案例"><a href="#综合案例-时钟案例" class="headerlink" title="综合案例-时钟案例"></a>综合案例-时钟案例</h4><p>我们把时钟的源文件分别拆分，然后我们要以以下步骤实现:</p><ul><li>创建两个正则表达式，分别用来匹配style和script标签</li><li>使用fs模块，读取需要被处理的HTML文件</li><li>自定义resolveCSS方法，来写入index.css样式文件</li><li>自定义resolveJS方法，来写入index.js脚本文件</li><li>自定resolveHTML方法，来写入index.html文件</li></ul><p>这个案例没有演示的必要，这里就不展示了哈哈哈</p><h4 id="理解http模块的概念及作用"><a href="#理解http模块的概念及作用" class="headerlink" title="理解http模块的概念及作用"></a>理解http模块的概念及作用</h4><p>回顾: 什么是客户端，什么是服务器</p><p>在网络节点中，负责消费资源的电脑，叫做客户端；负责对外提供网络资源的电脑，叫做服务器</p><p>http模块是Node.js官方提供的、用来创建web服务器的模块，通过http模块提供的http.createServer()方法，就能方便地把一台普通的电脑，变成一台web服务器，从而对外提供Web资源服务</p><p>使用之前，要先导入:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http =  <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="进一步理解http模块的作用"><a href="#进一步理解http模块的作用" class="headerlink" title="进一步理解http模块的作用"></a>进一步理解http模块的作用</h4><p>服务器和普通电脑的区别在于，<strong>服务器上安装了web服务器软件</strong>，例如IIS、<strong>Apathe</strong>等，通过安装这些服务器软件，就能把一台普通的电脑变成一台服务器</p><p>我们可以安装一个phpStudy这样一个软件用来把本地客户端，也就是你的电脑模拟成一个服务器:</p><p><a href="https://imgtu.com/i/qGrUsS"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qGrUsS.png"                      alt="qGrUsS.png"                ></a></p><p>在Node.js中，我们不需要使用ISS(一般asp.net使用)、Apathe(一般PHP使用)等这些第三方web服务器软件，因为我们可以基于Node.js提供的http模块，通过几行简单的代码，就能轻松的手写一个服务器软件，从而对外提供Web服务</p><h4 id="服务器相关的概念"><a href="#服务器相关的概念" class="headerlink" title="服务器相关的概念"></a>服务器相关的概念</h4><ol><li><p>IP地址</p><p>IP地址就是互联网上<strong>每台计算机的唯一地址</strong>，因此IP地址具有唯一性</p><p>IP地址的格式: 通常用点分十进制表示成(a.b.c.d)的形式，其中，a，b，c，d都是0-255之间的十进制整数</p><p>注意:</p><p>互联网中的每台Web服务器，都有自己的IP地址，例如: 可以在Windows的终端中运行ping <a class="link"   href="http://www.baidu.com命令,即可查看百度服务器的ip地址/" >www.baidu.com命令，即可查看百度服务器的IP地址<i class="fas fa-external-link-alt"></i></a></p><p>在开发期间，自己的电脑既是一台服务器，也是一个客户端，为了方便测试，可以在自己的浏览器中输入<code>127.0.0.1</code>这个IP地址，就能把自己的电脑当做一台服务器进行访问了</p></li><li><p>域名和域名服务器</p><p>尽管IP地址能够唯一地标识网络上的计算机，但IP地址是一长串数字，不直观，而且不便于记忆，于是人们又发明了另一套字符型的地址方案，即所谓的域名(Domain Name)地址</p><p>IP地址和域名是一一对应的关系，这份对应关系存放在一种叫做域名服务器(DNS)，使用者只需要通过好记的域名访问对应的服务器即可，对应的转换工作由域名服务器实现，因此，域名服务器就是提供IP地址和域名之间的转换服务的服务器</p><p>注意:</p><p>在开发测试期间，127.0.0.1对应的域名是localhost，它们代表我们自己的这台电脑，在使用效果上没有任何区别</p></li><li><p>端口号</p><p>计算机中的端口号，就好像是现实生活中的门牌号一样，通过门牌号，外卖小哥可以在整栋大楼众多的房间中，准确的把外卖送到你的手中</p><p>同样的道理，在一台电脑中，可以运行成百上千个web服务，每个web服务都对应一个唯一的端口号，客户端发送过来的网络请求，通过端口，可以被准确地交给对应的web服务进行处理:</p><p><a href="https://imgtu.com/i/qGfkIU"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qGfkIU.png"                      alt="qGfkIU.png"                ></a></p><p>注意:</p><p>每个端口号不能同时被多个web服务占用，就像每个试衣间只能同时进一个人一样的</p><p>在实际开发中， URL中的<strong>80端口可以被省略</strong></p></li></ol><h4 id="创建最基本的web服务器"><a href="#创建最基本的web服务器" class="headerlink" title="创建最基本的web服务器"></a>创建最基本的web服务器</h4><ol><li><p>创建web服务器的基本步骤</p><ul><li>导入http模块</li><li>创建web服务器实例</li><li>为服务器实例绑定request事件，<strong>监听客户端的请求</strong></li><li>启动服务器</li></ul><p>步骤1: 导入http模块</p><p>如果希望在自己的电脑上创建一个web服务器，从而对外提供web服务，则需要导入http模块:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br></pre></td></tr></table></figure><p>步骤2: 创建web服务器实例</p><p>调用http.createServer()方法，即可快速创建一个web服务器实例:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> server = http.createServer()</span><br></pre></td></tr></table></figure><p>步骤3: 为服务器实例绑定request事件</p><p>为服务器实例绑定request事件，即可监听客户端发送过来的网络请求:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用服务器实例的.on()方法，为服务器绑定一个request事件</span></span><br><span class="line">server.on(<span class="string">&#x27;request&#x27;</span>, (req, res) ==&gt; &#123;</span><br><span class="line">          <span class="comment">// 只要有客户端来请求服务器，就会触发request事件，从而调用这个事件处理函数</span></span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&#x27;someone visited our web server.&#x27;</span>)</span><br><span class="line">          &#125;)</span><br></pre></td></tr></table></figure><p>步骤4: 启动服务器</p><p>调用服务器实例的.listen()方法，即可启动当前的web服务器实例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用server.listen(端口号， 回调函数)方法，即可启动web服务器</span></span><br><span class="line">server.listen(<span class="number">8080</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) =&gt; </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;http server running at http:127.0.0.1:8080&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面的步骤3: 为服务器实例绑定request事件中的req和res参数我们没提，下面我们来看看:</p><ul><li><p>req请求对象</p><p>只要服务器接收到了客户端的请求，就会触发server.on()方法中绑定的request事件处理函数request，如果想在事件处理函数中访问与客户端相关的数据或属性，我们可以使用如下方式:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server.on(<span class="string">&#x27;request&#x27;</span>, <span class="function">(<span class="params">req</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// req是请求对象，它包含了与客户端相关的属性和数据，例如:</span></span><br><span class="line">    <span class="comment">// req.url 是客户端请求的URL地址,从端口号后面开始截取</span></span><br><span class="line">    <span class="comment">// req.method 是客户端的method请求类型，比如get、post</span></span><br><span class="line">    <span class="keyword">const</span> str = <span class="string">&#x27;your request url is $&#123;req.url&#125;, and request method is $&#123;req.method&#125;&#x27;</span></span><br><span class="line">    <span class="built_in">console</span>.log(str)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>res相应对象</p><p>在服务器的request事件处理函数中，如果想访问与服务器相关的数据或属性，可以使用如下的方式:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sever.on(<span class="string">&#x27;request&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// res是响应对象，它包含了与服务器相关的数据和数学，例如:</span></span><br><span class="line">    <span class="comment">// 要发送到客户端的字符串</span></span><br><span class="line">    <span class="keyword">const</span> str = <span class="string">&#x27;your request url is $&#123;req.url&#125;, and request method is $&#123;req.method&#125;&#x27;</span></span><br><span class="line">    <span class="comment">// res.end()方法的作用:向客户端发送指定的内容，并结束这次请求的处理过程</span></span><br><span class="line">    res.end(str)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><p>如何解决中文乱码的问题</p><p>当我们调用res.end()方法，想客户端发送中文内容的时候，会出现乱码问题，此时，需要手动设置内容的编码格式:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server.on(<span class="string">&#x27;require&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//发送的内容包含中文</span></span><br><span class="line">    cosnt str = <span class="string">&quot;你好，你请求的url地址是$&#123;req.url&#125;, 请求的method类型是$&#123;req.method&#125;&quot;</span></span><br><span class="line">    <span class="comment">// 为了防止中文显示乱码的问题，需要设置响应头，//Content-Type的值为text/html; charset=utf-8</span></span><br><span class="line">    res.setHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html; charset=utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment">// 把包含中文的内容，响应给客户端</span></span><br><span class="line">    res.end(str)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h4 id="根据不同的url响应不同的html内容"><a href="#根据不同的url响应不同的html内容" class="headerlink" title="根据不同的url响应不同的html内容"></a>根据不同的url响应不同的html内容</h4><p>核心实现步骤:</p><p><a href="https://imgtu.com/i/qJSU61"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qJSU61.png"                      alt="qJSU61.png"                ></a></p><p>实现案例:</p><p><a href="https://imgtu.com/i/qJSv7T"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qJSv7T.png"                      alt="qJSv7T.png"                ></a></p><h4 id="模块的分类-amp-require的使用"><a href="#模块的分类-amp-require的使用" class="headerlink" title="模块的分类&amp;require的使用"></a>模块的分类&amp;require的使用</h4><p><a href="https://imgtu.com/i/qJprD0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qJprD0.png"                      alt="qJprD0.png"                ></a></p><p><a href="https://imgtu.com/i/qJpHUO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qJpHUO.png"                      alt="qJpHUO.png"                ></a></p><p>注意: 使用require()方法加载其他模块时，会执行被加载模块中的代码</p><h4 id="Node-js中的模块作用域"><a href="#Node-js中的模块作用域" class="headerlink" title="Node.js中的模块作用域"></a>Node.js中的模块作用域</h4><ol><li><p>什么是模块作用域</p><p><a href="https://imgtu.com/i/qJ9DRH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qJ9DRH.png"                      alt="qJ9DRH.png"                ></a></p><p><a href="https://imgtu.com/i/qJ94Jg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/24/qJ94Jg.png"                      alt="qJ94Jg.png"                ></a></p></li><li><p>模块作用域的好处</p><p>防止了全局变量的污染的问题</p><p>在windows中我们是没有模块的，只有函数的概念，比如说我们在一个html文档中导入了一个register.js和一个login.js，这两个js文件中各定义了一个username的变量，register.js和login.js导入之后，这两个变量都会被赋给全局变量window，当我们使用username这个变量就会被污染</p></li></ol><h4 id="向外共享模块作用域的成员"><a href="#向外共享模块作用域的成员" class="headerlink" title="向外共享模块作用域的成员"></a>向外共享模块作用域的成员</h4><p>model.exports对象</p><p>在自定义模块中，可以使用module.exports对象，将模块内的成员共享出去，供外界使用</p><p>在一个自定义模块中，默认情况下，<code>module.exports = &#123;&#125;</code>，我们导入这个动作其实就是导入了模块中用<code>module.exports = &#123;&#125;</code>所共享出去的东西</p><p><strong>外界require()方法导入自定义模块时，得到的就是module.exports所指向的对象</strong><br><a href="https://imgtu.com/i/qYdJYt"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYdJYt.png"                      alt="qYdJYt.png"                ></a></p><p>共享成员的注意点:</p><p><a href="https://imgtu.com/i/qYd579"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYd579.png"                      alt="qYd579.png"                ></a></p><p>如挂载的是一个对象，那就是指向的对象，挂载的对象会覆盖前面所挂载的方法或属性</p><p>exports对象:</p><p><a href="https://imgtu.com/i/qYwgUA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYwgUA.png"                      alt="qYwgUA.png"                ></a></p><p>以下代码便证明了这两个是同一个对象:</p><p><a href="https://imgtu.com/i/qY05J1"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qY05J1.png"                      alt="qY05J1.png"                ></a></p><p>exports向外共享的写法更简便，它是module.exports的一种简便写法</p><p>exports和module.exports的使用误区:</p><p>我们需要时刻谨记: <strong>使用require模块时，得到的永远是module.exports指向的对象</strong></p><p>下面给出一个示例图:</p><p><a href="https://imgtu.com/i/qYDvxP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYDvxP.png"                      alt="qYDvxP.png"                ></a></p><p><a href="https://imgtu.com/i/qYcLcR"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYcLcR.png"                      alt="qYcLcR.png"                ></a></p><p>视频参考: <a class="link"   href="https://www.bilibili.com/video/BV1a34y167AZ?p=24" >https://www.bilibili.com/video/BV1a34y167AZ?p=24<i class="fas fa-external-link-alt"></i></a></p><p>Node.js中的模块化规范:</p><p><a href="https://imgtu.com/i/qYRU1J"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYRU1J.png"                      alt="qYRU1J.png"                ></a></p><h4 id="npm与包"><a href="#npm与包" class="headerlink" title="npm与包"></a>npm与包</h4><h5 id="包"><a href="#包" class="headerlink" title="包"></a>包</h5><p>什么是包?</p><p>Node.js中的<strong>第三方模块</strong>又叫做包</p><p>就像电脑和计算机指的是相同的东西，第三方模块和包指的是同一个概念，只不过叫法不同</p><p>包的来源:</p><p><a href="https://imgtu.com/i/qYWpNT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYWpNT.png"                      alt="qYWpNT.png"                ></a></p><p>为什么需要包:</p><p><a href="https://imgtu.com/i/qYWlgH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYWlgH.png"                      alt="qYWlgH.png"                ></a></p><p>从哪里下载包?</p><p><a href="https://imgtu.com/i/qYWzMd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYWzMd.png"                      alt="qYWzMd.png"                ></a></p><p>如何下载包?</p><p><a href="https://imgtu.com/i/qYfmss"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYfmss.png"                      alt="qYfmss.png"                ></a></p><h5 id="npm初体验"><a href="#npm初体验" class="headerlink" title="npm初体验"></a>npm初体验</h5><ol><li><p>格式化时间的传统做法</p><p>第一步: 创建格式化时间的自定义模块</p><p>第二步: 定义格式化时间的方法</p><p>第三步: 创建补零函数</p><p>第四步: 从自定义模块中导出格式化时间的函数</p><p>第五步: 导入格式化时间的自定义模块</p><p>第六步: 调用格式化时间的函数</p><p>dateFormat.js:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义格式化时间的方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dateFormat</span>(<span class="params">dtStr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> dt = <span class="keyword">new</span> <span class="built_in">Date</span>(dtStr)</span><br><span class="line">    <span class="keyword">const</span> y = dt.getFullYear()</span><br><span class="line">    <span class="keyword">const</span> m = padZero(dt.getMonth() + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">const</span> d = padZero(dt.getDate())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> hh = padZero(dt.getHour())</span><br><span class="line">    <span class="keyword">const</span> mm = padZero(dt.getMinutes())</span><br><span class="line">    <span class="keyword">const</span> ss = padZero(dt.getSeconds())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125;-$&#123;hh&#125;$&#123;mm&#125;-$&#123;ss&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义补零的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">padZero</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n &gt; <span class="number">9</span> ? n: <span class="string">&#x27;0&#x27;</span> + n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  向外暴露出去</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    dateFormat</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>getTime.js:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入自定义的格式化时间的模块</span></span><br><span class="line"><span class="keyword">const</span> TIME = <span class="built_in">require</span>(<span class="string">&#x27;./dateFormat&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用方法，进行时间的格式化</span></span><br><span class="line"><span class="keyword">const</span> dt = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line"><span class="comment">// console.log(dt)</span></span><br><span class="line"><span class="keyword">const</span> newDT = TIME.dateFormat(dt)</span><br><span class="line"><span class="built_in">console</span>.log(newDT)</span><br></pre></td></tr></table></figure><p>可以看到，格式化时间的传统做法是比较麻烦的</p></li><li><p>格式化时间的高级做法(使用第三方包)</p><p><a href="https://imgtu.com/i/qYI64P"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYI64P.png"                      alt="qYI64P.png"                ></a></p><p>安装:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install 包的完整名称</span><br></pre></td></tr></table></figure><p>上面的的装包命令，可以简写为如下格式:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i 包的完整名称</span><br></pre></td></tr></table></figure><p>包安装好了后终端会提示<code>added 1 package from 6 contributors in xxxs</code>，然后后面<code>@</code>会跟上版本号</p><p>下面我们来看看使用moment来进行时间的格式化:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入需要的包</span></span><br><span class="line"><span class="comment">// 注意: 导入的名称，就是装包的时候的名称</span></span><br><span class="line"><span class="keyword">const</span> moment = <span class="built_in">require</span>(<span class="string">&#x27;moment&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dt = moment().format(<span class="string">&#x27;YYYY-MM-DD- HH:mm:ss&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(dt)</span><br></pre></td></tr></table></figure></li></ol><h5 id="使用npm的注意点"><a href="#使用npm的注意点" class="headerlink" title="使用npm的注意点"></a>使用npm的注意点</h5><p><a href="https://imgtu.com/i/qYTO0J"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYTO0J.png"                      alt="qYTO0J.png"                ></a></p><h5 id="安装指定版本的包"><a href="#安装指定版本的包" class="headerlink" title="安装指定版本的包"></a>安装指定版本的包</h5><p><a href="https://imgtu.com/i/qY7ZtI"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qY7ZtI.png"                      alt="qY7ZtI.png"                ></a></p><h5 id="包的语义化版本规范"><a href="#包的语义化版本规范" class="headerlink" title="包的语义化版本规范"></a>包的语义化版本规范</h5><p><a href="https://imgtu.com/i/qY7Yhq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qY7Yhq.png"                      alt="qY7Yhq.png"                ></a></p><h5 id="包管理配置文件"><a href="#包管理配置文件" class="headerlink" title="包管理配置文件"></a>包管理配置文件</h5><p><a href="https://imgtu.com/i/qY7g9x"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qY7g9x.png"                      alt="qY7g9x.png"                ></a></p><h6 id="多人协作问题"><a href="#多人协作问题" class="headerlink" title="多人协作问题"></a>多人协作问题</h6><p>如果<strong>第三方包的体积过大</strong>，这就不方便团队之间共享项目源代码了</p><p>如下图所遇到的情况:</p><p><a href="https://imgtu.com/i/qYHmVJ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYHmVJ.png"                      alt="qYHmVJ.png"                ></a></p><p>在实际开发中，我们都会使用github这样的工具来管理项目，我们希望将这个项目上传到github，如果这个项目太大，那上传也是比较费劲，第三放包我们可以下载，别人也可以下载，所以我们只需要上传项目的源代码即可(将这个文件夹添加到.gitignore忽略文件中)，那么就要在上传的时候剔除node_modules目录，我们怎么才能标记下我们的项目中用到了哪些第三方包呢，如果你不标记下，别人拿到你的代码就不知道你用到了哪些包，也就无法将项目跑起来</p><h6 id="如何记录项目中安装了哪些包"><a href="#如何记录项目中安装了哪些包" class="headerlink" title="如何记录项目中安装了哪些包?"></a>如何记录项目中安装了哪些包?</h6><p>我们可以向如下这么做:</p><p><a href="https://imgtu.com/i/qYbPdH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYbPdH.png"                      alt="qYbPdH.png"                ></a></p><h6 id="快速创建package-json"><a href="#快速创建package-json" class="headerlink" title="快速创建package.json"></a>快速创建package.json</h6><p><a href="https://imgtu.com/i/qYbeQf"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYbeQf.png"                      alt="qYbeQf.png"                ></a></p><p>在我们创建一个项目后，第一件事就是要创建一个package.json</p><p>这里有几个注意点: </p><ul><li>上述命令<strong>只能在英文目录下成功运行</strong>，所以，项目文件夹的名称一定要使用英文命名，<strong>不要使用中文，不能出现空格</strong></li><li>运行npm install 命令安装包的时候，npm包管理工具会自动把包的名称和版本号记录到package.json中</li></ul><h6 id="dependencies节点"><a href="#dependencies节点" class="headerlink" title="dependencies节点"></a>dependencies节点</h6><p>在我们创建package.json后，默认这个dependencies是空的，我们在装包之后，就会在其中添加值</p><p><a href="https://imgtu.com/i/qYqMjK"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYqMjK.png"                      alt="qYqMjK.png"                ></a></p><p>这个dependencies节点是干嘛的呢:</p><p><a href="https://imgtu.com/i/qYq23q"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYq23q.png"                      alt="qYq23q.png"                ></a></p><h6 id="如何一次性安装所有包"><a href="#如何一次性安装所有包" class="headerlink" title="如何一次性安装所有包"></a>如何一次性安装所有包</h6><p><a href="https://imgtu.com/i/qYq759"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYq759.png"                      alt="qYq759.png"                ></a></p><p><a href="https://imgtu.com/i/qYqLgx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYqLgx.png"                      alt="qYqLgx.png"                ></a></p><h6 id="如何从项目中卸载包"><a href="#如何从项目中卸载包" class="headerlink" title="如何从项目中卸载包"></a>如何从项目中卸载包</h6><p> <a href="https://imgtu.com/i/qYLPPA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYLPPA.png"                      alt="qYLPPA.png"                ></a></p><h6 id="devDependencies节点"><a href="#devDependencies节点" class="headerlink" title="devDependencies节点"></a>devDependencies节点</h6><p><a href="https://imgtu.com/i/qYL1x0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYL1x0.png"                      alt="qYL1x0.png"                ></a></p><p>如何查看我们是否需要在安装包的时候把包添加到devDependencies节点中呢，我们可以在安装包之前访问这个网站: <a class="link"   href="https://www.npmjs.com/package%EF%BC%8C%E6%9F%A5%E7%9C%8B%EF%BC%8C%E6%AF%94%E5%A6%82" >https://www.npmjs.com/package，查看，比如<i class="fas fa-external-link-alt"></i></a>:</p><p>我们搜索webpack这个包:</p><p><a href="https://imgtu.com/i/qYLzQ0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYLzQ0.png"                      alt="qYLzQ0.png"                ></a></p><p>它会告诉我们这个包只会在项目开发的时候用到，所以要加入到devDependencies节点中</p><h6 id="解决下包速度慢的问题"><a href="#解决下包速度慢的问题" class="headerlink" title="解决下包速度慢的问题"></a>解决下包速度慢的问题</h6><p>为什么下包速度慢？</p><p><a href="https://imgtu.com/i/qYOMwD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYOMwD.png"                      alt="qYOMwD.png"                ></a></p><p>如何解决下包速度慢:</p><p>可以利用淘宝NPM镜像服务器</p><p>原理:</p><p><a href="https://imgtu.com/i/qYOypn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYOypn.png"                      alt="qYOypn.png"                ></a></p><p>切换npm的下包镜像源</p><p><a href="https://imgtu.com/i/qYOIh9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qYOIh9.png"                      alt="qYOIh9.png"                ></a></p><h6 id="nrm"><a href="#nrm" class="headerlink" title="nrm"></a>nrm</h6><p><a href="https://imgtu.com/i/qt8PxJ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qt8PxJ.png"                      alt="qt8PxJ.png"                ></a></p><h5 id="包的分类"><a href="#包的分类" class="headerlink" title="包的分类"></a>包的分类</h5><h6 id="项目包"><a href="#项目包" class="headerlink" title="项目包"></a>项目包</h6><p><a href="https://imgtu.com/i/qtGr1e"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtGr1e.png"                      alt="qtGr1e.png"                ></a></p><h6 id="全局包"><a href="#全局包" class="headerlink" title="全局包"></a>全局包</h6><p><a href="https://imgtu.com/i/qtGz3F"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtGz3F.png"                      alt="qtGz3F.png"                ></a></p><p><a href="https://imgtu.com/i/qtJ5Ux"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtJ5Ux.png"                      alt="qtJ5Ux.png"                ></a></p><h6 id="i5ting-toc"><a href="#i5ting-toc" class="headerlink" title="i5ting_toc"></a>i5ting_toc</h6><p><a href="https://imgtu.com/i/qtYKRU"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtYKRU.png"                      alt="qtYKRU.png"                ></a></p><p>上图中的<code>-o</code>参数表示在浏览器中打开</p><h5 id="规范的包结构"><a href="#规范的包结构" class="headerlink" title="规范的包结构"></a>规范的包结构</h5><p><a href="https://imgtu.com/i/qttn0A"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qttn0A.png"                      alt="qttn0A.png"                ></a></p><h5 id="开发属于自己的包-案例"><a href="#开发属于自己的包-案例" class="headerlink" title="开发属于自己的包(案例)"></a>开发属于自己的包(案例)</h5><h6 id="包的基本功能介绍"><a href="#包的基本功能介绍" class="headerlink" title="包的基本功能介绍"></a>包的基本功能介绍</h6><p>先说下我们要实现的功能:</p><p><a href="https://imgtu.com/i/qttocD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qttocD.png"                      alt="qttocD.png"                ></a></p><p>然后我们来看看如果开发好之后，我们具体调用的代码例子:</p><p>第一个功能:</p><p><a href="https://imgtu.com/i/qtNkEn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtNkEn.png"                      alt="qtNkEn.png"                ></a></p><p>第二个功能:</p><p><a href="https://imgtu.com/i/qtNaKe"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtNaKe.png"                      alt="qtNaKe.png"                ></a></p><p>第三个功能:</p><p><a href="https://imgtu.com/i/qtUFMD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtUFMD.png"                      alt="qtUFMD.png"                ></a></p><h6 id="初始化包的基本结构"><a href="#初始化包的基本结构" class="headerlink" title="初始化包的基本结构"></a>初始化包的基本结构</h6><p><a href="https://imgtu.com/i/qt0yjK"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qt0yjK.png"                      alt="qt0yjK.png"                ></a></p><h6 id="初始化package-json"><a href="#初始化package-json" class="headerlink" title="初始化package.json"></a>初始化package.json</h6><p>我们最终要初始化成下图这个样子:</p><p><a href="https://imgtu.com/i/qtB1Ve"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtB1Ve.png"                      alt="qtB1Ve.png"                ></a></p><p>name: 包的名称，之后上传供别人使用别人安装包就是用这个名字安装，这里要注意包的名称不能重复了，取名之前最后先去npm的官网先进行一个检索看看包名有没有被占用</p><p>version: 版本号，默认一个新的包是从1.0.0开始</p><p>main: 指定包的入口文件，外界导入包的时候，其实就是导入的main所指定的那个文件</p><p>description: 这个包的简短的描述信息</p><p>keywords: 搜索的关键字，在npm官网搜索这个关键字就能搜到相关包</p><p>license: 包所遵守的开源许可协议，默认是ISC</p><h6 id="在index-js中定义格式化时间的方法"><a href="#在index-js中定义格式化时间的方法" class="headerlink" title="在index.js中定义格式化时间的方法"></a>在index.js中定义格式化时间的方法</h6><p>我们来看下实现的整体步骤:</p><p><a href="https://imgtu.com/i/qtrscq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtrscq.png"                      alt="qtrscq.png"                ></a></p><p>格式时间的方法我刚刚已经实现了，见下面的代码:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义格式化时间的方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dateFormat</span>(<span class="params">dtStr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> dt = <span class="keyword">new</span> <span class="built_in">Date</span>(dtStr)</span><br><span class="line">    <span class="keyword">const</span> y = dt.getFullYear()</span><br><span class="line">    <span class="keyword">const</span> m = padZero(dt.getMonth() + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">const</span> d = padZero(dt.getDate())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> hh = padZero(dt.getHour())</span><br><span class="line">    <span class="keyword">const</span> mm = padZero(dt.getMinutes())</span><br><span class="line">    <span class="keyword">const</span> ss = padZero(dt.getSeconds())</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125;-$&#123;hh&#125;$&#123;mm&#125;-$&#123;ss&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义补零的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">padZero</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n &gt; <span class="number">9</span> ? n: <span class="string">&#x27;0&#x27;</span> + n</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  向外暴露出去</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    dateFormat</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试一下:</p><p><a href="https://imgtu.com/i/qtypi4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtypi4.png"                      alt="qtypi4.png"                ></a></p><p>上面require的参数是一个完整的指向index.js的一个路径，我们去掉<code>/index</code>是否还可以正常运行呢，答案是可以的，因为我们已经在package.json中的main属性已经添加了<code>index.js</code>，已经指明了入口</p><h6 id="在index-js中定义转义HTML的方法"><a href="#在index-js中定义转义HTML的方法" class="headerlink" title="在index.js中定义转义HTML的方法"></a>在index.js中定义转义HTML的方法</h6><p>我们来看下实现:</p><p><a href="https://imgtu.com/i/qt6PAS"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qt6PAS.png"                      alt="qt6PAS.png"                ></a></p><p>上图用到了字符串的replace方法，第一个参数是正则表达式，其中的<code>g</code>参数表示全局匹配，意思就是会从前到后全部匹配一遍，<code>|</code>表示或者，match表示匹配成功的字符，然后下面通过回调函数中的switch来进行匹配到的字符的一个替换</p><p>把这个方法暴露出去之后，我们来做个测试:</p><p><a href="https://imgtu.com/i/qtcxdf"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtcxdf.png"                      alt="qtcxdf.png"                ></a></p><h6 id="在index-js中定义还原HTML的方法"><a href="#在index-js中定义还原HTML的方法" class="headerlink" title="在index.js中定义还原HTML的方法"></a>在index.js中定义还原HTML的方法</h6><p>来看下实现:</p><p><a href="https://imgtu.com/i/qtgJw6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtgJw6.png"                      alt="qtgJw6.png"                ></a></p><h6 id="将不同的功能进行模块化拆分"><a href="#将不同的功能进行模块化拆分" class="headerlink" title="将不同的功能进行模块化拆分"></a>将不同的功能进行模块化拆分</h6><p>在经过上面的操作后，我们把所有的代码都写在了ithaime-tools下面的index.js中，其实在这个文件中我们做的功能比较多，这三个功能应该分处理时间和处理HTML来分成两个独立的功能，我们来看下步骤:</p><p><a href="https://imgtu.com/i/qt2HKA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qt2HKA.png"                      alt="qt2HKA.png"                ></a></p><p>我们先在ithaime-tools文件夹下新建一个src文件夹，然后在src目录下新建一个dateFormat.js和一个htmlEscape.js，我们把相应功能的函数放到对应的js文件里，然后分别导出</p><p><a href="https://imgtu.com/i/qtWvcQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtWvcQ.png"                      alt="qtWvcQ.png"                ></a></p><p><a href="https://imgtu.com/i/qtW77t"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtW77t.png"                      alt="qtW77t.png"                ></a></p><p><a href="https://imgtu.com/i/qtW0l4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtW0l4.png"                      alt="qtW0l4.png"                ></a></p><p>上图中用到了es6的部分语法<code>...</code>表示展开运算符，把这个对象中的每一个属性展开了交给新对象，关于<code>...</code>运算符可以参考: <a class="link"   href="https://www.cnblogs.com/jone-chen/p/12133441.html" >https://www.cnblogs.com/jone-chen/p/12133441.html<i class="fas fa-external-link-alt"></i></a></p><h6 id="编写包的说明文档"><a href="#编写包的说明文档" class="headerlink" title="编写包的说明文档"></a>编写包的说明文档</h6><p><a href="https://imgtu.com/i/qthNzF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qthNzF.png"                      alt="qthNzF.png"                ></a></p><h5 id="发布包"><a href="#发布包" class="headerlink" title="发布包"></a>发布包</h5><h6 id="注册npm账号"><a href="#注册npm账号" class="headerlink" title="注册npm账号"></a>注册npm账号</h6><p><a href="https://imgtu.com/i/qth4eA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qth4eA.png"                      alt="qth4eA.png"                ></a></p><h6 id="登录npm账号"><a href="#登录npm账号" class="headerlink" title="登录npm账号"></a>登录npm账号</h6><p><a href="https://imgtu.com/i/qt4KfK"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qt4KfK.png"                      alt="qt4KfK.png"                ></a></p><p>这里有一个注意点: 在运行npm login命令之前，<strong>必须先把下包的服务器地址切换成npm的官方服务器</strong>，否则会导致发布包失败</p><p><a href="https://imgtu.com/i/qt5tu4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qt5tu4.png"                      alt="qt5tu4.png"                ></a></p><h6 id="把包发布到npm上"><a href="#把包发布到npm上" class="headerlink" title="把包发布到npm上"></a>把包发布到npm上</h6><p><a href="https://imgtu.com/i/qt5Xan"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qt5Xan.png"                      alt="qt5Xan.png"                ></a></p><p>然后我们可以登录到npm的官方网站，然后点击头像右边的下拉箭头，然后点击packages，查看我们发布的包</p><h5 id="删除包"><a href="#删除包" class="headerlink" title="删除包"></a>删除包</h5><p><a href="https://imgtu.com/i/qtoCfP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/25/qtoCfP.png"                      alt="qtoCfP.png"                ></a></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/154090da36ff0728.png"                                     ></p><h4 id="模块的加载机制"><a href="#模块的加载机制" class="headerlink" title="模块的加载机制"></a>模块的加载机制</h4><ol><li><p>优先从缓存中加载</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/ef6ae3a7f166b9de.png"                                     ></p></li><li><p>内置模块的加载机制</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/6cb6718ec3bcb932.png"                                     ></p></li><li><p>自定义模块的加载机制</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/a21c31069ee5d100.png"                                     ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/93ef7f2d59aa25ea.png"                                     ></p></li><li><p>第三方模块的加载机制</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/701ef66ed0b0a5b1.png"                                     ></p></li><li><p>目作为模块</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/5b74bbfd95b8657f.png"                                     ></p></li></ol><h4 id="express"><a href="#express" class="headerlink" title="express"></a>express</h4><p>目标:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/15b9e16ac69a8c75.png"                                     ></p><h5 id="初识express"><a href="#初识express" class="headerlink" title="初识express"></a>初识express</h5><h6 id="什么是express"><a href="#什么是express" class="headerlink" title="什么是express"></a>什么是express</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/9c2443d59676ca5a.png"                                     ></p><h6 id="进一步理解express"><a href="#进一步理解express" class="headerlink" title="进一步理解express"></a>进一步理解express</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/267a759903feb79d.png"                                     ></p><h6 id="express能做什么"><a href="#express能做什么" class="headerlink" title="express能做什么"></a>express能做什么</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/855bd2becf38dbb2.png"                                     ></p><h5 id="express的基本使用"><a href="#express的基本使用" class="headerlink" title="express的基本使用"></a>express的基本使用</h5><h6 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/357d2bb25771cdc5.png"                                     ></p><h6 id="创建基本的web服务器"><a href="#创建基本的web服务器" class="headerlink" title="创建基本的web服务器"></a>创建基本的web服务器</h6><p>基本实现:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/e69e57941ce820aa.png"                                     ></p><h6 id="监听GET请求"><a href="#监听GET请求" class="headerlink" title="监听GET请求"></a>监听GET请求</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/84fce7e4bc64a53a.png"                                     ></p><h6 id="监听POST请求"><a href="#监听POST请求" class="headerlink" title="监听POST请求"></a>监听POST请求</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/d944cecd82bf2661.png"                                     ></p><h6 id="如何把内容响应给客户端"><a href="#如何把内容响应给客户端" class="headerlink" title="如何把内容响应给客户端"></a>如何把内容响应给客户端</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://img.kuibu.net/imgs/2022/03/1fe2735f3a7af3b9.png"                                     ></p><p>关于json对象和json字符串: <a class="link"   href="https://blog.csdn.net/u010865136/article/details/78591765" >https://blog.csdn.net/u010865136/article/details/78591765<i class="fas fa-external-link-alt"></i></a></p><h6 id="如何获取URL中携带的查询参数"><a href="#如何获取URL中携带的查询参数" class="headerlink" title="如何获取URL中携带的查询参数"></a>如何获取URL中携带的查询参数</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/d344c21b21451031.png"                                     ></p><h6 id="获取URL中的动态参数"><a href="#获取URL中的动态参数" class="headerlink" title="获取URL中的动态参数"></a>获取URL中的动态参数</h6><p>比如动态的<code>id</code>值</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/f9d27f2d2849333f.png"                                     ></p><p>id不是固定写法，只有前面的<code>:</code>是固定写法，也可以有多个动态参数比如:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">&#x27;/user/:id/:name&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.params)</span><br><span class="line">    res.send(req.params)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="托管静态资源"><a href="#托管静态资源" class="headerlink" title="托管静态资源"></a>托管静态资源</h5><h6 id="express-static"><a href="#express-static" class="headerlink" title="express.static()"></a>express.static()</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/2c623906e731fb00.png"                                     ></p><p>注意: Express在指定的静态目录中查找文件，并对外提供资源的访问路径；因此，存放静态文件的目录名不会出现在URL中</p><h6 id="托管多个静态资源目录"><a href="#托管多个静态资源目录" class="headerlink" title="托管多个静态资源目录"></a>托管多个静态资源目录</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/cd2a4620bbcbab18.png"                                     ></p><h6 id="挂载路径前缀"><a href="#挂载路径前缀" class="headerlink" title="挂载路径前缀"></a>挂载路径前缀</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/70717bfcabbf799f.png"                                     ></p><h5 id="nodemon"><a href="#nodemon" class="headerlink" title="nodemon"></a>nodemon</h5><h6 id="为什么要使用nodemon"><a href="#为什么要使用nodemon" class="headerlink" title="为什么要使用nodemon"></a>为什么要使用nodemon</h6><p><a href="https://imgtu.com/i/qUO4G4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/26/qUO4G4.png"                      alt="qUO4G4.png"                ></a></p><h6 id="安装nodemon"><a href="#安装nodemon" class="headerlink" title="安装nodemon"></a>安装nodemon</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/yY9baXmjfAF45Co.png"                      alt="image.png"                ></p><h6 id="使用nodemon"><a href="#使用nodemon" class="headerlink" title="使用nodemon"></a>使用nodemon</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/shETlbdaHB8PS1D.png"                      alt="image.png"                ></p><h5 id="express路由"><a href="#express路由" class="headerlink" title="express路由"></a>express路由</h5><h6 id="什么是路由"><a href="#什么是路由" class="headerlink" title="什么是路由"></a>什么是路由</h6><p>广义来讲，路由就是<strong>映射关系</strong></p><p>生活中的案例:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/7KtgbO1kI3nVfX9.png"                      alt="image.png"                ></p><h6 id="express中的路由"><a href="#express中的路由" class="headerlink" title="express中的路由"></a>express中的路由</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/nBQfAHxlg7ET98a.png"                      alt="image.png"                ></p><h6 id="express中的路由的例子"><a href="#express中的路由的例子" class="headerlink" title="express中的路由的例子"></a>express中的路由的例子</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/fYsKDF7gtLQU2PC.png"                      alt="image.png"                ></p><h6 id="路由的匹配过程"><a href="#路由的匹配过程" class="headerlink" title="路由的匹配过程"></a>路由的匹配过程</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/VonEirtIkTNGmjs.png"                      alt="image.png"                ></p><h5 id="路由的使用"><a href="#路由的使用" class="headerlink" title="路由的使用"></a>路由的使用</h5><h6 id="最简单的用法"><a href="#最简单的用法" class="headerlink" title="最简单的用法"></a>最简单的用法</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/KxegbOWELkalHXc.png"                      alt="image.png"                ></p><h6 id="模块化路由"><a href="#模块化路由" class="headerlink" title="模块化路由"></a>模块化路由</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/J42yBfw5PnajWzq.png"                      alt="image.png"                ></p><h6 id="创建路由模块"><a href="#创建路由模块" class="headerlink" title="创建路由模块"></a>创建路由模块</h6><p>案例:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/C6nUoGMvrzWqlSg.png"                      alt="image.png"                ></p><h6 id="注册路由模块"><a href="#注册路由模块" class="headerlink" title="注册路由模块"></a>注册路由模块</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/ygW2Pi6QIv7UcBO.png"                      alt="image.png"                ></p><p>注意: app.use()函数的作用，就是用来注册全局中间件</p><h6 id="为路由模块添加前缀"><a href="#为路由模块添加前缀" class="headerlink" title="为路由模块添加前缀"></a>为路由模块添加前缀</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/IMF1CzQAv43njqf.png"                      alt="image.png"                ></p><p>视频地址: <a class="link"   href="https://www.bilibili.com/video/BV1a34y167AZ?p=43" >https://www.bilibili.com/video/BV1a34y167AZ?p=43<i class="fas fa-external-link-alt"></i></a></p><h4 id="express中间件"><a href="#express中间件" class="headerlink" title="express中间件"></a>express中间件</h4><h5 id="中间件的概念"><a href="#中间件的概念" class="headerlink" title="中间件的概念"></a>中间件的概念</h5><h6 id="什么是中间件"><a href="#什么是中间件" class="headerlink" title="什么是中间件"></a>什么是中间件</h6><p>中间件(Middleware)，特指<strong>业务流程的中间处理环节</strong></p><p>生活中的例子:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/g5LyRDbadPti8Kh.png"                      alt="image.png"                ></p><h6 id="express中间件的调用流程"><a href="#express中间件的调用流程" class="headerlink" title="express中间件的调用流程"></a>express中间件的调用流程</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/BUomswa1EpuIQdX.png"                      alt="image.png"                ></p><h6 id="express中间件的格式"><a href="#express中间件的格式" class="headerlink" title="express中间件的格式"></a>express中间件的格式</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/MwJIRlt3yeQYhjO.png"                      alt="image.png"                ></p><h6 id="next函数的作用"><a href="#next函数的作用" class="headerlink" title="next函数的作用"></a>next函数的作用</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/tZQNTuHDiYzR4Kb.png"                      alt="image.png"                ></p><h5 id="express中间件的初体验"><a href="#express中间件的初体验" class="headerlink" title="express中间件的初体验"></a>express中间件的初体验</h5><h6 id="定义中间件函数"><a href="#定义中间件函数" class="headerlink" title="定义中间件函数"></a>定义中间件函数</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/WGXON2mdahQg1lA.png"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/BTQNfKUhtwrecsm.png"                      alt="image.png"                ></p><h6 id="全局生效的中间件"><a href="#全局生效的中间件" class="headerlink" title="全局生效的中间件"></a>全局生效的中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/bSH726PedkuOsI9.png"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/3aZgCdu9rYFUebl.png"                      alt="image.png"                ></p><h6 id="定义全局中间件的简化形式"><a href="#定义全局中间件的简化形式" class="headerlink" title="定义全局中间件的简化形式"></a>定义全局中间件的简化形式</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/K14Z5uBSXLfixlv.png"                      alt="image.png"                ></p><h6 id="中间件的作用"><a href="#中间件的作用" class="headerlink" title="中间件的作用"></a>中间件的作用</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/Tmzs46MXcQoePVd.png"                      alt="image.png"                ></p><h6 id="定义多个全局中间件"><a href="#定义多个全局中间件" class="headerlink" title="定义多个全局中间件"></a>定义多个全局中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/tFWydMTvmqZ6nO3.png"                      alt="image.png"                ></p><h6 id="局部生效的中间件"><a href="#局部生效的中间件" class="headerlink" title="局部生效的中间件"></a>局部生效的中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/u2isKMUGZr3eEoW.png"                      alt="image.png"                ></p><h6 id="定义多个局部中间件"><a href="#定义多个局部中间件" class="headerlink" title="定义多个局部中间件"></a>定义多个局部中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/iXBOehCwmrn5lWa.png"                      alt="image.png"                ></p><h6 id="中间件的5个注意事项"><a href="#中间件的5个注意事项" class="headerlink" title="中间件的5个注意事项"></a>中间件的5个注意事项</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/Mm3rODZ5kt4Pyl2.png"                      alt="image.png"                ></p><h5 id="中间件的分类"><a href="#中间件的分类" class="headerlink" title="中间件的分类"></a>中间件的分类</h5><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/DGAh4VRLSKHgyX2.png"                      alt="image.png"                ></p><h6 id="应用级别的中间件"><a href="#应用级别的中间件" class="headerlink" title="应用级别的中间件"></a>应用级别的中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/ly8eaRMcKrx9ELU.png"                      alt="image.png"                ></p><h6 id="路由级别的中间件"><a href="#路由级别的中间件" class="headerlink" title="路由级别的中间件"></a>路由级别的中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/FHgDJQU9GZBKm7o.png"                      alt="image.png"                ></p><h6 id="错误级别的中间件"><a href="#错误级别的中间件" class="headerlink" title="错误级别的中间件"></a>错误级别的中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/2kfm3ieXCGz8IoH.png"                      alt="image.png"                ></p><p>作用: 项目不会崩溃，会继续运行</p><p>案例:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/7AjdFLtMrVRawN3.png"                      alt="image.png"                ></p><p>错误中间件会捕获到路由中所抛出的错误，然后进行处理</p><p>注意: <strong>错误级别的中间件必须注册在所有路由之后!，这是个例外</strong></p><h6 id="express内置的中间件"><a href="#express内置的中间件" class="headerlink" title="express内置的中间件"></a>express内置的中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/eQDcElWavmBpdLg.png"                      alt="image.png"                ></p><p>向服务器提价json格式的请求数据:</p><p>在服务器中，可以使用req.body这个属性，来接收客户端发送过来的请求体数据，但是如果发送的是json格式的数据，在没有定义<code>express.json</code>这个格式的情况下，服务器是完全解析不了的:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/XKaZ9hemN4LlO21.png"                      alt="image.png"                ></p><p>默认情况下，如果不配置解析表单数据的中间件，则req.body默认等于undefined，就如上图所示</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/ZF7lryYpJuKC9XR.png"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/wijphVxPSeg5QRY.png"                      alt="image.png"                ></p><p>本小节视频地址: <a class="link"   href="https://www.bilibili.com/video/BV1a34y167AZ?p=48%EF%BC%8C" >https://www.bilibili.com/video/BV1a34y167AZ?p=48，<i class="fas fa-external-link-alt"></i></a> 到32分</p><h6 id="第三方的中间件"><a href="#第三方的中间件" class="headerlink" title="第三方的中间件"></a>第三方的中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/wORkdbzrILu8eUl.png"                      alt="image.png"                ></p><p>以body-parser这个第三方中间件为例:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/eK6ibhWIqDAykGm.png"                      alt="image.png"                ></p><h5 id="自定义中间件"><a href="#自定义中间件" class="headerlink" title="自定义中间件"></a>自定义中间件</h5><h6 id="需求描述与实现步骤"><a href="#需求描述与实现步骤" class="headerlink" title="需求描述与实现步骤"></a>需求描述与实现步骤</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/26/bzMuVEhgovDZIJ5.png"                      alt="image.png"                ></p><p>使用app.use来定义一个中间件，在全局中间件中来写业务逻辑</p><p>监听req的data事件，只要触发了req的data事件，就证明有数据被提交了</p><p>接下来还要监听req的end事件，只要触发了req的end事件，就证明服务器已经完整地接收到了数据</p><p>接收到的数据还需要使用querystring模块解析请求体数据</p><p>然后将解析出来的数据对象挂载为req.body</p><p>最后将自定义中间件封装为模块</p><h6 id="定义中间件"><a href="#定义中间件" class="headerlink" title="定义中间件"></a>定义中间件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/27/JsrjCKIDXFNax5v.png"                      alt="image.png"                ></p><h6 id="监听req的data事件"><a href="#监听req的data事件" class="headerlink" title="监听req的data事件"></a>监听req的data事件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/27/F1Kwc2fYpIqa9kU.png"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/27/1jIdhcRiw3maqHs.png"                      alt="image.png"                ></p><h6 id="监听req的end事件"><a href="#监听req的end事件" class="headerlink" title="监听req的end事件"></a>监听req的end事件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/27/sqhHtRcYlEI6v7j.png"                      alt="image.png"                ></p><h6 id="使用querystring模块解析请求体数据"><a href="#使用querystring模块解析请求体数据" class="headerlink" title="使用querystring模块解析请求体数据"></a>使用querystring模块解析请求体数据</h6><p>上面我们post过去的数据是字符串格式的，中文还会被编码，下面我们要做的就是进行一个解析</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/27/bjPScDmh6ktv3X5.png"                      alt="image.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/27/CyZxBMpJibDvcY3.png"                      alt="image.png"                ></p><h6 id="将解析出来的数据对象挂载为req-body"><a href="#将解析出来的数据对象挂载为req-body" class="headerlink" title="将解析出来的数据对象挂载为req.body"></a>将解析出来的数据对象挂载为req.body</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/27/LiNVa4DlodnT1bU.png"                      alt="image.png"                ></p><h6 id="将自定义中间件封装为模块"><a href="#将自定义中间件封装为模块" class="headerlink" title="将自定义中间件封装为模块"></a>将自定义中间件封装为模块</h6><p>为了优化代码结构，我们可以把自定义的中间件函数，<strong>封装为独立的模块</strong>，示例代码如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/ilg632u4BGEfJjo.png"                      alt="image.png"                ></p><h4 id="使用express写接口"><a href="#使用express写接口" class="headerlink" title="使用express写接口"></a>使用express写接口</h4><h5 id="创建基本的服务器"><a href="#创建基本的服务器" class="headerlink" title="创建基本的服务器"></a>创建基本的服务器</h5><p>基本框架如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/FoqXankUN38PtWw.png"                      alt="image.png"                ></p><h5 id="创建API路由模块"><a href="#创建API路由模块" class="headerlink" title="创建API路由模块"></a>创建API路由模块</h5><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/884f24319fda30f5.png"                                     ></p><p>上面是创建API路由模块，下面我们就可以导入路由模块:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="comment">// 创建服务器示例</span></span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入路由模块</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="built_in">require</span>(<span class="string">&#x27;apiRouter&#x27;</span>)</span><br><span class="line"><span class="comment">// 把路由模块，注册到app上</span></span><br><span class="line">app.use(<span class="string">&#x27;/api&#x27;</span>, router)</span><br><span class="line"></span><br><span class="line"><span class="comment">//起动服务器</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h5 id="编写GET接口"><a href="#编写GET接口" class="headerlink" title="编写GET接口"></a>编写GET接口</h5><p>核心实现代码如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i0.hdslb.com/bfs/album/cfcb5f9bf8520a53652c5a53c12c16ad8cdd6b7c.png"                                     ></p><p>上面的一个实现思路是拿到用户请求的数据，然后再原封不动地返回回去</p><p>在测试上面的接口的时候，我们可以用<code>?</code>然后后面跟上比如<code>age=17</code>等等的参数，也可以在postman输入链接的下方点击Params添加get请求的参数</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/hututu-tech/IMG-gongfeng@main/2022/03/28/62412411da378.png"                                     ></p><h5 id="编写POST接口"><a href="#编写POST接口" class="headerlink" title="编写POST接口"></a>编写POST接口</h5><p>核心实现代码如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/hututu-tech/IMG-gongfeng@main/2022/03/28/6241248697646.png"                                     ></p><p>这个和上面的编写GET接口是很相似的</p><p>但这里有个注意点: 如果要获取<code>URL-encoded</code>格式的请求头数据，必须配置中间件<code>app.use(express.urlencode(&#123; extended: false &#125;))</code>，如果不配置这个中间件，那我们就无法通过<code>req.body</code>拿到里面所包含的数据</p><h5 id="CORS跨域资源共享"><a href="#CORS跨域资源共享" class="headerlink" title="CORS跨域资源共享"></a>CORS跨域资源共享</h5><h6 id="接口的跨域问题"><a href="#接口的跨域问题" class="headerlink" title="接口的跨域问题"></a>接口的跨域问题</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/jquery/3.4.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btnGET&quot;</span>&gt;</span>GET<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btnPOST&quot;</span>&gt;</span>POST<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 1. 测试GET接口</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        $(<span class="string">&#x27;#btnGET&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">// 通过id选择器选中GET这个按钮并绑定onclick事件</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            $.ajax(&#123;  <span class="comment">// 然后在处理函数中，我们可以调用$.ajax去发起一个请求</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">type</span>: <span class="string">&#x27;GET&#x27;</span>,  <span class="comment">// 指定请求的类型</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">url</span>: <span class="string">&#x27;http://127.0.0.1/api/get&#x27;</span>, <span class="comment">// 请求的地址，或者说请求的接口</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">data</span>: &#123;  <span class="comment">// 指定我们要发送到服务器的数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">age</span>: <span class="number">20</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;  <span class="comment">// 指定一个成功的回调函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">console</span>.log(res)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 2. 测试POST接口</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        $(<span class="string">&#x27;#btnPOST&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">// 通过id选择器选中POST这个按钮并绑定onclick事件</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            $.ajax(&#123;  <span class="comment">// 然后在处理函数中，我们可以调用$.ajax去发起一个请求</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">type</span>: <span class="string">&#x27;POST&#x27;</span>,  <span class="comment">// 指定请求的类型</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">url</span>: <span class="string">&#x27;http://127.0.0.1/api/post&#x27;</span>, <span class="comment">// 请求的地址，或者说请求的接口</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">data</span>: &#123;  <span class="comment">// 指定我们要发送到服务器的数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">bookname</span>: <span class="string">&#x27;水浒传&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">author</span>: <span class="string">&#x27;施耐庵&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;  <span class="comment">// 指定一个成功的回调函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">console</span>.log(res)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>以上我们使用了jQuery的在线版，在这个网站可以获取: <a class="link"   href="https://staticfile.org/" >https://staticfile.org/<i class="fas fa-external-link-alt"></i></a></p><p>然后我们打开浏览器，点击这两个按钮，会发现在终端中报错了:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/hututu-tech/IMG-gongfeng@main/2022/03/28/62412c5899e8c.png"                                     ></p><p>以上报错就告诉我们，我们的接口存在跨域的问题，因为当前咱们是以<code>file</code>协议打开这个浏览器窗口的，而我们要请求的接口是<code>http</code>协议的，这就存在协议上的不同。我们知道，只要协议、域名或者端口号、任何一项不同，都存在跨域的问题。在我们写的这个小案例中，我们的网页和接口就存在跨域的问题。</p><h6 id="解决跨域问题的两种方案"><a href="#解决跨域问题的两种方案" class="headerlink" title="解决跨域问题的两种方案"></a>解决跨域问题的两种方案</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i0.hdslb.com/bfs/album/a7e1f77c393922623a91fc17ddf151a58950874b.png"                                     ></p><p>目前我们绝大部分都是使用CORS来解决跨域，因为JSONP不支持GET请求</p><h6 id="使用cors中间件解决跨域问题"><a href="#使用cors中间件解决跨域问题" class="headerlink" title="使用cors中间件解决跨域问题"></a>使用cors中间件解决跨域问题</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i0.hdslb.com/bfs/album/82d7f6fead1fe41fe2fa7a480c318ac1e14ddc82.png"                                     ></p><p>第一步使用<code>npm install cors</code>来安装这个中间件模块，第二步使用<code>const cors = require(&#39;cors&#39;)</code>导入中间件，最后使用<code>app.use(cors())</code>将cors中间件注册为全局可用的中间件，这样就能帮我们解决接口跨域访问的问题了</p><p>注意: 在所有路由之前导入这个中间件</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i0.hdslb.com/bfs/album/f1baf9a684f67ba8d20676c2b22e9aeda7bfa4b9.png"                                     ></p><p>这次就没有跨域的问题了:</p><p><a href="https://imgtu.com/i/qD6IVH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/28/qD6IVH.png"                      alt="qD6IVH.png"                ></a></p><h6 id="什么是cors"><a href="#什么是cors" class="headerlink" title="什么是cors"></a>什么是cors</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/eb45af5c9e7d7059.png"                                     ></p><h6 id="cors的注意事项"><a href="#cors的注意事项" class="headerlink" title="cors的注意事项"></a>cors的注意事项</h6><p><a href="https://imgtu.com/i/qDc8sO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/28/qDc8sO.png"                      alt="qDc8sO.png"                ></a></p><h6 id="cors响应头部-Access-Control-Allow-Origin"><a href="#cors响应头部-Access-Control-Allow-Origin" class="headerlink" title="cors响应头部-Access-Control-Allow-Origin"></a>cors响应头部-Access-Control-Allow-Origin</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/3444bbf39678fdb0.png"                                     ></p><p>如果是百度的网页，就访问不了</p><p>通过<code>Access-Control-Allow-Origin</code>这个头部，我们就可以控制允许哪些网页或网站来请求我们的服务器接口，如果你允许所有的网页或网站都能请求我们的服务器，就可以指定一个<code>*</code>，如下所示:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/d1b3411fd2793dd6.png"                                     ></p><h6 id="cors响应头部-Access-Control-Allow-Headers"><a href="#cors响应头部-Access-Control-Allow-Headers" class="headerlink" title="cors响应头部-Access-Control-Allow-Headers"></a>cors响应头部-Access-Control-Allow-Headers</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/2345f918206da467.png"                                     ></p><h6 id="cors响应头部-Access-Control-Allow-Methods"><a href="#cors响应头部-Access-Control-Allow-Methods" class="headerlink" title="cors响应头部-Access-Control-Allow-Methods"></a>cors响应头部-Access-Control-Allow-Methods</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/f377f02d2c6e00e4.png"                                     ></p><h6 id="cors请求的分类"><a href="#cors请求的分类" class="headerlink" title="cors请求的分类"></a>cors请求的分类</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/baa9920df4eb0e09.png"                                     ></p><h6 id="简单请求"><a href="#简单请求" class="headerlink" title="简单请求"></a>简单请求</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/28301b52e0626918.png"                                     ></p><h6 id="预监请求"><a href="#预监请求" class="headerlink" title="预监请求"></a>预监请求</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/5711affdfe6d3e73.png"                                     ></p><h6 id="简单请求和预检测请求的区别"><a href="#简单请求和预检测请求的区别" class="headerlink" title="简单请求和预检测请求的区别"></a>简单请求和预检测请求的区别</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://i.bmp.ovh/imgs/2022/03/1101276dea9ae0d3.png"                                     ></p><h5 id="JSONP接口"><a href="#JSONP接口" class="headerlink" title="JSONP接口"></a>JSONP接口</h5><h6 id="回顾JSONP的概念与特点"><a href="#回顾JSONP的概念与特点" class="headerlink" title="回顾JSONP的概念与特点"></a>回顾JSONP的概念与特点</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/ShIJu5eGAK1OcnY.png"                      alt="图片.png"                ></p><h6 id="创建JSONP接口的注意事项"><a href="#创建JSONP接口的注意事项" class="headerlink" title="创建JSONP接口的注意事项"></a>创建JSONP接口的注意事项</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/UaN2pMGoxfkCFTA.png"                      alt="图片.png"                ></p><h6 id="实现JSONP接口的步骤"><a href="#实现JSONP接口的步骤" class="headerlink" title="实现JSONP接口的步骤"></a>实现JSONP接口的步骤</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/wMr8PGWgoK9dIlJ.png"                      alt="图片.png"                ></p><p>jsonp实现的原理就是客户端通过script标签把一个函数的名字发送个服务器，希望服务器返回这个函数的调用，在调用期间把数据传进来即可；因此我们在服务器要先拿到函数的名字，然后准备要发送给客户端的数据，当函数的名字和数据都准备好了后，我们就要拼接出一个函数调用的字符串，最后把这个字符串发送给客户端就行了</p><p>我们来看看核心代码的实现:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/Edjqirlb7Z1mFsR.png"                      alt="图片.png"                ></p><p>视频地址: <a class="link"   href="https://www.bilibili.com/video/BV1a34y167AZ?p=56" >https://www.bilibili.com/video/BV1a34y167AZ?p=56<i class="fas fa-external-link-alt"></i></a></p><h6 id="在网页中使用JQuery发起JSONP请求"><a href="#在网页中使用JQuery发起JSONP请求" class="headerlink" title="在网页中使用JQuery发起JSONP请求"></a>在网页中使用JQuery发起JSONP请求</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/Zhy7a1Q3TKo9BJu.png"                      alt="图片.png"                ></p><p>视频地址: <a class="link"   href="https://www.bilibili.com/video/BV1a34y167AZ?p=56" >https://www.bilibili.com/video/BV1a34y167AZ?p=56<i class="fas fa-external-link-alt"></i></a></p><p>这里要注意，要指定method为<code>GET</code>, dataType为<code>jsonp</code>才能发起JSONP请求</p><h4 id="数据库与身份认证"><a href="#数据库与身份认证" class="headerlink" title="数据库与身份认证"></a>数据库与身份认证</h4><h5 id="数据库的基本概念"><a href="#数据库的基本概念" class="headerlink" title="数据库的基本概念"></a>数据库的基本概念</h5><h6 id="什么是数据库"><a href="#什么是数据库" class="headerlink" title="什么是数据库"></a>什么是数据库</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/bOqmaNedC5poFgX.png"                      alt="图片.png"                ></p><h6 id="常见数据库及分类"><a href="#常见数据库及分类" class="headerlink" title="常见数据库及分类"></a>常见数据库及分类</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/3A4TUgl2ZdnorSb.png"                      alt="图片.png"                ></p><h6 id="传统型数据库的数据组织结构"><a href="#传统型数据库的数据组织结构" class="headerlink" title="传统型数据库的数据组织结构"></a>传统型数据库的数据组织结构</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/KxaWv63YnhcIHQw.png"                      alt="图片.png"                ></p><p>参照excel:</p><ol><li><p>excel的数据组织结构</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/L7WO4Yx8oaFHyMT.png"                      alt="图片.png"                ></p><p>整个excel叫做工作簿</p><p>users和books是工作表</p><p>users工作表中有3行数据</p><p>每行数据由6列信息组成</p><p>每列信息都有对应的数据类型</p></li><li><p>传统型数据库的数据组织结构</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/6OcCWLsFSIRtKj3.png"                      alt="图片.png"                ></p></li><li><p>实际开发中库、表、行、字段的关系</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220328160035195.png"                      alt="image-20220328160035195"                ></p></li></ol><h5 id="安装并配置MySQL数据库"><a href="#安装并配置MySQL数据库" class="headerlink" title="安装并配置MySQL数据库"></a>安装并配置MySQL数据库</h5><h6 id="了解需要安装哪些MySQL相关的软件"><a href="#了解需要安装哪些MySQL相关的软件" class="headerlink" title="了解需要安装哪些MySQL相关的软件"></a>了解需要安装哪些MySQL相关的软件</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/UoNMQ8xFf4CgpKj.png"                      alt="图片.png"                ></p><h6 id="MySQL在Mac环境下的安装"><a href="#MySQL在Mac环境下的安装" class="headerlink" title="MySQL在Mac环境下的安装"></a>MySQL在Mac环境下的安装</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/8pv4cZMz2exUDW5.png"                      alt="图片.png"                ></p><p>参考: <a class="link"   href="https://www.cnblogs.com/yinzhengjie/p/10125609.html" >https://www.cnblogs.com/yinzhengjie/p/10125609.html<i class="fas fa-external-link-alt"></i></a></p><h6 id="MySQL在Windows环境下的安装"><a href="#MySQL在Windows环境下的安装" class="headerlink" title="MySQL在Windows环境下的安装"></a>MySQL在Windows环境下的安装</h6><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/cuF8DGzexnkwCKT.png"                      alt="图片.png"                ></p><p>参考: <a class="link"   href="https://www.cnblogs.com/shenstudy/p/14389079.html" >https://www.cnblogs.com/shenstudy/p/14389079.html<i class="fas fa-external-link-alt"></i></a></p><p>win7可能会出现环境不完整的警告框，以上链接是关于win10的</p><h5 id="MySQL的基本使用"><a href="#MySQL的基本使用" class="headerlink" title="MySQL的基本使用"></a>MySQL的基本使用</h5><h6 id="使用MySQL-Workbench管理数据库"><a href="#使用MySQL-Workbench管理数据库" class="headerlink" title="使用MySQL Workbench管理数据库"></a>使用MySQL Workbench管理数据库</h6><ol><li><p>连接数据库</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/rVdMhiko4e3U7m5.png"                      alt="图片.png"                ></p></li><li><p>了解主界面的组成部分</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/dZNcitK6pQjLC2x.png"                      alt="图片.png"                ></p><p>翻译一个单词，schemas: 模式</p></li><li><p>创建数据库</p><p>步骤如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/34PhTdzcELYeDAm.png"                      alt="图片.png"                ></p><p>创建数据库不要出现中文，如果有空格，之间用下划线连接</p><p>这部分跳过，都是一些软件的使用</p></li><li><p>创建数据表</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/dJsgFewLfOAnBR5.png"                      alt="图片.png"                ></p></li></ol><h6 id="使用SQL管理数据库"><a href="#使用SQL管理数据库" class="headerlink" title="使用SQL管理数据库"></a>使用SQL管理数据库</h6><ol><li><p>什么是SQL</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/tWr5PU1Bbqyul2G.png"                      alt="图片.png"                ></p></li><li><p>SQL能做什么</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/HumbTxqWvEs8GtC.png"                      alt="图片.png"                ></p></li><li><p>SQL的学习目标</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/aKRusbSqNBdzEi4.png"                      alt="图片.png"                ></p></li></ol><h6 id="SQL的SELECT语句"><a href="#SQL的SELECT语句" class="headerlink" title="SQL的SELECT语句"></a>SQL的SELECT语句</h6><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/IAhm3ZsBN5XOc7n.png"                      alt="图片.png"                ></p></li><li><p>select * 示例</p><p> <img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/H9zSALMmwTrcGVW.png"                      alt="图片.png"                ></p></li><li><p>SELECT列名称  示例</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/eDYLm3tQ8TEZH5V.png"                      alt="图片.png"                ></p></li></ol><h6 id="SQL的INSERI-INTO语句"><a href="#SQL的INSERI-INTO语句" class="headerlink" title="SQL的INSERI INTO语句"></a>SQL的INSERI INTO语句</h6><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/g92nZxFBSLEjkHt.png"                      alt="图片.png"                ></p></li><li><p>INSERT INTO 示例</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/B3P4GEVHXtnFemz.png"                      alt="图片.png"                ></p></li></ol><h6 id="SQL的UPDATE语句"><a href="#SQL的UPDATE语句" class="headerlink" title="SQL的UPDATE语句"></a>SQL的UPDATE语句</h6><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/bns5WkulfqNiXgj.png"                      alt="图片.png"                ></p></li><li><p>UPDATE示例 更新某一行中的一个列</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/AstEB1S9rPvM7dQ.png"                      alt="图片.png"                ></p></li><li><p>UPDATE示例 更新某一行中的若干列</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/JCxjUgZoyTFnXM4.png"                      alt="图片.png"                ></p></li></ol><h6 id="SQL中的DELETE语句"><a href="#SQL中的DELETE语句" class="headerlink" title="SQL中的DELETE语句"></a>SQL中的DELETE语句</h6><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/ZObfUPIWl9KXrzj.png"                      alt="图片.png"                ></p></li><li><p> DELETE 示例</p></li></ol><p>   <img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/nuCa5LT7DO28cyF.png"                      alt="图片.png"                ></p><p>   注意: 要记住加where条件</p><h6 id="SQL的WHERE子句"><a href="#SQL的WHERE子句" class="headerlink" title="SQL的WHERE子句"></a>SQL的WHERE子句</h6><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/isePrSU3dAOMwgV.png"                      alt="图片.png"                ></p></li><li><p>可在WHERE子句中使用的运算符</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/fs7cCwNKTAObrUL.png"                      alt="图片.png"                ></p></li><li><p>WHERE子句示例</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/RzfVJEa6nPWUr3d.png"                      alt="图片.png"                ></p></li></ol><h6 id="SQL的AND和OR运算符"><a href="#SQL的AND和OR运算符" class="headerlink" title="SQL的AND和OR运算符"></a>SQL的AND和OR运算符</h6><p>and:</p><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/qMa3DObWghkYLK7.png"                      alt="图片.png"                ></p></li><li><p> AND运算符示例</p></li></ol><p>   <img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/nxX4mlYHOC5N9Ak.png"                      alt="图片.png"                ></p><ol start="3"><li><p>OR运算符示例</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/TIL2roJhcVd3tWM.png"                      alt="图片.png"                ></p></li></ol><h6 id="SQL的ORDER-BY子句"><a href="#SQL的ORDER-BY子句" class="headerlink" title="SQL的ORDER BY子句"></a>SQL的ORDER BY子句</h6><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/gepREvonwxAZN6D.png"                      alt="图片.png"                ></p></li><li><p>order by 子句 - 升序排序</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/7vgW6MlQiIehA42.png"                      alt="图片.png"                ></p></li><li><p>order by 子句 - 降序排序</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/BmdsiX2La9Uzx8G.png"                      alt="图片.png"                ></p></li></ol><h6 id="SQL的COUNT-函数"><a href="#SQL的COUNT-函数" class="headerlink" title="SQL的COUNT(*)函数"></a>SQL的COUNT(*)函数</h6><ol><li><p>语法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/cJDsiAB8gFeUkrf.png"                      alt="图片.png"                ></p></li><li><p>COUNT(*)示例</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/IFMO5orH3bflmDL.png"                      alt="图片.png"                ></p></li><li><p>使用AS为列设置别名</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/8WjO3kMUF9ouKPV.png"                      alt="图片.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/l8MDPHiArY3CRn7.png"                      alt="图片.png"                ></p></li></ol><h6 id="演示如何保存和打开-sql的文件"><a href="#演示如何保存和打开-sql的文件" class="headerlink" title="演示如何保存和打开.sql的文件"></a>演示如何保存和打开.sql的文件</h6><p>保存:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/fmdwxzFu3oQU4rb.png"                      alt="图片.png"                ></p><p>打开:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/mzkDwE1ISdjt2V4.png"                      alt="图片.png"                ></p><h4 id="在项目中操作MySQL"><a href="#在项目中操作MySQL" class="headerlink" title="在项目中操作MySQL"></a>在项目中操作MySQL</h4><h5 id="在项目中操作数据库的步骤"><a href="#在项目中操作数据库的步骤" class="headerlink" title="在项目中操作数据库的步骤"></a>在项目中操作数据库的步骤</h5><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/DBfzOauv17GjxCy.png"                      alt="图片.png"                ></p><h6 id="安装与配置mysql模块"><a href="#安装与配置mysql模块" class="headerlink" title="安装与配置mysql模块"></a>安装与配置mysql模块</h6><ol><li><p>安装</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/Cf4ch3lAF5tTPJI.png"                      alt="图片.png"                ></p></li><li><p>配置mysql模块</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/WUIJfgbL4s1X23u.png"                      alt="图片.png"                ></p><p>使用cre atePool方法与数据库建立连接</p></li><li><p>测试mysql模块能否正常工作</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/hs9BjxfYEKmkTt1.png"                      alt="图片.png"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/pdZuxVBE1DizvbP.png"                      alt="图片.png"                ></p></li></ol><h6 id="连接到MySQL数据库"><a href="#连接到MySQL数据库" class="headerlink" title="连接到MySQL数据库"></a>连接到MySQL数据库</h6><ol><li><p>查询users表中所有的数据</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/mjZdCKhkI6OaYrU.png"                      alt="图片.png"                ></p><p>注意: 如果执行的是select语句，则执行的结果是数组(对象数组)</p></li></ol><h6 id="通过mysql模块执行SQL语句"><a href="#通过mysql模块执行SQL语句" class="headerlink" title="通过mysql模块执行SQL语句"></a>通过mysql模块执行SQL语句</h6><ol><li><p>插入数据</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/O2kxNPIHcDMgRK7.png"                      alt="图片.png"                ></p><p>注意: 如果执行的是inset into插入语句，则result是一个对象，可以通过affectedRows属性，来判断是否插入数据成功:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/fiOM2UYAWZNqHlX.png"                      alt="图片.png"                ></p></li><li><p>插入数据的便捷方式</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/IvfSua1xmBCoZ74.png"                      alt="图片.png"                ></p></li><li><p>更新数据</p><p>可以通过如下方式，更新表中的数据:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/CAOSK5ZFHP9BlTo.png"                      alt="图片.png"                ></p><p>演示:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/ERZowu53I2ktSlp.png"                      alt="图片.png"                ></p><p>注意: 执行了update语句之后，执行的结果，也是一个对象，可以通过affectedRows判断是否更新成功</p></li><li><p>更新数据的便捷方式</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/iS6qoMFDhYGnAyC.png"                      alt="图片.png"                ></p><p>演示:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/7IWaKsQE3Fnz5Jr.png"                      alt="图片.png"                ></p></li><li><p>删除数据</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/MQdpb87KJDcN3PB.png"                      alt="图片.png"                ></p><p>演示:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/I5sfkh6Y1rTziRl.png"                      alt="图片.png"                ></p></li><li><p>标记删除</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/hY5ntTFgsMIBlPL.png"                      alt="图片.png"                ></p><p>演示:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/EknMcNSyr38FXOG.png"                      alt="图片.png"                ></p></li></ol><h4 id="前后端的身份认证"><a href="#前后端的身份认证" class="headerlink" title="前后端的身份认证"></a>前后端的身份认证</h4><h5 id="Web开发模式"><a href="#Web开发模式" class="headerlink" title="Web开发模式"></a>Web开发模式</h5><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/eT5phUlWnXEtLSZ.png"                      alt="图片.png"                ></p><ol><li><p>服务端渲染的Web开发模式</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/ZLaxAsdVzSG7yCP.png"                      alt="图片.png"                ></p></li><li><p>服务端渲染的优缺点</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/HwIehp5tWMgANEc.png"                      alt="图片.png"                ></p></li><li><p>前后端分离的Web开发模式</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/4CVB9X8AaxWNJIT.png"                      alt="图片.png"                ></p></li><li><p>前后端分离的Web开发模式的优缺点</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/28/3UjwlcfkQ4FXqbZ.png"                      alt="图片.png"                ></p></li><li><p>如何选择Web开发模式</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/PIflnoRGWHeXwNg.png"                      alt="image.png"                ></p></li></ol><h5 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h5><ol><li><p>什么是身份认证</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/KSv1Wecdu68mbZA.png"                      alt="image.png"                ></p></li><li><p>为什么需要身份认证</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/gRSiWFX4x6McoQ1.png"                      alt="image.png"                ></p></li><li><p>不同开发模式下的身份认证</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/QYX3AJKZehLzVcd.png"                      alt="image.png"                ></p></li></ol><h5 id="Session认证机制"><a href="#Session认证机制" class="headerlink" title="Session认证机制"></a>Session认证机制</h5><ol><li><p>HTTP协议的无状态性</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/yQF8ef7jHBGn1YZ.png"                      alt="image.png"                ></p></li><li><p>如何突破HTTP无状态的限制</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/MUvJsXih4dkguHt.png"                      alt="image.png"                ></p></li><li><p>什么是Cookie</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/crMNo3fTCDzRIw1.png"                      alt="image.png"                ></p></li><li><p>Cookie在身份认证中的作用</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/xZ7RWK52GAvtbCF.png"                      alt="image.png"                ></p></li><li><p>Cookie不具有安全性</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/IFAlUKCNQrq5YXB.png"                      alt="image.png"                ></p></li><li><p>提高身份认证的安全性</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/WAbEIMqoGhlXKrR.png"                      alt="image.png"                ></p></li><li><p>Session的工作原理</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/CYO2J6xNhUMVpmL.png"                      alt="image.png"                ></p></li></ol><h5 id="在Express中使用Session认证"><a href="#在Express中使用Session认证" class="headerlink" title="在Express中使用Session认证"></a>在Express中使用Session认证</h5><ol><li><p>安装express-session中间件</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/Ea7nZsjJIXG2SKP.png"                      alt="image.png"                ></p></li><li><p>配置express-session中间件</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/YpdwUhB56GxN2XT.png"                      alt="image.png"                ></p></li><li><p>向session中存数据</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/cqWzboyums6O1da.png"                      alt="图片.png"                ></p></li><li><p>从session中取数据</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/YLXQp9tdc2ez3nr.png"                      alt="图片.png"                ></p></li><li><p>清空session</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/KeJClO3RvNIuhiF.png"                      alt="图片.png"                ></p><p>调用destroy()函数，只会清空当前用户的session</p></li></ol><h5 id="JWT认证机制"><a href="#JWT认证机制" class="headerlink" title="JWT认证机制"></a>JWT认证机制</h5><ol><li><p>了解Session认证的局限性</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/NDlSQVJYduqGHek.png"                      alt="图片.png"                ></p></li><li><p>什么是JWT</p><p>JWT(英文全称: JSON Web Token)是目前最流行的跨域认证解决方案</p></li><li><p>JWT的工作原理</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/qFH267rSgbyjiYO.png"                      alt="图片.png"                ></p><p> 核心原理: <strong>用户的信息通过Token字符串的形式，保存在客户端浏览器中，服务器通过还原Token字符串的形式来认证用户的身份</strong></p></li><li><p>JWT的组成部分</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/jgHqQRXdmiEByTa.png"                      alt="图片.png"                ></p></li><li><p>JWT的三个部分各自代表的含义</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/WUvZeRuKEzq9B7L.png"                      alt="图片.png"                ></p></li><li><p>JWT的使用方式</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/yaEmuDsn7YK9zAN.png"                      alt="图片.png"                ></p></li></ol><h5 id="在Express中使用JWT"><a href="#在Express中使用JWT" class="headerlink" title="在Express中使用JWT"></a>在Express中使用JWT</h5><ol><li><p>安装JWT相关的包</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/prjLmGa2XkThwAd.png"                      alt="图片.png"                ></p></li><li><p>导入JWT相关的包</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/VlLy45Dut6OhMce.png"                      alt="图片.png"                ></p></li><li><p>定义secret秘钥</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/BX2HdkJPeqQMjFa.png"                      alt="图片.png"                ></p></li><li><p>在登录成功后生成JWT字符串</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/ZQkcidf5OMPoGWL.png"                      alt="图片.png"                ></p><p>注意: 一定不要把密码加密到token中</p></li><li><p>将JWT字符串还原为JSON对象</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/ZESIVtJqKy3prhm.png"                      alt="图片.png"                ></p><p>可以通过指定<code>unless</code>方法说明哪些方法不需要token即可访问，<code>[]</code>里面为一个正则表达式，<code>//</code>代表里面是一个正则表达式</p></li><li><p>使用req.user获取用户信息</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/ZJjLmtSMgcReGYv.png"                      alt="图片.png"                ></p></li><li><p>捕获解析JWT失败后产生的错误</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/03/29/x7cCYloMRwXFsrv.png"                      alt="图片.png"                ></p><p>视频地址: <a class="link"   href="https://www.bilibili.com/video/BV1a34y167AZ?p=76" >https://www.bilibili.com/video/BV1a34y167AZ?p=76<i class="fas fa-external-link-alt"></i></a></p></li></ol><h4 id="项目-后台API接口项目"><a href="#项目-后台API接口项目" class="headerlink" title="项目-后台API接口项目"></a>项目-后台API接口项目</h4><h5 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h5><p>在线文档地址: <a class="link"   href="http://escook.cn:8088/#/" >http://escook.cn:8088/#/<i class="fas fa-external-link-alt"></i></a></p><p>我们可以参考上面的在线文档</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;初识Node，什么是Node-js&quot;&gt;&lt;a href=&quot;#初识Node，什么是Node-js&quot; class=&quot;headerlink&quot; title=&quot;初识Node，什么是Node.js&quot;&gt;&lt;/a&gt;初识Node，什么是Node.js&lt;/h4&gt;&lt;p&gt;Node.js是一个</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>长房集团登录参数j_password(AES加密)</title>
    <link href="http://example.com/2022/03/23/%E9%95%BF%E6%88%BF%E9%9B%86%E5%9B%A2%E7%99%BB%E5%BD%95%E5%8F%82%E6%95%B0j_password/"/>
    <id>http://example.com/2022/03/23/%E9%95%BF%E6%88%BF%E9%9B%86%E5%9B%A2%E7%99%BB%E5%BD%95%E5%8F%82%E6%95%B0j_password/</id>
    <published>2022-03-23T06:34:30.000Z</published>
    <updated>2022-03-23T10:52:50.234Z</updated>
    
    <content type="html"><![CDATA[<p>目标网站: <a class="link"   href="http://eip.chanfine.com/" >http://eip.chanfine.com/<i class="fas fa-external-link-alt"></i></a></p><p>打开登录界面，随便输入一个用户名和密码后:</p><p><a href="https://imgtu.com/i/q1iFVU"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/23/q1iFVU.png"                      alt="q1iFVU.png"                ></a></p><p>我们会看到这个密码是加密过的，我们采用搜索的方式进行初步定位:</p><p><a href="https://imgtu.com/i/q1idqf"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/23/q1idqf.png"                      alt="q1idqf.png"                ></a></p><p>搜索后发现这个还是容易就定位到了加密函数的位置:</p><p><a href="https://imgtu.com/i/q1i5oF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/23/q1i5oF.png"                      alt="q1i5oF.png"                ></a></p><p>然后我们在加密处打断点，然后跟进到函数内部:</p><p><a href="https://imgtu.com/i/q1FkOP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/23/q1FkOP.png"                      alt="q1FkOP.png"                ></a></p><p><a href="https://imgtu.com/i/q1Fgte"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/23/q1Fgte.png"                      alt="q1Fgte.png"                ></a></p><p>可以看到，这个<code>desEncrypt</code>函数就返回了加密后的结果，所以我们只需要扣下相关代码运行即可:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> CryptoJS = CryptoJS || <span class="function"><span class="keyword">function</span> (<span class="params">u, p</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> d = &#123;&#125;,</span><br><span class="line">        l = d.lib = &#123;&#125;,</span><br><span class="line">        s = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">        t = l.Base = &#123;</span><br><span class="line">            <span class="attr">extend</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    s.prototype = <span class="built_in">this</span>;</span><br><span class="line">                    <span class="keyword">var</span> c = <span class="keyword">new</span> s;</span><br><span class="line">                    a &amp;&amp; c.mixIn(a);</span><br><span class="line">                    c.hasOwnProperty(<span class="string">&quot;init&quot;</span>) || (c.init = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        c.$super.init.apply(<span class="built_in">this</span>, <span class="built_in">arguments</span>)</span><br><span class="line">                    &#125;);</span><br><span class="line">                    c.init.prototype = c;</span><br><span class="line">                    c.$super = <span class="built_in">this</span>;</span><br><span class="line">                    <span class="keyword">return</span> c</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">create</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> a = <span class="built_in">this</span>.extend();</span><br><span class="line">                    a.init.apply(a, <span class="built_in">arguments</span>);</span><br><span class="line">                    <span class="keyword">return</span> a</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">                <span class="attr">mixIn</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> c <span class="keyword">in</span> a)</span><br><span class="line">                        a.hasOwnProperty(c) &amp;&amp; (<span class="built_in">this</span>[c] = a[c]);</span><br><span class="line">                    a.hasOwnProperty(<span class="string">&quot;toString&quot;</span>) &amp;&amp; (<span class="built_in">this</span>.toString = a.toString)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">clone</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.init.prototype.extend(<span class="built_in">this</span>)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        r = l.WordArray = t.extend(&#123;</span><br><span class="line">            <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, c</span>) </span>&#123;</span><br><span class="line">                    a = <span class="built_in">this</span>.words = a || [];</span><br><span class="line">                    <span class="built_in">this</span>.sigBytes = c != p ? c : <span class="number">4</span> * a.length</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">toString</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> (a || v).stringify(<span class="built_in">this</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">concat</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> c = <span class="built_in">this</span>.words,</span><br><span class="line">                        e = a.words,</span><br><span class="line">                        j = <span class="built_in">this</span>.sigBytes;</span><br><span class="line">                    a = a.sigBytes;</span><br><span class="line">                    <span class="built_in">this</span>.clamp();</span><br><span class="line">                    <span class="keyword">if</span> (j % <span class="number">4</span>)</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; a; k++)</span><br><span class="line">                            c[j + k &gt;&gt;&gt; <span class="number">2</span>] |= (e[k &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * (k % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">24</span> - <span class="number">8</span> * ((j + k) % <span class="number">4</span>);</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">65535</span> &lt; e.length)</span><br><span class="line">                        <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; a; k += <span class="number">4</span>)</span><br><span class="line">                            c[j + k &gt;&gt;&gt; <span class="number">2</span>] = e[k &gt;&gt;&gt; <span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        c.push.apply(c, e);</span><br><span class="line">                    <span class="built_in">this</span>.sigBytes += a;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">clamp</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> a = <span class="built_in">this</span>.words,</span><br><span class="line">                        c = <span class="built_in">this</span>.sigBytes;</span><br><span class="line">                    a[c &gt;&gt;&gt; <span class="number">2</span>] &amp;= <span class="number">4294967295</span> &lt;&lt; <span class="number">32</span> - <span class="number">8</span> * (c % <span class="number">4</span>);</span><br><span class="line">                    a.length = u.ceil(c / <span class="number">4</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">clone</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> a = t.clone.call(<span class="built_in">this</span>);</span><br><span class="line">                    a.words = <span class="built_in">this</span>.words.slice(<span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">return</span> a</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">random</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> c = [], e = <span class="number">0</span>; e &lt; a; e += <span class="number">4</span>)</span><br><span class="line">                        c.push(<span class="number">4294967296</span> * u.random() | <span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> r.init(c, a)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">        w = d.enc = &#123;&#125;,</span><br><span class="line">        v = w.Hex = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> c = a.words;</span><br><span class="line">                    a = a.sigBytes;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> e = [], j = <span class="number">0</span>; j &lt; a; j++) &#123;</span><br><span class="line">                        <span class="keyword">var</span> k = c[j &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * (j % <span class="number">4</span>) &amp; <span class="number">255</span>;</span><br><span class="line">                        e.push((k &gt;&gt;&gt; <span class="number">4</span>).toString(<span class="number">16</span>));</span><br><span class="line">                        e.push((k &amp; <span class="number">15</span>).toString(<span class="number">16</span>))</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> e.join(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">parse</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> c = a.length, e = [], j = <span class="number">0</span>; j &lt; c; j += <span class="number">2</span>)</span><br><span class="line">                        e[j &gt;&gt;&gt; <span class="number">3</span>] |= <span class="built_in">parseInt</span>(a.substr(j, <span class="number">2</span>), <span class="number">16</span>) &lt;&lt; <span class="number">24</span> - <span class="number">4</span> * (j % <span class="number">8</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> r.init(e, c / <span class="number">2</span>)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        b = w.Latin1 = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> c = a.words;</span><br><span class="line">                    a = a.sigBytes;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> e = [], j = <span class="number">0</span>; j &lt; a; j++)</span><br><span class="line">                        e.push(<span class="built_in">String</span>.fromCharCode(c[j &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * (j % <span class="number">4</span>) &amp; <span class="number">255</span>));</span><br><span class="line">                    <span class="keyword">return</span> e.join(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">parse</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> c = a.length, e = [], j = <span class="number">0</span>; j &lt; c; j++)</span><br><span class="line">                        e[j &gt;&gt;&gt; <span class="number">2</span>] |= (a.charCodeAt(j) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">24</span> - <span class="number">8</span> * (j % <span class="number">4</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> r.init(e, c)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        x = w.Utf8 = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(<span class="built_in">escape</span>(b.stringify(a)))</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (c) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="built_in">Error</span>(<span class="string">&quot;Malformed UTF-8 data&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">parse</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> b.parse(<span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(a)))</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        q = l.BufferedBlockAlgorithm = t.extend(&#123;</span><br><span class="line">            <span class="attr">reset</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>._data = <span class="keyword">new</span> r.init;</span><br><span class="line">                    <span class="built_in">this</span>._nDataBytes = <span class="number">0</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">_append</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> a &amp;&amp; (a = x.parse(a));</span><br><span class="line">                    <span class="built_in">this</span>._data.concat(a);</span><br><span class="line">                    <span class="built_in">this</span>._nDataBytes += a.sigBytes</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">_process</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> c = <span class="built_in">this</span>._data,</span><br><span class="line">                        e = c.words,</span><br><span class="line">                        j = c.sigBytes,</span><br><span class="line">                        k = <span class="built_in">this</span>.blockSize,</span><br><span class="line">                        b = j / (<span class="number">4</span> * k),</span><br><span class="line">                        b = a ? u.ceil(b) : u.max((b | <span class="number">0</span>) - <span class="built_in">this</span>._minBufferSize, <span class="number">0</span>);</span><br><span class="line">                    a = b * k;</span><br><span class="line">                    j = u.min(<span class="number">4</span> * a, j);</span><br><span class="line">                    <span class="keyword">if</span> (a) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> q = <span class="number">0</span>; q &lt; a; q += k)</span><br><span class="line">                            <span class="built_in">this</span>._doProcessBlock(e, q);</span><br><span class="line">                        q = e.splice(<span class="number">0</span>, a);</span><br><span class="line">                        c.sigBytes -= j</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> r.init(q, j)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">clone</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> a = t.clone.call(<span class="built_in">this</span>);</span><br><span class="line">                    a._data = <span class="built_in">this</span>._data.clone();</span><br><span class="line">                    <span class="keyword">return</span> a</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">_minBufferSize</span>: <span class="number">0</span></span><br><span class="line">        &#125;);</span><br><span class="line">    l.Hasher = q.extend(&#123;</span><br><span class="line">        <span class="attr">cfg</span>: t.extend(),</span><br><span class="line">        <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.cfg = <span class="built_in">this</span>.cfg.extend(a);</span><br><span class="line">                <span class="built_in">this</span>.reset()</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">reset</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                q.reset.call(<span class="built_in">this</span>);</span><br><span class="line">                <span class="built_in">this</span>._doReset()</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">update</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>._append(a);</span><br><span class="line">                <span class="built_in">this</span>._process();</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">finalize</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                a &amp;&amp; <span class="built_in">this</span>._append(a);</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span>._doFinalize()</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">blockSize</span>: <span class="number">16</span>,</span><br><span class="line">        <span class="attr">_createHelper</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">b, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> (<span class="keyword">new</span> a.init(e)).finalize(b)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_createHmacHelper</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">b, e</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> (<span class="keyword">new</span> n.HMAC.init(a, e)).finalize(b)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> n = d.algo = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> d</span><br><span class="line">&#125;(<span class="built_in">Math</span>);</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> u = CryptoJS,</span><br><span class="line">        p = u.lib.WordArray;</span><br><span class="line">    u.enc.Base64 = &#123;</span><br><span class="line">        <span class="attr">stringify</span>: <span class="function"><span class="keyword">function</span> (<span class="params">d</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> l = d.words,</span><br><span class="line">                    p = d.sigBytes,</span><br><span class="line">                    t = <span class="built_in">this</span>._map;</span><br><span class="line">                d.clamp();</span><br><span class="line">                d = [];</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> r = <span class="number">0</span>; r &lt; p; r += <span class="number">3</span>)</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> w = (l[r &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * (r % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">16</span> | (l[r + <span class="number">1</span> &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * ((r + <span class="number">1</span>) % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">8</span> | l[r + <span class="number">2</span> &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - <span class="number">8</span> * ((r + <span class="number">2</span>) % <span class="number">4</span>) &amp; <span class="number">255</span>, v = <span class="number">0</span>; <span class="number">4</span> &gt; v &amp;&amp; r + <span class="number">0.75</span> * v &lt; p; v++)</span><br><span class="line">                        d.push(t.charAt(w &gt;&gt;&gt; <span class="number">6</span> * (<span class="number">3</span> - v) &amp; <span class="number">63</span>));</span><br><span class="line">                <span class="keyword">if</span> (l = t.charAt(<span class="number">64</span>))</span><br><span class="line">                    <span class="keyword">for</span> (; d.length % <span class="number">4</span>;)</span><br><span class="line">                        d.push(l);</span><br><span class="line">                <span class="keyword">return</span> d.join(<span class="string">&quot;&quot;</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">parse</span>: <span class="function"><span class="keyword">function</span> (<span class="params">d</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> l = d.length,</span><br><span class="line">                    s = <span class="built_in">this</span>._map,</span><br><span class="line">                    t = s.charAt(<span class="number">64</span>);</span><br><span class="line">                t &amp;&amp; (t = d.indexOf(t), -<span class="number">1</span> != t &amp;&amp; (l = t));</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> t = [], r = <span class="number">0</span>, w = <span class="number">0</span>; w &lt; l; w++)</span><br><span class="line">                    <span class="keyword">if</span> (w % <span class="number">4</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> v = s.indexOf(d.charAt(w - <span class="number">1</span>)) &lt;&lt; <span class="number">2</span> * (w % <span class="number">4</span>),</span><br><span class="line">                            b = s.indexOf(d.charAt(w)) &gt;&gt;&gt; <span class="number">6</span> - <span class="number">2</span> * (w % <span class="number">4</span>);</span><br><span class="line">                        t[r &gt;&gt;&gt; <span class="number">2</span>] |= (v | b) &lt;&lt; <span class="number">24</span> - <span class="number">8</span> * (r % <span class="number">4</span>);</span><br><span class="line">                        r++</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">return</span> p.create(t, r)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_map</span>: <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">u</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">p</span>(<span class="params">b, n, a, c, e, j, k</span>) </span>&#123;</span><br><span class="line">        b = b + (n &amp; a | ~n &amp; c) + e + k;</span><br><span class="line">        <span class="keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="number">32</span> - j) + n</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">d</span>(<span class="params">b, n, a, c, e, j, k</span>) </span>&#123;</span><br><span class="line">        b = b + (n &amp; c | a &amp; ~c) + e + k;</span><br><span class="line">        <span class="keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="number">32</span> - j) + n</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">l</span>(<span class="params">b, n, a, c, e, j, k</span>) </span>&#123;</span><br><span class="line">        b = b + (n ^ a ^ c) + e + k;</span><br><span class="line">        <span class="keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="number">32</span> - j) + n</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params">b, n, a, c, e, j, k</span>) </span>&#123;</span><br><span class="line">        b = b + (a ^ (n | ~c)) + e + k;</span><br><span class="line">        <span class="keyword">return</span> (b &lt;&lt; j | b &gt;&gt;&gt; <span class="number">32</span> - j) + n</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b = [], x = <span class="number">0</span>; <span class="number">64</span> &gt; x; x++)</span><br><span class="line">        b[x] = <span class="number">4294967296</span> * u.abs(u.sin(x + <span class="number">1</span>)) | <span class="number">0</span>;</span><br><span class="line">    r = r.MD5 = v.extend(&#123;</span><br><span class="line">        <span class="attr">_doReset</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>._hash = <span class="keyword">new</span> w.init([<span class="number">1732584193</span>, <span class="number">4023233417</span>, <span class="number">2562383102</span>, <span class="number">271733878</span>])</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doProcessBlock</span>: <span class="function"><span class="keyword">function</span> (<span class="params">q, n</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">0</span>; <span class="number">16</span> &gt; a; a++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> c = n + a,</span><br><span class="line">                        e = q[c];</span><br><span class="line">                    q[c] = (e &lt;&lt; <span class="number">8</span> | e &gt;&gt;&gt; <span class="number">24</span>) &amp; <span class="number">16711935</span> | (e &lt;&lt; <span class="number">24</span> | e &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">4278255360</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">var</span> a = <span class="built_in">this</span>._hash.words,</span><br><span class="line">                    c = q[n + <span class="number">0</span>],</span><br><span class="line">                    e = q[n + <span class="number">1</span>],</span><br><span class="line">                    j = q[n + <span class="number">2</span>],</span><br><span class="line">                    k = q[n + <span class="number">3</span>],</span><br><span class="line">                    z = q[n + <span class="number">4</span>],</span><br><span class="line">                    r = q[n + <span class="number">5</span>],</span><br><span class="line">                    t = q[n + <span class="number">6</span>],</span><br><span class="line">                    w = q[n + <span class="number">7</span>],</span><br><span class="line">                    v = q[n + <span class="number">8</span>],</span><br><span class="line">                    A = q[n + <span class="number">9</span>],</span><br><span class="line">                    B = q[n + <span class="number">10</span>],</span><br><span class="line">                    C = q[n + <span class="number">11</span>],</span><br><span class="line">                    u = q[n + <span class="number">12</span>],</span><br><span class="line">                    D = q[n + <span class="number">13</span>],</span><br><span class="line">                    E = q[n + <span class="number">14</span>],</span><br><span class="line">                    x = q[n + <span class="number">15</span>],</span><br><span class="line">                    f = a[<span class="number">0</span>],</span><br><span class="line">                    m = a[<span class="number">1</span>],</span><br><span class="line">                    g = a[<span class="number">2</span>],</span><br><span class="line">                    h = a[<span class="number">3</span>],</span><br><span class="line">                    f = p(f, m, g, h, c, <span class="number">7</span>, b[<span class="number">0</span>]),</span><br><span class="line">                    h = p(h, f, m, g, e, <span class="number">12</span>, b[<span class="number">1</span>]),</span><br><span class="line">                    g = p(g, h, f, m, j, <span class="number">17</span>, b[<span class="number">2</span>]),</span><br><span class="line">                    m = p(m, g, h, f, k, <span class="number">22</span>, b[<span class="number">3</span>]),</span><br><span class="line">                    f = p(f, m, g, h, z, <span class="number">7</span>, b[<span class="number">4</span>]),</span><br><span class="line">                    h = p(h, f, m, g, r, <span class="number">12</span>, b[<span class="number">5</span>]),</span><br><span class="line">                    g = p(g, h, f, m, t, <span class="number">17</span>, b[<span class="number">6</span>]),</span><br><span class="line">                    m = p(m, g, h, f, w, <span class="number">22</span>, b[<span class="number">7</span>]),</span><br><span class="line">                    f = p(f, m, g, h, v, <span class="number">7</span>, b[<span class="number">8</span>]),</span><br><span class="line">                    h = p(h, f, m, g, A, <span class="number">12</span>, b[<span class="number">9</span>]),</span><br><span class="line">                    g = p(g, h, f, m, B, <span class="number">17</span>, b[<span class="number">10</span>]),</span><br><span class="line">                    m = p(m, g, h, f, C, <span class="number">22</span>, b[<span class="number">11</span>]),</span><br><span class="line">                    f = p(f, m, g, h, u, <span class="number">7</span>, b[<span class="number">12</span>]),</span><br><span class="line">                    h = p(h, f, m, g, D, <span class="number">12</span>, b[<span class="number">13</span>]),</span><br><span class="line">                    g = p(g, h, f, m, E, <span class="number">17</span>, b[<span class="number">14</span>]),</span><br><span class="line">                    m = p(m, g, h, f, x, <span class="number">22</span>, b[<span class="number">15</span>]),</span><br><span class="line">                    f = d(f, m, g, h, e, <span class="number">5</span>, b[<span class="number">16</span>]),</span><br><span class="line">                    h = d(h, f, m, g, t, <span class="number">9</span>, b[<span class="number">17</span>]),</span><br><span class="line">                    g = d(g, h, f, m, C, <span class="number">14</span>, b[<span class="number">18</span>]),</span><br><span class="line">                    m = d(m, g, h, f, c, <span class="number">20</span>, b[<span class="number">19</span>]),</span><br><span class="line">                    f = d(f, m, g, h, r, <span class="number">5</span>, b[<span class="number">20</span>]),</span><br><span class="line">                    h = d(h, f, m, g, B, <span class="number">9</span>, b[<span class="number">21</span>]),</span><br><span class="line">                    g = d(g, h, f, m, x, <span class="number">14</span>, b[<span class="number">22</span>]),</span><br><span class="line">                    m = d(m, g, h, f, z, <span class="number">20</span>, b[<span class="number">23</span>]),</span><br><span class="line">                    f = d(f, m, g, h, A, <span class="number">5</span>, b[<span class="number">24</span>]),</span><br><span class="line">                    h = d(h, f, m, g, E, <span class="number">9</span>, b[<span class="number">25</span>]),</span><br><span class="line">                    g = d(g, h, f, m, k, <span class="number">14</span>, b[<span class="number">26</span>]),</span><br><span class="line">                    m = d(m, g, h, f, v, <span class="number">20</span>, b[<span class="number">27</span>]),</span><br><span class="line">                    f = d(f, m, g, h, D, <span class="number">5</span>, b[<span class="number">28</span>]),</span><br><span class="line">                    h = d(h, f, m, g, j, <span class="number">9</span>, b[<span class="number">29</span>]),</span><br><span class="line">                    g = d(g, h, f, m, w, <span class="number">14</span>, b[<span class="number">30</span>]),</span><br><span class="line">                    m = d(m, g, h, f, u, <span class="number">20</span>, b[<span class="number">31</span>]),</span><br><span class="line">                    f = l(f, m, g, h, r, <span class="number">4</span>, b[<span class="number">32</span>]),</span><br><span class="line">                    h = l(h, f, m, g, v, <span class="number">11</span>, b[<span class="number">33</span>]),</span><br><span class="line">                    g = l(g, h, f, m, C, <span class="number">16</span>, b[<span class="number">34</span>]),</span><br><span class="line">                    m = l(m, g, h, f, E, <span class="number">23</span>, b[<span class="number">35</span>]),</span><br><span class="line">                    f = l(f, m, g, h, e, <span class="number">4</span>, b[<span class="number">36</span>]),</span><br><span class="line">                    h = l(h, f, m, g, z, <span class="number">11</span>, b[<span class="number">37</span>]),</span><br><span class="line">                    g = l(g, h, f, m, w, <span class="number">16</span>, b[<span class="number">38</span>]),</span><br><span class="line">                    m = l(m, g, h, f, B, <span class="number">23</span>, b[<span class="number">39</span>]),</span><br><span class="line">                    f = l(f, m, g, h, D, <span class="number">4</span>, b[<span class="number">40</span>]),</span><br><span class="line">                    h = l(h, f, m, g, c, <span class="number">11</span>, b[<span class="number">41</span>]),</span><br><span class="line">                    g = l(g, h, f, m, k, <span class="number">16</span>, b[<span class="number">42</span>]),</span><br><span class="line">                    m = l(m, g, h, f, t, <span class="number">23</span>, b[<span class="number">43</span>]),</span><br><span class="line">                    f = l(f, m, g, h, A, <span class="number">4</span>, b[<span class="number">44</span>]),</span><br><span class="line">                    h = l(h, f, m, g, u, <span class="number">11</span>, b[<span class="number">45</span>]),</span><br><span class="line">                    g = l(g, h, f, m, x, <span class="number">16</span>, b[<span class="number">46</span>]),</span><br><span class="line">                    m = l(m, g, h, f, j, <span class="number">23</span>, b[<span class="number">47</span>]),</span><br><span class="line">                    f = s(f, m, g, h, c, <span class="number">6</span>, b[<span class="number">48</span>]),</span><br><span class="line">                    h = s(h, f, m, g, w, <span class="number">10</span>, b[<span class="number">49</span>]),</span><br><span class="line">                    g = s(g, h, f, m, E, <span class="number">15</span>, b[<span class="number">50</span>]),</span><br><span class="line">                    m = s(m, g, h, f, r, <span class="number">21</span>, b[<span class="number">51</span>]),</span><br><span class="line">                    f = s(f, m, g, h, u, <span class="number">6</span>, b[<span class="number">52</span>]),</span><br><span class="line">                    h = s(h, f, m, g, k, <span class="number">10</span>, b[<span class="number">53</span>]),</span><br><span class="line">                    g = s(g, h, f, m, B, <span class="number">15</span>, b[<span class="number">54</span>]),</span><br><span class="line">                    m = s(m, g, h, f, e, <span class="number">21</span>, b[<span class="number">55</span>]),</span><br><span class="line">                    f = s(f, m, g, h, v, <span class="number">6</span>, b[<span class="number">56</span>]),</span><br><span class="line">                    h = s(h, f, m, g, x, <span class="number">10</span>, b[<span class="number">57</span>]),</span><br><span class="line">                    g = s(g, h, f, m, t, <span class="number">15</span>, b[<span class="number">58</span>]),</span><br><span class="line">                    m = s(m, g, h, f, D, <span class="number">21</span>, b[<span class="number">59</span>]),</span><br><span class="line">                    f = s(f, m, g, h, z, <span class="number">6</span>, b[<span class="number">60</span>]),</span><br><span class="line">                    h = s(h, f, m, g, C, <span class="number">10</span>, b[<span class="number">61</span>]),</span><br><span class="line">                    g = s(g, h, f, m, j, <span class="number">15</span>, b[<span class="number">62</span>]),</span><br><span class="line">                    m = s(m, g, h, f, A, <span class="number">21</span>, b[<span class="number">63</span>]);</span><br><span class="line">                a[<span class="number">0</span>] = a[<span class="number">0</span>] + f | <span class="number">0</span>;</span><br><span class="line">                a[<span class="number">1</span>] = a[<span class="number">1</span>] + m | <span class="number">0</span>;</span><br><span class="line">                a[<span class="number">2</span>] = a[<span class="number">2</span>] + g | <span class="number">0</span>;</span><br><span class="line">                a[<span class="number">3</span>] = a[<span class="number">3</span>] + h | <span class="number">0</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doFinalize</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> b = <span class="built_in">this</span>._data,</span><br><span class="line">                    n = b.words,</span><br><span class="line">                    a = <span class="number">8</span> * <span class="built_in">this</span>._nDataBytes,</span><br><span class="line">                    c = <span class="number">8</span> * b.sigBytes;</span><br><span class="line">                n[c &gt;&gt;&gt; <span class="number">5</span>] |= <span class="number">128</span> &lt;&lt; <span class="number">24</span> - c % <span class="number">32</span>;</span><br><span class="line">                <span class="keyword">var</span> e = u.floor(a / <span class="number">4294967296</span>);</span><br><span class="line">                n[(c + <span class="number">64</span> &gt;&gt;&gt; <span class="number">9</span> &lt;&lt; <span class="number">4</span>) + <span class="number">15</span>] = (e &lt;&lt; <span class="number">8</span> | e &gt;&gt;&gt; <span class="number">24</span>) &amp; <span class="number">16711935</span> | (e &lt;&lt; <span class="number">24</span> | e &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">4278255360</span>;</span><br><span class="line">                n[(c + <span class="number">64</span> &gt;&gt;&gt; <span class="number">9</span> &lt;&lt; <span class="number">4</span>) + <span class="number">14</span>] = (a &lt;&lt; <span class="number">8</span> | a &gt;&gt;&gt; <span class="number">24</span>) &amp; <span class="number">16711935</span> | (a &lt;&lt; <span class="number">24</span> | a &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">4278255360</span>;</span><br><span class="line">                b.sigBytes = <span class="number">4</span> * (n.length + <span class="number">1</span>);</span><br><span class="line">                <span class="built_in">this</span>._process();</span><br><span class="line">                b = <span class="built_in">this</span>._hash;</span><br><span class="line">                n = b.words;</span><br><span class="line">                <span class="keyword">for</span> (a = <span class="number">0</span>; <span class="number">4</span> &gt; a; a++)</span><br><span class="line">                    c = n[a],</span><br><span class="line">                    n[a] = (c &lt;&lt; <span class="number">8</span> | c &gt;&gt;&gt; <span class="number">24</span>) &amp; <span class="number">16711935</span> | (c &lt;&lt; <span class="number">24</span> | c &gt;&gt;&gt; <span class="number">8</span>) &amp; <span class="number">4278255360</span>;</span><br><span class="line">                <span class="keyword">return</span> b</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">clone</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> b = v.clone.call(<span class="built_in">this</span>);</span><br><span class="line">                b._hash = <span class="built_in">this</span>._hash.clone();</span><br><span class="line">                <span class="keyword">return</span> b</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    t.MD5 = v._createHelper(r);</span><br><span class="line">    t.HmacMD5 = v._createHmacHelper(r)</span><br><span class="line">&#125;)(<span class="built_in">Math</span>);</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> u = CryptoJS,</span><br><span class="line">        p = u.lib,</span><br><span class="line">        d = p.Base,</span><br><span class="line">        l = p.WordArray,</span><br><span class="line">        p = u.algo,</span><br><span class="line">        s = p.EvpKDF = d.extend(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: d.extend(&#123;</span><br><span class="line">                <span class="attr">keySize</span>: <span class="number">4</span>,</span><br><span class="line">                <span class="attr">hasher</span>: p.MD5,</span><br><span class="line">                <span class="attr">iterations</span>: <span class="number">1</span></span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params">d</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.cfg = <span class="built_in">this</span>.cfg.extend(d)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">compute</span>: <span class="function"><span class="keyword">function</span> (<span class="params">d, r</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> p = <span class="built_in">this</span>.cfg, s = p.hasher.create(), b = l.create(), u = b.words, q = p.keySize, p = p.iterations; u.length &lt; q;) &#123;</span><br><span class="line">                        n &amp;&amp; s.update(n);</span><br><span class="line">                        <span class="keyword">var</span> n = s.update(d).finalize(r);</span><br><span class="line">                        s.reset();</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">1</span>; a &lt; p; a++)</span><br><span class="line">                            n = s.finalize(n),</span><br><span class="line">                            s.reset();</span><br><span class="line">                        b.concat(n)</span><br><span class="line">                    &#125;</span><br><span class="line">                    b.sigBytes = <span class="number">4</span> * q;</span><br><span class="line">                    <span class="keyword">return</span> b</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    u.EvpKDF = <span class="function"><span class="keyword">function</span> (<span class="params">d, l, p</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> s.create(p).compute(d, l)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br><span class="line">CryptoJS.lib.Cipher || <span class="function"><span class="keyword">function</span> (<span class="params">u</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> p = CryptoJS,</span><br><span class="line">        d = p.lib,</span><br><span class="line">        l = d.Base,</span><br><span class="line">        s = d.WordArray,</span><br><span class="line">        t = d.BufferedBlockAlgorithm,</span><br><span class="line">        r = p.enc.Base64,</span><br><span class="line">        w = p.algo.EvpKDF,</span><br><span class="line">        v = d.Cipher = t.extend(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: l.extend(),</span><br><span class="line">            <span class="attr">createEncryptor</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.create(<span class="built_in">this</span>._ENC_XFORM_MODE, e, a)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">createDecryptor</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.create(<span class="built_in">this</span>._DEC_XFORM_MODE, e, a)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a, b</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.cfg = <span class="built_in">this</span>.cfg.extend(b);</span><br><span class="line">                    <span class="built_in">this</span>._xformMode = e;</span><br><span class="line">                    <span class="built_in">this</span>._key = a;</span><br><span class="line">                    <span class="built_in">this</span>.reset()</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">reset</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    t.reset.call(<span class="built_in">this</span>);</span><br><span class="line">                    <span class="built_in">this</span>._doReset()</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">process</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>._append(e);</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>._process()</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">finalize</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                    e &amp;&amp; <span class="built_in">this</span>._append(e);</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>._doFinalize()</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">keySize</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">ivSize</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">_ENC_XFORM_MODE</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">_DEC_XFORM_MODE</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">_createHelper</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    <span class="attr">encrypt</span>: <span class="function"><span class="keyword">function</span> (<span class="params">b, k, d</span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">return</span> (<span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> k ? c : a).encrypt(e, b, k, d)</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">decrypt</span>: <span class="function"><span class="keyword">function</span> (<span class="params">b, k, d</span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">return</span> (<span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> k ? c : a).decrypt(e, b, k, d)</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    d.StreamCipher = v.extend(&#123;</span><br><span class="line">        <span class="attr">_doFinalize</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span>._process(!<span class="number">0</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">blockSize</span>: <span class="number">1</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> b = p.mode = &#123;&#125;,</span><br><span class="line">        x = <span class="function"><span class="keyword">function</span> (<span class="params">e, a, b</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> c = <span class="built_in">this</span>._iv;</span><br><span class="line">            c ? <span class="built_in">this</span>._iv = u : c = <span class="built_in">this</span>._prevBlock;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> d = <span class="number">0</span>; d &lt; b; d++)</span><br><span class="line">                e[a + d] ^= c[d]</span><br><span class="line">        &#125;,</span><br><span class="line">        q = (d.BlockCipherMode = l.extend(&#123;</span><br><span class="line">            <span class="attr">createEncryptor</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.Encryptor.create(e, a)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">createDecryptor</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="built_in">this</span>.Decryptor.create(e, a)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>._cipher = e;</span><br><span class="line">                    <span class="built_in">this</span>._iv = a</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;)).extend();</span><br><span class="line">    q.Encryptor = q.extend(&#123;</span><br><span class="line">        <span class="attr">processBlock</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> b = <span class="built_in">this</span>._cipher,</span><br><span class="line">                c = b.blockSize;</span><br><span class="line">            x.call(<span class="built_in">this</span>, e, a, c);</span><br><span class="line">            b.encryptBlock(e, a);</span><br><span class="line">            <span class="built_in">this</span>._prevBlock = e.slice(a, a + c)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    q.Decryptor = q.extend(&#123;</span><br><span class="line">        <span class="attr">processBlock</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> b = <span class="built_in">this</span>._cipher,</span><br><span class="line">                c = b.blockSize,</span><br><span class="line">                d = e.slice(a, a + c);</span><br><span class="line">            b.decryptBlock(e, a);</span><br><span class="line">            x.call(<span class="built_in">this</span>, e, a, c);</span><br><span class="line">            <span class="built_in">this</span>._prevBlock = d</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    b = b.CBC = q;</span><br><span class="line">    q = (p.pad = &#123;&#125;).Pkcs7 = &#123;</span><br><span class="line">        <span class="attr">pad</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> c = <span class="number">4</span> * b, c = c - a.sigBytes % c, d = c &lt;&lt; <span class="number">24</span> | c &lt;&lt; <span class="number">16</span> | c &lt;&lt; <span class="number">8</span> | c, l = [], n = <span class="number">0</span>; n &lt; c; n += <span class="number">4</span>)</span><br><span class="line">                    l.push(d);</span><br><span class="line">                c = s.create(l, c);</span><br><span class="line">                a.concat(c)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">unpad</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                a.sigBytes -= a.words[a.sigBytes - <span class="number">1</span> &gt;&gt;&gt; <span class="number">2</span>] &amp; <span class="number">255</span></span><br><span class="line">            &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    d.BlockCipher = v.extend(&#123;</span><br><span class="line">        <span class="attr">cfg</span>: v.cfg.extend(&#123;</span><br><span class="line">            <span class="attr">mode</span>: b,</span><br><span class="line">            <span class="attr">padding</span>: q</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="attr">reset</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                v.reset.call(<span class="built_in">this</span>);</span><br><span class="line">                <span class="keyword">var</span> a = <span class="built_in">this</span>.cfg,</span><br><span class="line">                    b = a.iv,</span><br><span class="line">                    a = a.mode;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>._xformMode == <span class="built_in">this</span>._ENC_XFORM_MODE)</span><br><span class="line">                    <span class="keyword">var</span> c = a.createEncryptor;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    c = a.createDecryptor,</span><br><span class="line">                    <span class="built_in">this</span>._minBufferSize = <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">this</span>._mode = c.call(a, <span class="built_in">this</span>, b &amp;&amp; b.words)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doProcessBlock</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>._mode.processBlock(a, b)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">_doFinalize</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> a = <span class="built_in">this</span>.cfg.padding;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>._xformMode == <span class="built_in">this</span>._ENC_XFORM_MODE) &#123;</span><br><span class="line">                    a.pad(<span class="built_in">this</span>._data, <span class="built_in">this</span>.blockSize);</span><br><span class="line">                    <span class="keyword">var</span> b = <span class="built_in">this</span>._process(!<span class="number">0</span>)</span><br><span class="line">                &#125; <span class="keyword">else</span></span><br><span class="line">                    b = <span class="built_in">this</span>._process(!<span class="number">0</span>),</span><br><span class="line">                    a.unpad(b);</span><br><span class="line">                <span class="keyword">return</span> b</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">blockSize</span>: <span class="number">4</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> n = d.CipherParams = l.extend(&#123;</span><br><span class="line">            <span class="attr">init</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>.mixIn(a)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">toString</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> (a || <span class="built_in">this</span>.formatter).stringify(<span class="built_in">this</span>)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">        b = (p.format = &#123;&#125;).OpenSSL = &#123;</span><br><span class="line">            <span class="attr">stringify</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> b = a.ciphertext;</span><br><span class="line">                    a = a.salt;</span><br><span class="line">                    <span class="keyword">return</span> (a ? s.create([<span class="number">1398893684</span>, <span class="number">1701076831</span>]).concat(a).concat(b) : b).toString(r)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">parse</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">                    a = r.parse(a);</span><br><span class="line">                    <span class="keyword">var</span> b = a.words;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="number">1398893684</span> == b[<span class="number">0</span>] &amp;&amp; <span class="number">1701076831</span> == b[<span class="number">1</span>]) &#123;</span><br><span class="line">                        <span class="keyword">var</span> c = s.create(b.slice(<span class="number">2</span>, <span class="number">4</span>));</span><br><span class="line">                        b.splice(<span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">                        a.sigBytes -= <span class="number">16</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> n.create(&#123;</span><br><span class="line">                        <span class="attr">ciphertext</span>: a,</span><br><span class="line">                        <span class="attr">salt</span>: c</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        a = d.SerializableCipher = l.extend(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: l.extend(&#123;</span><br><span class="line">                <span class="attr">format</span>: b</span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="attr">encrypt</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b, c, d</span>) </span>&#123;</span><br><span class="line">                    d = <span class="built_in">this</span>.cfg.extend(d);</span><br><span class="line">                    <span class="keyword">var</span> l = a.createEncryptor(c, d);</span><br><span class="line">                    b = l.finalize(b);</span><br><span class="line">                    l = l.cfg;</span><br><span class="line">                    <span class="keyword">return</span> n.create(&#123;</span><br><span class="line">                        <span class="attr">ciphertext</span>: b,</span><br><span class="line">                        <span class="attr">key</span>: c,</span><br><span class="line">                        <span class="attr">iv</span>: l.iv,</span><br><span class="line">                        <span class="attr">algorithm</span>: a,</span><br><span class="line">                        <span class="attr">mode</span>: l.mode,</span><br><span class="line">                        <span class="attr">padding</span>: l.padding,</span><br><span class="line">                        <span class="attr">blockSize</span>: a.blockSize,</span><br><span class="line">                        <span class="attr">formatter</span>: d.format</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">decrypt</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b, c, d</span>) </span>&#123;</span><br><span class="line">                    d = <span class="built_in">this</span>.cfg.extend(d);</span><br><span class="line">                    b = <span class="built_in">this</span>._parse(b, d.format);</span><br><span class="line">                    <span class="keyword">return</span> a.createDecryptor(c, d).finalize(b.ciphertext)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">_parse</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> a ? b.parse(a, <span class="built_in">this</span>) : a</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">        p = (p.kdf = &#123;&#125;).OpenSSL = &#123;</span><br><span class="line">            <span class="attr">execute</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b, c, d</span>) </span>&#123;</span><br><span class="line">                d || (d = s.random(<span class="number">8</span>));</span><br><span class="line">                a = w.create(&#123;</span><br><span class="line">                    <span class="attr">keySize</span>: b + c</span><br><span class="line">                &#125;).compute(a, d);</span><br><span class="line">                c = s.create(a.words.slice(b), <span class="number">4</span> * c);</span><br><span class="line">                a.sigBytes = <span class="number">4</span> * b;</span><br><span class="line">                <span class="keyword">return</span> n.create(&#123;</span><br><span class="line">                    <span class="attr">key</span>: a,</span><br><span class="line">                    <span class="attr">iv</span>: c,</span><br><span class="line">                    <span class="attr">salt</span>: d</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        c = d.PasswordBasedCipher = a.extend(&#123;</span><br><span class="line">            <span class="attr">cfg</span>: a.cfg.extend(&#123;</span><br><span class="line">                <span class="attr">kdf</span>: p</span><br><span class="line">            &#125;),</span><br><span class="line">            <span class="attr">encrypt</span>: <span class="function"><span class="keyword">function</span> (<span class="params">b, c, d, l</span>) </span>&#123;</span><br><span class="line">                    l = <span class="built_in">this</span>.cfg.extend(l);</span><br><span class="line">                    d = l.kdf.execute(d, b.keySize, b.ivSize);</span><br><span class="line">                    l.iv = d.iv;</span><br><span class="line">                    b = a.encrypt.call(<span class="built_in">this</span>, b, c, d.key, l);</span><br><span class="line">                    b.mixIn(d);</span><br><span class="line">                    <span class="keyword">return</span> b</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">decrypt</span>: <span class="function"><span class="keyword">function</span> (<span class="params">b, c, d, l</span>) </span>&#123;</span><br><span class="line">                    l = <span class="built_in">this</span>.cfg.extend(l);</span><br><span class="line">                    c = <span class="built_in">this</span>._parse(c, l.format);</span><br><span class="line">                    d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt);</span><br><span class="line">                    l.iv = d.iv;</span><br><span class="line">                    <span class="keyword">return</span> a.decrypt.call(<span class="built_in">this</span>, b, c, d.key, l)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;();</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> u = CryptoJS, p = u.lib.BlockCipher, d = u.algo, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = <span class="number">0</span>; <span class="number">256</span> &gt; c; c++)</span><br><span class="line">        a[c] = <span class="number">128</span> &gt; c ? c &lt;&lt; <span class="number">1</span> : c &lt;&lt; <span class="number">1</span> ^ <span class="number">283</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>, j = <span class="number">0</span>, c = <span class="number">0</span>; <span class="number">256</span> &gt; c; c++) &#123;</span><br><span class="line">        <span class="keyword">var</span> k = j ^ j &lt;&lt; <span class="number">1</span> ^ j &lt;&lt; <span class="number">2</span> ^ j &lt;&lt; <span class="number">3</span> ^ j &lt;&lt; <span class="number">4</span>,</span><br><span class="line">            k = k &gt;&gt;&gt; <span class="number">8</span> ^ k &amp; <span class="number">255</span> ^ <span class="number">99</span>;</span><br><span class="line">        l[e] = k;</span><br><span class="line">        s[k] = e;</span><br><span class="line">        <span class="keyword">var</span> z = a[e],</span><br><span class="line">            F = a[z],</span><br><span class="line">            G = a[F],</span><br><span class="line">            y = <span class="number">257</span> * a[k] ^ <span class="number">16843008</span> * k;</span><br><span class="line">        t[e] = y &lt;&lt; <span class="number">24</span> | y &gt;&gt;&gt; <span class="number">8</span>;</span><br><span class="line">        r[e] = y &lt;&lt; <span class="number">16</span> | y &gt;&gt;&gt; <span class="number">16</span>;</span><br><span class="line">        w[e] = y &lt;&lt; <span class="number">8</span> | y &gt;&gt;&gt; <span class="number">24</span>;</span><br><span class="line">        v[e] = y;</span><br><span class="line">        y = <span class="number">16843009</span> * G ^ <span class="number">65537</span> * F ^ <span class="number">257</span> * z ^ <span class="number">16843008</span> * e;</span><br><span class="line">        b[k] = y &lt;&lt; <span class="number">24</span> | y &gt;&gt;&gt; <span class="number">8</span>;</span><br><span class="line">        x[k] = y &lt;&lt; <span class="number">16</span> | y &gt;&gt;&gt; <span class="number">16</span>;</span><br><span class="line">        q[k] = y &lt;&lt; <span class="number">8</span> | y &gt;&gt;&gt; <span class="number">24</span>;</span><br><span class="line">        n[k] = y;</span><br><span class="line">        e ? (e = z ^ a[a[a[G ^ z]]],</span><br><span class="line">            j ^= a[a[j]]) : e = j = <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> H = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">32</span>, <span class="number">64</span>, <span class="number">128</span>, <span class="number">27</span>, <span class="number">54</span>],</span><br><span class="line">        d = d.AES = p.extend(&#123;</span><br><span class="line">            <span class="attr">_doReset</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="built_in">this</span>._key, c = a.words, d = a.sigBytes / <span class="number">4</span>, a = <span class="number">4</span> * ((<span class="built_in">this</span>._nRounds = d + <span class="number">6</span>) + <span class="number">1</span>), e = <span class="built_in">this</span>._keySchedule = [], j = <span class="number">0</span>; j &lt; a; j++)</span><br><span class="line">                        <span class="keyword">if</span> (j &lt; d)</span><br><span class="line">                            e[j] = c[j];</span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">var</span> k = e[j - <span class="number">1</span>];</span><br><span class="line">                            j % d ? <span class="number">6</span> &lt; d &amp;&amp; <span class="number">4</span> == j % d &amp;&amp; (k = l[k &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | l[k &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | l[k &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | l[k &amp; <span class="number">255</span>]) : (k = k &lt;&lt; <span class="number">8</span> | k &gt;&gt;&gt; <span class="number">24</span>,</span><br><span class="line">                                k = l[k &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | l[k &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | l[k &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | l[k &amp; <span class="number">255</span>],</span><br><span class="line">                                k ^= H[j / d | <span class="number">0</span>] &lt;&lt; <span class="number">24</span>);</span><br><span class="line">                            e[j] = e[j - d] ^ k</span><br><span class="line">                        &#125;</span><br><span class="line">                    c = <span class="built_in">this</span>._invKeySchedule = [];</span><br><span class="line">                    <span class="keyword">for</span> (d = <span class="number">0</span>; d &lt; a; d++)</span><br><span class="line">                        j = a - d,</span><br><span class="line">                        k = d % <span class="number">4</span> ? e[j] : e[j - <span class="number">4</span>],</span><br><span class="line">                        c[d] = <span class="number">4</span> &gt; d || <span class="number">4</span> &gt;= j ? k : b[l[k &gt;&gt;&gt; <span class="number">24</span>]] ^ x[l[k &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>]] ^ q[l[k &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>]] ^ n[l[k &amp; <span class="number">255</span>]]</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">encryptBlock</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">                    <span class="built_in">this</span>._doCryptBlock(a, b, <span class="built_in">this</span>._keySchedule, t, r, w, v, l)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">decryptBlock</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, c</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> d = a[c + <span class="number">1</span>];</span><br><span class="line">                    a[c + <span class="number">1</span>] = a[c + <span class="number">3</span>];</span><br><span class="line">                    a[c + <span class="number">3</span>] = d;</span><br><span class="line">                    <span class="built_in">this</span>._doCryptBlock(a, c, <span class="built_in">this</span>._invKeySchedule, b, x, q, n, s);</span><br><span class="line">                    d = a[c + <span class="number">1</span>];</span><br><span class="line">                    a[c + <span class="number">1</span>] = a[c + <span class="number">3</span>];</span><br><span class="line">                    a[c + <span class="number">3</span>] = d</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">_doCryptBlock</span>: <span class="function"><span class="keyword">function</span> (<span class="params">a, b, c, d, e, j, l, f</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> m = <span class="built_in">this</span>._nRounds, g = a[b] ^ c[<span class="number">0</span>], h = a[b + <span class="number">1</span>] ^ c[<span class="number">1</span>], k = a[b + <span class="number">2</span>] ^ c[<span class="number">2</span>], n = a[b + <span class="number">3</span>] ^ c[<span class="number">3</span>], p = <span class="number">4</span>, r = <span class="number">1</span>; r &lt; m; r++)</span><br><span class="line">                        <span class="keyword">var</span> q = d[g &gt;&gt;&gt; <span class="number">24</span>] ^ e[h &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] ^ j[k &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] ^ l[n &amp; <span class="number">255</span>] ^ c[p++],</span><br><span class="line">                            s = d[h &gt;&gt;&gt; <span class="number">24</span>] ^ e[k &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] ^ j[n &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] ^ l[g &amp; <span class="number">255</span>] ^ c[p++],</span><br><span class="line">                            t = d[k &gt;&gt;&gt; <span class="number">24</span>] ^ e[n &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] ^ j[g &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] ^ l[h &amp; <span class="number">255</span>] ^ c[p++],</span><br><span class="line">                            n = d[n &gt;&gt;&gt; <span class="number">24</span>] ^ e[g &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] ^ j[h &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] ^ l[k &amp; <span class="number">255</span>] ^ c[p++],</span><br><span class="line">                            g = q,</span><br><span class="line">                            h = s,</span><br><span class="line">                            k = t;</span><br><span class="line">                    q = (f[g &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | f[h &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | f[k &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | f[n &amp; <span class="number">255</span>]) ^ c[p++];</span><br><span class="line">                    s = (f[h &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | f[k &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | f[n &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | f[g &amp; <span class="number">255</span>]) ^ c[p++];</span><br><span class="line">                    t = (f[k &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | f[n &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | f[g &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | f[h &amp; <span class="number">255</span>]) ^ c[p++];</span><br><span class="line">                    n = (f[n &gt;&gt;&gt; <span class="number">24</span>] &lt;&lt; <span class="number">24</span> | f[g &gt;&gt;&gt; <span class="number">16</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">16</span> | f[h &gt;&gt;&gt; <span class="number">8</span> &amp; <span class="number">255</span>] &lt;&lt; <span class="number">8</span> | f[k &amp; <span class="number">255</span>]) ^ c[p++];</span><br><span class="line">                    a[b] = q;</span><br><span class="line">                    a[b + <span class="number">1</span>] = s;</span><br><span class="line">                    a[b + <span class="number">2</span>] = t;</span><br><span class="line">                    a[b + <span class="number">3</span>] = n</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">keySize</span>: <span class="number">8</span></span><br><span class="line">        &#125;);</span><br><span class="line">    u.AES = p._createHelper(d)</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getkeyObj</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&quot;2F6A67981887471B8FA6787849363CE2&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (str.length &lt; <span class="number">16</span>) &#123;</span><br><span class="line">        str += <span class="string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    str = str.toUpperCase();</span><br><span class="line">    <span class="keyword">var</span> key = &#123;&#125;;</span><br><span class="line">    key.key = toHexString(str.substring(<span class="number">0</span>, <span class="number">8</span>));</span><br><span class="line">    key.iv = toHexString(str.substring(<span class="number">8</span>, <span class="number">16</span>));</span><br><span class="line">    key.security = <span class="string">&quot;\u4445\u5320\u4d45&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> key</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toHexString</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> temp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">        temp += str.charCodeAt(i).toString(<span class="number">16</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> temp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parse</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> c = a.length, e = [], j = <span class="number">0</span>; j &lt; c; j += <span class="number">2</span>)</span><br><span class="line">        e[j &gt;&gt;&gt; <span class="number">3</span>] |= <span class="built_in">parseInt</span>(a.substr(j, <span class="number">2</span>), <span class="number">16</span>) &lt;&lt; <span class="number">24</span> - <span class="number">4</span> * (j % <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> r.init(e, c / <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getpwd</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    keyObj = getkeyObj();</span><br><span class="line">            value = CryptoJS.AES.encrypt(value, CryptoJS.enc.Utf8.parse(keyObj.key), &#123;</span><br><span class="line">                <span class="attr">iv</span>: CryptoJS.enc.Utf8.parse(keyObj.iv)</span><br><span class="line">            &#125;).toString()</span><br><span class="line">    <span class="keyword">return</span> keyObj.security + value</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/q1kSBV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/23/q1kSBV.png"                      alt="q1kSBV.png"                ></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目标网站: &lt;a class=&quot;link&quot;   href=&quot;http://eip.chanfine.com/&quot; &gt;http://eip.chanfine.com/&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打开登录</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MD5反爬万创邦案例</title>
    <link href="http://example.com/2022/03/19/MD5%E5%8F%8D%E7%88%AC%E6%A1%88%E4%BE%8B/"/>
    <id>http://example.com/2022/03/19/MD5%E5%8F%8D%E7%88%AC%E6%A1%88%E4%BE%8B/</id>
    <published>2022-03-19T08:18:30.000Z</published>
    <updated>2022-03-19T10:14:02.616Z</updated>
    
    <content type="html"><![CDATA[<p>目标网站: <a class="link"   href="https://m.wcbchina.com/invite/invite.html" >https://m.wcbchina.com/invite/invite.html<i class="fas fa-external-link-alt"></i></a></p><p>我们打开工具，随便输入一串数字，随意输入11位数字，电话号码是11位的嘛，然后点击获取验证码，就会出现一个验证:</p><p><a href="https://imgtu.com/i/qEPIrq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEPIrq.png"                      alt="qEPIrq.png"                ></a></p><p>我们要做的就是把加密的sign的加密逻辑给找出来，然后用Python模拟实现构造出这个sing</p><p>我们还是先用老方法先搜索下:</p><p>我们搜索sign，或者sign:，我这里搜索的是sing:，然后会看到两条数据，第一条是css的，那我们想要的很可能就在第二条:</p><p><a href="https://imgtu.com/i/qEiEzd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEiEzd.png"                      alt="qEiEzd.png"                ></a></p><p>我们点进去，会发现直接就能看到加密的一个逻辑:</p><p>可以看到就在15行</p><p><a href="https://imgtu.com/i/qEFSpQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEFSpQ.png"                      alt="qEFSpQ.png"                ></a></p><p>我们在此处打个断点:</p><p>然后看看是否就在此处构造出了我们想要的的sign:</p><p>可以到的确就在15行得到了我们想要的sign，我们可以只看这一行了</p><p><a href="https://imgtu.com/i/qEF176"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEF176.png"                      alt="qEF176.png"                ></a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">N = h.hex_md5((v || <span class="string">&quot;&quot;</span>) + (g || <span class="string">&quot;&quot;</span>) + c).toUpperCase()</span><br></pre></td></tr></table></figure><p>我们可以看到，我们想要的sign由对象h.hex_md5这个方法，然后跟了一大串的参数，最后改大写了，我们首先看看hex_md5到底跟了什么参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((v || <span class="string">&quot;&quot;</span>) + (g || <span class="string">&quot;&quot;</span>) + c)</span><br></pre></td></tr></table></figure><p>我们来看看v和g存不存在先:</p><p><a href="https://imgtu.com/i/qEkoqI"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEkoqI.png"                      alt="qEkoqI.png"                ></a></p><p>根据调试情况可知，v和g都是undefined，所以都是不存在的，所以以上的表达式，就是空字符串加空字符串加上c，那么重点就是c了，我们需要搞清c是什么:</p><p><a href="https://imgtu.com/i/qEAJQH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEAJQH.png"                      alt="qEAJQH.png"                ></a></p><p>根据经验，我们很容易就能看出这是一个时间戳，那么参数就很明显了，我们接下来要做的就是扣代码</p><p>首先我们需要搞清楚h是个什么东西，我们在h的下一行下一个断点，看看h是个什么:</p><p>这里由于这整个代码是一个自执行方法，我们一刷新就会执行，然后我们可以看看h:</p><p><a href="https://imgtu.com/i/qEeQnH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEeQnH.png"                      alt="qEeQnH.png"                ></a></p><p>h是一个大的对象，然后里面有好多个方法，后面调用的就是hex_md5方法，我们可以进入这个方法看看:</p><p><a href="https://imgtu.com/i/qEeBHs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qEeBHs.png"                      alt="qEeBHs.png"                ></a></p><p>我们会发现，直接就进入了一个大的js里面，我们来分析下这个代码的结构，方法hex_md5在一个大的对象j之中，所以我们需要用对象来调用这个方法，我们可以先看看一个例子:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _hex_md5;</span><br><span class="line">!(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> j = &#123;</span><br><span class="line">        <span class="attr">hex_md5</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;111&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    _hex_md5 = j;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>我们一但把这个代码贴在控制台，就会触发这个自执行函数，然后我们就需要通过过对象调用方法的方法<code>.</code>来调用hex_md5方法，所以对于上面的函数我们也是可以这样处理:</p><p>首先我们可以看到j是一个对象，然后这个案例中的代码它其实也把这个j对象导出了，只不过它是使用的<code>module.exports = j</code></p><p>这里我们需要了解下开头的<code>define</code>，这个关键字是定义一个模块的语法，我们这里可以不用模块，所以可以把<code>define</code>删除了，然后使用上面的方法把删除<code>define</code>关键字后的方法改成一个自执行方法，修改后如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> md5_test;</span><br><span class="line">!(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">require</span>, <span class="built_in">exports</span>, <span class="built_in">module</span></span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">x, c</span>) </span>&#123;</span><br><span class="line">        x[c &gt;&gt; <span class="number">5</span>] |= <span class="number">128</span> &lt;&lt; c % <span class="number">32</span>,</span><br><span class="line">        x[(c + <span class="number">64</span> &gt;&gt;&gt; <span class="number">9</span> &lt;&lt; <span class="number">4</span>) + <span class="number">14</span>] = c;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="number">1732584193</span>, _ = -<span class="number">271733879</span>, y = -<span class="number">1732584194</span>, d = <span class="number">271733878</span>, i = <span class="number">0</span>; i &lt; x.length; i += <span class="number">16</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> b = a</span><br><span class="line">              , B = _</span><br><span class="line">              , D = y</span><br><span class="line">              , E = d;</span><br><span class="line">            a = h(a, _, y, d, x[i + <span class="number">0</span>], <span class="number">7</span>, -<span class="number">680876936</span>),</span><br><span class="line">            d = h(d, a, _, y, x[i + <span class="number">1</span>], <span class="number">12</span>, -<span class="number">389564586</span>),</span><br><span class="line">            y = h(y, d, a, _, x[i + <span class="number">2</span>], <span class="number">17</span>, <span class="number">606105819</span>),</span><br><span class="line">            _ = h(_, y, d, a, x[i + <span class="number">3</span>], <span class="number">22</span>, -<span class="number">1044525330</span>),</span><br><span class="line">            a = h(a, _, y, d, x[i + <span class="number">4</span>], <span class="number">7</span>, -<span class="number">176418897</span>),</span><br><span class="line">            d = h(d, a, _, y, x[i + <span class="number">5</span>], <span class="number">12</span>, <span class="number">1200080426</span>),</span><br><span class="line">            y = h(y, d, a, _, x[i + <span class="number">6</span>], <span class="number">17</span>, -<span class="number">1473231341</span>),</span><br><span class="line">            _ = h(_, y, d, a, x[i + <span class="number">7</span>], <span class="number">22</span>, -<span class="number">45705983</span>),</span><br><span class="line">            a = h(a, _, y, d, x[i + <span class="number">8</span>], <span class="number">7</span>, <span class="number">1770035416</span>),</span><br><span class="line">            d = h(d, a, _, y, x[i + <span class="number">9</span>], <span class="number">12</span>, -<span class="number">1958414417</span>),</span><br><span class="line">            y = h(y, d, a, _, x[i + <span class="number">10</span>], <span class="number">17</span>, -<span class="number">42063</span>),</span><br><span class="line">            _ = h(_, y, d, a, x[i + <span class="number">11</span>], <span class="number">22</span>, -<span class="number">1990404162</span>),</span><br><span class="line">            a = h(a, _, y, d, x[i + <span class="number">12</span>], <span class="number">7</span>, <span class="number">1804603682</span>),</span><br><span class="line">            d = h(d, a, _, y, x[i + <span class="number">13</span>], <span class="number">12</span>, -<span class="number">40341101</span>),</span><br><span class="line">            y = h(y, d, a, _, x[i + <span class="number">14</span>], <span class="number">17</span>, -<span class="number">1502002290</span>),</span><br><span class="line">            _ = h(_, y, d, a, x[i + <span class="number">15</span>], <span class="number">22</span>, <span class="number">1236535329</span>),</span><br><span class="line">            a = g(a, _, y, d, x[i + <span class="number">1</span>], <span class="number">5</span>, -<span class="number">165796510</span>),</span><br><span class="line">            d = g(d, a, _, y, x[i + <span class="number">6</span>], <span class="number">9</span>, -<span class="number">1069501632</span>),</span><br><span class="line">            y = g(y, d, a, _, x[i + <span class="number">11</span>], <span class="number">14</span>, <span class="number">643717713</span>),</span><br><span class="line">            _ = g(_, y, d, a, x[i + <span class="number">0</span>], <span class="number">20</span>, -<span class="number">373897302</span>),</span><br><span class="line">            a = g(a, _, y, d, x[i + <span class="number">5</span>], <span class="number">5</span>, -<span class="number">701558691</span>),</span><br><span class="line">            d = g(d, a, _, y, x[i + <span class="number">10</span>], <span class="number">9</span>, <span class="number">38016083</span>),</span><br><span class="line">            y = g(y, d, a, _, x[i + <span class="number">15</span>], <span class="number">14</span>, -<span class="number">660478335</span>),</span><br><span class="line">            _ = g(_, y, d, a, x[i + <span class="number">4</span>], <span class="number">20</span>, -<span class="number">405537848</span>),</span><br><span class="line">            a = g(a, _, y, d, x[i + <span class="number">9</span>], <span class="number">5</span>, <span class="number">568446438</span>),</span><br><span class="line">            d = g(d, a, _, y, x[i + <span class="number">14</span>], <span class="number">9</span>, -<span class="number">1019803690</span>),</span><br><span class="line">            y = g(y, d, a, _, x[i + <span class="number">3</span>], <span class="number">14</span>, -<span class="number">187363961</span>),</span><br><span class="line">            _ = g(_, y, d, a, x[i + <span class="number">8</span>], <span class="number">20</span>, <span class="number">1163531501</span>),</span><br><span class="line">            a = g(a, _, y, d, x[i + <span class="number">13</span>], <span class="number">5</span>, -<span class="number">1444681467</span>),</span><br><span class="line">            d = g(d, a, _, y, x[i + <span class="number">2</span>], <span class="number">9</span>, -<span class="number">51403784</span>),</span><br><span class="line">            y = g(y, d, a, _, x[i + <span class="number">7</span>], <span class="number">14</span>, <span class="number">1735328473</span>),</span><br><span class="line">            _ = g(_, y, d, a, x[i + <span class="number">12</span>], <span class="number">20</span>, -<span class="number">1926607734</span>),</span><br><span class="line">            a = v(a, _, y, d, x[i + <span class="number">5</span>], <span class="number">4</span>, -<span class="number">378558</span>),</span><br><span class="line">            d = v(d, a, _, y, x[i + <span class="number">8</span>], <span class="number">11</span>, -<span class="number">2022574463</span>),</span><br><span class="line">            y = v(y, d, a, _, x[i + <span class="number">11</span>], <span class="number">16</span>, <span class="number">1839030562</span>),</span><br><span class="line">            _ = v(_, y, d, a, x[i + <span class="number">14</span>], <span class="number">23</span>, -<span class="number">35309556</span>),</span><br><span class="line">            a = v(a, _, y, d, x[i + <span class="number">1</span>], <span class="number">4</span>, -<span class="number">1530992060</span>),</span><br><span class="line">            d = v(d, a, _, y, x[i + <span class="number">4</span>], <span class="number">11</span>, <span class="number">1272893353</span>),</span><br><span class="line">            y = v(y, d, a, _, x[i + <span class="number">7</span>], <span class="number">16</span>, -<span class="number">155497632</span>),</span><br><span class="line">            _ = v(_, y, d, a, x[i + <span class="number">10</span>], <span class="number">23</span>, -<span class="number">1094730640</span>),</span><br><span class="line">            a = v(a, _, y, d, x[i + <span class="number">13</span>], <span class="number">4</span>, <span class="number">681279174</span>),</span><br><span class="line">            d = v(d, a, _, y, x[i + <span class="number">0</span>], <span class="number">11</span>, -<span class="number">358537222</span>),</span><br><span class="line">            y = v(y, d, a, _, x[i + <span class="number">3</span>], <span class="number">16</span>, -<span class="number">722521979</span>),</span><br><span class="line">            _ = v(_, y, d, a, x[i + <span class="number">6</span>], <span class="number">23</span>, <span class="number">76029189</span>),</span><br><span class="line">            a = v(a, _, y, d, x[i + <span class="number">9</span>], <span class="number">4</span>, -<span class="number">640364487</span>),</span><br><span class="line">            d = v(d, a, _, y, x[i + <span class="number">12</span>], <span class="number">11</span>, -<span class="number">421815835</span>),</span><br><span class="line">            y = v(y, d, a, _, x[i + <span class="number">15</span>], <span class="number">16</span>, <span class="number">530742520</span>),</span><br><span class="line">            _ = v(_, y, d, a, x[i + <span class="number">2</span>], <span class="number">23</span>, -<span class="number">995338651</span>),</span><br><span class="line">            a = A(a, _, y, d, x[i + <span class="number">0</span>], <span class="number">6</span>, -<span class="number">198630844</span>),</span><br><span class="line">            d = A(d, a, _, y, x[i + <span class="number">7</span>], <span class="number">10</span>, <span class="number">1126891415</span>),</span><br><span class="line">            y = A(y, d, a, _, x[i + <span class="number">14</span>], <span class="number">15</span>, -<span class="number">1416354905</span>),</span><br><span class="line">            _ = A(_, y, d, a, x[i + <span class="number">5</span>], <span class="number">21</span>, -<span class="number">57434055</span>),</span><br><span class="line">            a = A(a, _, y, d, x[i + <span class="number">12</span>], <span class="number">6</span>, <span class="number">1700485571</span>),</span><br><span class="line">            d = A(d, a, _, y, x[i + <span class="number">3</span>], <span class="number">10</span>, -<span class="number">1894986606</span>),</span><br><span class="line">            y = A(y, d, a, _, x[i + <span class="number">10</span>], <span class="number">15</span>, -<span class="number">1051523</span>),</span><br><span class="line">            _ = A(_, y, d, a, x[i + <span class="number">1</span>], <span class="number">21</span>, -<span class="number">2054922799</span>),</span><br><span class="line">            a = A(a, _, y, d, x[i + <span class="number">8</span>], <span class="number">6</span>, <span class="number">1873313359</span>),</span><br><span class="line">            d = A(d, a, _, y, x[i + <span class="number">15</span>], <span class="number">10</span>, -<span class="number">30611744</span>),</span><br><span class="line">            y = A(y, d, a, _, x[i + <span class="number">6</span>], <span class="number">15</span>, -<span class="number">1560198380</span>),</span><br><span class="line">            _ = A(_, y, d, a, x[i + <span class="number">13</span>], <span class="number">21</span>, <span class="number">1309151649</span>),</span><br><span class="line">            a = A(a, _, y, d, x[i + <span class="number">4</span>], <span class="number">6</span>, -<span class="number">145523070</span>),</span><br><span class="line">            d = A(d, a, _, y, x[i + <span class="number">11</span>], <span class="number">10</span>, -<span class="number">1120210379</span>),</span><br><span class="line">            y = A(y, d, a, _, x[i + <span class="number">2</span>], <span class="number">15</span>, <span class="number">718787259</span>),</span><br><span class="line">            _ = A(_, y, d, a, x[i + <span class="number">9</span>], <span class="number">21</span>, -<span class="number">343485551</span>),</span><br><span class="line">            a = C(a, b),</span><br><span class="line">            _ = C(_, B),</span><br><span class="line">            y = C(y, D),</span><br><span class="line">            d = C(d, E)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Array</span>(a, _, y, d)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">q, c, a, x, s, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> C(y(C(C(c, q), C(x, t)), s), a)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">h</span>(<span class="params">c, h, g, d, x, s, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a(h &amp; g | ~h &amp; d, c, h, x, s, t)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">g</span>(<span class="params">c, h, g, d, x, s, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a(h &amp; d | g &amp; ~d, c, h, x, s, t)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">v</span>(<span class="params">c, h, g, d, x, s, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a(h ^ g ^ d, c, h, x, s, t)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params">c, h, g, d, x, s, t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a(g ^ (h | ~d), c, h, x, s, t)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_</span>(<span class="params">a, h</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> g = b(a);</span><br><span class="line">        g.length &gt; <span class="number">16</span> &amp;&amp; (g = c(g, a.length * U));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> v = <span class="built_in">Array</span>(<span class="number">16</span>), A = <span class="built_in">Array</span>(<span class="number">16</span>), i = <span class="number">0</span>; <span class="number">16</span> &gt; i; i++)</span><br><span class="line">            v[i] = <span class="number">909522486</span> ^ g[i],</span><br><span class="line">            A[i] = <span class="number">1549556828</span> ^ g[i];</span><br><span class="line">        <span class="keyword">var</span> _ = c(v.concat(b(h)), <span class="number">512</span> + h.length * U);</span><br><span class="line">        <span class="keyword">return</span> c(A.concat(_), <span class="number">640</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">C</span>(<span class="params">x, c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = (<span class="number">65535</span> &amp; x) + (<span class="number">65535</span> &amp; c)</span><br><span class="line">          , h = (x &gt;&gt; <span class="number">16</span>) + (c &gt;&gt; <span class="number">16</span>) + (a &gt;&gt; <span class="number">16</span>);</span><br><span class="line">        <span class="keyword">return</span> h &lt;&lt; <span class="number">16</span> | <span class="number">65535</span> &amp; a</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">y</span>(<span class="params">c, a</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> c &lt;&lt; a | c &gt;&gt;&gt; <span class="number">32</span> - a</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="built_in">Array</span>(), h = (<span class="number">1</span> &lt;&lt; U) - <span class="number">1</span>, i = <span class="number">0</span>; i &lt; c.length * U; i += U)</span><br><span class="line">            a[i &gt;&gt; <span class="number">5</span>] |= (c.charCodeAt(i / U) &amp; h) &lt;&lt; i % <span class="number">32</span>;</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="string">&quot;&quot;</span>, h = (<span class="number">1</span> &lt;&lt; U) - <span class="number">1</span>, i = <span class="number">0</span>; i &lt; <span class="number">32</span> * c.length; i += U)</span><br><span class="line">            a += <span class="built_in">String</span>.fromCharCode(c[i &gt;&gt; <span class="number">5</span>] &gt;&gt;&gt; i % <span class="number">32</span> &amp; h);</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">D</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> a = F ? <span class="string">&quot;0123456789ABCDEF&quot;</span> : <span class="string">&quot;0123456789abcdef&quot;</span>, h = <span class="string">&quot;&quot;</span>, i = <span class="number">0</span>; i &lt; <span class="number">4</span> * c.length; i++)</span><br><span class="line">            h += a.charAt(c[i &gt;&gt; <span class="number">2</span>] &gt;&gt; i % <span class="number">4</span> * <span class="number">8</span> + <span class="number">4</span> &amp; <span class="number">15</span>) + a.charAt(c[i &gt;&gt; <span class="number">2</span>] &gt;&gt; i % <span class="number">4</span> * <span class="number">8</span> &amp; <span class="number">15</span>);</span><br><span class="line">        <span class="keyword">return</span> h</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">E</span>(<span class="params">c</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>, h = <span class="string">&quot;&quot;</span>, i = <span class="number">0</span>; i &lt; <span class="number">4</span> * c.length; i += <span class="number">3</span>)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> g = (c[i &gt;&gt; <span class="number">2</span>] &gt;&gt; <span class="number">8</span> * (i % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">16</span> | (c[i + <span class="number">1</span> &gt;&gt; <span class="number">2</span>] &gt;&gt; <span class="number">8</span> * ((i + <span class="number">1</span>) % <span class="number">4</span>) &amp; <span class="number">255</span>) &lt;&lt; <span class="number">8</span> | c[i + <span class="number">2</span> &gt;&gt; <span class="number">2</span>] &gt;&gt; <span class="number">8</span> * ((i + <span class="number">2</span>) % <span class="number">4</span>) &amp; <span class="number">255</span>, v = <span class="number">0</span>; <span class="number">4</span> &gt; v; v++)</span><br><span class="line">                h += <span class="number">8</span> * i + <span class="number">6</span> * v &gt; <span class="number">32</span> * c.length ? S : a.charAt(g &gt;&gt; <span class="number">6</span> * (<span class="number">3</span> - v) &amp; <span class="number">63</span>);</span><br><span class="line">        <span class="keyword">return</span> h</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> F = <span class="number">0</span></span><br><span class="line">      , S = <span class="string">&quot;&quot;</span></span><br><span class="line">      , U = <span class="number">8</span></span><br><span class="line">      , j = &#123;</span><br><span class="line">        <span class="attr">hex_md5</span>: <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> D(c(b(s), s.length * U)).toUpperCase()</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">b64_md5</span>: <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> E(c(b(s), s.length * U))</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">str_md5</span>: <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> B(c(b(s), s.length * U))</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">hex_hmac_md5</span>: <span class="function"><span class="keyword">function</span>(<span class="params">c, a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> D(_(c, a))</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">b64_hmac_md5</span>: <span class="function"><span class="keyword">function</span>(<span class="params">c, a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> E(_(c, a))</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">str_hmac_md5</span>: <span class="function"><span class="keyword">function</span>(<span class="params">c, a</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> B(_(c, a))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    md5_test = j;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>导出变量我们就定义为md5_test，然后根据这个自执行方法我们就能得到加密后的sign</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目标网站: &lt;a class=&quot;link&quot;   href=&quot;https://m.wcbchina.com/invite/invite.html&quot; &gt;https://m.wcbchina.com/invite/invite.html&lt;i class=&quot;fas fa-exter</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Python创建虚拟环境的步骤</title>
    <link href="http://example.com/2022/03/19/Python%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%AD%A5%E9%AA%A4/"/>
    <id>http://example.com/2022/03/19/Python%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%AD%A5%E9%AA%A4/</id>
    <published>2022-03-19T06:55:30.000Z</published>
    <updated>2022-04-06T09:08:58.503Z</updated>
    
    <content type="html"><![CDATA[<p>第一步，安装相应的包:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install virtualenv</span><br></pre></td></tr></table></figure><p>第二步，创建虚拟环境:</p><p>这里也有两种方式，一种是创建纯净环境，一种是创建一个环境然后这个环境会继承原安装的模块</p><ul><li><p>创建纯净环境</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv evn_name</span><br></pre></td></tr></table></figure></li><li><p>创建环境，继承原安装的模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv --system-site-packages env_name</span><br></pre></td></tr></table></figure></li></ul><p>如果你的计算机中安装了不止一个版本的Python，那在创建虚拟环境时也可以指定Python版本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv env_name --python=python2<span class="number">.7</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第一步，安装相应的包:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Django项目体验--Django安装</title>
    <link href="http://example.com/2022/03/11/Django%E8%81%94%E9%80%9A%E7%94%A8%E6%88%B7%E7%AE%A1%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0--%E5%88%9D%E7%BA%A7/"/>
    <id>http://example.com/2022/03/11/Django%E8%81%94%E9%80%9A%E7%94%A8%E6%88%B7%E7%AE%A1%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0--%E5%88%9D%E7%BA%A7/</id>
    <published>2022-03-11T08:49:30.000Z</published>
    <updated>2022-03-21T08:40:06.632Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装Django"><a href="#安装Django" class="headerlink" title="安装Django"></a>安装Django</h3><p>使用一下命令:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django</span><br></pre></td></tr></table></figure><p>安装完成之后，会分别安装两个东西:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">c:python37</span><br><span class="line">    - python.exe</span><br><span class="line">    - Scripts</span><br><span class="line">    - pip.exe</span><br><span class="line">        - django-admin.exe【一个工具，用于创建django项目的文件和文件夹】</span><br><span class="line">    - lib</span><br><span class="line">    - 内置模块</span><br><span class="line">        - site-packages</span><br><span class="line">        - openpyxl</span><br><span class="line">            - python-docx</span><br><span class="line">            - flask</span><br><span class="line">            - django  【框架的源码，网站就需要用到里面所封装的功能】</span><br></pre></td></tr></table></figure><p>相比于flask，flask会比较简便，而django因为涉及到的组件很多，在一开始打开django项目我们就会发现有很多已经创建好的文件夹，这就是<code>django-admin</code>做到的，</p><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><h4 id="终端创建"><a href="#终端创建" class="headerlink" title="终端创建"></a>终端创建</h4><p>django项目中会有一些默认的文件和默认的文件夹，这些是需要手动敲命令去创建的</p><ul><li><p>打开终端</p></li><li><p>进入某个目录(项目所存放的位置)，例如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/user/LHJ/PythonProjects/DjangoProjects/LianTongUserManage</span><br></pre></td></tr></table></figure></li><li><p>执行命令创建项目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;c:python37\Scripts\django-admin.exe&quot;</span> startproject 项目名称</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果&quot;c:python37\Scripts&quot;已经加入系统环境变量，就可以直接在终端中使用django-admin这个命令:</span></span><br><span class="line">django-admin startproject 项目名称</span><br></pre></td></tr></table></figure></li></ul><h4 id="Pycharm创建"><a href="#Pycharm创建" class="headerlink" title="Pycharm创建"></a>Pycharm创建</h4><p>其实Pycharm创建和上面使用命令行创建是一样的，只不过是把相关命令集成成了一些按钮</p><p>打开pycharm，然后点击new project再选择Django，然后选择django项目所存放的路径和解释器，如果是虚拟环境就选虚拟环境，其实推荐使用虚拟环境</p><h4 id="两种方式对比"><a href="#两种方式对比" class="headerlink" title="两种方式对比"></a>两种方式对比</h4><ul><li><p>命令行创建的项目是比较标准的</p></li><li><p>pycharm在标准的基础上默认加了以下东西:</p><ul><li><p>创建了一个templates目录，最好删除</p></li><li><p>因为创建了templates目录，所以在settings.py中templates列表中也会比命令行创建的项目的settings.py多一个路径，如果删除了这个目录，这个路径也最好清除</p><p><a href="https://imgtu.com/i/boPQwn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/boPQwn.png"                      alt="boPQwn.png"                ></a></p><p>这加的这一句的意思就是以后我们找模板就去最外层这个templates目录去找</p></li></ul></li></ul><h3 id="项目默认文件介绍"><a href="#项目默认文件介绍" class="headerlink" title="项目默认文件介绍"></a>项目默认文件介绍</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">LianTongUserManage</span><br><span class="line">manage.py            【项目的管理、启动项目、创建app、数据管理】默认放着不要动【常常用】</span><br><span class="line">    LianTongUserManage </span><br><span class="line">    __init__.py</span><br><span class="line">        asgi.py          【接收网络请求】默认放着不要动，异步的，这是Django3才支持的</span><br><span class="line">        settings.py 【项目配置文件，例如连接数据库、注册app等】【常常修改】</span><br><span class="line">        urls.py 【URL和函数的对应关系，这个是常常操作的】【常常修改】</span><br><span class="line">        wsgi.py          【接收网络请求】默认放着不要动，同步的</span><br></pre></td></tr></table></figure><p>flask的配置文件很多都是已经集成在内部</p><h3 id="App的创建和说明"><a href="#App的创建和说明" class="headerlink" title="App的创建和说明"></a>App的创建和说明</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 项目</span><br><span class="line">- app, 用户管理【可以是独立的表结构、独立的函数、独立的HTML模板、独立的CSS样式】</span><br><span class="line">    - app, 订单管理【可以是独立的表结构、独立的函数、独立的HTML模板、独立的CSS样式】</span><br><span class="line">- app, 后台管理【可以是独立的表结构、独立的函数、独立的HTML模板、独立的CSS样式】</span><br><span class="line">    ...</span><br><span class="line">注意: 我们开发比较简洁，用不到多app，一般情况下，都是一个项目下创建一个app</span><br></pre></td></tr></table></figure><p>使用以下命令创建:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp app01</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bouQiQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/bouQiQ.png"                      alt="bouQiQ.png"                ></a></p><p>来看看app里面的文件:</p><p>这里以app01为例:</p><p><a href="https://imgtu.com/i/bouXFg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/bouXFg.png"                      alt="bouXFg.png"                ></a></p><ul><li>apps.py: 固定的不用动，app启动类</li><li>migrations: 一般来说也不用动，它是用于对数据库的字段进行修改的时候用来做记录的</li><li>test.py: 一般来说也不用动，是用于做单元测试的，一般小项目也用不到</li><li>admin.py: 一般来说也不用动，这是为后台提供admin功能，django默认提供了admin后台管理</li><li>views.py: 这是比较重要的，url对应的函数就在这里编写</li><li>models.py: 这也是比较重要的，对数据操作，因为django封装了一个orm以供使用</li></ul><h3 id="启动运行Django"><a href="#启动运行Django" class="headerlink" title="启动运行Django"></a>启动运行Django</h3><h4 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h4><ul><li><p>确保app已注册(settings.py)</p><p>刚刚我们创建了app，在使用app之前我们要先注册这个app，打开settings.py，然后找到INSTALLED_APPS这个列表，然后把我们创建的app加入进去，那么该怎么写呢，如下图所示:</p><p>我们主要就是加入一个路径</p><p>在app01目录下有一个apps.py，然后里面有一个类叫App01Config然后下面有一个name叫app01，就写这个路径，<code>app01.apps.App01Config</code>，通过这个路径就能找到名字为app01的app</p><p><a href="https://imgtu.com/i/b7d3lt"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/b7d3lt.png"                      alt="b7d3lt.png"                ></a></p></li><li><p>编写URL和视图函数对应关系(urls.py)</p><p><a href="https://imgtu.com/i/b7wCB8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/b7wCB8.png"                      alt="b7wCB8.png"                ></a></p><p>打开urls.py我们会看到如上图所示，其中红框中的<code>urlpatterns</code>列表就是记录url和相应试图处理函数的对应关系，里面默认会有一个<code>admin/</code>和<code>admins.site.urls</code>，前者是一个路径，后面是访问这个路径所触发的函数，我们可以再举个例子:</p><p><a href="https://imgtu.com/i/b70Fr6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/b70Fr6.png"                      alt="b70Fr6.png"                ></a></p></li><li><p>编写视图函数(views.py)</p><p>我们在app01目录下的views.py编写index函数，这个函数默认要有一个参数<code>requests</code>:</p><p><a href="https://imgtu.com/i/b7BiWj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/b7BiWj.png"                      alt="b7BiWj.png"                ></a></p></li><li><p>启动Django项目</p><ul><li><p>命令行启动，可以指定端口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure></li><li><p>Pycharm启动，在设置中也可以指定端口</p><p><a href="https://imgtu.com/i/b7D34g"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/b7D34g.png"                      alt="b7D34g.png"                ></a></p></li></ul><p><a href="https://imgtu.com/i/b7rCxs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/b7rCxs.png"                      alt="b7rCxs.png"                ></a></p></li></ul><h4 id="再写一个页面"><a href="#再写一个页面" class="headerlink" title="再写一个页面"></a>再写一个页面</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url -&gt; 函数</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bHcGrj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/bHcGrj.png"                      alt="bHcGrj.png"                ></a></p><h3 id="模板和静态文件"><a href="#模板和静态文件" class="headerlink" title="模板和静态文件"></a>模板和静态文件</h3><p>前面我们已经写了一个快速上手，但是我们感觉还是有点欠缺，这应该返回一大堆的html代码，那django中能不能也给我们返回html呢，答案当然是肯定的，如果只是想返回一个普通的字符串，就可以直接用<code>HttpResponse</code>，如果想返回一个html，就不能在view.py中简单地<code>return</code>一个<code>HttpResponse</code>了，应该是<code>return</code>一个<code>render</code>，<code>render</code>的第一个参数也是request，第二个参数就写html文件，在<code>render</code>的内部就会自动帮你寻找这个文件，并把这个文件的内容读取到内存然后以供使用，那么问题来了，Django会去哪个目录下找这个html文件呢，我们可以在当前app的目录下新建一个templates文件夹，然后在里面新建一个html文件，views.py会默认在app目录下的templates目录下找html文件</p><p>我们在views.py中添加一个UserList的路由，并指定一个视图函数，然后再新建一个templates文件夹，并在里面新建一个UserList.html文件，如下图所示:</p><p><a href="https://imgtu.com/i/bHToVO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/bHToVO.png"                      alt="bHToVO.png"                ></a></p><p><a href="https://imgtu.com/i/bHTOxI"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/bHTOxI.png"                      alt="bHTOxI.png"                ></a></p><p><a href="https://imgtu.com/i/bH7pdS"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/bH7pdS.png"                      alt="bH7pdS.png"                ></a></p><p>上面说的是会在当前app下的templates目录寻找对应views.py中的html文件，实际上会根据app的注册顺序，逐一去他们的templates目录中找，目前这里是只有一个app01，如果还有app02、app03，并且已经注册，也就是已经写入到了settings.py中的INSTALLED_APPS列表中，就会先去app01的templates中找，然后再去app02的templates中找，再去app03，这样按顺序找下去</p><p><a href="https://imgtu.com/i/bHHiTO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/12/bHHiTO.png"                      alt="bHHiTO.png"                ></a></p><p>关于模板这里再多提一嘴，如果你在项目的根目录下也有一个templates目录，并且项目还是会从app里面的templates目录里面找相关的html文件，默认情况下项目只会从app里面的templates目录里面找相关的html文件，如果你要看别人的网站，我们就要打开settings.py文件，看看TEMPLATES列表，是否有以下情况:</p><p><a href="https://imgtu.com/i/bb4Jx0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bb4Jx0.png"                      alt="bb4Jx0.png"                ></a></p><p>如果出现了上图红框中所标注的代码，那就说明项目会默认从项目根目录的templates中找html相关代码，一般Pycharm专业版创建的项目就会自动在项目的根目录创建一个templates目录，然后再在settings.py中加上上图所示的代码</p><p>如果我们把这个根目录下的templates目录删除或者里面没有放我们想要的html代码，项目会再接着从项目app的注册顺序找</p><p>在开发过程中，一般将:</p><ul><li>图片</li><li>CSS</li><li>JS</li></ul><p>都会当作静态文件处理</p><p>在django中，静态文件不能乱放，一般会在当前app目录下新建一个static目录，里面去放一些静态文件，如下，我们在app01目录下新建了一个static目录，然后里面放了一个1.jpeg，然后我们在UserList.html文件中导入了这个图片，如下图所示:</p><p><a href="https://imgtu.com/i/bb7JDP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bb7JDP.png"                      alt="bb7JDP.png"                ></a></p><p>运行效果如下:</p><p><a href="https://imgtu.com/i/bb7wCQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bb7wCQ.png"                      alt="bb7wCQ.png"                ></a></p><p>这里需要注意的是，static目录的名字只能为static，如果为其他的可能会出现展现不出静态文件的问题</p><p>一般来说，我们会在static目录下再进行细分，一般会有以下4个小分类:</p><ul><li>css</li><li>img</li><li>js</li><li>plugins</li></ul><p>刚刚我们的1.jpeg就可以放在img目录下，那么相应的路径就可以修改为<code>/static/img/1.jpeg</code></p><p>如果有什么css或者js就可以对号入座放在对应的目录下，如下图所示，我们就引入了相应的js框架和bootstrap组件:</p><p><a href="https://imgtu.com/i/bqkgZ8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqkgZ8.png"                      alt="bqkgZ8.png"                ></a></p><p>其实在html文件中我们可以使用刚刚那种方式<code>/static/img/1.jpeg</code>来导入一个静态文件，但是Django推荐使用<code>&#123;load static&#125;</code>这种模板语法来实现导入，如下图所示:</p><p><a href="https://imgtu.com/i/bqm5z4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqm5z4.png"                      alt="bqm5z4.png"                ></a></p><p>如果像之前那样写死了就不好，因为一但项目上线就需要修改所有的路径，而如果后期static文件的路径变了或者放静态文件的文件夹不叫static了，我们也只需要在settings.py中配置下配置下STATIC_URL即可:</p><p><a href="https://imgtu.com/i/bquYUP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bquYUP.png"                      alt="bquYUP.png"                ></a></p><p>既然导入了bootstrap，我们来确认下是否导入成功:</p><p><a href="https://imgtu.com/i/bqKYL9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqKYL9.png"                      alt="bqKYL9.png"                ></a></p><p>写了一个按钮，我们来看看效果:</p><p><a href="https://imgtu.com/i/bqKDzD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqKDzD.png"                      alt="bqKDzD.png"                ></a></p><p>这就说明导入成功了</p><h3 id="Django的模板语法"><a href="#Django的模板语法" class="headerlink" title="Django的模板语法"></a>Django的模板语法</h3><p>本质: 在HTML中写一些占位符，由数据对这些占位符进行替换和处理</p><p>下面我们来写上一个URL来专门学习下这个模板语法:</p><p><a href="https://imgtu.com/i/bqQLGV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqQLGV.png"                      alt="bqQLGV.png"                ></a></p><p><a href="https://imgtu.com/i/bqlCI1"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqlCI1.png"                      alt="bqlCI1.png"                ></a></p><p>我们分屏打开views.py和tpl.html这两个文件来看看模板语法的使用:</p><p><a href="https://imgtu.com/i/bq1Q0J"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bq1Q0J.png"                      alt="bq1Q0J.png"                ></a></p><p><a href="https://imgtu.com/i/bq1Gfx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bq1Gfx.png"                      alt="bq1Gfx.png"                ></a></p><p>我们来复习下刚才的逻辑，当我们在浏览器地址栏键入<code>http://127.0.0.1:8000/tpl/</code>，就会触发views.py中的tpl函数，继而触发hpl.html文件，从而在浏览器中就会显示相应的界面；</p><p>我们在页面中可以随便写东西，比如写个<code>&lt;h1&gt;&lt;h1&gt;</code>:</p><p><a href="https://imgtu.com/i/bq8wFA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bq8wFA.png"                      alt="bq8wFA.png"                ></a></p><p><a href="https://imgtu.com/i/bq82wQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bq82wQ.png"                      alt="bq82wQ.png"                ></a></p><p>这是我们写死了的，但是以后我们如果想从数据库或者从什么地方获取了数据，然后想把数据放在html文件中，然后显示出来，该怎么写呢?</p><p>可以像如下图一样写:</p><p>下图只是举了个例子而已哈</p><p>下面我们在vies.py中给了个数据叫name，值是韩超，当然开发中绝对不可能这样写的，然后我们在render函数中要写入一个字典，值和数据的变量名一致，键可以自己指定，那么对应着，在html文件中，我们可以直接用所谓的模板语法写上一个双花括号，然后里面放一个n1，也就是刚刚在views.py中给定的键名，这样在html文件中就可以访问该数据了</p><p><a href="https://imgtu.com/i/bqGjHg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqGjHg.png"                      alt="bqGjHg.png"                ></a></p><p>运行效果如下:</p><p><a href="https://imgtu.com/i/bqJivV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqJivV.png"                      alt="bqJivV.png"                ></a></p><p>这里记住一个点，显示单独的一个值就直接花括号加变量的键即可</p><p>现在我们又有个列表，可否把这个列表的数据也展现在前端页面上?，当然是可以的</p><p>我们又添加一个roles列表，和上面的操作是一样一样的:</p><p><a href="https://imgtu.com/i/bqYpZD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqYpZD.png"                      alt="bqYpZD.png"                ></a></p><p>如果我们直接用双花括号然后包裹着n2会是什么效果呢</p><p><a href="https://imgtu.com/i/bqYQij"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqYQij.png"                      alt="bqYQij.png"                ></a></p><p><a href="https://imgtu.com/i/bqYyy6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqYyy6.png"                      alt="bqYyy6.png"                ></a></p><p>两个花括号括起来的话，就会原封不动地显示该变量，是个列表就显示列表</p><p>很显然，这种方式显示比较不友好，我们如何将列表拆分然后将每个列表中的元素取到呢？</p><p>是否可以<code>n2[0]</code>呢?，这样是不可以的，行不通的，如果非要用取索引的方式的话，那也应该使用<code>n2.0</code>，<code>n2.1</code>这种方式，如下图所示:</p><p><a href="https://imgtu.com/i/bqt8tH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqt8tH.png"                      alt="bqt8tH.png"                ></a></p><p><a href="https://imgtu.com/i/bqtUjP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqtUjP.png"                      alt="bqtUjP.png"                ></a></p><p>如果列表中有很多个数据，那么通过上图的方法那未免有点捉襟见肘，其实我们可以使用for循环</p><p><a href="https://imgtu.com/i/bqNivt"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqNivt.png"                      alt="bqNivt.png"                ></a></p><p><a href="https://imgtu.com/i/bqNuCj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqNuCj.png"                      alt="bqNuCj.png"                ></a></p><p>如果你现在有一个字典，如下图所示:</p><p><a href="https://imgtu.com/i/bqa8NF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqa8NF.png"                      alt="bqa8NF.png"                ></a></p><p>如果想将这个字典的信息也想放在模板语法中让它给处理下，应该怎么写呢?</p><p>我们也可以像之前那样直接用显示一个变量的方式来显示这个字典，但是这显然不是我们想要的:</p><p><a href="https://imgtu.com/i/bqdADx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqdADx.png"                      alt="bqdADx.png"                ></a></p><p><a href="https://imgtu.com/i/bqduPe"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqduPe.png"                      alt="bqduPe.png"                ></a></p><p>我们想要的是获取字典中的值，那么我们就可以通过键来获取:</p><p><a href="https://imgtu.com/i/bqdd2j"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqdd2j.png"                      alt="bqdd2j.png"                ></a></p><p><a href="https://imgtu.com/i/bqdDrq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqdDrq.png"                      alt="bqdDrq.png"                ></a></p><p>对于字典来讲，他也是一个可迭代对象，也是支持for循环的，那么这里的字典也是可以使用for循环的，如下图所示:</p><p><a href="https://imgtu.com/i/bqrQBR"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqrQBR.png"                      alt="bqrQBR.png"                ></a></p><p>字典可以循环keys也可以循环values，上面我循环的是keys，items就是键和值，例如:<code>for k, v in n3.items</code>，如果不写items或者keys或者values那默认就是keys</p><p><a href="https://imgtu.com/i/bqr7CT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqr7CT.png"                      alt="bqr7CT.png"                ></a></p><p><a href="https://imgtu.com/i/bqrIU0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqrIU0.png"                      alt="bqrIU0.png"                ></a></p><p>上面是使用的是列表，其实使用元组也是一样的</p><p>如果是列表套字典，其实那也是一样的，遍历列表再遍历里面的字典，或者通过“下标操作”也是可行的</p><p>举个例子说:</p><p><a href="https://imgtu.com/i/bqvcJP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqvcJP.png"                      alt="bqvcJP.png"                ></a></p><p><a href="https://imgtu.com/i/bqv2z8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqv2z8.png"                      alt="bqv2z8.png"                ></a></p><p>下面是循环操作:</p><p><a href="https://imgtu.com/i/bqxZeH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqxZeH.png"                      alt="bqxZeH.png"                ></a></p><p><a href="https://imgtu.com/i/bqxMfP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bqxMfP.png"                      alt="bqxMfP.png"                ></a></p><p>模板语法也支持逻辑判断:</p><p><a href="https://imgtu.com/i/bLiFN4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLiFN4.png"                      alt="bLiFN4.png"                ></a></p><p><a href="https://imgtu.com/i/bLiEC9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLiEC9.png"                      alt="bLiEC9.png"                ></a></p><p><a href="https://imgtu.com/i/bLiUDf"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLiUDf.png"                      alt="bLiUDf.png"                ></a></p><p>到这里我们要清楚一点，通过URL找到views.py中视图函数后，会在render函数内读取templates里面的含模板语法的html文件，然后进行内容的替换，然后再返回给用户浏览器</p><p><a href="https://imgtu.com/i/bLibKx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLibKx.png"                      alt="bLibKx.png"                ></a></p><h4 id="案例-伪联通新闻中心"><a href="#案例-伪联通新闻中心" class="headerlink" title="案例: 伪联通新闻中心"></a>案例: 伪联通新闻中心</h4><p>首先我们写上一个URL:</p><p><a href="https://imgtu.com/i/bLEHYD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLEHYD.png"                      alt="bLEHYD.png"                ></a></p><p>然后再定义一个视图函数:</p><p><a href="https://imgtu.com/i/bLVPfg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLVPfg.png"                      alt="bLVPfg.png"                ></a></p><p>再定义一个html文件:</p><p><a href="https://imgtu.com/i/bLVEXn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLVEXn.png"                      alt="bLVEXn.png"                ></a></p><p>运行效果为:</p><p><a href="https://imgtu.com/i/bLVMhF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/13/bLVMhF.png"                      alt="bLVMhF.png"                ></a></p><p>但是呢，这里我自己又没有新闻，当然我可以自己定义一些新闻，构造成字典或者列表，或者去数据库，如果去数据库的话我们就得创建数据库表，然后使用一些查询数据库的语句；还有一种就是通过网络请求，也就是爬虫手段去爬取现成的的新闻数据；这里我们就使用爬虫的手段拿数据</p><p>我们先来看看这个联通新闻中心:</p><p>链接: <a class="link"   href="http://www.chinaunicom.com.cn/news/list202203.html" >http://www.chinaunicom.com.cn/news/list202203.html<i class="fas fa-external-link-alt"></i></a></p><p><a href="https://imgtu.com/i/bLqKC8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/14/bLqKC8.png"                      alt="bLqKC8.png"                ></a></p><p>不过这里我没成功抓到包，一直报502错误，我们就简单看看流程叭，在视频中是成功抓到包的，然后返回的是一个json数据</p><p>我们就在view.py中的new方法中向目标链接发起一个请求，这里我们要导入requests模块</p><p><a href="https://imgtu.com/i/bLOu6g"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/14/bLOu6g.png"                      alt="bLOu6g.png"                ></a></p><p>然后就可以在html代码中使用这些爬取到的的数据了</p><h3 id="请求和响应"><a href="#请求和响应" class="headerlink" title="请求和响应"></a>请求和响应</h3><p>之前我们已经安装了django，并且熟悉了相应的模板语法然后我们也写了个小案例，在小案例中已经可以集成一些数据进行展示了，但这些还不够，下面我们就来聊聊请求和响应</p><p>我们知道，我们的浏览器可以向服务器发送get请求和post请求，用来传递一些数据还有获取一些数据，那么接下来我们就来看看它是如何去传递数据以及传递数据之后咱们怎么来接收的</p><p>我们来写一个something的url:</p><p><a href="https://imgtu.com/i/bLvb36"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/14/bLvb36.png"                      alt="bLvb36.png"                ></a><br>然后我们先来写一个视图函数的框架:</p><p><a href="https://imgtu.com/i/bLvzEd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/14/bLvzEd.png"                      alt="bLvzEd.png"                ></a></p><p>图片中也提到了，视图函数中的参数request是一个对象，里面封装了所有请求后返回过来的所有数据</p><p>request.method可以返回请求方式</p><p>request.GET可以返回在URL中的参数(GET请求传参方式)</p><p>request.POST可以返回请求体中的的参数(POST请求传参方式)</p><p><a href="https://imgtu.com/i/bLzHOO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/14/bLzHOO.png"                      alt="bLzHOO.png"                ></a></p><p>以上说的是请求，那么响应呢，自然是由return来返回，可以用<code>return HttpResponse</code>来返回一个字符串，也可以用<code>return render(request, &#39;example.html&#39;)</code>来返回一个页面，我们要注意刚刚所说的<code>print(request.GET)</code>或<code>print(request.POST)</code>再或者<code>print(request.method)</code>都不会展现在浏览器页面上的，就和上面图片中所展示的一样，是显示在控制台中的，而<code>return</code>出来的响应则会实实在在地显示出来，在<code>example.html</code>中，我们可以使用模板语言，项目在把这个响应给浏览器之前，就会进行渲染，渲染成一个完整的<code>html</code>文件</p><p>除了上述提到的<code>HttpResponse</code>和<code>render</code>两种方式的响应外，其实还可以返回一个<code>redirect</code>，相当于一个重定向，如下案例所示:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> redirect(<span class="string">&quot;https://www.baidu.com&quot;</span>)  <span class="comment"># 让浏览器重定向到其它页面</span></span><br></pre></td></tr></table></figure><p>然后当我们访问项目设置的地址后，就会跳转到百度的界面</p><p>那么是由django向浏览器发送请求，然后再把响应给浏览器的呢，还是直接由浏览器发送请求呢</p><p>那么答案是第二种，也就是不经过django，就是浏览器和相应的服务器一对一，浏览器发送请求，然后相应的服务器返回数据，是不经过我们正在访问的网站的</p><p>就好比我们访问联通的官网，然后里面有一个按钮跳转到百度，我们点击后，因为是在联通的官网点击的，但是联通的官网没有这个资源，资源那肯定在百度的服务器上，所以联通的服务器会告诉浏览器说，你去请求百度的服务器吧，然后浏览器就去访问百度的服务器了，这就叫重定向，百度这个网页的资源的传输是不经过联通官网的</p><p>以上我们就介绍了三个常见的请求和三个常见的响应，我们来总结下:</p><p>请求</p><ul><li>request.method</li><li>request.GET</li><li>request.POST</li></ul><p>响应</p><ul><li>HttpResponse(‘返回内容’)</li><li>render(request, ‘example.html’)</li><li>redirect(“<a class="link"   href="http://www.baidu.com&quot;/" >www.baidu.com&quot;<i class="fas fa-external-link-alt"></i></a>)</li></ul><p>那么到这里，我们了解了这个之后，实际上我们现在就可以基于我们的django就可以写出一些页面，并且通过页面给咱们去传递一些数据，然后我们获取到数据之后，再给用户进行返回，这些事咱们其实就可以开始干了哈，那接下来我们就来搞上一个案例好叭</p><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><p>用户登录</p><p>我们上面所写的那些代码都是用于测试，咱们接下来每写一个案例，我们都会写一个新的函数，新的url，跟之前的是没有关系的，是分开的，我们现在做的这个用户登录，那还是在原来的基础上去做</p><p>上面那一段话其实可以不看，我们下面开始</p><p>首先我们写上一个url:</p><p><a href="https://imgtu.com/i/bj7OcF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bj7OcF.png"                      alt="bj7OcF.png"                ></a></p><p>然后写上一个视图函数:</p><p><a href="https://imgtu.com/i/bjbnr4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjbnr4.png"                      alt="bjbnr4.png"                ></a></p><p>然后再写html文件:</p><p><a href="https://imgtu.com/i/bjbJxO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjbJxO.png"                      alt="bjbJxO.png"                ></a></p><p>我们指定了一个表单，为post提交方式，后面的action指定了提交方式</p><p>我们来梳理下流程，我们指定了url为<code>127.0.0.1:8000/login/</code>，我们访问这个地址就会触发视图函数，然后就会指向login.html，这个时候我们用户就看到了登录表单，然后我们输入了用户名和密码点击登录，由于action指定的提交地址是<code>/login/</code>，所以又会再走上面那个流程，所以我们要在视图函数中判断请求方式</p><p>如果是get请求，我们直接让用户看到登录页面</p><p>如果是其他请求，这其中就包含了post请求，我们就获取用户提交的数据，那么如何获取用户post提交的数据上面已经说过了，写上一个<code>request.POST</code>就可以获取了</p><p>所以我们来修改视图函数如下:</p><p><a href="https://imgtu.com/i/bjLsKS"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjLsKS.png"                      alt="bjLsKS.png"                ></a></p><p>好，到目前为止，我们看起来已经做好了一切工作，我们来启动下项目看看效果</p><p>第一步，用户登录，好，没有问题:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220315112233898.png"                      alt="image-20220315112233898"                ></p><p>然后输入用户名秘密，点击提交</p><p><a href="https://imgtu.com/i/bjOlIs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjOlIs.png"                      alt="bjOlIs.png"                ></a></p><p>哦吼，这个时候报了一个错: <code>CSRF token missing or incorrect</code></p><p>默认情况下，django比flask多一个CSRF token的验证，你可以认为这是多了一个安全机制的检验，如果你在django中想要解决这种问题怎么办呢，请注意，就是在你的form表单里面写上一个<code>&#123;% csrf_token %&#125;</code>，写上它就可以了</p><p>我们加上<code>&#123;% csrf_token %&#125;</code>，再来登录下试试</p><p><a href="https://imgtu.com/i/bjXPyT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjXPyT.png"                      alt="bjXPyT.png"                ></a></p><p><a href="https://imgtu.com/i/bjXQOO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjXQOO.png"                      alt="bjXQOO.png"                ></a></p><p><a href="https://imgtu.com/i/bjXUpt"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjXUpt.png"                      alt="bjXUpt.png"                ></a></p><p>从上图我们可以发现在<code>QueryDict</code>中除了我们输入的用户名和密码，还有一个<code>csrfmiddlewaretoken</code>，那这个是个啥啊，这其实就是django默认提供的一个机制，当我们查看浏览器源代码时，在其html文件form表单内部加了<code>&#123;% csrf_token %&#125;</code>的前提下，实际上就在内部帮你隐藏了一个input框:</p><p><a href="https://imgtu.com/i/bjj6bD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjj6bD.png"                      alt="bjj6bD.png"                ></a></p><p>然后你在提交的时候，除了你提交的这个值，还有django内部给你隐藏生成的这个值也会提交过去，所以刚刚我们会看到<code>csrfmiddlewaretoken</code>的值，这个隐藏的值我们不用管，django在内部回去读取它，用来校验这个请求是否是咱们正常请求过来的网页，如果是，它就默认会带着这个值，如果不是，那就会被认为是非法的请求，那也就不会有后续的操作了，当我们不带<code>&#123;% csrf_token %&#125;</code>这个值，源文件内部就不会有隐藏的<code>input</code>框，一点提交diango就会阻拦你的提交，认为你是一个非法的请求，就如上面的报错一样</p><p>接着刚刚的，我们已经拿到了post过来的数据了，也就是用户名和密码，那么不能什么都登录成功啊，那肯定得做个校验，我们可以用<code>request.POST.get(&#39;user&#39;)</code>拿到用户名，用<code>request.POST.get(&#39;pwd&#39;)</code>拿到密码，然后再根据用户名和密码是否正确来让用户是否登录成功</p><p><a href="https://imgtu.com/i/bjxJk4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjxJk4.png"                      alt="bjxJk4.png"                ></a></p><p>这里我们就完成了对用户名和密码的校验，以此来让用户登录成功或者登录失败，但是这里有一点是不合理的，正常来说我们登录失败应该返回到登录页面，但是这里是直接显示了一个登录失败的字符串，这显然是不合理的，我们不应该以<code>return HttpResponse(&quot;登录失败&quot;)</code>来返回一个文本，应该是也返回登录页面，所以我们把视图函数修改如下:</p><p><a href="https://imgtu.com/i/bjzTr6"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bjzTr6.png"                      alt="bjzTr6.png"                ></a></p><p>以上的方法又有点欠缺，我们能不能在登录页面提示用户名和密码输入错了呢，这种做法就相比来说更人性化，不然每次数了用户名和密码错了，然后都得重定向，都得加载和渲染html，这个就从资源利用来说或者响应速度来说都是不够好的</p><p> 我们可以在view.py中对如果登录的信息不对进行一个提示，然后再在html代码中展现出来，如下图所示:</p><p><a href="https://imgtu.com/i/bv1FGd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv1FGd.png"                      alt="bv1FGd.png"                ></a></p><p><a href="https://imgtu.com/i/bv1udS"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv1udS.png"                      alt="bv1udS.png"                ></a></p><p>这种实现方式实际上就是根据模板语法去实现的</p><p>而这个写成这个还不是很方便，我们给它加上一个span标签，然后span标签再给它加上一个颜色，所以我们修改上面的login.html如下:</p><p><a href="https://imgtu.com/i/bv14Wd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv14Wd.png"                      alt="bv14Wd.png"                ></a></p><p>我们刷新下页面，然后输入一个错误的用户名和密码，就会出现红色的字体提示:</p><p><a href="https://imgtu.com/i/bv1zSs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv1zSs.png"                      alt="bv1zSs.png"                ></a></p><p>其实登录成功我们返回的是<code>登录成功</code>也不太好，正常来说应该是跳转到另一个页面，在这里我们可以使用<code>redirect</code>跳转到某个网址，比如我们就可以跳转到百度的首页，就以这个为例叭:</p><p><a href="https://imgtu.com/i/bv8Mgs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv8Mgs.png"                      alt="bv8Mgs.png"                ></a></p><p><a href="https://imgtu.com/i/bv8fxA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv8fxA.png"                      alt="bv8fxA.png"                ></a></p><p>以上我们只是写了个简单的小案例，我们这里的用户名和密码是固定了的，项目中肯定不会这么用，我们肯定是要在数据库中去校验用户名和密码的，由于我们还没接触django操作数据库，我们就先写成这样，写成这样这纯纯的是一个初学者的代码，第一点，我们这里面的<code>if...else...</code>的嵌套有点多，我们可以把多余的else去除，修改后的代码如下:</p><p><a href="https://imgtu.com/i/bvJn6s"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvJn6s.png"                      alt="bvJn6s.png"                ></a></p><h3 id="数据库的操作"><a href="#数据库的操作" class="headerlink" title="数据库的操作"></a>数据库的操作</h3><p>我们在Python中操作数据库是使用<code>pymysql</code></p><p>案例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接MySQL</span></span><br><span class="line">conn = pymysql.connect(host=<span class="string">&#x27;1270.0.1&#x27;</span>, port=<span class="number">3306</span>, user=<span class="string">&#x27;root&#x27;</span>, password=<span class="string">&#x27;123456&#x27;</span>, charset=<span class="string">&#x27;utf-8&#x27;</span>, db=<span class="string">&#x27;student&#x27;</span>)</span><br><span class="line">cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送指令</span></span><br><span class="line">cursor.execute(<span class="string">&#x27;insert into admin(username, password, mobile) values(&quot;lihoujian&quot;, &quot;123456&quot;, &quot;18796853411&quot;)&#x27;</span>)</span><br><span class="line">conn.commit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p>而django操作数据库更加简单，它在内部提供了一个ORM框架，在django中，我们不再需要去写SQL语句，ORM就相当于一个翻译工具，我们不再需要像之前使用<code>pymysql</code>模块的时候去写SQL语句，而取而代之的是<code>models.xxx.all()</code>之类的语句，ORM会把这个语句翻译成相应的SQL语句，然后底层再使用比如<code>pymysql</code>、<code>MySQLdb</code>、<code>mysqlclient</code>等模块去执行</p><p>这个ORM就是一个翻译的过程:</p><p><a href="https://imgtu.com/i/bvUM2F"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvUM2F.png"                      alt="bvUM2F.png"                ></a></p><p>让我们开发者编写代码的时候更简洁，而不像以前自己还要再去写SQL语句；当然，有了ORM这个翻译工具，我们也要去学如何使用这个工具进行类数据库的增删改查</p><p>刚刚我们提到了ORM是依赖于一些库的，所以我们要先安装，这里我们需要安装第三方模块</p><h4 id="安装第三方模块"><a href="#安装第三方模块" class="headerlink" title="安装第三方模块"></a>安装第三方模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mysqlclient</span><br></pre></td></tr></table></figure><p>这里需要注意，如果是使用django以前的版本，比如django1或者django2，使用pymysql是完全没有问题的，但是到了django3，pymysql支持得不太好，在其内部有一个编码的错误，用pymysql就比较费劲；而django在最新的版本里面支持了mysqlclient，在这里我们底层就是用这个就可以的</p><h4 id="ORM能做啥子"><a href="#ORM能做啥子" class="headerlink" title="ORM能做啥子"></a>ORM能做啥子</h4><p>ORM可以帮助我们做两件事:</p><ul><li><p>创建、修改、删除数据库中的表(不用写SQL语句)，但是它无法创建数据库</p></li><li><p>操作表中的数据(不用写SQL语句)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">insert into...</span><br><span class="line">update...</span><br><span class="line">selecet...<span class="keyword">from</span>...</span><br></pre></td></tr></table></figure></li></ul><h4 id="创建数据库-自己创建"><a href="#创建数据库-自己创建" class="headerlink" title="创建数据库(自己创建)"></a>创建数据库(自己创建)</h4><p>前面也提到了，由于django不能创建数据库，所以我们得手动创建数据库，可以直接使用数据库的工具创建数据库，下面给个命令行的样例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database xxx DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</span><br></pre></td></tr></table></figure><p><code>CHARSET</code>表示编码，<code>COLLATE</code>表示校对集，可以理解为排序规则</p><p>下面就和视频作者一起走一遍叭，哈哈哈哈哈:</p><ul><li>mysql -u root -p</li><li>输入密码</li><li>show databases;</li><li>然后把上面的代码贴进来即可</li></ul><p>视频中创建的是gx_day15，我也创建这个吧</p><p><a href="https://imgtu.com/i/bvDtIA"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvDtIA.png"                      alt="bvDtIA.png"                ></a></p><h4 id="Django连接数据库"><a href="#Django连接数据库" class="headerlink" title="Django连接数据库"></a>Django连接数据库</h4><p>在settings.py文件中进行配置和修改，找到DATABASES列表，默认用的是sqlite3数据库一个文件型数据库，我们不需要用这个，可以把目录中的<code>db.sqlite3</code>删除掉，然后settings.py中修改成如下即可:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置数据库</span></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="comment"># python自带的一个数据库，基本不会被使用</span></span><br><span class="line">        <span class="comment"># &#x27;ENGINE&#x27;: &#x27;django.db.backends.sqlite3&#x27;,</span></span><br><span class="line">        <span class="comment"># &#x27;NAME&#x27;: os.path.join(BASE_DIR, &#x27;db.sqlite3&#x27;),</span></span><br><span class="line">        <span class="comment"># 注册我们自己使用的数据库连接</span></span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,  <span class="comment"># 数据库引擎</span></span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;gx_day15&#x27;</span>, <span class="comment">#数据库名称</span></span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>:<span class="string">&#x27;root&#x27;</span>, <span class="comment"># 连接数据库的用户名称</span></span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>:<span class="string">&#x27;123456&#x27;</span>,  <span class="comment"># 用户密码</span></span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>:<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="comment"># 访问的数据库的主机的ip地址</span></span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>:<span class="string">&#x27;3306&#x27;</span>, <span class="comment"># 默认mysql访问端口</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>django可以连接多种数据库，这里我们就看到了可以连接sqlite3、mysql、其实还有很多，可以看官网了解下</p><h4 id="Django操作表"><a href="#Django操作表" class="headerlink" title="Django操作表"></a>Django操作表</h4><h5 id="类创建表"><a href="#类创建表" class="headerlink" title="类创建表"></a>类创建表</h5><p>在models.py中操作</p><p>这里给上一个示例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">name = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line">password = models.CharField(max_length=<span class="number">64</span>)</span><br><span class="line">age = models.IntegerField()</span><br></pre></td></tr></table></figure><p>那么如果你写上面这么一个类，在django的底层，ORM会根据这个类帮助我们去生成并执行以下SQL语句:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table app名称_类名的小写(</span><br><span class="line">    name = varchar(<span class="number">32</span>),</span><br><span class="line">    password varchar(<span class="number">64</span>),</span><br><span class="line">    age <span class="built_in">int</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>由于我们在项目中的app名称为app_01，所以这底层执行的SQL语句为:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table app01_userinfo(</span><br><span class="line">    name = varchar(<span class="number">32</span>),</span><br><span class="line">    password varchar(<span class="number">64</span>),</span><br><span class="line">    age <span class="built_in">int</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>除了这上面的内容之外，其实还有一句也会自动生成，虽然在类中没有写，但是还是会自动生成:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span> bigint auto_increment primary key,</span><br></pre></td></tr></table></figure><p>所以以上所给出的类，django底层实际上生成的sql语句完整版为:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table app01_userinfo(</span><br><span class="line">    <span class="built_in">id</span> bigint auto_increment primary key,</span><br><span class="line">    name = varchar(<span class="number">32</span>),</span><br><span class="line">    password varchar(<span class="number">64</span>),</span><br><span class="line">    age <span class="built_in">int</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>生成以上SQL语句之后，django就会利用模块来生成数据库表了</p><p>类名就代指了数据库表表名，类里面的变量就代指了数据库表里的字段名</p><p>上面我们写了一个类，但这时候数据库中其实啥也没有呢，接下来我们还需要执行命令</p><p>打开terminal，执行两个命令:</p><p>注意: app已经注册，python已经安装mysqlclient，下面命令在项目根目录中执行</p><ul><li>```python<br>python manage.py makemigrations<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ ```python</span><br><span class="line">  python manage.py migrate</span><br></pre></td></tr></table></figure></li></ul><p>下面是我执行的样例:</p><p><a href="https://imgtu.com/i/bv2vh4"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv2vh4.png"                      alt="bv2vh4.png"                ></a></p><p><a href="https://imgtu.com/i/bvRe9H"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvRe9H.png"                      alt="bvRe9H.png"                ></a></p><p>我们会发现它怎么给咱创建了这么多的表呢，这么多的表，它是办什么用的呢</p><p>实际上，在我们使用上面的两条命令时，django会去找每一个注册的app中的models.py，我们可以看见的，django默认打开一个项目是有好多app是已经注册了的，所以那些默认注册的app也有models.py，那肯定也会被创建表；那些默认的app也是有用的，会给我们提供一些功能，所以django在生成表的时候不仅把我们的app中的models.py给生成了表，默认的app也给生成表了；如果以后我们不想用其中某个功能，可以把它注释了</p><h5 id="类添加表"><a href="#类添加表" class="headerlink" title="类添加表"></a>类添加表</h5><p> 咱们刚一个类创建了一张表，那么我们可以再写多个类去创建多张表，比如就如下面所示:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Department</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">title = models.CharField(max_length=<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Role</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">caption = models.CharField(max_length=<span class="number">16</span>)</span><br></pre></td></tr></table></figure><p>再次使用上面的两个命令，即可添加这两张表</p><p><a href="https://imgtu.com/i/bvfI9e"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvfI9e.png"                      alt="bvfI9e.png"                ></a></p><h5 id="类删除表"><a href="#类删除表" class="headerlink" title="类删除表"></a>类删除表</h5><p>如果我不想要其中哪个表了，就把相应的类去掉，再执行上面的两条命令即可删除表</p><p><a href="https://imgtu.com/i/bvhHGF"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvhHGF.png"                      alt="bvhHGF.png"                ></a></p><p><a href="https://imgtu.com/i/bvhWKs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvhWKs.png"                      alt="bvhWKs.png"                ></a></p><h5 id="类修改表"><a href="#类修改表" class="headerlink" title="类修改表"></a>类修改表</h5><p>这里比如说<code>app01_userinfo</code>表中的age字段我不想要了，我想把这个字段给删除掉，那我们在相应的类中把相应的变量注释掉，同样再使用上面的两条命令即可</p><p><a href="https://imgtu.com/i/bv5KTx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv5KTx.png"                      alt="bv5KTx.png"                ></a></p><p><a href="https://imgtu.com/i/bv5YXd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bv5YXd.png"                      alt="bv5YXd.png"                ></a></p><p>上面是删除一个字段，那如果我想在原有表的基础上新增一个字段呢，我们同样可以在原来的类中新增一个变量，然后使用上面提到的两条命令；但是这个时候我们要思考一个问题，如果，而且很有可能目标表是有数据的，那么我们新增的这个字段该填写什么数据呢？我们不妨先试试:</p><p>我打算在app01_userinfo表中新增size字段:</p><p><a href="https://imgtu.com/i/bvIlbn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvIlbn.png"                      alt="bvIlbn.png"                ></a></p><p>然后我使用两条命令:</p><p><a href="https://imgtu.com/i/bvIt8U"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvIt8U.png"                      alt="bvIt8U.png"                ></a></p><p>可以看到，我在输入第一条命令后出现了提示，大致意思就是说我插入了新字段的值该怎么处理，是我们输入一个确定的值还是直接退出然后后续修改填入默认值，给了两个选项，选项1就是我们输入确定的值，选项2就是直接退出然后后续修改填入默认值</p><p>如果我们选择1，并且输入1，那该字段将全为1，如果我们选择2，那将直接退出，然后我们可以在指定变量的时候可以给定一个默认值，如下所示:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">size = models.IntegerField(default=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>那么再执行两条命令就不会报错了，而且size字段的所有值都是2</p><p>要么就是允许该字段为空:</p><p>举个栗子说:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data = models.IntegerField(null=<span class="literal">True</span>, blank=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>那么新增的data字段将全是空</p><p>所以我们在新增列的时候一定要注意</p><p>以后在开发中，如果想要对表结构进行调整，只需要在models.py操作类即可</p><h5 id="表的增删改查"><a href="#表的增删改查" class="headerlink" title="表的增删改查"></a>表的增删改查</h5><p>我们留下两个表来举栗子:</p><p><a href="https://imgtu.com/i/bvHyeH"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvHyeH.png"                      alt="bvHyeH.png"                ></a></p><h5 id="增"><a href="#增" class="headerlink" title="增"></a>增</h5><p>给app01_department表新增数据，案例如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Department.objects.create(title=<span class="string">&#x27;销售部&#x27;</span>)</span><br></pre></td></tr></table></figure><p>以上代码就相当于SQL语句:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into app01_department(title) value(<span class="string">&#x27;销售部&#x27;</span>)</span><br></pre></td></tr></table></figure><p>给app01_useringo表新增数据，案例如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UserInfo.objects.create(name=<span class="string">&#x27;lihoujian&#x27;</span>, password=<span class="string">&#x27;123&#x27;</span>, age=<span class="number">99</span>)</span><br></pre></td></tr></table></figure><p>我们可以写个URL来测试下:</p><p><a href="https://imgtu.com/i/bvj8OK"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvj8OK.png"                      alt="bvj8OK.png"                ></a></p><p>然后通过视图函数来新增数据:</p><p><a href="https://imgtu.com/i/bvjD6P"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvjD6P.png"                      alt="bvjD6P.png"                ></a></p><p><a href="https://imgtu.com/i/bvj560"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvj560.png"                      alt="bvj560.png"                ></a></p><p><a href="https://imgtu.com/i/bvvQAg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvvQAg.png"                      alt="bvvQAg.png"                ></a></p><h5 id="删"><a href="#删" class="headerlink" title="删"></a>删</h5><p>删除要使用<code>filter</code>函数:</p><p><a href="https://imgtu.com/i/bvz0p9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvz0p9.png"                      alt="bvz0p9.png"                ></a></p><p><a href="https://imgtu.com/i/bvzZef"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bvzZef.png"                      alt="bvzZef.png"                ></a></p><p>如果是使用<code>UserInfo.objects.all().delete()</code>就是把这张表所有的数据都删除</p><h5 id="查"><a href="#查" class="headerlink" title="查"></a>查</h5><p>刚刚我们使用了<code>UserInfo.objects.all().delete()</code>方法来删除数据，我们同样可以用这个方法来获取数据</p><p><code>UserInfo.objects.all()</code>拿到的是一个Queryset，拿到的是表中的所有数据，Queryset类似于Python中的列表，然后我们自然可以遍历它:</p><p><a href="https://imgtu.com/i/bxpoo8"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bxpoo8.png"                      alt="bxpoo8.png"                ></a></p><p>刚刚同样使用了<code>objects.filter()</code>筛选然后删除，我们同样可以使用这个方法来获取数据，比如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">models.UserInfo.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=<span class="number">1</span>)  <span class="comment"># 拿到app01_userinfo表中的id为1的这一行数据，返回的也是Queryset</span></span><br></pre></td></tr></table></figure><p>这里要区别于<code>models.UserInfo.objects.filter(id=1).first()</code>，这个语句加上<code>.first</code>返回的就不是Queryset了，而是里面的对象，就相当于列表只有一个元素，然后把这个元素拿出来了</p><p>拿到对象我们就不用循环了，直接<code>.</code>就可以拿到里面的数据</p><h5 id="改"><a href="#改" class="headerlink" title="改"></a>改</h5><p>有了上面的基础，我们来看看如何更新数据:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">models.UserInfo.objects.<span class="built_in">all</span>().update(password=<span class="number">99</span>)  <span class="comment"># 把app01_userinfo表里面的password字段都修改为99</span></span><br></pre></td></tr></table></figure><p>如果你只想找到某一个或某一些，那就该加筛选条件了:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">models.UserInfo.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=<span class="number">2</span>).update(password=<span class="number">99</span>)</span><br></pre></td></tr></table></figure><p>不只是id，还可以筛选name啥的:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">models.UserInfo.objects.<span class="built_in">filter</span>(name=lihoujian).update(password=<span class="number">99</span>)</span><br></pre></td></tr></table></figure><h3 id="案例-用户管理"><a href="#案例-用户管理" class="headerlink" title="案例-用户管理"></a>案例-用户管理</h3><h4 id="展示用户列表"><a href="#展示用户列表" class="headerlink" title="展示用户列表"></a>展示用户列表</h4><p>我们要写上一个URL，然后写上一个函数，在函数内，获取所有用户信息，把用户信息嵌套进HTML进行渲染再展现出来</p><p>URL:</p><p><a href="https://imgtu.com/i/bxiv3F"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bxiv3F.png"                      alt="bxiv3F.png"                ></a></p><p>视图函数:</p><p><a href="https://imgtu.com/i/bxFvIP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bxFvIP.png"                      alt="bxFvIP.png"                ></a></p><p>info_list.html:</p><p><a href="https://imgtu.com/i/bxkPMQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bxkPMQ.png"                      alt="bxkPMQ.png"                ></a></p><p>效果:</p><p><a href="https://imgtu.com/i/bxAc7R"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/15/bxAc7R.png"                      alt="bxAc7R.png"                ></a></p><p>这里插一句，如果要改变date字段的显示格式，我们可以是使用以下代码:</p><p>这个时间(time)可以是数据写入的时间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; item.time|date:<span class="string">&quot;Y-m-d H:i:s&quot;</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>更多的显示格式可以看武培齐的个人博客: <a class="link"   href="https://www.cnblogs.com/wupeiqi/articles/5237704.html" >https://www.cnblogs.com/wupeiqi/articles/5237704.html<i class="fas fa-external-link-alt"></i></a></p><h4 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h4><p>上面的内容的数据都是从我们手动添加导数据库的，这里我们加一个添加用户的功能:</p><ul><li>准备一个URL</li><li>视图函数<ul><li>GET: 看到页面，输入内容</li><li>POST: 提交-&gt;写入到数据库</li></ul></li></ul><p>URL:</p><p><a href="https://imgtu.com/i/bzlHPg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzlHPg.png"                      alt="bzlHPg.png"                ></a></p><p>GET-&gt;页面:</p><p><a href="https://imgtu.com/i/bz10zj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bz10zj.png"                      alt="bz10zj.png"                ></a></p><p><a href="https://imgtu.com/i/bz1cwV"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bz1cwV.png"                      alt="bz1cwV.png"                ></a></p><p>这个时候我们注意了，如果post提交的地址和当前地址是一致的，这个action可以不写，所以上面的action是可以省略的</p><p>这个时候又要注意了，要加上<code>&#123;% csrf_token %&#125;</code>不然会提交不了</p><p>加上就能提交了，那么一点击数据就到了我们的后台，数据到了后台，我们应该就要读取它的用户名密码等数据了</p><p>POST-&gt;写入到数据库:</p><p><a href="https://imgtu.com/i/bz8iuR"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bz8iuR.png"                      alt="bz8iuR.png"                ></a></p><p>目前我们是只显示添加成功，我们还想直接跳转到INFO列表:</p><p>这里注意，如果是跳转到别人的网站那就得把域名啥的写清楚，但是我们自己的就不用写这么清楚了，因为它会自动帮你拼接当前的域名</p><p><a href="https://imgtu.com/i/bzGFzQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzGFzQ.png"                      alt="bzGFzQ.png"                ></a></p><p>要打开添加页面还要在地址栏输入地址才能打开添加的界面，这未免交互起来不太方便，一般来说在INFO列表有一个按钮，然后直接点击就能打开添加的界面，下面我们来实现下:</p><p><a href="https://imgtu.com/i/bzJYcQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzJYcQ.png"                      alt="bzJYcQ.png"                ></a></p><p><a href="https://imgtu.com/i/bzJaBn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzJaBn.png"                      alt="bzJaBn.png"                ></a></p><h4 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h4><ul><li>准备一个URL</li><li>视图函数</li></ul><p>那么如何来删除呢，我们肯定要传入一个参数，我们就以id来删除吧，下面给出一个示例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8000</span>/info/delete/?nid=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>上面这个请求是get请求，我们就可以在视图函数中用<code>request.GET.get(&#39;nid&#39;)</code>来获取<code>nid</code>这个值，然后我们可以通过以下代码进行删除数据:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">models.UserInfo.<span class="built_in">filter</span>(<span class="built_in">id</span>=nid).delete()</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/bzNcjg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzNcjg.png"                      alt="bzNcjg.png"                ></a></p><p><a href="https://imgtu.com/i/bzN7gU"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzN7gU.png"                      alt="bzN7gU.png"                ></a></p><p>还是和前面一样，我们可以实现点击一个按钮来删除:</p><p>修改info_list.html</p><p><a href="https://imgtu.com/i/bzaff0"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzaff0.png"                      alt="bzaff0.png"                ></a></p><p>实现试图函数:</p><p><a href="https://imgtu.com/i/bzax1K"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzax1K.png"                      alt="bzax1K.png"                ></a></p><h3 id="案例概要-员工管理系统"><a href="#案例概要-员工管理系统" class="headerlink" title="案例概要(员工管理系统)"></a>案例概要(员工管理系统)</h3><p>主题: 员工管理系统</p><h4 id="创建项目和app"><a href="#创建项目和app" class="headerlink" title="创建项目和app"></a>创建项目和app</h4><p>如何创建项目和app这里不赘述，上面都有相关知识点，项目名称为<code>Staff_Management_System</code>，app名称我取名为: <code>staff</code></p><p>这里再提一下，如果是pycharm创建的项目，我们需要把自动生成的templates文件夹删除，然后在settings中对应的TEMPLATES列表也清空</p><p>如果是pycharm创建的项目，我们在创建app的时候不止可以在Terminal中敲命令，其实还有更方便地点击tools，然后点击run manage.py task，这个其实就是不用在敲manage.py了，pycharm这个编辑器自动帮你执行了manage.py，然后你就只需要输入startapp xxx即可，这个工具还有提示</p><p>创建好app之后就是注册app，这个之前也提到过，这里不再赘述</p><h4 id="表结构的创建"><a href="#表结构的创建" class="headerlink" title="表结构的创建"></a>表结构的创建</h4><p>在开始项目之前，我们要先来设计下这个系统的表结构，之前我们创建表，设计表结构都是通过sql语句，在django中我们就可以使用orm(对象关系映射)了，我们要去上面创建的stuff这个app下面的models.py中编写表结构</p><p>我们创建了两张表:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Department</span>(<span class="params">models.Model</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;部门表&quot;&quot;&quot;</span></span><br><span class="line">title = models.CharField(verbose_name=<span class="string">&#x27;标题&#x27;</span>, max_length=<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span>(<span class="params">models.Model</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;员工表&quot;&quot;&quot;</span></span><br><span class="line">name = models.CharField(verbose_name=<span class="string">&#x27;姓名&#x27;</span>, max_length=<span class="number">16</span>)</span><br><span class="line">password = models.CharField(verbose_name=<span class="string">&#x27;密码&#x27;</span>, max_length=<span class="number">64</span>)</span><br><span class="line">age = models.IntegerField(verbose_name=<span class="string">&#x27;年龄&#x27;</span>)</span><br><span class="line">account = models.DecimalField(verbose_name=<span class="string">&#x27;账户余额&#x27;</span>, max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, default=<span class="number">0</span>)</span><br><span class="line">create_time = models.DateTimeField(verbose_name=<span class="string">&#x27;入职时间&#x27;</span>)</span><br></pre></td></tr></table></figure><p>我们来解读下上面创建表的语句:</p><ul><li>verbose_name = ‘标题’，就相当于对前面title的一个备注，一个解释</li><li>max_length = 32，规定了char类型的一个所能存储字节的个数，比如这里是最多存储32个字节</li><li>max_digits = 10，表示这个小数的最大长度是10位</li><li>decimal_places = 2，表示这个小数的小数位是2位</li><li>default = 0，表示如未填充数据，将默认为0</li></ul><p>目前我们就相当于创建了两个这种类型的表，用excel表示如下:</p><p><a href="https://imgtu.com/i/bzfg7q"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/bzfg7q.png"                      alt="bzfg7q.png"                ></a></p><p>到这里，我们有两个问题:</p><ul><li><p>那么如何把这两张彪串联起来呢，按理来说应该在第二张表在添加一个字段部门，那么是<strong>存储部门的名称比如销售还是存储部门名称对应的ID</strong>呢，其实这两者都有存储的，但是一般在开发中是存ID的，因为这样更符合数据库范式，常见开发都是这样的，如果存部门名称还需要更多空间，正常来说一个中国字所占字节在2~4个之间</p><p>但是一些大厂就不会按数据库范式来存，他会直接存名称，之所以会直接存名称，那很有可能这张表被查询的次数会非常非常多，一天可能好几千万次那种，如果存的是ID那就需要去联表，就是说如果想知道老奇幻(以上图为例)在哪个部门，还需要结合部门表才能得出结果，而联表操作就比较耗时，为了加速查找就会直接存名称</p><p>但是小公司一般没有这么大的数据访问量，所以一般还是存ID，所以确定了我们这里存部门ID</p></li><li><p><strong>部门ID需不需约束呢</strong>，就好比我们写下了这个语句:</p><ul><li><p>```python<br>class UserInfo(models.Model):</p><pre><code>&quot;&quot;&quot;员工表&quot;&quot;&quot;name = models.CharField(verbose_name=&#39;姓名&#39;, max_length=16)password = models.CharField(verbose_name=&#39;密码&#39;, max_length=64)age = models.IntegerField(verbose_name=&#39;年龄&#39;)account = models.DecimalField(verbose_name=&#39;账户余额&#39;, max_digits=10, decimal_places=2, default=0)create_time = models.DateTimeField(verbose_name=&#39;入职时间&#39;)depart_id = models.BigIntegerField(verbose_name = &#39;部门ID&#39;)</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">我们添加了最后这一句，这是没有加约束的，那也就意味着，这里depart_id也可以写10000，但是，在部门表中又没有对应的部门，那这样是不行的；那没有约束的话，这里的部门ID就可以写任何值，写进去完全是个垃圾值</span><br><span class="line"></span><br><span class="line">所以我们要给这个字段加上约束，这个depart_id只能是部门表中已存在的ID，如果写了部门表中不存在的ID，mysql会直接报错</span><br><span class="line"></span><br><span class="line">如果像上面这样写是不会加约束的，像下面这样写才是有约束的:</span><br><span class="line"></span><br><span class="line">比如说我们写上一个depart:</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">depart = models.ForeignKey(to=&quot;Department&quot;, to_field=&quot;id&quot;)</span><br></pre></td></tr></table></figure></li><li><p>to就表示要与哪张表关联</p></li><li><p>to_field就表示要与表中的哪个字段相关联</p></li><li><p>这里需要注意的一点是，虽然我们这里写的字段名是depart，但是django底层在生成表的的时候就会自动加一个<code>_id</code>，这也表示和部门表中id这个字段相关联叭</p></li></ul><p>除此之外，我们还需要考虑个问题，如果我们把一个部门删除了，那与之相关联的员工怎么办，他们原有的部门已经被删除了，下面有集中解决方法:</p><ul><li><p>删除用户，也就是级联删除，因为员工表与部门表是关联了的，所以当我们把某一个部门删除后，相对应的员工也会从员工表中删除，这个时候我们可以如下操作:</p><p><code>on_delete=models.CASCADE</code>就表示级联删除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">depart = models.ForeignKey(to=<span class="string">&quot;Department&quot;</span>, to_field=<span class="string">&quot;id&quot;</span>, on_delete=models.CASCADE)</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>那么还有一种就是置空，就是让它变成空值，前提是这一行要允许为空，这个时候我们可以这么如下操作:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">depart = models.Foreignkey(to=<span class="string">&quot;Department&quot;</span>, to_field=<span class="string">&quot;id&quot;</span>, null=<span class="literal">True</span>, blank=<span class="literal">True</span>,on_delete=models.SET_NULL)</span><br></pre></td></tr></table></figure><p>然后我还想在员工表中新增一个性别字段，我们本可以直接写男，或者女，但是这样感觉又会占空间，所以我们可以用如下方式实现:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gender_choices = (</span><br><span class="line">    (<span class="number">1</span>, <span class="string">&#x27;男&#x27;</span>)，</span><br><span class="line">    (<span class="number">2</span>, <span class="string">&#x27;女&#x27;</span>)</span><br><span class="line">)</span><br><span class="line">gender = models.SmallIntegerField(verbose_name=<span class="string">&#x27;性别&#x27;</span>, choices=gender_choices)</span><br></pre></td></tr></table></figure><p>上面我们用来<code>SmallIntegerField</code>来存储小数字，这个类型所占的字节数非常少，这里我们想用数字1和2分别代指男和女，但是1代表什么2代表什么我不知道啊，所以我们创建一个元组，然后使用<code>choices=&#39;gender_choices&#39;</code>来实现一个映射；这个就和数据库的约束无关了，这就属于在django中所做的约束了，以后写性别的时候只能写1或者2,1代表的是男，2代表的是女</p><h4 id="生成数据库表"><a href="#生成数据库表" class="headerlink" title="生成数据库表"></a>生成数据库表</h4><p>上面我们已经写了个模型类，下面我们就该在实际数据库中生成数据库表了</p><p>首先我们知道ORM(对象关系映射)是只能生成表的，不能生成数据库，所以我们首先要手动去生成数据库</p><p>如何生成数据库已经是老生常谈了，前面提到过，这里就不赘述了</p><p>如下所示我生成了一个gx_day16的数据库</p><p><a href="https://imgtu.com/i/qSNQII"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qSNQII.png"                      alt="qSNQII.png"                ></a></p><p> 然后第二步就是在django中修改配置文件，连接mysql:</p><p>我们直接修改之前的即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,  <span class="comment"># 数据库引擎</span></span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;gx_day16&#x27;</span>, <span class="comment">#数据库名称</span></span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>:<span class="string">&#x27;root&#x27;</span>, <span class="comment"># 连接数据库的用户名称</span></span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>:<span class="string">&#x27;123456&#x27;</span>,  <span class="comment"># 用户密码</span></span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>:<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="comment"># 访问的数据库的主机的ip地址</span></span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>:<span class="string">&#x27;3306&#x27;</span>, <span class="comment"># 默认mysql访问端口</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那接下来就是我们需要使用命令在数据库中生成相应的表，还是那两个熟悉的命令</p><p>这样写上之后，表结构就在数据库中被创建了:</p><p><a href="https://imgtu.com/i/qSaorD"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qSaorD.png"                      alt="qSaorD.png"                ></a></p><p>后续我们就能开始写页面了，对数据库中的表进行增删改查</p><h4 id="静态文件管理"><a href="#静态文件管理" class="headerlink" title="静态文件管理"></a>静态文件管理</h4><p>我们需要在stuff这个目录下创建一个static文件，用于放静态文件，由于之前我们已有这些静态文件里，所以呢，我们就直接拷贝之前的过来即可，后续使用到其他的静态文件可以再引入</p><p>然后我们再创建一个模板文件templates，也是直接在stuff这个app下创建</p><p><a href="https://imgtu.com/i/qSwpSx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qSwpSx.png"                      alt="qSwpSx.png"                ></a></p><h4 id="部门管理"><a href="#部门管理" class="headerlink" title="部门管理"></a>部门管理</h4><p>这里我们先用最原始的方法来做，其实Django中提供了Form和ModelForm组件，如果用这个实现起来会更方便，现在我们先用最原始的方式来做:</p><h5 id="部门列表展示"><a href="#部门列表展示" class="headerlink" title="部门列表展示"></a>部门列表展示</h5><p>我们自己给自己当UI，先来画一下大概想要实现的样子:</p><p><a href="https://imgtu.com/i/qSwq3t"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qSwq3t.png"                      alt="qSwq3t.png"                ></a><br>下面就先把简单的页面做出来</p><p>URL:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(<span class="string">&#x27;depart/list/&#x27;</span>, views.depart_list)</span><br></pre></td></tr></table></figure><p><a href="https://imgtu.com/i/qS0Q81"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qS0Q81.png"                      alt="qS0Q81.png"                ></a></p><p>views.py:</p><p>到目前我们还未用到数据库</p><p><a href="https://imgtu.com/i/qpSDSg"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qpSDSg.png"                      alt="qpSDSg.png"                ></a></p><p>depart_list.html:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/css/bootstrap.min.css&#x27;%&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--下面的样式用于去掉导航栏的圆角--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.navbar</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">border-radius</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-default&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Brand and toggle get grouped for better mobile display --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-header&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggle collapsed&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;collapse&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">data-target</span>=<span class="string">&quot;#bs-example-navbar-collapse-1&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 联通用户管理系统 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Collect the nav links, forms, and other content for toggling --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse navbar-collapse&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bs-example-navbar-collapse-1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          修改下面两个li标签，第一个改为部门管理，第二个改为用户管理--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/depart/list&quot;</span>&gt;</span>部门管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          下拉菜单删除--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--        &lt;li class=&quot;dropdown&quot;&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;Dropdown &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          &lt;ul class=&quot;dropdown-menu&quot;&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something else here&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;One more separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          &lt;/ul&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--        &lt;/li&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        输入框删除--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--      &lt;form class=&quot;navbar-form navbar-left&quot;&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;div class=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--          &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;/div&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--      &lt;/form&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav navbar-right&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          修改下面这个li标签，成为登录按钮， 这里先做部分修改--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          下面这个下拉框，我们可以用于登录后显示用户信息，这里先做个修改案例--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span>lihoujian<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>个人资料<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我的信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我的爱好<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>注销<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.navbar-collapse --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.container-fluid --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        新建部门按钮--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--        margin-bottom: 10px让新建按钮和下面的表格有个间距--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-bottom: 10px&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-success&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                新加了一个新建部门的图标，这个也是直接从bootstrap的网页中扣取下来的--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-plus&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                新建部门</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--        表格用面板展现出来, 这里是直接扣的bootstrap示例的网页源代码--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel panel-default&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Default panel contents --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-heading&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--                新加了一个部门图标--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-th-list&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                部门列表</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- Table --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--            table-bordered给表格加上一个边框--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-bordered&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;row&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>销售部<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                        btn-xs使得图标显示得小一些--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-xs&quot;</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger btn-xs&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;% static &#x27;js/jQuery-3.6.1.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1.js/bootstrap.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面就是对部门列表的一些展示，如果觉得这个导航栏平铺着比较难看，我们可以在代码中把<code>&lt;div class=&quot;container-fluid&quot;&gt;</code>改为<code>&lt;div class=&quot;container</code>他就会设置一个宽度，并且让内容居中，代码中我也写了一些注释</p><p>暂时的效果如下:</p><p><a href="https://imgtu.com/i/qSzBrR"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qSzBrR.png"                      alt="qSzBrR.png"                ></a></p><h5 id="部门列表展示-续之使用上数据库"><a href="#部门列表展示-续之使用上数据库" class="headerlink" title="部门列表展示(续之使用上数据库)"></a>部门列表展示(续之使用上数据库)</h5><p>我们需要从数据库中把数据读出来，但是目前数据库中还没有数据，所以我现在手动地往里面加几个数据</p><p><a href="https://imgtu.com/i/qppODs"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qppODs.png"                      alt="qppODs.png"                ></a></p><p>当我添加这两行数据后，我就要将它们在页面中给我展现出来</p><p>我们来修改views.py:</p><p><a href="https://imgtu.com/i/qpCiJf"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qpCiJf.png"                      alt="qpCiJf.png"                ></a></p><p>然后我们自然是要修改表格了，嵌入一个循环来读取数据:</p><p>这里附上代码片段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;table <span class="class"><span class="keyword">class</span>=&quot;<span class="title">table</span> <span class="title">table</span>-<span class="title">bordered</span>&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">thead</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">th</span>&gt;<span class="title">ID</span>&lt;/<span class="title">th</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">th</span>&gt;名称&lt;/<span class="title">th</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">th</span>&gt;操作&lt;/<span class="title">th</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;/<span class="title">thead</span>&gt;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">tbody</span>&gt;</span></span><br><span class="line"><span class="class">                &#123;% <span class="title">for</span> <span class="title">obj</span> <span class="title">in</span> <span class="title">queryset</span> %&#125;</span></span><br><span class="line"><span class="class">                &lt;<span class="title">tr</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">th</span> <span class="title">scope</span>=&quot;<span class="title">row</span>&quot;&gt;&#123;&#123; <span class="title">obj</span>.<span class="title">id</span> &#125;&#125;&lt;/<span class="title">th</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">td</span>&gt;&#123;&#123; <span class="title">obj</span>.<span class="title">title</span> &#125;&#125;&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line"><span class="class">                    &lt;<span class="title">td</span>&gt;</span></span><br><span class="line"><span class="class">&lt;!--                        <span class="title">btn</span>-<span class="title">xs</span>使得图标显示得小一些--&gt;</span></span><br><span class="line"><span class="class">                        &lt;a href=&quot;&quot; <span class="keyword">class</span>=&quot;btn btn-primary btn-xs&quot;&gt;新增&lt;/a&gt;</span></span><br><span class="line"><span class="class">                        &lt;a href=&quot;&quot; <span class="keyword">class</span>=&quot;btn btn-danger btn-xs&quot;&gt;删除&lt;/a&gt;</span></span><br><span class="line"><span class="class">                    &lt;/td&gt;</span></span><br><span class="line"><span class="class">                &lt;/tr&gt;</span></span><br><span class="line"><span class="class">                &#123;% endfor %&#125;</span></span><br><span class="line"><span class="class">                &lt;/tbody&gt;</span></span><br><span class="line"><span class="class">            &lt;/table&gt;</span></span><br></pre></td></tr></table></figure><p>实现效果:</p><p><a href="https://imgtu.com/i/qpCtm9"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/16/qpCtm9.png"                      alt="qpCtm9.png"                ></a></p><h5 id="添加部门"><a href="#添加部门" class="headerlink" title="添加部门"></a>添加部门</h5><p>刚才我们已经完成了展示部门列表</p><p>下面我们来完成添加功能的部分内容，完成添加页面的前端部分</p><p>在部门列表展示中有一个新建部门的按钮，点击它，应该会跳转到一个页面 ，我们就是要完成这个页面的部分，和URL的部分</p><p>首先我们要修改<code>depart/list</code>中的新建部门按钮所跳转的链接:</p><p>下面给上代码片段:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;/depart/add/&quot;</span> <span class="class"><span class="keyword">class</span>=&quot;<span class="title">btn</span> <span class="title">btn</span>-<span class="title">success</span>&quot; <span class="title">target</span>=&quot;<span class="title">_blank</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;!--                新加了一个新建部门的图标，这个也是直接从<span class="title">bootstrap</span>的网页中扣取下来的--&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;glyphicon glyphicon-plus&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="class">                新建部门</span></span><br><span class="line"><span class="class">            &lt;/a&gt;</span></span><br></pre></td></tr></table></figure><p><code>target=&quot;_blank&quot;</code>就表示在新页面中打开，我们这里就不在新页面中打开了</p><p>那自然还要配置URL和视图:</p><p>然后就是<code>depart_add.html</code>了:</p><p>导航栏什么的肯定是原封不动从<code>depart_list.html</code>中拿过来了，然后我们也可以给他加上一个面板</p><p>下面直接上代码吧，代码中我也嵌入了注释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;添加部门&lt;/title&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/css/bootstrap.min.css&#x27;%&#125;&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--下面的样式用于去掉导航栏的圆角--&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    .navbar&#123;</span><br><span class="line">        border-radius: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;nav <span class="class"><span class="keyword">class</span>=&quot;<span class="title">navbar</span> <span class="title">navbar</span>-<span class="title">default</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">container</span>-<span class="title">fluid</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;!-- <span class="title">Brand</span> <span class="title">and</span> <span class="title">toggle</span> <span class="title">get</span> <span class="title">grouped</span> <span class="title">for</span> <span class="title">better</span> <span class="title">mobile</span> <span class="title">display</span> --&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;navbar-header&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;button <span class="built_in">type</span>=&quot;button&quot; <span class="keyword">class</span>=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot;</span></span><br><span class="line"><span class="class">                    data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="class">            &lt;/button&gt;</span></span><br><span class="line"><span class="class">            &lt;a <span class="keyword">class</span>=&quot;navbar-brand&quot; href=&quot;#&quot;&gt; 联通用户管理系统 &lt;/a&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">        &lt;!-- Collect the nav links, forms, <span class="keyword">and</span> other content <span class="keyword">for</span> toggling --&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;collapse navbar-collapse&quot; <span class="built_in">id</span>=&quot;bs-example-navbar-collapse-1&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;ul <span class="keyword">class</span>=&quot;nav navbar-nav&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          修改下面两个li标签，第一个改为部门管理，第二个改为用户管理--&gt;</span></span><br><span class="line"><span class="class">                &lt;li&gt;&lt;a href=&quot;/depart/<span class="built_in">list</span>&quot;&gt;部门管理&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;用户管理&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          下拉菜单删除--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--        &lt;li <span class="keyword">class</span>=&quot;dropdown&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          &lt;a href=&quot;#&quot; <span class="keyword">class</span>=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;Dropdown &lt;span <span class="keyword">class</span>=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          &lt;ul <span class="keyword">class</span>=&quot;dropdown-menu&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something <span class="keyword">else</span> here&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li role=&quot;separator&quot; <span class="keyword">class</span>=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li role=&quot;separator&quot; <span class="keyword">class</span>=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;One more separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          &lt;/ul&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--        &lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;/ul&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        输入框删除--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--      &lt;form <span class="keyword">class</span>=&quot;navbar-form navbar-left&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--          &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;text&quot; <span class="keyword">class</span>=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        &lt;button <span class="built_in">type</span>=&quot;submit&quot; <span class="keyword">class</span>=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--      &lt;/form&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;ul <span class="keyword">class</span>=&quot;nav navbar-nav navbar-right&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          修改下面这个li标签，成为登录按钮， 这里先做部分修改--&gt;</span></span><br><span class="line"><span class="class">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;登录&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          下面这个下拉框，我们可以用于登录后显示用户信息，这里先做个修改案例--&gt;</span></span><br><span class="line"><span class="class">                &lt;li <span class="keyword">class</span>=&quot;dropdown&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;a href=&quot;#&quot; <span class="keyword">class</span>=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot;</span></span><br><span class="line"><span class="class">                       aria-expanded=&quot;false&quot;&gt;lihoujian&lt;span <span class="keyword">class</span>=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="class">                    &lt;ul <span class="keyword">class</span>=&quot;dropdown-menu&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;个人资料&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;我的信息&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;我的爱好&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li role=&quot;separator&quot; <span class="keyword">class</span>=&quot;divider&quot;&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;注销&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                    &lt;/ul&gt;</span></span><br><span class="line"><span class="class">                &lt;/li&gt;</span></span><br><span class="line"><span class="class">            &lt;/ul&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;&lt;!-- /.navbar-collapse --&gt;</span></span><br><span class="line"><span class="class">    &lt;/div&gt;&lt;!-- /.container-fluid --&gt;</span></span><br><span class="line"><span class="class">&lt;/nav&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;div&gt;</span></span><br><span class="line"><span class="class">    &lt;div <span class="keyword">class</span>=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;!--        加入面板--&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;panel panel-default&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;div <span class="keyword">class</span>=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;h3 <span class="keyword">class</span>=&quot;panel-title&quot;&gt;新建部门&lt;/h3&gt;</span></span><br><span class="line"><span class="class">            &lt;/div&gt;</span></span><br><span class="line"><span class="class">            &lt;div <span class="keyword">class</span>=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                面板的内容我们写表单--&gt;</span></span><br><span class="line"><span class="class">                &lt;form method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="class">                    &#123;% csrf_token %&#125;</span></span><br><span class="line"><span class="class">                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;label&gt;标题&lt;/label&gt;</span></span><br><span class="line"><span class="class">                        &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;text&quot; <span class="keyword">class</span>=&quot;form-control&quot; placeholder=&quot;标题&quot; name=&quot;title&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;/div&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;label <span class="keyword">class</span>=&quot;col-sm-2 co ntrol-label&quot;&gt;保存&lt;/label&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;div <span class="keyword">class</span>=&quot;col-sm-10&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                            &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;password&quot; <span class="keyword">class</span>=&quot;form-control&quot; <span class="built_in">id</span>=&quot;inputPassword3&quot; placeholder=&quot;Password&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;div <span class="keyword">class</span>=&quot;col-sm-offset-2 col-sm-10&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                            &lt;div <span class="keyword">class</span>=&quot;checkbox&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                                &lt;label&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                                    &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;checkbox&quot;&gt; Remember me--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                                &lt;/label&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                            &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;button <span class="built_in">type</span>=&quot;submit&quot; <span class="keyword">class</span>=&quot;btn btn-primary&quot;&gt;提交&lt;/button&gt;</span></span><br><span class="line"><span class="class">                &lt;/form&gt;</span></span><br><span class="line"><span class="class">            &lt;/div&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    &lt;/div&gt;</span></span><br><span class="line"><span class="class">&lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;script src=&quot;&#123;% static &#x27;js/jQuery-3.6.1.<span class="built_in">min</span>.js&#x27; %&#125;&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="class">&lt;script src=&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1.js/bootstrap.<span class="built_in">min</span>.js&#x27; %&#125;&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="class">&lt;/body&gt;</span></span><br><span class="line"><span class="class">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>视图:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">depart_add</span>(<span class="params">request</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;添加部门&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> request.method == <span class="string">&quot;GET&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">&#x27;depart_add.html&#x27;</span>)</span><br><span class="line"><span class="comment"># 获取用户post提交过来的数据,如果title为空呢，后面我们会有一个组件来判断，这里先默认用户输入的这个标题都是合法的</span></span><br><span class="line">depart_name = request.POST.get(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line"><span class="comment"># 保存到数据库</span></span><br><span class="line">models.Department.objects.create(title=depart_name)</span><br><span class="line"><span class="keyword">return</span> redirect(<span class="string">&#x27;/depart/list/&#x27;</span>)</span><br></pre></td></tr></table></figure><h5 id="删除部门"><a href="#删除部门" class="headerlink" title="删除部门"></a>删除部门</h5><p>URL:</p><p><a href="https://imgtu.com/i/qCnuzd"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/17/qCnuzd.png"                      alt="qCnuzd.png"                ></a></p><p>views.py:</p><p><a href="https://imgtu.com/i/qCn3eP"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/17/qCn3eP.png"                      alt="qCn3eP.png"                ></a></p><p>我们在<code>depart_list.html</code>中做修改:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                &#123;% for obj in queryset %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">&quot;row&quot;</span>&gt;</span>&#123;&#123; obj.id &#125;&#125;<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; obj.title &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                        btn-xs使得图标显示得小一些--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/depart/add/&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-xs&quot;</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/depart/delete/?nid=&#123;&#123; obj.id &#125;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger btn-xs&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br></pre></td></tr></table></figure><p>到这里我们删除部门的功能就实现了</p><h5 id="编辑部门"><a href="#编辑部门" class="headerlink" title="编辑部门"></a>编辑部门</h5><p>我们点击编辑就会跳转到一个界面</p><p><a href="https://imgtu.com/i/qCuh9g"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/17/qCuh9g.png"                      alt="qCuh9g.png"                ></a></p><p>首先我们需要大概测绘出长什么样子</p><p>它应该长得和我们新建部门差不多叭，然后会显示一个默认值，我们在默认值的基础上进行修改</p><p>首先还是老样子，我们先写URL:</p><p><a href="https://imgtu.com/i/qCKfVx"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/17/qCKfVx.png"                      alt="qCKfVx.png"                ></a></p><p>然后我们用之前<code>depart_add.html</code>做一些修改然后保存为<code>depart_edit.html</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;添加部门&lt;/title&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/css/bootstrap.min.css&#x27;%&#125;&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--下面的样式用于去掉导航栏的圆角--&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    .navbar&#123;</span><br><span class="line">        border-radius: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;nav <span class="class"><span class="keyword">class</span>=&quot;<span class="title">navbar</span> <span class="title">navbar</span>-<span class="title">default</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">container</span>-<span class="title">fluid</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;!-- <span class="title">Brand</span> <span class="title">and</span> <span class="title">toggle</span> <span class="title">get</span> <span class="title">grouped</span> <span class="title">for</span> <span class="title">better</span> <span class="title">mobile</span> <span class="title">display</span> --&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;navbar-header&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;button <span class="built_in">type</span>=&quot;button&quot; <span class="keyword">class</span>=&quot;navbar-toggle collapsed&quot; data-toggle=&quot;collapse&quot;</span></span><br><span class="line"><span class="class">                    data-target=&quot;#bs-example-navbar-collapse-1&quot; aria-expanded=&quot;false&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="class">                &lt;span <span class="keyword">class</span>=&quot;icon-bar&quot;&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="class">            &lt;/button&gt;</span></span><br><span class="line"><span class="class">            &lt;a <span class="keyword">class</span>=&quot;navbar-brand&quot; href=&quot;#&quot;&gt; 联通用户管理系统 &lt;/a&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">        &lt;!-- Collect the nav links, forms, <span class="keyword">and</span> other content <span class="keyword">for</span> toggling --&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;collapse navbar-collapse&quot; <span class="built_in">id</span>=&quot;bs-example-navbar-collapse-1&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;ul <span class="keyword">class</span>=&quot;nav navbar-nav&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          修改下面两个li标签，第一个改为部门管理，第二个改为用户管理--&gt;</span></span><br><span class="line"><span class="class">                &lt;li&gt;&lt;a href=&quot;/depart/<span class="built_in">list</span>&quot;&gt;部门管理&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;用户管理&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          下拉菜单删除--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--        &lt;li <span class="keyword">class</span>=&quot;dropdown&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          &lt;a href=&quot;#&quot; <span class="keyword">class</span>=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;Dropdown &lt;span <span class="keyword">class</span>=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          &lt;ul <span class="keyword">class</span>=&quot;dropdown-menu&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something <span class="keyword">else</span> here&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li role=&quot;separator&quot; <span class="keyword">class</span>=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li role=&quot;separator&quot; <span class="keyword">class</span>=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;One more separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          &lt;/ul&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--        &lt;/li&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;/ul&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        输入框删除--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--      &lt;form <span class="keyword">class</span>=&quot;navbar-form navbar-left&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--          &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;text&quot; <span class="keyword">class</span>=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--        &lt;button <span class="built_in">type</span>=&quot;submit&quot; <span class="keyword">class</span>=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;!--      &lt;/form&gt;--&gt;</span></span><br><span class="line"><span class="class">            &lt;ul <span class="keyword">class</span>=&quot;nav navbar-nav navbar-right&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          修改下面这个li标签，成为登录按钮， 这里先做部分修改--&gt;</span></span><br><span class="line"><span class="class">                &lt;li&gt;&lt;a href=&quot;#&quot;&gt;登录&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                &lt;!--          下面这个下拉框，我们可以用于登录后显示用户信息，这里先做个修改案例--&gt;</span></span><br><span class="line"><span class="class">                &lt;li <span class="keyword">class</span>=&quot;dropdown&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;a href=&quot;#&quot; <span class="keyword">class</span>=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot;</span></span><br><span class="line"><span class="class">                       aria-expanded=&quot;false&quot;&gt;lihoujian&lt;span <span class="keyword">class</span>=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="class">                    &lt;ul <span class="keyword">class</span>=&quot;dropdown-menu&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;个人资料&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;我的信息&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;我的爱好&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li role=&quot;separator&quot; <span class="keyword">class</span>=&quot;divider&quot;&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;注销&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="class">                    &lt;/ul&gt;</span></span><br><span class="line"><span class="class">                &lt;/li&gt;</span></span><br><span class="line"><span class="class">            &lt;/ul&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;&lt;!-- /.navbar-collapse --&gt;</span></span><br><span class="line"><span class="class">    &lt;/div&gt;&lt;!-- /.container-fluid --&gt;</span></span><br><span class="line"><span class="class">&lt;/nav&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;div&gt;</span></span><br><span class="line"><span class="class">    &lt;div <span class="keyword">class</span>=&quot;container&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;!--        加入面板--&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;panel panel-default&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;div <span class="keyword">class</span>=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;h3 <span class="keyword">class</span>=&quot;panel-title&quot;&gt;编辑部门&lt;/h3&gt;</span></span><br><span class="line"><span class="class">            &lt;/div&gt;</span></span><br><span class="line"><span class="class">            &lt;div <span class="keyword">class</span>=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                面板的内容我们写表单--&gt;</span></span><br><span class="line"><span class="class">                &lt;form method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="class">                    &#123;% csrf_token %&#125;</span></span><br><span class="line"><span class="class">                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;label&gt;标题&lt;/label&gt;</span></span><br><span class="line"><span class="class">                        &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;text&quot; <span class="keyword">class</span>=&quot;form-control&quot; placeholder=&quot;标题&quot; name=&quot;title&quot; value=&quot;&#123;&#123; row_object.title &#125;&#125;&quot;&gt;</span></span><br><span class="line"><span class="class">                    &lt;/div&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;label <span class="keyword">class</span>=&quot;col-sm-2 co ntrol-label&quot;&gt;保存&lt;/label&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;div <span class="keyword">class</span>=&quot;col-sm-10&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                            &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;password&quot; <span class="keyword">class</span>=&quot;form-control&quot; <span class="built_in">id</span>=&quot;inputPassword3&quot; placeholder=&quot;Password&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;div <span class="keyword">class</span>=&quot;col-sm-offset-2 col-sm-10&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                            &lt;div <span class="keyword">class</span>=&quot;checkbox&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                                &lt;label&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                                    &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;checkbox&quot;&gt; Remember me--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                                &lt;/label&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                            &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;!--                    &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                    &lt;button <span class="built_in">type</span>=&quot;submit&quot; <span class="keyword">class</span>=&quot;btn btn-primary&quot;&gt;提交&lt;/button&gt;</span></span><br><span class="line"><span class="class">                &lt;/form&gt;</span></span><br><span class="line"><span class="class">            &lt;/div&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    &lt;/div&gt;</span></span><br><span class="line"><span class="class">&lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;script src=&quot;&#123;% static &#x27;js/jQuery-3.6.1.<span class="built_in">min</span>.js&#x27; %&#125;&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="class">&lt;script src=&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1.js/bootstrap.<span class="built_in">min</span>.js&#x27; %&#125;&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="class">&lt;/body&gt;</span></span><br><span class="line"><span class="class">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure><p>比如这个面板的标题应该叫编辑部门或者修改部门，然我们刚也提到了就是我们修改哪一个部门然后在修改界面也应该显示这个部门名称，那么我们就可以这么实现，当我们点击编辑的时候，就把这个数据的id也携带过去，然后我们在编辑页面就可以针对这个id在数据库里面进行寻找，找到这个id的数据自然也就能获取到名称了，刚刚我们删除部门的时候就使用过一种方法，就是直接在url中携带一个uid；但是这里基于django啊，我们还可以做上一个更加方便的传值的一个功能，我们可以直接修改URL，在URL中嵌入正则表达式，比如<code>path(&#39;depart/&lt;int:nid&gt;/edit/&#39;)</code>那么我们以后填写URL的时候就必须填入类似<code>http://127.0.0.1:8000/depart/1/edit/</code>这样的URL，如果这样传了，我们在视图函数中加个参数nid，这个参数就是你通过这个URL传递过来的这个真实的id，然后在视图函数中就可以拿到这个id来进行数据库查找的操作了:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">depart_edit</span>(<span class="params">request, nid</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;修改部门&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># 根据nid,获取它的数据</span></span><br><span class="line">row_object = models.Department.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=nid).first()</span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">&#x27;depart_edit.html&#x27;</span>, &#123;<span class="string">&#x27;row_object&#x27;</span>: row_object&#125;)</span><br></pre></td></tr></table></figure><p>然后下一步就是点击提交了，这个时候就是post请求了，我们需要在views.py中拿到该数据的id，然后针对这个id对该数据进行修改，id就携带在url中，又由于我们没写action属性，所以post就会走默认的url，所以，url还是刚刚的url，然后，我们只需要对title做一个更新即可:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">depart_edit</span>(<span class="params">request, nid</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;修改部门&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line"><span class="comment"># 根据nid,获取它的数据</span></span><br><span class="line">row_object = models.Department.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=nid).first()</span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">&#x27;depart_edit.html&#x27;</span>, &#123;<span class="string">&#x27;row_object&#x27;</span>: row_object&#125;)</span><br><span class="line"><span class="comment"># 根据id找到数据库中的数据并进行更新</span></span><br><span class="line">title = request.POST.get(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">models.Department.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=nid).update(title=title)</span><br><span class="line"><span class="keyword">return</span> redirect(<span class="string">&#x27;/depart/list/&#x27;</span>)</span><br></pre></td></tr></table></figure><h5 id="模板的继承"><a href="#模板的继承" class="headerlink" title="模板的继承"></a>模板的继承</h5><p>我们之前写的部门列表，添加部门，编辑部门都用到了一些相同的页面，比如导航栏，这些都是重复的；其实这个三个页面很多部分都是重复的，这样导致我们使用起来就不太方便</p><p>在django中支持模板的继承，我们一些重复的代码可以写在模板中，我们把container中的东西挖空，然后在templates目录中新建一个layout.html，把layout.html作为一个模板:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>部门列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1/css/bootstrap.min.css&#x27;%&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--下面的样式用于去掉导航栏的圆角--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.navbar</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">border-radius</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-default&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Brand and toggle get grouped for better mobile display --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-header&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggle collapsed&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;collapse&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">data-target</span>=<span class="string">&quot;#bs-example-navbar-collapse-1&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span> 联通用户管理系统 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Collect the nav links, forms, and other content for toggling --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse navbar-collapse&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bs-example-navbar-collapse-1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          修改下面两个li标签，第一个改为部门管理，第二个改为用户管理--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/depart/list&quot;</span>&gt;</span>部门管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>用户管理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          下拉菜单删除--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--        &lt;li class=&quot;dropdown&quot;&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          &lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;Dropdown &lt;span class=&quot;caret&quot;&gt;&lt;/span&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          &lt;ul class=&quot;dropdown-menu&quot;&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Another action&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Something else here&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li role=&quot;separator&quot; class=&quot;divider&quot;&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;One more separated link&lt;/a&gt;&lt;/li&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          &lt;/ul&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--        &lt;/li&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        输入框删除--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--      &lt;form class=&quot;navbar-form navbar-left&quot;&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;div class=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--          &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;Search&quot;&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;/div&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;Submit&lt;/button&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--      &lt;/form&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav navbar-right&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          修改下面这个li标签，成为登录按钮， 这里先做部分修改--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--          下面这个下拉框，我们可以用于登录后显示用户信息，这里先做个修改案例--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span>lihoujian<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>个人资料<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我的信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>我的爱好<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>注销<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.navbar-collapse --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.container-fluid --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% block content %&#125;&#123;% endblock %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;% static &#x27;js/jQuery-3.6.1.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;% static &#x27;plugins/bootstrap-3.4.1.js/bootstrap.min.js&#x27; %&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中，我们把原来的class=container的div替换成了<code>&#123;% block content %&#125;&#123;% endblock %&#125;`，这就表示继承这个模板的文件只需要写这部分内容即可这里写一个示例index.html，用于继承这个模板:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends layout.html %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">&lt;h1&gt;首页&lt;/h1&gt;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>`&#123;% extends layout.html %&#125;`表示引入`layout.html`这个模板文件，然后里面`&#123;% block content %&#125;`和`&#123;% endblock %&#125;</code>中间就写我们的html内容，这里面的<code>&lt;h1&gt;首页&lt;/h1&gt;</code>就会把模板的<code>&#123;% block content %&#125;`和`&#123;% endblock %&#125;</code>替换掉</p><p>有了模板之后我们很多的代码都可以省略掉</p><p>我们想在这三个页面中新加一个菜单，那就可以在模板中直接修改，那么将会作用于这三个页面</p><h5 id="用户列表展示"><a href="#用户列表展示" class="headerlink" title="用户列表展示"></a>用户列表展示</h5><p>和部门列表展示是一样的，我们这里就不赘述了，不然这个笔记的篇幅就很大，和前面的实现是很类似的</p><p><a href="https://imgtu.com/i/qFLtMQ"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/18/qFLtMQ.png"                      alt="qFLtMQ.png"                ></a></p><h5 id="添加用户-原始方法"><a href="#添加用户-原始方法" class="headerlink" title="添加用户(原始方法)"></a>添加用户(原始方法)</h5><p>用之前的方法就是原始方法</p><p>新建方法有两种方法:</p><ul><li><p>原始方式实现: 这个比较麻烦，但是这是实现的本质</p></li><li><p>Django组件</p><ul><li>Form组件(小简便)</li><li>ModelForm组件(最简便)</li></ul><p>要想使用ModelForm，我们先要理解Form</p></li></ul><p>这个和前面添加部门是很类似的</p><p><a href="https://imgtu.com/i/qAF8aT"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/19/qAF8aT.png"                      alt="qAF8aT.png"                ></a></p><p>到这里我把我的项目进行一个上传，为一个初始版本</p><h5 id="Model和ModelForm"><a href="#Model和ModelForm" class="headerlink" title="Model和ModelForm"></a>Model和ModelForm</h5><p>上面我们用普通方法已经实现了添加用户的，但是这里有几点是不太方便的，首先一个比较核心的点，<strong>用户提交的数据我们没有经过任何有验证</strong>，起码输入不能为空，如果要校验的话，我们得拿到这几个字段一个一个校验，如果一个一个校验的话，那就需要写好多的逻辑代码，这种方法是不可取的；然后就是在<strong>页面上缺少一个错误提示</strong></p><p>然后就是一个这样的问题，我们<strong>如果有很多个很多个字段，那么在写添加页面的时候就得写同等数量的输入框</strong>，这个也是比较繁琐的</p><p>如果有一些下拉框，我们<strong>还得亲自去表里面关联数据</strong>，并且把它当做数据传到前端页面，前端页面还得在这循环，然后把每一个数据展现出来，所以你会发现在这里它关联的数据还需要咱们手动去获取并展示在页面中</p><p>如果我们非得用这个模式开发，就会漏洞百出，或者就是说自己做的事太多太多了</p><p>我们总结下上一种方法的不方便之处:</p><ul><li>用户提交数据没有校验</li><li>页面上没有错误提示</li><li>每一个字段都需要我们重新写一遍</li><li>关联的数据需要手动去获取并展示在页面</li></ul><p>真正用django开发我们不会这么干，我们会用组件，用组件来帮我们把以上这些事全做了</p><p>下面我们先来说说Form组件:</p><h6 id="初识Form组件"><a href="#初识Form组件" class="headerlink" title="初识Form组件"></a>初识Form组件</h6><p>可以理解为它可以自动做前三个事，最后一个事要完成它还得写点代码</p><p>我们首先来看一个例子:</p><p>views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyForm</span>(<span class="params">Form</span>):</span></span><br><span class="line">user = forms.CharField(widget=form.Inputs)</span><br><span class="line">    pwd = form.CharField(widget=form.Inputs)</span><br><span class="line">    email = form.CharField(widget=form.Inputs)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_add</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">        form = MyForm()</span><br><span class="line">        <span class="keyword">return</span> render(request, &#123;<span class="string">&#x27;form&#x27;</span>: form&#125;)</span><br></pre></td></tr></table></figure><p><code>widget=form.Inputs</code>会自动生成一个输入框</p><p>user.add.html:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">&#123;&#123; form.user &#125;&#125;</span><br><span class="line">    &#123;&#123; form.pwd &#125;&#125;</span><br><span class="line">    &#123;&#123; form.email &#125;&#125;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>像以上这么写就能自动生成html标签</p><p>上面其实还可以更简便，直接用循环:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">&#123;% <span class="keyword">for</span> field <span class="keyword">in</span> <span class="built_in">format</span> %&#125;</span><br><span class="line">    &#123;&#123; field &#125;&#125;</span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>如果我们使用Form组件的话，那这些字段，比如上面MyForm这个类里面的字段都需要我们预定义，如果使用ModelForm组件的话就更简单了</p><h6 id="ModelForm-推荐"><a href="#ModelForm-推荐" class="headerlink" title="ModelForm(推荐)"></a>ModelForm(推荐)</h6><p>比如说这里有一个models.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Department</span>(<span class="params">models.Model</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;部门表&quot;&quot;&quot;</span></span><br><span class="line">title = models.CharField(verbose_name=<span class="string">&#x27;标题&#x27;</span>, max_length=<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span>(<span class="params">models.Model</span>):</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;员工表&quot;&quot;&quot;</span></span><br><span class="line">name = models.CharField(verbose_name=<span class="string">&#x27;姓名&#x27;</span>, max_length=<span class="number">16</span>)</span><br><span class="line">password = models.CharField(verbose_name=<span class="string">&#x27;密码&#x27;</span>, max_length=<span class="number">64</span>)</span><br><span class="line">age = models.IntegerField(verbose_name=<span class="string">&#x27;年龄&#x27;</span>)</span><br><span class="line">account = models.DecimalField(verbose_name=<span class="string">&#x27;账户余额&#x27;</span>, max_digits=<span class="number">10</span>, decimal_places=<span class="number">2</span>, default=<span class="number">0</span>)</span><br><span class="line">create_time = models.DateTimeField(verbose_name=<span class="string">&#x27;入职时间&#x27;</span>)</span><br><span class="line">depart = models.ForeignKey(to=<span class="string">&quot;Department&quot;</span>, to_field=<span class="string">&quot;id&quot;</span>, on_delete=models.CASCADE)</span><br><span class="line">gender_choices = (</span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;男&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;女&#x27;</span>),</span><br><span class="line">)</span><br><span class="line">gender = models.SmallIntegerField(verbose_name=<span class="string">&#x27;性别&#x27;</span>, choices=gender_choices)</span><br></pre></td></tr></table></figure><p>那么我们就可以对views.py做一个更好的优化:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyForm</span>(<span class="params">ModelForm</span>):</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        meta = UserInfo</span><br><span class="line">        field = [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;password&#x27;</span>, <span class="string">&#x27;age&#x27;</span>, <span class="string">&#x27;account&#x27;</span>, <span class="string">&#x27;create_time&#x27;</span>, <span class="string">&#x27;depart&#x27;</span>, <span class="string">&#x27;gender&#x27;</span>]</span><br></pre></td></tr></table></figure><p>相比来说ModelForm会更方便得多</p><h5 id="基于ModelForm的用户添加"><a href="#基于ModelForm的用户添加" class="headerlink" title="基于ModelForm的用户添加"></a>基于ModelForm的用户添加</h5><p>点击<a class="link"   href="https://www.bilibili.com/video/BV1NL41157ph?p=30&spm_id_from=333.1007.top_right_bar_window_history.content.click" >跳转视频<i class="fas fa-external-link-alt"></i></a></p><p>这边我们在user_list.html中再加入一个按钮，用来实验基于ModelForm的用户添加:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.15z8pbmrago0.webp"                      alt="图片"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.4s8sbt4kbqio.webp"                      alt="图片"                ></p><p>然后我们来写上一个路由:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.k4ez0f6hnhc.webp"                      alt="图片"                ></p><p>然后我们来完成视图函数:</p><p>在写视图函数之前我们要先写一个类，导入需要显示的表格:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220321105308220.png"                      alt="image-20220321105308220"                ></p><p>然后我们再继续完成核心的视图函数:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.62vhzlvnnaps.webp"                      alt="图片"                ></p><p>就如上图所示的一样，我们首先需要构造一个form对象，然后把这个form对象传递到对应的html页面中</p><p>然后我们只需要几行代码就能生成如下所示的几个输入框:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220321105558697.png"                      alt="image-20220321105558697"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.jxbr4zl0j8w.webp"                      alt="图片"                ></p><p>由于我们在构建模型类的时候就指定了verbose_name，那么我们就可以将它显示在html页面中，可以像如下操作:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.3sb606c8fe2o.webp"                      alt="图片"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.3r57ylcudz7k.webp"                      alt="图片"                ></p><p>这里要注意哈，虽然这里的名称什么的是关联着models.py中的verbosename，但是这里要用<code>.label</code></p><p>如果我们在models.py这个模型类中新增了几个字段，比如在UserInfo中新加入<code>height</code>、<code>weight</code>等，我们又要去html页面中修改嘛，其实是不用的，我们可以做如下修改:</p><p>form是可以被for循环的</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.3ivd8b7antog.webp"                      alt="图片"                ></p><p>ModelForm还会自动生成下拉框，它会自动查数据库:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.74h6kxzc8qkg.webp"                      alt="图片"                ></p><p>如果写要加上depart就直接写depart即可，前面说过，由于depart关联了别的表的id这一列，所以它会在数据库中自动改名为depart_id，但是我们在使用modelforl时就直接写在models.py中所定义的名字即可，但是还有定义一个verbosename，不然在前端中就会直接显示depart这个单词</p><p>但是在我们修改好以上所提到的后，发现有一个这样的问题:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.3m7hrptwhugw.webp"                      alt="图片"                ></p><p>为什么这里显示<code>Department object()</code>呢，这是因为这里展现的是一个个对象，这里的下拉框实际上是遍历了一个queryset(通过models.Department.objects.all()拿到)，而我们知道这个queryset就类似与一个列表中放了好多个对象；django底层是比较粗暴地直接就显示了这个对象，就如下面的例子一样:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">demo</span>(<span class="params">objects</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">obj = Foo()</span><br><span class="line"><span class="built_in">print</span>(obj)</span><br></pre></td></tr></table></figure><p>这就会直接打印出这个对象:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.3z73kindc5z4.webp"                      alt="图片"                ></p><p>那如果我想让它在输出对象的时候输出一个其他的东西，可以像如下修改:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.5c06tcx2yiyo.webp"                      alt="图片"                ></p><p>在输出对象时，如果想要定制显示的内容，我们可以去类的内部定义一个<code>__str__</code>方法，那么这个对象输出的内容就变成我们定制的内容了</p><p>我们还可以这样定制:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">demo</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line">obj = demo(<span class="string">&quot;张珊&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(obj)</span><br></pre></td></tr></table></figure><p>所以在我们的项目中可以这么修改，我们返回对象的title属性即可:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.54r9ckzd00w0.webp"                      alt="图片"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.3ghsvsbd222o.webp"                      alt="图片"                ></p><p>经过上面的一些修改，大体框架已经实现了，接下来我们需要加入bootstrap，我们可以把前端代码修改如下:</p><p>user_model_form_add.html:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends <span class="string">&#x27;layout.html&#x27;</span> %&#125;</span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;!--        加入面板--&gt;</span></span><br><span class="line"><span class="class">    &lt;div <span class="keyword">class</span>=&quot;panel panel-default&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;panel-heading&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;h3 <span class="keyword">class</span>=&quot;panel-title&quot;&gt;新建用户&lt;/h3&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;</span></span><br><span class="line"><span class="class">        &lt;div <span class="keyword">class</span>=&quot;panel-body&quot;&gt;</span></span><br><span class="line"><span class="class">            &lt;!--                面板的内容我们写表单--&gt;</span></span><br><span class="line"><span class="class">            &lt;form method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="class">                &#123;% csrf_token %&#125;</span></span><br><span class="line"><span class="class">                &#123;% <span class="keyword">for</span> field <span class="keyword">in</span> form %&#125;</span></span><br><span class="line"><span class="class">                &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;</span></span><br><span class="line"><span class="class">                        &lt;label&gt;&#123;&#123; field.label &#125;&#125;&lt;/label&gt;</span></span><br><span class="line"><span class="class">                        &#123;&#123; field &#125;&#125;</span></span><br><span class="line"><span class="class">                &lt;/div&gt;</span></span><br><span class="line"><span class="class">                &#123;% endfor %&#125;</span></span><br><span class="line"><span class="class">                &lt;!--                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                        &lt;label <span class="keyword">class</span>=&quot;col-sm-2 co ntrol-label&quot;&gt;保存&lt;/label&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                        &lt;div <span class="keyword">class</span>=&quot;col-sm-10&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                            &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;password&quot; <span class="keyword">class</span>=&quot;form-control&quot; <span class="built_in">id</span>=&quot;inputPassword3&quot; placeholder=&quot;Password&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                    &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                    &lt;div <span class="keyword">class</span>=&quot;form-group&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                        &lt;div <span class="keyword">class</span>=&quot;col-sm-offset-2 col-sm-10&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                            &lt;div <span class="keyword">class</span>=&quot;checkbox&quot;&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                                &lt;label&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                                    &lt;<span class="built_in">input</span> <span class="built_in">type</span>=&quot;checkbox&quot;&gt; Remember me--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                                &lt;/label&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                            &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                        &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;!--                    &lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="class">                &lt;button <span class="built_in">type</span>=&quot;submit&quot; <span class="keyword">class</span>=&quot;btn btn-primary&quot;&gt;提交&lt;/button&gt;</span></span><br><span class="line"><span class="class">            &lt;/form&gt;</span></span><br><span class="line"><span class="class">        &lt;/div&gt;</span></span><br><span class="line"><span class="class">    &lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;/div&gt;</span></span><br><span class="line"><span class="class">&#123;% endblock %&#125;</span></span><br></pre></td></tr></table></figure><p>但这个时候我们发现这咋和之前的添加用户那个页面不一样，这是因为django自动生成的input标签啥样式也没带，所以就会显示 如下:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.oi5l6tv33kw.webp"                      alt="图片"                ></p><p>经过对比我们会发现，这个和之前添加用户的表单只差了个<code>class = form-control</code>的属性</p><p>这个时候我们应该怎么修改呢，我们可以在views.py中的UserModelForm类中加一个插件:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.792b1tmrh6gw.webp"                      alt="图片"                ></p><p>但是这看起来又有点傻瓜式操作了，要是很多个输入框那就得傻傻地写很多个了</p><p>我们可以重新定义<code>__init__</code>方法</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.778xd7qrlchs.webp"                      alt="图片"                ></p><p>如上图所示我们重写了<code>__init__</code>方法，然后打印了<code>field.items()</code>，可以从控制台中看出，这就是我django定义表单的一些对象，我们在此就可以通过插件修改这个对象，让它在生成html代码的时候加上<code>class = form-control</code>:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.2ey6q8vyx4e8.webp"                      alt="图片"                ></p><p>如果你不想让某个input标签用上某个属性，可以选择跳过:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20220321152241360.png"                      alt="image-20220321152241360"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.3c6pz27hm0u8.webp"                      alt="图片"                ></p><p>这个时候其实我们还可以加上一个<code>palceholder</code>属性，让输入框中有个提示的文字</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.5ek5khoveb28.webp"                      alt="图片"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.739rd7yfuyyo.webp"                      alt="图片"                ></p><h5 id="用户添加错误提示"><a href="#用户添加错误提示" class="headerlink" title="用户添加错误提示"></a>用户添加错误提示</h5><p>刚刚我们已经写好了基于ModelForm的用户提交，在没有action的情况下，会默认提交到当前地址，和之前一样，我们在此需要做一个判断，如果是get请求，就显示用户添加页面，如果是post请求那就要获取提交过来的数据:</p><p>我们首先修改views.py:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.40v2am17o9c0.webp"                      alt="图片"                ></p><p>然后我们再修改user_model_form_add.html:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.2if8i4cg8j9c.webp"                      alt="图片"                ></p><p>那django默认帮我们验证输入是否为空，那有时候我们可能输入了一些错误的信息，那该如何校验呢</p><p>比如说用户名的长度，比如是大于个多少，如果我们要设置用户名的长度必须是大于等于3呢，可以像如下修改:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.5jvo0oc8yrnk.webp"                      alt="图片"                ></p><p>然后当我们输入少于三个字符的用户名时，就会报错:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.5pjon8xmgdmo.webp"                      alt="图片"                ></p><p>我们的密码也可以用正则表达式做一个验证，可以像下面这样写:</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.37h5zrf2s39c.webp"                      alt="图片"                ></p><p>这里面的验证规则非常非常多，这里就不一一列举了</p><p>到现在这个程度，我们发现这英文看着不太好，我们可以把它修改为中文的:</p><p>打开settings.py，然后找到<code>LANGUAGE_CODE = &#39;en-us&#39;</code>，可以把en-us改成zh-hans，这就会显示中文了</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://cdn.jsdelivr.net/gh/stormwasd/image-hosting@master/20220321/%E5%9B%BE%E7%89%87.20ui8fvsx10g.webp"                      alt="图片"                ></p><p>入职时间其实还可以通过导入一个gs插件来让用户选，而不再用户自己输入</p><p>其实不知道大家发现没有，这里点击提交后，如果出现错误，后面返回回来，还是会显示之前输入的数据，这是比较好的，就是说在上一次的基础上还能继续写</p><p>这个笔记初级阶段就到这里结束了，下次将更新高级阶段，高级阶段包括Ajax提交，分页，以及相关数据的提交</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装Django&quot;&gt;&lt;a href=&quot;#安装Django&quot; class=&quot;headerlink&quot; title=&quot;安装Django&quot;&gt;&lt;/a&gt;安装Django&lt;/h3&gt;&lt;p&gt;使用一下命令:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>关于JS调试用xhr打断点没有停住的解决</title>
    <link href="http://example.com/2022/03/11/%E5%85%B3%E4%BA%8EJS%E8%B0%83%E8%AF%95%E7%94%A8xhr%E6%89%93%E6%96%AD%E7%82%B9%E6%B2%A1%E6%9C%89%E5%81%9C%E4%BD%8F%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    <id>http://example.com/2022/03/11/%E5%85%B3%E4%BA%8EJS%E8%B0%83%E8%AF%95%E7%94%A8xhr%E6%89%93%E6%96%AD%E7%82%B9%E6%B2%A1%E6%9C%89%E5%81%9C%E4%BD%8F%E7%9A%84%E8%A7%A3%E5%86%B3/</id>
    <published>2022-03-11T08:19:30.000Z</published>
    <updated>2022-03-11T08:30:34.848Z</updated>
    
    <content type="html"><![CDATA[<p>网站: <a class="link"   href="https://www.gm99.com/" >https://www.gm99.com/<i class="fas fa-external-link-alt"></i></a></p><p>加密参数如下:<br><a href="https://imgtu.com/i/bIhE8O"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/bIhE8O.png"                      alt="bIhE8O.png"                ></a></p><p>我们在xhr中有看到这个请求，然后我们就在source面板中添加一个xhr breakpoint，然后来看看效果:</p><p>那么添加什么参数呢，我们可以截取URL的一部分，比如这里我们就截取<code>/login/login3</code>，注意不要截取到了URL的参数部分</p><p>点击登入后并没有反应，说明这断点没有断到，那我们可以直接在network中找:</p><p><a href="https://imgtu.com/i/bI5L5t"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/bI5L5t.png"                      alt="bI5L5t.png"                ></a></p><p>点击上图中的函数地址，就能跳转到发包的位置，因为jQuery是一个js库，一个处理异步和发包的库</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;网站: &lt;a class=&quot;link&quot;   href=&quot;https://www.gm99.com/&quot; &gt;https://www.gm99.com/&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;加密参数如下:&lt;br&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JS逆向中烟新商盟</title>
    <link href="http://example.com/2022/03/11/JS%E9%80%86%E5%90%91%E4%B8%AD%E7%83%9F%E6%96%B0%E5%95%86%E7%9B%9F/"/>
    <id>http://example.com/2022/03/11/JS%E9%80%86%E5%90%91%E4%B8%AD%E7%83%9F%E6%96%B0%E5%95%86%E7%9B%9F/</id>
    <published>2022-03-10T16:00:00.000Z</published>
    <updated>2022-03-11T03:46:48.951Z</updated>
    
    <content type="html"><![CDATA[<p>网址: <a class="link"   href="https://www.xinshangmeng.com/xsm2/?Version=2022022600" >https://www.xinshangmeng.com/xsm2/?Version=2022022600<i class="fas fa-external-link-alt"></i></a></p><p>加密参数:</p><p><a href="https://imgtu.com/i/b5RNXn"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5RNXn.png"                      alt="b5RNXn.png"                ></a></p><p>这里可以看到，貌似有两个加密参数，一个是密码加密，然后最后一个是时间戳</p><p>由于前面我们是点击登录按钮触发请求的，所以我们可以从<strong>DOM事件</strong>为入口找到相关登录的代码，看看是否能找到加密逻辑:</p><p><a href="https://imgtu.com/i/b5WCcj"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5WCcj.png"                      alt="b5WCcj.png"                ></a></p><p>点击上图右侧的函数位置就能跳转到对应登录的代码，分析这段代码逻辑之后，我感觉在1126行对密码进行了加密，然后我们在该行打断点:</p><p><a href="https://imgtu.com/i/b5ffJO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5ffJO.png"                      alt="b5ffJO.png"                ></a></p><p>可以看到这里最里面是调用了两次F函数，我们鼠标放在上面然后跳转进这个函数:</p><p><a href="https://imgtu.com/i/b5fjfS"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5fjfS.png"                      alt="b5fjfS.png"                ></a></p><p><a href="https://imgtu.com/i/b5hPwq"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5hPwq.png"                      alt="b5hPwq.png"                ></a></p><p>可以看到跳进了d(a)函数，我们在函数的结尾打个断点，看看函数里面的值是啥:</p><p>用鼠标选中return后面的所有东西，可以看到这就是我们要的加密后的密码:</p><p><a href="https://imgtu.com/i/b5h8fO"><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s1.ax1x.com/2022/03/11/b5h8fO.png"                      alt="b5h8fO.png"                ></a></p><p>参数a就是我们输入的密码</p><p>d(a)函数内部又嵌套调用了n、e、o、m四个函数，那么接下来就只需要把代码抠出来再模拟执行即可</p><p>这里就不赘述了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;网址: &lt;a class=&quot;link&quot;   href=&quot;https://www.xinshangmeng.com/xsm2/?Version=2022022600&quot; &gt;https://www.xinshangmeng.com/xsm2/?Version=2022022600</summary>
      
    
    
    
    
  </entry>
  
</feed>
